/*eslint-disable block-scoped-var, id-length, no-control-regex, no-magic-numbers, no-prototype-builtins, no-redeclare, no-shadow, no-var, sort-vars*/
"use strict";

var $protobuf = require("protobufjs/minimal.js");

// Common aliases
var $Reader = $protobuf.Reader, $Writer = $protobuf.Writer, $util = $protobuf.util;

// Exported root namespace
var $root = $protobuf.roots["default"] || ($protobuf.roots["default"] = {});

/**
 * role enum.
 * @exports role
 * @enum {number}
 * @property {number} unknown=0 unknown value
 * @property {number} wu_zhi_guo=1 wu_zhi_guo value
 * @property {number} cheng_xiao_die=2 cheng_xiao_die value
 * @property {number} lian_yuan=3 lian_yuan value
 * @property {number} mao_bu_ba=4 mao_bu_ba value
 * @property {number} zhang_yi_ting=5 zhang_yi_ting value
 * @property {number} bai_cang_lang=6 bai_cang_lang value
 * @property {number} fei_yuan_long_chuan=7 fei_yuan_long_chuan value
 * @property {number} pei_ling=8 pei_ling value
 * @property {number} huang_ji_ren=9 huang_ji_ren value
 * @property {number} wang_tian_xiang=10 wang_tian_xiang value
 * @property {number} li_xing=11 li_xing value
 * @property {number} wang_kui=12 wang_kui value
 * @property {number} a_fu_luo_la=13 a_fu_luo_la value
 * @property {number} han_mei=14 han_mei value
 * @property {number} zheng_wen_xian=15 zheng_wen_xian value
 * @property {number} xuan_qing_zi=16 xuan_qing_zi value
 * @property {number} gui_jiao=17 gui_jiao value
 * @property {number} shao_xiu=18 shao_xiu value
 * @property {number} jin_sheng_huo=19 jin_sheng_huo value
 * @property {number} gu_xiao_meng=20 gu_xiao_meng value
 * @property {number} bai_fei_fei=21 bai_fei_fei value
 * @property {number} duan_mu_jing=22 duan_mu_jing value
 * @property {number} wang_fu_gui=23 wang_fu_gui value
 * @property {number} lao_han=24 lao_han value
 * @property {number} bai_xiao_nian=25 bai_xiao_nian value
 * @property {number} lao_bie=26 lao_bie value
 * @property {number} xiao_jiu=27 xiao_jiu value
 * @property {number} li_ning_yu=28 li_ning_yu value
 * @property {number} bai_kun_shan=29 bai_kun_shan value
 * @property {number} shang_yu=30 shang_yu value
 * @property {number} sp_gu_xiao_meng=1020 sp_gu_xiao_meng value
 * @property {number} sp_li_ning_yu=1028 sp_li_ning_yu value
 */
$root.role = (function() {
    var valuesById = {}, values = Object.create(valuesById);
    values[valuesById[0] = "unknown"] = 0;
    values[valuesById[1] = "wu_zhi_guo"] = 1;
    values[valuesById[2] = "cheng_xiao_die"] = 2;
    values[valuesById[3] = "lian_yuan"] = 3;
    values[valuesById[4] = "mao_bu_ba"] = 4;
    values[valuesById[5] = "zhang_yi_ting"] = 5;
    values[valuesById[6] = "bai_cang_lang"] = 6;
    values[valuesById[7] = "fei_yuan_long_chuan"] = 7;
    values[valuesById[8] = "pei_ling"] = 8;
    values[valuesById[9] = "huang_ji_ren"] = 9;
    values[valuesById[10] = "wang_tian_xiang"] = 10;
    values[valuesById[11] = "li_xing"] = 11;
    values[valuesById[12] = "wang_kui"] = 12;
    values[valuesById[13] = "a_fu_luo_la"] = 13;
    values[valuesById[14] = "han_mei"] = 14;
    values[valuesById[15] = "zheng_wen_xian"] = 15;
    values[valuesById[16] = "xuan_qing_zi"] = 16;
    values[valuesById[17] = "gui_jiao"] = 17;
    values[valuesById[18] = "shao_xiu"] = 18;
    values[valuesById[19] = "jin_sheng_huo"] = 19;
    values[valuesById[20] = "gu_xiao_meng"] = 20;
    values[valuesById[21] = "bai_fei_fei"] = 21;
    values[valuesById[22] = "duan_mu_jing"] = 22;
    values[valuesById[23] = "wang_fu_gui"] = 23;
    values[valuesById[24] = "lao_han"] = 24;
    values[valuesById[25] = "bai_xiao_nian"] = 25;
    values[valuesById[26] = "lao_bie"] = 26;
    values[valuesById[27] = "xiao_jiu"] = 27;
    values[valuesById[28] = "li_ning_yu"] = 28;
    values[valuesById[29] = "bai_kun_shan"] = 29;
    values[valuesById[30] = "shang_yu"] = 30;
    values[valuesById[1020] = "sp_gu_xiao_meng"] = 1020;
    values[valuesById[1028] = "sp_li_ning_yu"] = 1028;
    return values;
})();

/**
 * phase enum.
 * @exports phase
 * @enum {number}
 * @property {number} Draw_Phase=0 Draw_Phase value
 * @property {number} Main_Phase=1 Main_Phase value
 * @property {number} Send_Start_Phase=2 Send_Start_Phase value
 * @property {number} Send_Phase=3 Send_Phase value
 * @property {number} Fight_Phase=4 Fight_Phase value
 * @property {number} Receive_Phase=5 Receive_Phase value
 */
$root.phase = (function() {
    var valuesById = {}, values = Object.create(valuesById);
    values[valuesById[0] = "Draw_Phase"] = 0;
    values[valuesById[1] = "Main_Phase"] = 1;
    values[valuesById[2] = "Send_Start_Phase"] = 2;
    values[valuesById[3] = "Send_Phase"] = 3;
    values[valuesById[4] = "Fight_Phase"] = 4;
    values[valuesById[5] = "Receive_Phase"] = 5;
    return values;
})();

/**
 * card_type enum.
 * @exports card_type
 * @enum {number}
 * @property {number} Cheng_Qing=0 Cheng_Qing value
 * @property {number} Shi_Tan=1 Shi_Tan value
 * @property {number} Wei_Bi=2 Wei_Bi value
 * @property {number} Li_You=3 Li_You value
 * @property {number} Ping_Heng=4 Ping_Heng value
 * @property {number} Po_Yi=5 Po_Yi value
 * @property {number} Jie_Huo=6 Jie_Huo value
 * @property {number} Diao_Bao=7 Diao_Bao value
 * @property {number} Wu_Dao=8 Wu_Dao value
 * @property {number} Feng_Yun_Bian_Huan=9 Feng_Yun_Bian_Huan value
 */
$root.card_type = (function() {
    var valuesById = {}, values = Object.create(valuesById);
    values[valuesById[0] = "Cheng_Qing"] = 0;
    values[valuesById[1] = "Shi_Tan"] = 1;
    values[valuesById[2] = "Wei_Bi"] = 2;
    values[valuesById[3] = "Li_You"] = 3;
    values[valuesById[4] = "Ping_Heng"] = 4;
    values[valuesById[5] = "Po_Yi"] = 5;
    values[valuesById[6] = "Jie_Huo"] = 6;
    values[valuesById[7] = "Diao_Bao"] = 7;
    values[valuesById[8] = "Wu_Dao"] = 8;
    values[valuesById[9] = "Feng_Yun_Bian_Huan"] = 9;
    return values;
})();

/**
 * color enum.
 * @exports color
 * @enum {number}
 * @property {number} Black=0 Black value
 * @property {number} Red=1 Red value
 * @property {number} Blue=2 Blue value
 * @property {number} Has_No_Identity=3 Has_No_Identity value
 */
$root.color = (function() {
    var valuesById = {}, values = Object.create(valuesById);
    values[valuesById[0] = "Black"] = 0;
    values[valuesById[1] = "Red"] = 1;
    values[valuesById[2] = "Blue"] = 2;
    values[valuesById[3] = "Has_No_Identity"] = 3;
    return values;
})();

/**
 * secret_task enum.
 * @exports secret_task
 * @enum {number}
 * @property {number} Killer=0 Killer value
 * @property {number} Stealer=1 Stealer value
 * @property {number} Collector=2 Collector value
 * @property {number} Mutator=3 Mutator value
 * @property {number} Pioneer=4 Pioneer value
 */
$root.secret_task = (function() {
    var valuesById = {}, values = Object.create(valuesById);
    values[valuesById[0] = "Killer"] = 0;
    values[valuesById[1] = "Stealer"] = 1;
    values[valuesById[2] = "Collector"] = 2;
    values[valuesById[3] = "Mutator"] = 3;
    values[valuesById[4] = "Pioneer"] = 4;
    return values;
})();

/**
 * direction enum.
 * @exports direction
 * @enum {number}
 * @property {number} Up=0 Up value
 * @property {number} Left=1 Left value
 * @property {number} Right=2 Right value
 */
$root.direction = (function() {
    var valuesById = {}, values = Object.create(valuesById);
    values[valuesById[0] = "Up"] = 0;
    values[valuesById[1] = "Left"] = 1;
    values[valuesById[2] = "Right"] = 2;
    return values;
})();

$root.card = (function() {

    /**
     * Properties of a card.
     * @exports Icard
     * @interface Icard
     * @property {number|null} [cardId] card cardId
     * @property {Array.<color>|null} [cardColor] card cardColor
     * @property {direction|null} [cardDir] card cardDir
     * @property {card_type|null} [cardType] card cardType
     * @property {Array.<color>|null} [whoDrawCard] card whoDrawCard
     * @property {boolean|null} [canLock] card canLock
     */

    /**
     * Constructs a new card.
     * @exports card
     * @classdesc Represents a card.
     * @implements Icard
     * @constructor
     * @param {Icard=} [properties] Properties to set
     */
    function card(properties) {
        this.cardColor = [];
        this.whoDrawCard = [];
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * card cardId.
     * @member {number} cardId
     * @memberof card
     * @instance
     */
    card.prototype.cardId = 0;

    /**
     * card cardColor.
     * @member {Array.<color>} cardColor
     * @memberof card
     * @instance
     */
    card.prototype.cardColor = $util.emptyArray;

    /**
     * card cardDir.
     * @member {direction} cardDir
     * @memberof card
     * @instance
     */
    card.prototype.cardDir = 0;

    /**
     * card cardType.
     * @member {card_type} cardType
     * @memberof card
     * @instance
     */
    card.prototype.cardType = 0;

    /**
     * card whoDrawCard.
     * @member {Array.<color>} whoDrawCard
     * @memberof card
     * @instance
     */
    card.prototype.whoDrawCard = $util.emptyArray;

    /**
     * card canLock.
     * @member {boolean} canLock
     * @memberof card
     * @instance
     */
    card.prototype.canLock = false;

    /**
     * Creates a new card instance using the specified properties.
     * @function create
     * @memberof card
     * @static
     * @param {Icard=} [properties] Properties to set
     * @returns {card} card instance
     */
    card.create = function create(properties) {
        return new card(properties);
    };

    /**
     * Encodes the specified card message. Does not implicitly {@link card.verify|verify} messages.
     * @function encode
     * @memberof card
     * @static
     * @param {Icard} message card message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    card.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.cardId != null && Object.hasOwnProperty.call(message, "cardId"))
            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.cardId);
        if (message.cardColor != null && message.cardColor.length) {
            writer.uint32(/* id 2, wireType 2 =*/18).fork();
            for (var i = 0; i < message.cardColor.length; ++i)
                writer.int32(message.cardColor[i]);
            writer.ldelim();
        }
        if (message.cardDir != null && Object.hasOwnProperty.call(message, "cardDir"))
            writer.uint32(/* id 3, wireType 0 =*/24).int32(message.cardDir);
        if (message.cardType != null && Object.hasOwnProperty.call(message, "cardType"))
            writer.uint32(/* id 4, wireType 0 =*/32).int32(message.cardType);
        if (message.whoDrawCard != null && message.whoDrawCard.length) {
            writer.uint32(/* id 5, wireType 2 =*/42).fork();
            for (var i = 0; i < message.whoDrawCard.length; ++i)
                writer.int32(message.whoDrawCard[i]);
            writer.ldelim();
        }
        if (message.canLock != null && Object.hasOwnProperty.call(message, "canLock"))
            writer.uint32(/* id 6, wireType 0 =*/48).bool(message.canLock);
        return writer;
    };

    /**
     * Encodes the specified card message, length delimited. Does not implicitly {@link card.verify|verify} messages.
     * @function encodeDelimited
     * @memberof card
     * @static
     * @param {Icard} message card message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    card.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a card message from the specified reader or buffer.
     * @function decode
     * @memberof card
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {card} card
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    card.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.card();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.cardId = reader.uint32();
                    break;
                }
            case 2: {
                    if (!(message.cardColor && message.cardColor.length))
                        message.cardColor = [];
                    if ((tag & 7) === 2) {
                        var end2 = reader.uint32() + reader.pos;
                        while (reader.pos < end2)
                            message.cardColor.push(reader.int32());
                    } else
                        message.cardColor.push(reader.int32());
                    break;
                }
            case 3: {
                    message.cardDir = reader.int32();
                    break;
                }
            case 4: {
                    message.cardType = reader.int32();
                    break;
                }
            case 5: {
                    if (!(message.whoDrawCard && message.whoDrawCard.length))
                        message.whoDrawCard = [];
                    if ((tag & 7) === 2) {
                        var end2 = reader.uint32() + reader.pos;
                        while (reader.pos < end2)
                            message.whoDrawCard.push(reader.int32());
                    } else
                        message.whoDrawCard.push(reader.int32());
                    break;
                }
            case 6: {
                    message.canLock = reader.bool();
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a card message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof card
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {card} card
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    card.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a card message.
     * @function verify
     * @memberof card
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    card.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.cardId != null && message.hasOwnProperty("cardId"))
            if (!$util.isInteger(message.cardId))
                return "cardId: integer expected";
        if (message.cardColor != null && message.hasOwnProperty("cardColor")) {
            if (!Array.isArray(message.cardColor))
                return "cardColor: array expected";
            for (var i = 0; i < message.cardColor.length; ++i)
                switch (message.cardColor[i]) {
                default:
                    return "cardColor: enum value[] expected";
                case 0:
                case 1:
                case 2:
                case 3:
                    break;
                }
        }
        if (message.cardDir != null && message.hasOwnProperty("cardDir"))
            switch (message.cardDir) {
            default:
                return "cardDir: enum value expected";
            case 0:
            case 1:
            case 2:
                break;
            }
        if (message.cardType != null && message.hasOwnProperty("cardType"))
            switch (message.cardType) {
            default:
                return "cardType: enum value expected";
            case 0:
            case 1:
            case 2:
            case 3:
            case 4:
            case 5:
            case 6:
            case 7:
            case 8:
            case 9:
                break;
            }
        if (message.whoDrawCard != null && message.hasOwnProperty("whoDrawCard")) {
            if (!Array.isArray(message.whoDrawCard))
                return "whoDrawCard: array expected";
            for (var i = 0; i < message.whoDrawCard.length; ++i)
                switch (message.whoDrawCard[i]) {
                default:
                    return "whoDrawCard: enum value[] expected";
                case 0:
                case 1:
                case 2:
                case 3:
                    break;
                }
        }
        if (message.canLock != null && message.hasOwnProperty("canLock"))
            if (typeof message.canLock !== "boolean")
                return "canLock: boolean expected";
        return null;
    };

    /**
     * Creates a card message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof card
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {card} card
     */
    card.fromObject = function fromObject(object) {
        if (object instanceof $root.card)
            return object;
        var message = new $root.card();
        if (object.cardId != null)
            message.cardId = object.cardId >>> 0;
        if (object.cardColor) {
            if (!Array.isArray(object.cardColor))
                throw TypeError(".card.cardColor: array expected");
            message.cardColor = [];
            for (var i = 0; i < object.cardColor.length; ++i)
                switch (object.cardColor[i]) {
                default:
                    if (typeof object.cardColor[i] === "number") {
                        message.cardColor[i] = object.cardColor[i];
                        break;
                    }
                case "Black":
                case 0:
                    message.cardColor[i] = 0;
                    break;
                case "Red":
                case 1:
                    message.cardColor[i] = 1;
                    break;
                case "Blue":
                case 2:
                    message.cardColor[i] = 2;
                    break;
                case "Has_No_Identity":
                case 3:
                    message.cardColor[i] = 3;
                    break;
                }
        }
        switch (object.cardDir) {
        default:
            if (typeof object.cardDir === "number") {
                message.cardDir = object.cardDir;
                break;
            }
            break;
        case "Up":
        case 0:
            message.cardDir = 0;
            break;
        case "Left":
        case 1:
            message.cardDir = 1;
            break;
        case "Right":
        case 2:
            message.cardDir = 2;
            break;
        }
        switch (object.cardType) {
        default:
            if (typeof object.cardType === "number") {
                message.cardType = object.cardType;
                break;
            }
            break;
        case "Cheng_Qing":
        case 0:
            message.cardType = 0;
            break;
        case "Shi_Tan":
        case 1:
            message.cardType = 1;
            break;
        case "Wei_Bi":
        case 2:
            message.cardType = 2;
            break;
        case "Li_You":
        case 3:
            message.cardType = 3;
            break;
        case "Ping_Heng":
        case 4:
            message.cardType = 4;
            break;
        case "Po_Yi":
        case 5:
            message.cardType = 5;
            break;
        case "Jie_Huo":
        case 6:
            message.cardType = 6;
            break;
        case "Diao_Bao":
        case 7:
            message.cardType = 7;
            break;
        case "Wu_Dao":
        case 8:
            message.cardType = 8;
            break;
        case "Feng_Yun_Bian_Huan":
        case 9:
            message.cardType = 9;
            break;
        }
        if (object.whoDrawCard) {
            if (!Array.isArray(object.whoDrawCard))
                throw TypeError(".card.whoDrawCard: array expected");
            message.whoDrawCard = [];
            for (var i = 0; i < object.whoDrawCard.length; ++i)
                switch (object.whoDrawCard[i]) {
                default:
                    if (typeof object.whoDrawCard[i] === "number") {
                        message.whoDrawCard[i] = object.whoDrawCard[i];
                        break;
                    }
                case "Black":
                case 0:
                    message.whoDrawCard[i] = 0;
                    break;
                case "Red":
                case 1:
                    message.whoDrawCard[i] = 1;
                    break;
                case "Blue":
                case 2:
                    message.whoDrawCard[i] = 2;
                    break;
                case "Has_No_Identity":
                case 3:
                    message.whoDrawCard[i] = 3;
                    break;
                }
        }
        if (object.canLock != null)
            message.canLock = Boolean(object.canLock);
        return message;
    };

    /**
     * Creates a plain object from a card message. Also converts values to other types if specified.
     * @function toObject
     * @memberof card
     * @static
     * @param {card} message card
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    card.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.arrays || options.defaults) {
            object.cardColor = [];
            object.whoDrawCard = [];
        }
        if (options.defaults) {
            object.cardId = 0;
            object.cardDir = options.enums === String ? "Up" : 0;
            object.cardType = options.enums === String ? "Cheng_Qing" : 0;
            object.canLock = false;
        }
        if (message.cardId != null && message.hasOwnProperty("cardId"))
            object.cardId = message.cardId;
        if (message.cardColor && message.cardColor.length) {
            object.cardColor = [];
            for (var j = 0; j < message.cardColor.length; ++j)
                object.cardColor[j] = options.enums === String ? $root.color[message.cardColor[j]] === undefined ? message.cardColor[j] : $root.color[message.cardColor[j]] : message.cardColor[j];
        }
        if (message.cardDir != null && message.hasOwnProperty("cardDir"))
            object.cardDir = options.enums === String ? $root.direction[message.cardDir] === undefined ? message.cardDir : $root.direction[message.cardDir] : message.cardDir;
        if (message.cardType != null && message.hasOwnProperty("cardType"))
            object.cardType = options.enums === String ? $root.card_type[message.cardType] === undefined ? message.cardType : $root.card_type[message.cardType] : message.cardType;
        if (message.whoDrawCard && message.whoDrawCard.length) {
            object.whoDrawCard = [];
            for (var j = 0; j < message.whoDrawCard.length; ++j)
                object.whoDrawCard[j] = options.enums === String ? $root.color[message.whoDrawCard[j]] === undefined ? message.whoDrawCard[j] : $root.color[message.whoDrawCard[j]] : message.whoDrawCard[j];
        }
        if (message.canLock != null && message.hasOwnProperty("canLock"))
            object.canLock = message.canLock;
        return object;
    };

    /**
     * Converts this card to JSON.
     * @function toJSON
     * @memberof card
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    card.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for card
     * @function getTypeUrl
     * @memberof card
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    card.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/card";
    };

    return card;
})();

$root.error_code_toc = (function() {

    /**
     * Properties of an error_code_toc.
     * @exports Ierror_code_toc
     * @interface Ierror_code_toc
     * @property {error_code|null} [code] error_code_toc code
     * @property {Array.<number|Long>|null} [intParams] error_code_toc intParams
     * @property {Array.<string>|null} [strParams] error_code_toc strParams
     */

    /**
     * Constructs a new error_code_toc.
     * @exports error_code_toc
     * @classdesc Represents an error_code_toc.
     * @implements Ierror_code_toc
     * @constructor
     * @param {Ierror_code_toc=} [properties] Properties to set
     */
    function error_code_toc(properties) {
        this.intParams = [];
        this.strParams = [];
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * error_code_toc code.
     * @member {error_code} code
     * @memberof error_code_toc
     * @instance
     */
    error_code_toc.prototype.code = 0;

    /**
     * error_code_toc intParams.
     * @member {Array.<number|Long>} intParams
     * @memberof error_code_toc
     * @instance
     */
    error_code_toc.prototype.intParams = $util.emptyArray;

    /**
     * error_code_toc strParams.
     * @member {Array.<string>} strParams
     * @memberof error_code_toc
     * @instance
     */
    error_code_toc.prototype.strParams = $util.emptyArray;

    /**
     * Creates a new error_code_toc instance using the specified properties.
     * @function create
     * @memberof error_code_toc
     * @static
     * @param {Ierror_code_toc=} [properties] Properties to set
     * @returns {error_code_toc} error_code_toc instance
     */
    error_code_toc.create = function create(properties) {
        return new error_code_toc(properties);
    };

    /**
     * Encodes the specified error_code_toc message. Does not implicitly {@link error_code_toc.verify|verify} messages.
     * @function encode
     * @memberof error_code_toc
     * @static
     * @param {Ierror_code_toc} message error_code_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    error_code_toc.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.code != null && Object.hasOwnProperty.call(message, "code"))
            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.code);
        if (message.intParams != null && message.intParams.length) {
            writer.uint32(/* id 2, wireType 2 =*/18).fork();
            for (var i = 0; i < message.intParams.length; ++i)
                writer.int64(message.intParams[i]);
            writer.ldelim();
        }
        if (message.strParams != null && message.strParams.length)
            for (var i = 0; i < message.strParams.length; ++i)
                writer.uint32(/* id 3, wireType 2 =*/26).string(message.strParams[i]);
        return writer;
    };

    /**
     * Encodes the specified error_code_toc message, length delimited. Does not implicitly {@link error_code_toc.verify|verify} messages.
     * @function encodeDelimited
     * @memberof error_code_toc
     * @static
     * @param {Ierror_code_toc} message error_code_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    error_code_toc.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes an error_code_toc message from the specified reader or buffer.
     * @function decode
     * @memberof error_code_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {error_code_toc} error_code_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    error_code_toc.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.error_code_toc();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.code = reader.int32();
                    break;
                }
            case 2: {
                    if (!(message.intParams && message.intParams.length))
                        message.intParams = [];
                    if ((tag & 7) === 2) {
                        var end2 = reader.uint32() + reader.pos;
                        while (reader.pos < end2)
                            message.intParams.push(reader.int64());
                    } else
                        message.intParams.push(reader.int64());
                    break;
                }
            case 3: {
                    if (!(message.strParams && message.strParams.length))
                        message.strParams = [];
                    message.strParams.push(reader.string());
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes an error_code_toc message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof error_code_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {error_code_toc} error_code_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    error_code_toc.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies an error_code_toc message.
     * @function verify
     * @memberof error_code_toc
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    error_code_toc.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.code != null && message.hasOwnProperty("code"))
            switch (message.code) {
            default:
                return "code: enum value expected";
            case 0:
            case 1:
            case 2:
            case 3:
            case 4:
            case 5:
            case 6:
            case 7:
            case 8:
            case 9:
            case 10:
                break;
            }
        if (message.intParams != null && message.hasOwnProperty("intParams")) {
            if (!Array.isArray(message.intParams))
                return "intParams: array expected";
            for (var i = 0; i < message.intParams.length; ++i)
                if (!$util.isInteger(message.intParams[i]) && !(message.intParams[i] && $util.isInteger(message.intParams[i].low) && $util.isInteger(message.intParams[i].high)))
                    return "intParams: integer|Long[] expected";
        }
        if (message.strParams != null && message.hasOwnProperty("strParams")) {
            if (!Array.isArray(message.strParams))
                return "strParams: array expected";
            for (var i = 0; i < message.strParams.length; ++i)
                if (!$util.isString(message.strParams[i]))
                    return "strParams: string[] expected";
        }
        return null;
    };

    /**
     * Creates an error_code_toc message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof error_code_toc
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {error_code_toc} error_code_toc
     */
    error_code_toc.fromObject = function fromObject(object) {
        if (object instanceof $root.error_code_toc)
            return object;
        var message = new $root.error_code_toc();
        switch (object.code) {
        default:
            if (typeof object.code === "number") {
                message.code = object.code;
                break;
            }
            break;
        case "client_version_not_match":
        case 0:
            message.code = 0;
            break;
        case "no_more_room":
        case 1:
            message.code = 1;
            break;
        case "record_not_exists":
        case 2:
            message.code = 2;
            break;
        case "load_record_failed":
        case 3:
            message.code = 3;
            break;
        case "record_version_not_match":
        case 4:
            message.code = 4;
            break;
        case "name_too_long":
        case 5:
            message.code = 5;
            break;
        case "join_room_too_fast":
        case 6:
            message.code = 6;
            break;
        case "robot_not_allowed":
        case 7:
            message.code = 7;
            break;
        case "already_online":
        case 8:
            message.code = 8;
            break;
        case "no_color_message_card":
        case 9:
            message.code = 9;
            break;
        case "login_failed":
        case 10:
            message.code = 10;
            break;
        }
        if (object.intParams) {
            if (!Array.isArray(object.intParams))
                throw TypeError(".error_code_toc.intParams: array expected");
            message.intParams = [];
            for (var i = 0; i < object.intParams.length; ++i)
                if ($util.Long)
                    (message.intParams[i] = $util.Long.fromValue(object.intParams[i])).unsigned = false;
                else if (typeof object.intParams[i] === "string")
                    message.intParams[i] = parseInt(object.intParams[i], 10);
                else if (typeof object.intParams[i] === "number")
                    message.intParams[i] = object.intParams[i];
                else if (typeof object.intParams[i] === "object")
                    message.intParams[i] = new $util.LongBits(object.intParams[i].low >>> 0, object.intParams[i].high >>> 0).toNumber();
        }
        if (object.strParams) {
            if (!Array.isArray(object.strParams))
                throw TypeError(".error_code_toc.strParams: array expected");
            message.strParams = [];
            for (var i = 0; i < object.strParams.length; ++i)
                message.strParams[i] = String(object.strParams[i]);
        }
        return message;
    };

    /**
     * Creates a plain object from an error_code_toc message. Also converts values to other types if specified.
     * @function toObject
     * @memberof error_code_toc
     * @static
     * @param {error_code_toc} message error_code_toc
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    error_code_toc.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.arrays || options.defaults) {
            object.intParams = [];
            object.strParams = [];
        }
        if (options.defaults)
            object.code = options.enums === String ? "client_version_not_match" : 0;
        if (message.code != null && message.hasOwnProperty("code"))
            object.code = options.enums === String ? $root.error_code[message.code] === undefined ? message.code : $root.error_code[message.code] : message.code;
        if (message.intParams && message.intParams.length) {
            object.intParams = [];
            for (var j = 0; j < message.intParams.length; ++j)
                if (typeof message.intParams[j] === "number")
                    object.intParams[j] = options.longs === String ? String(message.intParams[j]) : message.intParams[j];
                else
                    object.intParams[j] = options.longs === String ? $util.Long.prototype.toString.call(message.intParams[j]) : options.longs === Number ? new $util.LongBits(message.intParams[j].low >>> 0, message.intParams[j].high >>> 0).toNumber() : message.intParams[j];
        }
        if (message.strParams && message.strParams.length) {
            object.strParams = [];
            for (var j = 0; j < message.strParams.length; ++j)
                object.strParams[j] = message.strParams[j];
        }
        return object;
    };

    /**
     * Converts this error_code_toc to JSON.
     * @function toJSON
     * @memberof error_code_toc
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    error_code_toc.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for error_code_toc
     * @function getTypeUrl
     * @memberof error_code_toc
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    error_code_toc.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/error_code_toc";
    };

    return error_code_toc;
})();

/**
 * error_code enum.
 * @exports error_code
 * @enum {number}
 * @property {number} client_version_not_match=0 client_version_not_match value
 * @property {number} no_more_room=1 no_more_room value
 * @property {number} record_not_exists=2 record_not_exists value
 * @property {number} load_record_failed=3 load_record_failed value
 * @property {number} record_version_not_match=4 record_version_not_match value
 * @property {number} name_too_long=5 name_too_long value
 * @property {number} join_room_too_fast=6 join_room_too_fast value
 * @property {number} robot_not_allowed=7 robot_not_allowed value
 * @property {number} already_online=8 already_online value
 * @property {number} no_color_message_card=9 no_color_message_card value
 * @property {number} login_failed=10 login_failed value
 */
$root.error_code = (function() {
    var valuesById = {}, values = Object.create(valuesById);
    values[valuesById[0] = "client_version_not_match"] = 0;
    values[valuesById[1] = "no_more_room"] = 1;
    values[valuesById[2] = "record_not_exists"] = 2;
    values[valuesById[3] = "load_record_failed"] = 3;
    values[valuesById[4] = "record_version_not_match"] = 4;
    values[valuesById[5] = "name_too_long"] = 5;
    values[valuesById[6] = "join_room_too_fast"] = 6;
    values[valuesById[7] = "robot_not_allowed"] = 7;
    values[valuesById[8] = "already_online"] = 8;
    values[valuesById[9] = "no_color_message_card"] = 9;
    values[valuesById[10] = "login_failed"] = 10;
    return values;
})();

$root.pause_record_tos = (function() {

    /**
     * Properties of a pause_record_tos.
     * @exports Ipause_record_tos
     * @interface Ipause_record_tos
     * @property {boolean|null} [pause] pause_record_tos pause
     */

    /**
     * Constructs a new pause_record_tos.
     * @exports pause_record_tos
     * @classdesc Represents a pause_record_tos.
     * @implements Ipause_record_tos
     * @constructor
     * @param {Ipause_record_tos=} [properties] Properties to set
     */
    function pause_record_tos(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * pause_record_tos pause.
     * @member {boolean} pause
     * @memberof pause_record_tos
     * @instance
     */
    pause_record_tos.prototype.pause = false;

    /**
     * Creates a new pause_record_tos instance using the specified properties.
     * @function create
     * @memberof pause_record_tos
     * @static
     * @param {Ipause_record_tos=} [properties] Properties to set
     * @returns {pause_record_tos} pause_record_tos instance
     */
    pause_record_tos.create = function create(properties) {
        return new pause_record_tos(properties);
    };

    /**
     * Encodes the specified pause_record_tos message. Does not implicitly {@link pause_record_tos.verify|verify} messages.
     * @function encode
     * @memberof pause_record_tos
     * @static
     * @param {Ipause_record_tos} message pause_record_tos message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    pause_record_tos.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.pause != null && Object.hasOwnProperty.call(message, "pause"))
            writer.uint32(/* id 1, wireType 0 =*/8).bool(message.pause);
        return writer;
    };

    /**
     * Encodes the specified pause_record_tos message, length delimited. Does not implicitly {@link pause_record_tos.verify|verify} messages.
     * @function encodeDelimited
     * @memberof pause_record_tos
     * @static
     * @param {Ipause_record_tos} message pause_record_tos message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    pause_record_tos.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a pause_record_tos message from the specified reader or buffer.
     * @function decode
     * @memberof pause_record_tos
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {pause_record_tos} pause_record_tos
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    pause_record_tos.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.pause_record_tos();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.pause = reader.bool();
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a pause_record_tos message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof pause_record_tos
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {pause_record_tos} pause_record_tos
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    pause_record_tos.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a pause_record_tos message.
     * @function verify
     * @memberof pause_record_tos
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    pause_record_tos.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.pause != null && message.hasOwnProperty("pause"))
            if (typeof message.pause !== "boolean")
                return "pause: boolean expected";
        return null;
    };

    /**
     * Creates a pause_record_tos message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof pause_record_tos
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {pause_record_tos} pause_record_tos
     */
    pause_record_tos.fromObject = function fromObject(object) {
        if (object instanceof $root.pause_record_tos)
            return object;
        var message = new $root.pause_record_tos();
        if (object.pause != null)
            message.pause = Boolean(object.pause);
        return message;
    };

    /**
     * Creates a plain object from a pause_record_tos message. Also converts values to other types if specified.
     * @function toObject
     * @memberof pause_record_tos
     * @static
     * @param {pause_record_tos} message pause_record_tos
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    pause_record_tos.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults)
            object.pause = false;
        if (message.pause != null && message.hasOwnProperty("pause"))
            object.pause = message.pause;
        return object;
    };

    /**
     * Converts this pause_record_tos to JSON.
     * @function toJSON
     * @memberof pause_record_tos
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    pause_record_tos.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for pause_record_tos
     * @function getTypeUrl
     * @memberof pause_record_tos
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    pause_record_tos.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/pause_record_tos";
    };

    return pause_record_tos;
})();

$root.pause_record_toc = (function() {

    /**
     * Properties of a pause_record_toc.
     * @exports Ipause_record_toc
     * @interface Ipause_record_toc
     * @property {boolean|null} [pause] pause_record_toc pause
     */

    /**
     * Constructs a new pause_record_toc.
     * @exports pause_record_toc
     * @classdesc Represents a pause_record_toc.
     * @implements Ipause_record_toc
     * @constructor
     * @param {Ipause_record_toc=} [properties] Properties to set
     */
    function pause_record_toc(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * pause_record_toc pause.
     * @member {boolean} pause
     * @memberof pause_record_toc
     * @instance
     */
    pause_record_toc.prototype.pause = false;

    /**
     * Creates a new pause_record_toc instance using the specified properties.
     * @function create
     * @memberof pause_record_toc
     * @static
     * @param {Ipause_record_toc=} [properties] Properties to set
     * @returns {pause_record_toc} pause_record_toc instance
     */
    pause_record_toc.create = function create(properties) {
        return new pause_record_toc(properties);
    };

    /**
     * Encodes the specified pause_record_toc message. Does not implicitly {@link pause_record_toc.verify|verify} messages.
     * @function encode
     * @memberof pause_record_toc
     * @static
     * @param {Ipause_record_toc} message pause_record_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    pause_record_toc.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.pause != null && Object.hasOwnProperty.call(message, "pause"))
            writer.uint32(/* id 1, wireType 0 =*/8).bool(message.pause);
        return writer;
    };

    /**
     * Encodes the specified pause_record_toc message, length delimited. Does not implicitly {@link pause_record_toc.verify|verify} messages.
     * @function encodeDelimited
     * @memberof pause_record_toc
     * @static
     * @param {Ipause_record_toc} message pause_record_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    pause_record_toc.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a pause_record_toc message from the specified reader or buffer.
     * @function decode
     * @memberof pause_record_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {pause_record_toc} pause_record_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    pause_record_toc.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.pause_record_toc();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.pause = reader.bool();
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a pause_record_toc message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof pause_record_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {pause_record_toc} pause_record_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    pause_record_toc.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a pause_record_toc message.
     * @function verify
     * @memberof pause_record_toc
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    pause_record_toc.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.pause != null && message.hasOwnProperty("pause"))
            if (typeof message.pause !== "boolean")
                return "pause: boolean expected";
        return null;
    };

    /**
     * Creates a pause_record_toc message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof pause_record_toc
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {pause_record_toc} pause_record_toc
     */
    pause_record_toc.fromObject = function fromObject(object) {
        if (object instanceof $root.pause_record_toc)
            return object;
        var message = new $root.pause_record_toc();
        if (object.pause != null)
            message.pause = Boolean(object.pause);
        return message;
    };

    /**
     * Creates a plain object from a pause_record_toc message. Also converts values to other types if specified.
     * @function toObject
     * @memberof pause_record_toc
     * @static
     * @param {pause_record_toc} message pause_record_toc
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    pause_record_toc.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults)
            object.pause = false;
        if (message.pause != null && message.hasOwnProperty("pause"))
            object.pause = message.pause;
        return object;
    };

    /**
     * Converts this pause_record_toc to JSON.
     * @function toJSON
     * @memberof pause_record_toc
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    pause_record_toc.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for pause_record_toc
     * @function getTypeUrl
     * @memberof pause_record_toc
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    pause_record_toc.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/pause_record_toc";
    };

    return pause_record_toc;
})();

$root.get_record_list_tos = (function() {

    /**
     * Properties of a get_record_list_tos.
     * @exports Iget_record_list_tos
     * @interface Iget_record_list_tos
     * @property {number|null} [version] get_record_list_tos version
     */

    /**
     * Constructs a new get_record_list_tos.
     * @exports get_record_list_tos
     * @classdesc Represents a get_record_list_tos.
     * @implements Iget_record_list_tos
     * @constructor
     * @param {Iget_record_list_tos=} [properties] Properties to set
     */
    function get_record_list_tos(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * get_record_list_tos version.
     * @member {number} version
     * @memberof get_record_list_tos
     * @instance
     */
    get_record_list_tos.prototype.version = 0;

    /**
     * Creates a new get_record_list_tos instance using the specified properties.
     * @function create
     * @memberof get_record_list_tos
     * @static
     * @param {Iget_record_list_tos=} [properties] Properties to set
     * @returns {get_record_list_tos} get_record_list_tos instance
     */
    get_record_list_tos.create = function create(properties) {
        return new get_record_list_tos(properties);
    };

    /**
     * Encodes the specified get_record_list_tos message. Does not implicitly {@link get_record_list_tos.verify|verify} messages.
     * @function encode
     * @memberof get_record_list_tos
     * @static
     * @param {Iget_record_list_tos} message get_record_list_tos message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    get_record_list_tos.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.version != null && Object.hasOwnProperty.call(message, "version"))
            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.version);
        return writer;
    };

    /**
     * Encodes the specified get_record_list_tos message, length delimited. Does not implicitly {@link get_record_list_tos.verify|verify} messages.
     * @function encodeDelimited
     * @memberof get_record_list_tos
     * @static
     * @param {Iget_record_list_tos} message get_record_list_tos message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    get_record_list_tos.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a get_record_list_tos message from the specified reader or buffer.
     * @function decode
     * @memberof get_record_list_tos
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {get_record_list_tos} get_record_list_tos
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    get_record_list_tos.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.get_record_list_tos();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.version = reader.uint32();
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a get_record_list_tos message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof get_record_list_tos
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {get_record_list_tos} get_record_list_tos
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    get_record_list_tos.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a get_record_list_tos message.
     * @function verify
     * @memberof get_record_list_tos
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    get_record_list_tos.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.version != null && message.hasOwnProperty("version"))
            if (!$util.isInteger(message.version))
                return "version: integer expected";
        return null;
    };

    /**
     * Creates a get_record_list_tos message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof get_record_list_tos
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {get_record_list_tos} get_record_list_tos
     */
    get_record_list_tos.fromObject = function fromObject(object) {
        if (object instanceof $root.get_record_list_tos)
            return object;
        var message = new $root.get_record_list_tos();
        if (object.version != null)
            message.version = object.version >>> 0;
        return message;
    };

    /**
     * Creates a plain object from a get_record_list_tos message. Also converts values to other types if specified.
     * @function toObject
     * @memberof get_record_list_tos
     * @static
     * @param {get_record_list_tos} message get_record_list_tos
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    get_record_list_tos.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults)
            object.version = 0;
        if (message.version != null && message.hasOwnProperty("version"))
            object.version = message.version;
        return object;
    };

    /**
     * Converts this get_record_list_tos to JSON.
     * @function toJSON
     * @memberof get_record_list_tos
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    get_record_list_tos.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for get_record_list_tos
     * @function getTypeUrl
     * @memberof get_record_list_tos
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    get_record_list_tos.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/get_record_list_tos";
    };

    return get_record_list_tos;
})();

$root.get_record_list_toc = (function() {

    /**
     * Properties of a get_record_list_toc.
     * @exports Iget_record_list_toc
     * @interface Iget_record_list_toc
     * @property {Array.<string>|null} [records] get_record_list_toc records
     */

    /**
     * Constructs a new get_record_list_toc.
     * @exports get_record_list_toc
     * @classdesc Represents a get_record_list_toc.
     * @implements Iget_record_list_toc
     * @constructor
     * @param {Iget_record_list_toc=} [properties] Properties to set
     */
    function get_record_list_toc(properties) {
        this.records = [];
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * get_record_list_toc records.
     * @member {Array.<string>} records
     * @memberof get_record_list_toc
     * @instance
     */
    get_record_list_toc.prototype.records = $util.emptyArray;

    /**
     * Creates a new get_record_list_toc instance using the specified properties.
     * @function create
     * @memberof get_record_list_toc
     * @static
     * @param {Iget_record_list_toc=} [properties] Properties to set
     * @returns {get_record_list_toc} get_record_list_toc instance
     */
    get_record_list_toc.create = function create(properties) {
        return new get_record_list_toc(properties);
    };

    /**
     * Encodes the specified get_record_list_toc message. Does not implicitly {@link get_record_list_toc.verify|verify} messages.
     * @function encode
     * @memberof get_record_list_toc
     * @static
     * @param {Iget_record_list_toc} message get_record_list_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    get_record_list_toc.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.records != null && message.records.length)
            for (var i = 0; i < message.records.length; ++i)
                writer.uint32(/* id 1, wireType 2 =*/10).string(message.records[i]);
        return writer;
    };

    /**
     * Encodes the specified get_record_list_toc message, length delimited. Does not implicitly {@link get_record_list_toc.verify|verify} messages.
     * @function encodeDelimited
     * @memberof get_record_list_toc
     * @static
     * @param {Iget_record_list_toc} message get_record_list_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    get_record_list_toc.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a get_record_list_toc message from the specified reader or buffer.
     * @function decode
     * @memberof get_record_list_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {get_record_list_toc} get_record_list_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    get_record_list_toc.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.get_record_list_toc();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    if (!(message.records && message.records.length))
                        message.records = [];
                    message.records.push(reader.string());
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a get_record_list_toc message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof get_record_list_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {get_record_list_toc} get_record_list_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    get_record_list_toc.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a get_record_list_toc message.
     * @function verify
     * @memberof get_record_list_toc
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    get_record_list_toc.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.records != null && message.hasOwnProperty("records")) {
            if (!Array.isArray(message.records))
                return "records: array expected";
            for (var i = 0; i < message.records.length; ++i)
                if (!$util.isString(message.records[i]))
                    return "records: string[] expected";
        }
        return null;
    };

    /**
     * Creates a get_record_list_toc message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof get_record_list_toc
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {get_record_list_toc} get_record_list_toc
     */
    get_record_list_toc.fromObject = function fromObject(object) {
        if (object instanceof $root.get_record_list_toc)
            return object;
        var message = new $root.get_record_list_toc();
        if (object.records) {
            if (!Array.isArray(object.records))
                throw TypeError(".get_record_list_toc.records: array expected");
            message.records = [];
            for (var i = 0; i < object.records.length; ++i)
                message.records[i] = String(object.records[i]);
        }
        return message;
    };

    /**
     * Creates a plain object from a get_record_list_toc message. Also converts values to other types if specified.
     * @function toObject
     * @memberof get_record_list_toc
     * @static
     * @param {get_record_list_toc} message get_record_list_toc
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    get_record_list_toc.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.arrays || options.defaults)
            object.records = [];
        if (message.records && message.records.length) {
            object.records = [];
            for (var j = 0; j < message.records.length; ++j)
                object.records[j] = message.records[j];
        }
        return object;
    };

    /**
     * Converts this get_record_list_toc to JSON.
     * @function toJSON
     * @memberof get_record_list_toc
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    get_record_list_toc.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for get_record_list_toc
     * @function getTypeUrl
     * @memberof get_record_list_toc
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    get_record_list_toc.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/get_record_list_toc";
    };

    return get_record_list_toc;
})();

$root.add_order_tos = (function() {

    /**
     * Properties of an add_order_tos.
     * @exports Iadd_order_tos
     * @interface Iadd_order_tos
     * @property {number|null} [time] add_order_tos time
     */

    /**
     * Constructs a new add_order_tos.
     * @exports add_order_tos
     * @classdesc Represents an add_order_tos.
     * @implements Iadd_order_tos
     * @constructor
     * @param {Iadd_order_tos=} [properties] Properties to set
     */
    function add_order_tos(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * add_order_tos time.
     * @member {number} time
     * @memberof add_order_tos
     * @instance
     */
    add_order_tos.prototype.time = 0;

    /**
     * Creates a new add_order_tos instance using the specified properties.
     * @function create
     * @memberof add_order_tos
     * @static
     * @param {Iadd_order_tos=} [properties] Properties to set
     * @returns {add_order_tos} add_order_tos instance
     */
    add_order_tos.create = function create(properties) {
        return new add_order_tos(properties);
    };

    /**
     * Encodes the specified add_order_tos message. Does not implicitly {@link add_order_tos.verify|verify} messages.
     * @function encode
     * @memberof add_order_tos
     * @static
     * @param {Iadd_order_tos} message add_order_tos message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    add_order_tos.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.time != null && Object.hasOwnProperty.call(message, "time"))
            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.time);
        return writer;
    };

    /**
     * Encodes the specified add_order_tos message, length delimited. Does not implicitly {@link add_order_tos.verify|verify} messages.
     * @function encodeDelimited
     * @memberof add_order_tos
     * @static
     * @param {Iadd_order_tos} message add_order_tos message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    add_order_tos.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes an add_order_tos message from the specified reader or buffer.
     * @function decode
     * @memberof add_order_tos
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {add_order_tos} add_order_tos
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    add_order_tos.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.add_order_tos();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.time = reader.uint32();
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes an add_order_tos message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof add_order_tos
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {add_order_tos} add_order_tos
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    add_order_tos.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies an add_order_tos message.
     * @function verify
     * @memberof add_order_tos
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    add_order_tos.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.time != null && message.hasOwnProperty("time"))
            if (!$util.isInteger(message.time))
                return "time: integer expected";
        return null;
    };

    /**
     * Creates an add_order_tos message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof add_order_tos
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {add_order_tos} add_order_tos
     */
    add_order_tos.fromObject = function fromObject(object) {
        if (object instanceof $root.add_order_tos)
            return object;
        var message = new $root.add_order_tos();
        if (object.time != null)
            message.time = object.time >>> 0;
        return message;
    };

    /**
     * Creates a plain object from an add_order_tos message. Also converts values to other types if specified.
     * @function toObject
     * @memberof add_order_tos
     * @static
     * @param {add_order_tos} message add_order_tos
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    add_order_tos.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults)
            object.time = 0;
        if (message.time != null && message.hasOwnProperty("time"))
            object.time = message.time;
        return object;
    };

    /**
     * Converts this add_order_tos to JSON.
     * @function toJSON
     * @memberof add_order_tos
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    add_order_tos.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for add_order_tos
     * @function getTypeUrl
     * @memberof add_order_tos
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    add_order_tos.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/add_order_tos";
    };

    return add_order_tos;
})();

$root.add_order_toc = (function() {

    /**
     * Properties of an add_order_toc.
     * @exports Iadd_order_toc
     * @interface Iadd_order_toc
     */

    /**
     * Constructs a new add_order_toc.
     * @exports add_order_toc
     * @classdesc Represents an add_order_toc.
     * @implements Iadd_order_toc
     * @constructor
     * @param {Iadd_order_toc=} [properties] Properties to set
     */
    function add_order_toc(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * Creates a new add_order_toc instance using the specified properties.
     * @function create
     * @memberof add_order_toc
     * @static
     * @param {Iadd_order_toc=} [properties] Properties to set
     * @returns {add_order_toc} add_order_toc instance
     */
    add_order_toc.create = function create(properties) {
        return new add_order_toc(properties);
    };

    /**
     * Encodes the specified add_order_toc message. Does not implicitly {@link add_order_toc.verify|verify} messages.
     * @function encode
     * @memberof add_order_toc
     * @static
     * @param {Iadd_order_toc} message add_order_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    add_order_toc.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        return writer;
    };

    /**
     * Encodes the specified add_order_toc message, length delimited. Does not implicitly {@link add_order_toc.verify|verify} messages.
     * @function encodeDelimited
     * @memberof add_order_toc
     * @static
     * @param {Iadd_order_toc} message add_order_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    add_order_toc.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes an add_order_toc message from the specified reader or buffer.
     * @function decode
     * @memberof add_order_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {add_order_toc} add_order_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    add_order_toc.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.add_order_toc();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes an add_order_toc message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof add_order_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {add_order_toc} add_order_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    add_order_toc.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies an add_order_toc message.
     * @function verify
     * @memberof add_order_toc
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    add_order_toc.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        return null;
    };

    /**
     * Creates an add_order_toc message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof add_order_toc
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {add_order_toc} add_order_toc
     */
    add_order_toc.fromObject = function fromObject(object) {
        if (object instanceof $root.add_order_toc)
            return object;
        return new $root.add_order_toc();
    };

    /**
     * Creates a plain object from an add_order_toc message. Also converts values to other types if specified.
     * @function toObject
     * @memberof add_order_toc
     * @static
     * @param {add_order_toc} message add_order_toc
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    add_order_toc.toObject = function toObject() {
        return {};
    };

    /**
     * Converts this add_order_toc to JSON.
     * @function toJSON
     * @memberof add_order_toc
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    add_order_toc.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for add_order_toc
     * @function getTypeUrl
     * @memberof add_order_toc
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    add_order_toc.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/add_order_toc";
    };

    return add_order_toc;
})();

$root.pb_order = (function() {

    /**
     * Properties of a pb_order.
     * @exports Ipb_order
     * @interface Ipb_order
     * @property {number|null} [id] pb_order id
     * @property {number|Long|null} [time] pb_order time
     * @property {string|null} [name] pb_order name
     * @property {boolean|null} [isMine] pb_order isMine
     */

    /**
     * Constructs a new pb_order.
     * @exports pb_order
     * @classdesc Represents a pb_order.
     * @implements Ipb_order
     * @constructor
     * @param {Ipb_order=} [properties] Properties to set
     */
    function pb_order(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * pb_order id.
     * @member {number} id
     * @memberof pb_order
     * @instance
     */
    pb_order.prototype.id = 0;

    /**
     * pb_order time.
     * @member {number|Long} time
     * @memberof pb_order
     * @instance
     */
    pb_order.prototype.time = $util.Long ? $util.Long.fromBits(0,0,true) : 0;

    /**
     * pb_order name.
     * @member {string} name
     * @memberof pb_order
     * @instance
     */
    pb_order.prototype.name = "";

    /**
     * pb_order isMine.
     * @member {boolean} isMine
     * @memberof pb_order
     * @instance
     */
    pb_order.prototype.isMine = false;

    /**
     * Creates a new pb_order instance using the specified properties.
     * @function create
     * @memberof pb_order
     * @static
     * @param {Ipb_order=} [properties] Properties to set
     * @returns {pb_order} pb_order instance
     */
    pb_order.create = function create(properties) {
        return new pb_order(properties);
    };

    /**
     * Encodes the specified pb_order message. Does not implicitly {@link pb_order.verify|verify} messages.
     * @function encode
     * @memberof pb_order
     * @static
     * @param {Ipb_order} message pb_order message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    pb_order.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.id != null && Object.hasOwnProperty.call(message, "id"))
            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.id);
        if (message.time != null && Object.hasOwnProperty.call(message, "time"))
            writer.uint32(/* id 2, wireType 0 =*/16).uint64(message.time);
        if (message.name != null && Object.hasOwnProperty.call(message, "name"))
            writer.uint32(/* id 3, wireType 2 =*/26).string(message.name);
        if (message.isMine != null && Object.hasOwnProperty.call(message, "isMine"))
            writer.uint32(/* id 4, wireType 0 =*/32).bool(message.isMine);
        return writer;
    };

    /**
     * Encodes the specified pb_order message, length delimited. Does not implicitly {@link pb_order.verify|verify} messages.
     * @function encodeDelimited
     * @memberof pb_order
     * @static
     * @param {Ipb_order} message pb_order message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    pb_order.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a pb_order message from the specified reader or buffer.
     * @function decode
     * @memberof pb_order
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {pb_order} pb_order
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    pb_order.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.pb_order();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.id = reader.uint32();
                    break;
                }
            case 2: {
                    message.time = reader.uint64();
                    break;
                }
            case 3: {
                    message.name = reader.string();
                    break;
                }
            case 4: {
                    message.isMine = reader.bool();
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a pb_order message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof pb_order
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {pb_order} pb_order
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    pb_order.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a pb_order message.
     * @function verify
     * @memberof pb_order
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    pb_order.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.id != null && message.hasOwnProperty("id"))
            if (!$util.isInteger(message.id))
                return "id: integer expected";
        if (message.time != null && message.hasOwnProperty("time"))
            if (!$util.isInteger(message.time) && !(message.time && $util.isInteger(message.time.low) && $util.isInteger(message.time.high)))
                return "time: integer|Long expected";
        if (message.name != null && message.hasOwnProperty("name"))
            if (!$util.isString(message.name))
                return "name: string expected";
        if (message.isMine != null && message.hasOwnProperty("isMine"))
            if (typeof message.isMine !== "boolean")
                return "isMine: boolean expected";
        return null;
    };

    /**
     * Creates a pb_order message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof pb_order
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {pb_order} pb_order
     */
    pb_order.fromObject = function fromObject(object) {
        if (object instanceof $root.pb_order)
            return object;
        var message = new $root.pb_order();
        if (object.id != null)
            message.id = object.id >>> 0;
        if (object.time != null)
            if ($util.Long)
                (message.time = $util.Long.fromValue(object.time)).unsigned = true;
            else if (typeof object.time === "string")
                message.time = parseInt(object.time, 10);
            else if (typeof object.time === "number")
                message.time = object.time;
            else if (typeof object.time === "object")
                message.time = new $util.LongBits(object.time.low >>> 0, object.time.high >>> 0).toNumber(true);
        if (object.name != null)
            message.name = String(object.name);
        if (object.isMine != null)
            message.isMine = Boolean(object.isMine);
        return message;
    };

    /**
     * Creates a plain object from a pb_order message. Also converts values to other types if specified.
     * @function toObject
     * @memberof pb_order
     * @static
     * @param {pb_order} message pb_order
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    pb_order.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults) {
            object.id = 0;
            if ($util.Long) {
                var long = new $util.Long(0, 0, true);
                object.time = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
            } else
                object.time = options.longs === String ? "0" : 0;
            object.name = "";
            object.isMine = false;
        }
        if (message.id != null && message.hasOwnProperty("id"))
            object.id = message.id;
        if (message.time != null && message.hasOwnProperty("time"))
            if (typeof message.time === "number")
                object.time = options.longs === String ? String(message.time) : message.time;
            else
                object.time = options.longs === String ? $util.Long.prototype.toString.call(message.time) : options.longs === Number ? new $util.LongBits(message.time.low >>> 0, message.time.high >>> 0).toNumber(true) : message.time;
        if (message.name != null && message.hasOwnProperty("name"))
            object.name = message.name;
        if (message.isMine != null && message.hasOwnProperty("isMine"))
            object.isMine = message.isMine;
        return object;
    };

    /**
     * Converts this pb_order to JSON.
     * @function toJSON
     * @memberof pb_order
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    pb_order.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for pb_order
     * @function getTypeUrl
     * @memberof pb_order
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    pb_order.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/pb_order";
    };

    return pb_order;
})();

$root.get_orders_tos = (function() {

    /**
     * Properties of a get_orders_tos.
     * @exports Iget_orders_tos
     * @interface Iget_orders_tos
     */

    /**
     * Constructs a new get_orders_tos.
     * @exports get_orders_tos
     * @classdesc Represents a get_orders_tos.
     * @implements Iget_orders_tos
     * @constructor
     * @param {Iget_orders_tos=} [properties] Properties to set
     */
    function get_orders_tos(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * Creates a new get_orders_tos instance using the specified properties.
     * @function create
     * @memberof get_orders_tos
     * @static
     * @param {Iget_orders_tos=} [properties] Properties to set
     * @returns {get_orders_tos} get_orders_tos instance
     */
    get_orders_tos.create = function create(properties) {
        return new get_orders_tos(properties);
    };

    /**
     * Encodes the specified get_orders_tos message. Does not implicitly {@link get_orders_tos.verify|verify} messages.
     * @function encode
     * @memberof get_orders_tos
     * @static
     * @param {Iget_orders_tos} message get_orders_tos message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    get_orders_tos.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        return writer;
    };

    /**
     * Encodes the specified get_orders_tos message, length delimited. Does not implicitly {@link get_orders_tos.verify|verify} messages.
     * @function encodeDelimited
     * @memberof get_orders_tos
     * @static
     * @param {Iget_orders_tos} message get_orders_tos message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    get_orders_tos.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a get_orders_tos message from the specified reader or buffer.
     * @function decode
     * @memberof get_orders_tos
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {get_orders_tos} get_orders_tos
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    get_orders_tos.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.get_orders_tos();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a get_orders_tos message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof get_orders_tos
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {get_orders_tos} get_orders_tos
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    get_orders_tos.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a get_orders_tos message.
     * @function verify
     * @memberof get_orders_tos
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    get_orders_tos.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        return null;
    };

    /**
     * Creates a get_orders_tos message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof get_orders_tos
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {get_orders_tos} get_orders_tos
     */
    get_orders_tos.fromObject = function fromObject(object) {
        if (object instanceof $root.get_orders_tos)
            return object;
        return new $root.get_orders_tos();
    };

    /**
     * Creates a plain object from a get_orders_tos message. Also converts values to other types if specified.
     * @function toObject
     * @memberof get_orders_tos
     * @static
     * @param {get_orders_tos} message get_orders_tos
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    get_orders_tos.toObject = function toObject() {
        return {};
    };

    /**
     * Converts this get_orders_tos to JSON.
     * @function toJSON
     * @memberof get_orders_tos
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    get_orders_tos.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for get_orders_tos
     * @function getTypeUrl
     * @memberof get_orders_tos
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    get_orders_tos.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/get_orders_tos";
    };

    return get_orders_tos;
})();

$root.get_orders_toc = (function() {

    /**
     * Properties of a get_orders_toc.
     * @exports Iget_orders_toc
     * @interface Iget_orders_toc
     * @property {Array.<Ipb_order>|null} [orders] get_orders_toc orders
     */

    /**
     * Constructs a new get_orders_toc.
     * @exports get_orders_toc
     * @classdesc Represents a get_orders_toc.
     * @implements Iget_orders_toc
     * @constructor
     * @param {Iget_orders_toc=} [properties] Properties to set
     */
    function get_orders_toc(properties) {
        this.orders = [];
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * get_orders_toc orders.
     * @member {Array.<Ipb_order>} orders
     * @memberof get_orders_toc
     * @instance
     */
    get_orders_toc.prototype.orders = $util.emptyArray;

    /**
     * Creates a new get_orders_toc instance using the specified properties.
     * @function create
     * @memberof get_orders_toc
     * @static
     * @param {Iget_orders_toc=} [properties] Properties to set
     * @returns {get_orders_toc} get_orders_toc instance
     */
    get_orders_toc.create = function create(properties) {
        return new get_orders_toc(properties);
    };

    /**
     * Encodes the specified get_orders_toc message. Does not implicitly {@link get_orders_toc.verify|verify} messages.
     * @function encode
     * @memberof get_orders_toc
     * @static
     * @param {Iget_orders_toc} message get_orders_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    get_orders_toc.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.orders != null && message.orders.length)
            for (var i = 0; i < message.orders.length; ++i)
                $root.pb_order.encode(message.orders[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
        return writer;
    };

    /**
     * Encodes the specified get_orders_toc message, length delimited. Does not implicitly {@link get_orders_toc.verify|verify} messages.
     * @function encodeDelimited
     * @memberof get_orders_toc
     * @static
     * @param {Iget_orders_toc} message get_orders_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    get_orders_toc.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a get_orders_toc message from the specified reader or buffer.
     * @function decode
     * @memberof get_orders_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {get_orders_toc} get_orders_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    get_orders_toc.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.get_orders_toc();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    if (!(message.orders && message.orders.length))
                        message.orders = [];
                    message.orders.push($root.pb_order.decode(reader, reader.uint32()));
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a get_orders_toc message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof get_orders_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {get_orders_toc} get_orders_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    get_orders_toc.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a get_orders_toc message.
     * @function verify
     * @memberof get_orders_toc
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    get_orders_toc.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.orders != null && message.hasOwnProperty("orders")) {
            if (!Array.isArray(message.orders))
                return "orders: array expected";
            for (var i = 0; i < message.orders.length; ++i) {
                var error = $root.pb_order.verify(message.orders[i]);
                if (error)
                    return "orders." + error;
            }
        }
        return null;
    };

    /**
     * Creates a get_orders_toc message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof get_orders_toc
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {get_orders_toc} get_orders_toc
     */
    get_orders_toc.fromObject = function fromObject(object) {
        if (object instanceof $root.get_orders_toc)
            return object;
        var message = new $root.get_orders_toc();
        if (object.orders) {
            if (!Array.isArray(object.orders))
                throw TypeError(".get_orders_toc.orders: array expected");
            message.orders = [];
            for (var i = 0; i < object.orders.length; ++i) {
                if (typeof object.orders[i] !== "object")
                    throw TypeError(".get_orders_toc.orders: object expected");
                message.orders[i] = $root.pb_order.fromObject(object.orders[i]);
            }
        }
        return message;
    };

    /**
     * Creates a plain object from a get_orders_toc message. Also converts values to other types if specified.
     * @function toObject
     * @memberof get_orders_toc
     * @static
     * @param {get_orders_toc} message get_orders_toc
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    get_orders_toc.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.arrays || options.defaults)
            object.orders = [];
        if (message.orders && message.orders.length) {
            object.orders = [];
            for (var j = 0; j < message.orders.length; ++j)
                object.orders[j] = $root.pb_order.toObject(message.orders[j], options);
        }
        return object;
    };

    /**
     * Converts this get_orders_toc to JSON.
     * @function toJSON
     * @memberof get_orders_toc
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    get_orders_toc.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for get_orders_toc
     * @function getTypeUrl
     * @memberof get_orders_toc
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    get_orders_toc.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/get_orders_toc";
    };

    return get_orders_toc;
})();

$root.heart_tos = (function() {

    /**
     * Properties of a heart_tos.
     * @exports Iheart_tos
     * @interface Iheart_tos
     */

    /**
     * Constructs a new heart_tos.
     * @exports heart_tos
     * @classdesc Represents a heart_tos.
     * @implements Iheart_tos
     * @constructor
     * @param {Iheart_tos=} [properties] Properties to set
     */
    function heart_tos(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * Creates a new heart_tos instance using the specified properties.
     * @function create
     * @memberof heart_tos
     * @static
     * @param {Iheart_tos=} [properties] Properties to set
     * @returns {heart_tos} heart_tos instance
     */
    heart_tos.create = function create(properties) {
        return new heart_tos(properties);
    };

    /**
     * Encodes the specified heart_tos message. Does not implicitly {@link heart_tos.verify|verify} messages.
     * @function encode
     * @memberof heart_tos
     * @static
     * @param {Iheart_tos} message heart_tos message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    heart_tos.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        return writer;
    };

    /**
     * Encodes the specified heart_tos message, length delimited. Does not implicitly {@link heart_tos.verify|verify} messages.
     * @function encodeDelimited
     * @memberof heart_tos
     * @static
     * @param {Iheart_tos} message heart_tos message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    heart_tos.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a heart_tos message from the specified reader or buffer.
     * @function decode
     * @memberof heart_tos
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {heart_tos} heart_tos
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    heart_tos.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.heart_tos();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a heart_tos message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof heart_tos
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {heart_tos} heart_tos
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    heart_tos.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a heart_tos message.
     * @function verify
     * @memberof heart_tos
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    heart_tos.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        return null;
    };

    /**
     * Creates a heart_tos message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof heart_tos
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {heart_tos} heart_tos
     */
    heart_tos.fromObject = function fromObject(object) {
        if (object instanceof $root.heart_tos)
            return object;
        return new $root.heart_tos();
    };

    /**
     * Creates a plain object from a heart_tos message. Also converts values to other types if specified.
     * @function toObject
     * @memberof heart_tos
     * @static
     * @param {heart_tos} message heart_tos
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    heart_tos.toObject = function toObject() {
        return {};
    };

    /**
     * Converts this heart_tos to JSON.
     * @function toJSON
     * @memberof heart_tos
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    heart_tos.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for heart_tos
     * @function getTypeUrl
     * @memberof heart_tos
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    heart_tos.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/heart_tos";
    };

    return heart_tos;
})();

$root.heart_toc = (function() {

    /**
     * Properties of a heart_toc.
     * @exports Iheart_toc
     * @interface Iheart_toc
     * @property {number|null} [onlineCount] heart_toc onlineCount
     */

    /**
     * Constructs a new heart_toc.
     * @exports heart_toc
     * @classdesc Represents a heart_toc.
     * @implements Iheart_toc
     * @constructor
     * @param {Iheart_toc=} [properties] Properties to set
     */
    function heart_toc(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * heart_toc onlineCount.
     * @member {number} onlineCount
     * @memberof heart_toc
     * @instance
     */
    heart_toc.prototype.onlineCount = 0;

    /**
     * Creates a new heart_toc instance using the specified properties.
     * @function create
     * @memberof heart_toc
     * @static
     * @param {Iheart_toc=} [properties] Properties to set
     * @returns {heart_toc} heart_toc instance
     */
    heart_toc.create = function create(properties) {
        return new heart_toc(properties);
    };

    /**
     * Encodes the specified heart_toc message. Does not implicitly {@link heart_toc.verify|verify} messages.
     * @function encode
     * @memberof heart_toc
     * @static
     * @param {Iheart_toc} message heart_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    heart_toc.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.onlineCount != null && Object.hasOwnProperty.call(message, "onlineCount"))
            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.onlineCount);
        return writer;
    };

    /**
     * Encodes the specified heart_toc message, length delimited. Does not implicitly {@link heart_toc.verify|verify} messages.
     * @function encodeDelimited
     * @memberof heart_toc
     * @static
     * @param {Iheart_toc} message heart_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    heart_toc.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a heart_toc message from the specified reader or buffer.
     * @function decode
     * @memberof heart_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {heart_toc} heart_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    heart_toc.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.heart_toc();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.onlineCount = reader.uint32();
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a heart_toc message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof heart_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {heart_toc} heart_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    heart_toc.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a heart_toc message.
     * @function verify
     * @memberof heart_toc
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    heart_toc.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.onlineCount != null && message.hasOwnProperty("onlineCount"))
            if (!$util.isInteger(message.onlineCount))
                return "onlineCount: integer expected";
        return null;
    };

    /**
     * Creates a heart_toc message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof heart_toc
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {heart_toc} heart_toc
     */
    heart_toc.fromObject = function fromObject(object) {
        if (object instanceof $root.heart_toc)
            return object;
        var message = new $root.heart_toc();
        if (object.onlineCount != null)
            message.onlineCount = object.onlineCount >>> 0;
        return message;
    };

    /**
     * Creates a plain object from a heart_toc message. Also converts values to other types if specified.
     * @function toObject
     * @memberof heart_toc
     * @static
     * @param {heart_toc} message heart_toc
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    heart_toc.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults)
            object.onlineCount = 0;
        if (message.onlineCount != null && message.hasOwnProperty("onlineCount"))
            object.onlineCount = message.onlineCount;
        return object;
    };

    /**
     * Converts this heart_toc to JSON.
     * @function toJSON
     * @memberof heart_toc
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    heart_toc.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for heart_toc
     * @function getTypeUrl
     * @memberof heart_toc
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    heart_toc.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/heart_toc";
    };

    return heart_toc;
})();

$root.add_one_position_tos = (function() {

    /**
     * Properties of an add_one_position_tos.
     * @exports Iadd_one_position_tos
     * @interface Iadd_one_position_tos
     */

    /**
     * Constructs a new add_one_position_tos.
     * @exports add_one_position_tos
     * @classdesc Represents an add_one_position_tos.
     * @implements Iadd_one_position_tos
     * @constructor
     * @param {Iadd_one_position_tos=} [properties] Properties to set
     */
    function add_one_position_tos(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * Creates a new add_one_position_tos instance using the specified properties.
     * @function create
     * @memberof add_one_position_tos
     * @static
     * @param {Iadd_one_position_tos=} [properties] Properties to set
     * @returns {add_one_position_tos} add_one_position_tos instance
     */
    add_one_position_tos.create = function create(properties) {
        return new add_one_position_tos(properties);
    };

    /**
     * Encodes the specified add_one_position_tos message. Does not implicitly {@link add_one_position_tos.verify|verify} messages.
     * @function encode
     * @memberof add_one_position_tos
     * @static
     * @param {Iadd_one_position_tos} message add_one_position_tos message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    add_one_position_tos.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        return writer;
    };

    /**
     * Encodes the specified add_one_position_tos message, length delimited. Does not implicitly {@link add_one_position_tos.verify|verify} messages.
     * @function encodeDelimited
     * @memberof add_one_position_tos
     * @static
     * @param {Iadd_one_position_tos} message add_one_position_tos message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    add_one_position_tos.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes an add_one_position_tos message from the specified reader or buffer.
     * @function decode
     * @memberof add_one_position_tos
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {add_one_position_tos} add_one_position_tos
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    add_one_position_tos.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.add_one_position_tos();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes an add_one_position_tos message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof add_one_position_tos
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {add_one_position_tos} add_one_position_tos
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    add_one_position_tos.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies an add_one_position_tos message.
     * @function verify
     * @memberof add_one_position_tos
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    add_one_position_tos.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        return null;
    };

    /**
     * Creates an add_one_position_tos message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof add_one_position_tos
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {add_one_position_tos} add_one_position_tos
     */
    add_one_position_tos.fromObject = function fromObject(object) {
        if (object instanceof $root.add_one_position_tos)
            return object;
        return new $root.add_one_position_tos();
    };

    /**
     * Creates a plain object from an add_one_position_tos message. Also converts values to other types if specified.
     * @function toObject
     * @memberof add_one_position_tos
     * @static
     * @param {add_one_position_tos} message add_one_position_tos
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    add_one_position_tos.toObject = function toObject() {
        return {};
    };

    /**
     * Converts this add_one_position_tos to JSON.
     * @function toJSON
     * @memberof add_one_position_tos
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    add_one_position_tos.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for add_one_position_tos
     * @function getTypeUrl
     * @memberof add_one_position_tos
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    add_one_position_tos.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/add_one_position_tos";
    };

    return add_one_position_tos;
})();

$root.add_one_position_toc = (function() {

    /**
     * Properties of an add_one_position_toc.
     * @exports Iadd_one_position_toc
     * @interface Iadd_one_position_toc
     */

    /**
     * Constructs a new add_one_position_toc.
     * @exports add_one_position_toc
     * @classdesc Represents an add_one_position_toc.
     * @implements Iadd_one_position_toc
     * @constructor
     * @param {Iadd_one_position_toc=} [properties] Properties to set
     */
    function add_one_position_toc(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * Creates a new add_one_position_toc instance using the specified properties.
     * @function create
     * @memberof add_one_position_toc
     * @static
     * @param {Iadd_one_position_toc=} [properties] Properties to set
     * @returns {add_one_position_toc} add_one_position_toc instance
     */
    add_one_position_toc.create = function create(properties) {
        return new add_one_position_toc(properties);
    };

    /**
     * Encodes the specified add_one_position_toc message. Does not implicitly {@link add_one_position_toc.verify|verify} messages.
     * @function encode
     * @memberof add_one_position_toc
     * @static
     * @param {Iadd_one_position_toc} message add_one_position_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    add_one_position_toc.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        return writer;
    };

    /**
     * Encodes the specified add_one_position_toc message, length delimited. Does not implicitly {@link add_one_position_toc.verify|verify} messages.
     * @function encodeDelimited
     * @memberof add_one_position_toc
     * @static
     * @param {Iadd_one_position_toc} message add_one_position_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    add_one_position_toc.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes an add_one_position_toc message from the specified reader or buffer.
     * @function decode
     * @memberof add_one_position_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {add_one_position_toc} add_one_position_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    add_one_position_toc.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.add_one_position_toc();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes an add_one_position_toc message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof add_one_position_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {add_one_position_toc} add_one_position_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    add_one_position_toc.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies an add_one_position_toc message.
     * @function verify
     * @memberof add_one_position_toc
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    add_one_position_toc.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        return null;
    };

    /**
     * Creates an add_one_position_toc message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof add_one_position_toc
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {add_one_position_toc} add_one_position_toc
     */
    add_one_position_toc.fromObject = function fromObject(object) {
        if (object instanceof $root.add_one_position_toc)
            return object;
        return new $root.add_one_position_toc();
    };

    /**
     * Creates a plain object from an add_one_position_toc message. Also converts values to other types if specified.
     * @function toObject
     * @memberof add_one_position_toc
     * @static
     * @param {add_one_position_toc} message add_one_position_toc
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    add_one_position_toc.toObject = function toObject() {
        return {};
    };

    /**
     * Converts this add_one_position_toc to JSON.
     * @function toJSON
     * @memberof add_one_position_toc
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    add_one_position_toc.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for add_one_position_toc
     * @function getTypeUrl
     * @memberof add_one_position_toc
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    add_one_position_toc.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/add_one_position_toc";
    };

    return add_one_position_toc;
})();

$root.remove_one_position_tos = (function() {

    /**
     * Properties of a remove_one_position_tos.
     * @exports Iremove_one_position_tos
     * @interface Iremove_one_position_tos
     */

    /**
     * Constructs a new remove_one_position_tos.
     * @exports remove_one_position_tos
     * @classdesc Represents a remove_one_position_tos.
     * @implements Iremove_one_position_tos
     * @constructor
     * @param {Iremove_one_position_tos=} [properties] Properties to set
     */
    function remove_one_position_tos(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * Creates a new remove_one_position_tos instance using the specified properties.
     * @function create
     * @memberof remove_one_position_tos
     * @static
     * @param {Iremove_one_position_tos=} [properties] Properties to set
     * @returns {remove_one_position_tos} remove_one_position_tos instance
     */
    remove_one_position_tos.create = function create(properties) {
        return new remove_one_position_tos(properties);
    };

    /**
     * Encodes the specified remove_one_position_tos message. Does not implicitly {@link remove_one_position_tos.verify|verify} messages.
     * @function encode
     * @memberof remove_one_position_tos
     * @static
     * @param {Iremove_one_position_tos} message remove_one_position_tos message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    remove_one_position_tos.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        return writer;
    };

    /**
     * Encodes the specified remove_one_position_tos message, length delimited. Does not implicitly {@link remove_one_position_tos.verify|verify} messages.
     * @function encodeDelimited
     * @memberof remove_one_position_tos
     * @static
     * @param {Iremove_one_position_tos} message remove_one_position_tos message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    remove_one_position_tos.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a remove_one_position_tos message from the specified reader or buffer.
     * @function decode
     * @memberof remove_one_position_tos
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {remove_one_position_tos} remove_one_position_tos
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    remove_one_position_tos.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.remove_one_position_tos();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a remove_one_position_tos message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof remove_one_position_tos
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {remove_one_position_tos} remove_one_position_tos
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    remove_one_position_tos.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a remove_one_position_tos message.
     * @function verify
     * @memberof remove_one_position_tos
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    remove_one_position_tos.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        return null;
    };

    /**
     * Creates a remove_one_position_tos message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof remove_one_position_tos
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {remove_one_position_tos} remove_one_position_tos
     */
    remove_one_position_tos.fromObject = function fromObject(object) {
        if (object instanceof $root.remove_one_position_tos)
            return object;
        return new $root.remove_one_position_tos();
    };

    /**
     * Creates a plain object from a remove_one_position_tos message. Also converts values to other types if specified.
     * @function toObject
     * @memberof remove_one_position_tos
     * @static
     * @param {remove_one_position_tos} message remove_one_position_tos
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    remove_one_position_tos.toObject = function toObject() {
        return {};
    };

    /**
     * Converts this remove_one_position_tos to JSON.
     * @function toJSON
     * @memberof remove_one_position_tos
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    remove_one_position_tos.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for remove_one_position_tos
     * @function getTypeUrl
     * @memberof remove_one_position_tos
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    remove_one_position_tos.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/remove_one_position_tos";
    };

    return remove_one_position_tos;
})();

$root.remove_one_position_toc = (function() {

    /**
     * Properties of a remove_one_position_toc.
     * @exports Iremove_one_position_toc
     * @interface Iremove_one_position_toc
     * @property {number|null} [position] remove_one_position_toc position
     */

    /**
     * Constructs a new remove_one_position_toc.
     * @exports remove_one_position_toc
     * @classdesc Represents a remove_one_position_toc.
     * @implements Iremove_one_position_toc
     * @constructor
     * @param {Iremove_one_position_toc=} [properties] Properties to set
     */
    function remove_one_position_toc(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * remove_one_position_toc position.
     * @member {number} position
     * @memberof remove_one_position_toc
     * @instance
     */
    remove_one_position_toc.prototype.position = 0;

    /**
     * Creates a new remove_one_position_toc instance using the specified properties.
     * @function create
     * @memberof remove_one_position_toc
     * @static
     * @param {Iremove_one_position_toc=} [properties] Properties to set
     * @returns {remove_one_position_toc} remove_one_position_toc instance
     */
    remove_one_position_toc.create = function create(properties) {
        return new remove_one_position_toc(properties);
    };

    /**
     * Encodes the specified remove_one_position_toc message. Does not implicitly {@link remove_one_position_toc.verify|verify} messages.
     * @function encode
     * @memberof remove_one_position_toc
     * @static
     * @param {Iremove_one_position_toc} message remove_one_position_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    remove_one_position_toc.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.position != null && Object.hasOwnProperty.call(message, "position"))
            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.position);
        return writer;
    };

    /**
     * Encodes the specified remove_one_position_toc message, length delimited. Does not implicitly {@link remove_one_position_toc.verify|verify} messages.
     * @function encodeDelimited
     * @memberof remove_one_position_toc
     * @static
     * @param {Iremove_one_position_toc} message remove_one_position_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    remove_one_position_toc.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a remove_one_position_toc message from the specified reader or buffer.
     * @function decode
     * @memberof remove_one_position_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {remove_one_position_toc} remove_one_position_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    remove_one_position_toc.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.remove_one_position_toc();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.position = reader.uint32();
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a remove_one_position_toc message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof remove_one_position_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {remove_one_position_toc} remove_one_position_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    remove_one_position_toc.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a remove_one_position_toc message.
     * @function verify
     * @memberof remove_one_position_toc
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    remove_one_position_toc.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.position != null && message.hasOwnProperty("position"))
            if (!$util.isInteger(message.position))
                return "position: integer expected";
        return null;
    };

    /**
     * Creates a remove_one_position_toc message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof remove_one_position_toc
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {remove_one_position_toc} remove_one_position_toc
     */
    remove_one_position_toc.fromObject = function fromObject(object) {
        if (object instanceof $root.remove_one_position_toc)
            return object;
        var message = new $root.remove_one_position_toc();
        if (object.position != null)
            message.position = object.position >>> 0;
        return message;
    };

    /**
     * Creates a plain object from a remove_one_position_toc message. Also converts values to other types if specified.
     * @function toObject
     * @memberof remove_one_position_toc
     * @static
     * @param {remove_one_position_toc} message remove_one_position_toc
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    remove_one_position_toc.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults)
            object.position = 0;
        if (message.position != null && message.hasOwnProperty("position"))
            object.position = message.position;
        return object;
    };

    /**
     * Converts this remove_one_position_toc to JSON.
     * @function toJSON
     * @memberof remove_one_position_toc
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    remove_one_position_toc.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for remove_one_position_toc
     * @function getTypeUrl
     * @memberof remove_one_position_toc
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    remove_one_position_toc.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/remove_one_position_toc";
    };

    return remove_one_position_toc;
})();

$root.display_record_tos = (function() {

    /**
     * Properties of a display_record_tos.
     * @exports Idisplay_record_tos
     * @interface Idisplay_record_tos
     * @property {number|null} [version] display_record_tos version
     * @property {string|null} [recordId] display_record_tos recordId
     */

    /**
     * Constructs a new display_record_tos.
     * @exports display_record_tos
     * @classdesc Represents a display_record_tos.
     * @implements Idisplay_record_tos
     * @constructor
     * @param {Idisplay_record_tos=} [properties] Properties to set
     */
    function display_record_tos(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * display_record_tos version.
     * @member {number} version
     * @memberof display_record_tos
     * @instance
     */
    display_record_tos.prototype.version = 0;

    /**
     * display_record_tos recordId.
     * @member {string} recordId
     * @memberof display_record_tos
     * @instance
     */
    display_record_tos.prototype.recordId = "";

    /**
     * Creates a new display_record_tos instance using the specified properties.
     * @function create
     * @memberof display_record_tos
     * @static
     * @param {Idisplay_record_tos=} [properties] Properties to set
     * @returns {display_record_tos} display_record_tos instance
     */
    display_record_tos.create = function create(properties) {
        return new display_record_tos(properties);
    };

    /**
     * Encodes the specified display_record_tos message. Does not implicitly {@link display_record_tos.verify|verify} messages.
     * @function encode
     * @memberof display_record_tos
     * @static
     * @param {Idisplay_record_tos} message display_record_tos message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    display_record_tos.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.version != null && Object.hasOwnProperty.call(message, "version"))
            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.version);
        if (message.recordId != null && Object.hasOwnProperty.call(message, "recordId"))
            writer.uint32(/* id 2, wireType 2 =*/18).string(message.recordId);
        return writer;
    };

    /**
     * Encodes the specified display_record_tos message, length delimited. Does not implicitly {@link display_record_tos.verify|verify} messages.
     * @function encodeDelimited
     * @memberof display_record_tos
     * @static
     * @param {Idisplay_record_tos} message display_record_tos message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    display_record_tos.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a display_record_tos message from the specified reader or buffer.
     * @function decode
     * @memberof display_record_tos
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {display_record_tos} display_record_tos
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    display_record_tos.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.display_record_tos();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.version = reader.uint32();
                    break;
                }
            case 2: {
                    message.recordId = reader.string();
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a display_record_tos message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof display_record_tos
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {display_record_tos} display_record_tos
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    display_record_tos.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a display_record_tos message.
     * @function verify
     * @memberof display_record_tos
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    display_record_tos.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.version != null && message.hasOwnProperty("version"))
            if (!$util.isInteger(message.version))
                return "version: integer expected";
        if (message.recordId != null && message.hasOwnProperty("recordId"))
            if (!$util.isString(message.recordId))
                return "recordId: string expected";
        return null;
    };

    /**
     * Creates a display_record_tos message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof display_record_tos
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {display_record_tos} display_record_tos
     */
    display_record_tos.fromObject = function fromObject(object) {
        if (object instanceof $root.display_record_tos)
            return object;
        var message = new $root.display_record_tos();
        if (object.version != null)
            message.version = object.version >>> 0;
        if (object.recordId != null)
            message.recordId = String(object.recordId);
        return message;
    };

    /**
     * Creates a plain object from a display_record_tos message. Also converts values to other types if specified.
     * @function toObject
     * @memberof display_record_tos
     * @static
     * @param {display_record_tos} message display_record_tos
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    display_record_tos.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults) {
            object.version = 0;
            object.recordId = "";
        }
        if (message.version != null && message.hasOwnProperty("version"))
            object.version = message.version;
        if (message.recordId != null && message.hasOwnProperty("recordId"))
            object.recordId = message.recordId;
        return object;
    };

    /**
     * Converts this display_record_tos to JSON.
     * @function toJSON
     * @memberof display_record_tos
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    display_record_tos.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for display_record_tos
     * @function getTypeUrl
     * @memberof display_record_tos
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    display_record_tos.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/display_record_tos";
    };

    return display_record_tos;
})();

$root.display_record_end_toc = (function() {

    /**
     * Properties of a display_record_end_toc.
     * @exports Idisplay_record_end_toc
     * @interface Idisplay_record_end_toc
     */

    /**
     * Constructs a new display_record_end_toc.
     * @exports display_record_end_toc
     * @classdesc Represents a display_record_end_toc.
     * @implements Idisplay_record_end_toc
     * @constructor
     * @param {Idisplay_record_end_toc=} [properties] Properties to set
     */
    function display_record_end_toc(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * Creates a new display_record_end_toc instance using the specified properties.
     * @function create
     * @memberof display_record_end_toc
     * @static
     * @param {Idisplay_record_end_toc=} [properties] Properties to set
     * @returns {display_record_end_toc} display_record_end_toc instance
     */
    display_record_end_toc.create = function create(properties) {
        return new display_record_end_toc(properties);
    };

    /**
     * Encodes the specified display_record_end_toc message. Does not implicitly {@link display_record_end_toc.verify|verify} messages.
     * @function encode
     * @memberof display_record_end_toc
     * @static
     * @param {Idisplay_record_end_toc} message display_record_end_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    display_record_end_toc.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        return writer;
    };

    /**
     * Encodes the specified display_record_end_toc message, length delimited. Does not implicitly {@link display_record_end_toc.verify|verify} messages.
     * @function encodeDelimited
     * @memberof display_record_end_toc
     * @static
     * @param {Idisplay_record_end_toc} message display_record_end_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    display_record_end_toc.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a display_record_end_toc message from the specified reader or buffer.
     * @function decode
     * @memberof display_record_end_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {display_record_end_toc} display_record_end_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    display_record_end_toc.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.display_record_end_toc();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a display_record_end_toc message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof display_record_end_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {display_record_end_toc} display_record_end_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    display_record_end_toc.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a display_record_end_toc message.
     * @function verify
     * @memberof display_record_end_toc
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    display_record_end_toc.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        return null;
    };

    /**
     * Creates a display_record_end_toc message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof display_record_end_toc
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {display_record_end_toc} display_record_end_toc
     */
    display_record_end_toc.fromObject = function fromObject(object) {
        if (object instanceof $root.display_record_end_toc)
            return object;
        return new $root.display_record_end_toc();
    };

    /**
     * Creates a plain object from a display_record_end_toc message. Also converts values to other types if specified.
     * @function toObject
     * @memberof display_record_end_toc
     * @static
     * @param {display_record_end_toc} message display_record_end_toc
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    display_record_end_toc.toObject = function toObject() {
        return {};
    };

    /**
     * Converts this display_record_end_toc to JSON.
     * @function toJSON
     * @memberof display_record_end_toc
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    display_record_end_toc.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for display_record_end_toc
     * @function getTypeUrl
     * @memberof display_record_end_toc
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    display_record_end_toc.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/display_record_end_toc";
    };

    return display_record_end_toc;
})();

$root.save_record_success_toc = (function() {

    /**
     * Properties of a save_record_success_toc.
     * @exports Isave_record_success_toc
     * @interface Isave_record_success_toc
     * @property {string|null} [recordId] save_record_success_toc recordId
     */

    /**
     * Constructs a new save_record_success_toc.
     * @exports save_record_success_toc
     * @classdesc Represents a save_record_success_toc.
     * @implements Isave_record_success_toc
     * @constructor
     * @param {Isave_record_success_toc=} [properties] Properties to set
     */
    function save_record_success_toc(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * save_record_success_toc recordId.
     * @member {string} recordId
     * @memberof save_record_success_toc
     * @instance
     */
    save_record_success_toc.prototype.recordId = "";

    /**
     * Creates a new save_record_success_toc instance using the specified properties.
     * @function create
     * @memberof save_record_success_toc
     * @static
     * @param {Isave_record_success_toc=} [properties] Properties to set
     * @returns {save_record_success_toc} save_record_success_toc instance
     */
    save_record_success_toc.create = function create(properties) {
        return new save_record_success_toc(properties);
    };

    /**
     * Encodes the specified save_record_success_toc message. Does not implicitly {@link save_record_success_toc.verify|verify} messages.
     * @function encode
     * @memberof save_record_success_toc
     * @static
     * @param {Isave_record_success_toc} message save_record_success_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    save_record_success_toc.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.recordId != null && Object.hasOwnProperty.call(message, "recordId"))
            writer.uint32(/* id 1, wireType 2 =*/10).string(message.recordId);
        return writer;
    };

    /**
     * Encodes the specified save_record_success_toc message, length delimited. Does not implicitly {@link save_record_success_toc.verify|verify} messages.
     * @function encodeDelimited
     * @memberof save_record_success_toc
     * @static
     * @param {Isave_record_success_toc} message save_record_success_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    save_record_success_toc.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a save_record_success_toc message from the specified reader or buffer.
     * @function decode
     * @memberof save_record_success_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {save_record_success_toc} save_record_success_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    save_record_success_toc.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.save_record_success_toc();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.recordId = reader.string();
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a save_record_success_toc message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof save_record_success_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {save_record_success_toc} save_record_success_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    save_record_success_toc.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a save_record_success_toc message.
     * @function verify
     * @memberof save_record_success_toc
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    save_record_success_toc.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.recordId != null && message.hasOwnProperty("recordId"))
            if (!$util.isString(message.recordId))
                return "recordId: string expected";
        return null;
    };

    /**
     * Creates a save_record_success_toc message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof save_record_success_toc
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {save_record_success_toc} save_record_success_toc
     */
    save_record_success_toc.fromObject = function fromObject(object) {
        if (object instanceof $root.save_record_success_toc)
            return object;
        var message = new $root.save_record_success_toc();
        if (object.recordId != null)
            message.recordId = String(object.recordId);
        return message;
    };

    /**
     * Creates a plain object from a save_record_success_toc message. Also converts values to other types if specified.
     * @function toObject
     * @memberof save_record_success_toc
     * @static
     * @param {save_record_success_toc} message save_record_success_toc
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    save_record_success_toc.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults)
            object.recordId = "";
        if (message.recordId != null && message.hasOwnProperty("recordId"))
            object.recordId = message.recordId;
        return object;
    };

    /**
     * Converts this save_record_success_toc to JSON.
     * @function toJSON
     * @memberof save_record_success_toc
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    save_record_success_toc.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for save_record_success_toc
     * @function getTypeUrl
     * @memberof save_record_success_toc
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    save_record_success_toc.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/save_record_success_toc";
    };

    return save_record_success_toc;
})();

$root.join_room_tos = (function() {

    /**
     * Properties of a join_room_tos.
     * @exports Ijoin_room_tos
     * @interface Ijoin_room_tos
     * @property {number|null} [version] join_room_tos version
     * @property {string|null} [name] join_room_tos name
     * @property {string|null} [device] join_room_tos device
     * @property {string|null} [password] join_room_tos password
     */

    /**
     * Constructs a new join_room_tos.
     * @exports join_room_tos
     * @classdesc Represents a join_room_tos.
     * @implements Ijoin_room_tos
     * @constructor
     * @param {Ijoin_room_tos=} [properties] Properties to set
     */
    function join_room_tos(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * join_room_tos version.
     * @member {number} version
     * @memberof join_room_tos
     * @instance
     */
    join_room_tos.prototype.version = 0;

    /**
     * join_room_tos name.
     * @member {string} name
     * @memberof join_room_tos
     * @instance
     */
    join_room_tos.prototype.name = "";

    /**
     * join_room_tos device.
     * @member {string} device
     * @memberof join_room_tos
     * @instance
     */
    join_room_tos.prototype.device = "";

    /**
     * join_room_tos password.
     * @member {string} password
     * @memberof join_room_tos
     * @instance
     */
    join_room_tos.prototype.password = "";

    /**
     * Creates a new join_room_tos instance using the specified properties.
     * @function create
     * @memberof join_room_tos
     * @static
     * @param {Ijoin_room_tos=} [properties] Properties to set
     * @returns {join_room_tos} join_room_tos instance
     */
    join_room_tos.create = function create(properties) {
        return new join_room_tos(properties);
    };

    /**
     * Encodes the specified join_room_tos message. Does not implicitly {@link join_room_tos.verify|verify} messages.
     * @function encode
     * @memberof join_room_tos
     * @static
     * @param {Ijoin_room_tos} message join_room_tos message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    join_room_tos.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.version != null && Object.hasOwnProperty.call(message, "version"))
            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.version);
        if (message.name != null && Object.hasOwnProperty.call(message, "name"))
            writer.uint32(/* id 2, wireType 2 =*/18).string(message.name);
        if (message.device != null && Object.hasOwnProperty.call(message, "device"))
            writer.uint32(/* id 3, wireType 2 =*/26).string(message.device);
        if (message.password != null && Object.hasOwnProperty.call(message, "password"))
            writer.uint32(/* id 4, wireType 2 =*/34).string(message.password);
        return writer;
    };

    /**
     * Encodes the specified join_room_tos message, length delimited. Does not implicitly {@link join_room_tos.verify|verify} messages.
     * @function encodeDelimited
     * @memberof join_room_tos
     * @static
     * @param {Ijoin_room_tos} message join_room_tos message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    join_room_tos.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a join_room_tos message from the specified reader or buffer.
     * @function decode
     * @memberof join_room_tos
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {join_room_tos} join_room_tos
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    join_room_tos.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.join_room_tos();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.version = reader.uint32();
                    break;
                }
            case 2: {
                    message.name = reader.string();
                    break;
                }
            case 3: {
                    message.device = reader.string();
                    break;
                }
            case 4: {
                    message.password = reader.string();
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a join_room_tos message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof join_room_tos
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {join_room_tos} join_room_tos
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    join_room_tos.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a join_room_tos message.
     * @function verify
     * @memberof join_room_tos
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    join_room_tos.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.version != null && message.hasOwnProperty("version"))
            if (!$util.isInteger(message.version))
                return "version: integer expected";
        if (message.name != null && message.hasOwnProperty("name"))
            if (!$util.isString(message.name))
                return "name: string expected";
        if (message.device != null && message.hasOwnProperty("device"))
            if (!$util.isString(message.device))
                return "device: string expected";
        if (message.password != null && message.hasOwnProperty("password"))
            if (!$util.isString(message.password))
                return "password: string expected";
        return null;
    };

    /**
     * Creates a join_room_tos message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof join_room_tos
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {join_room_tos} join_room_tos
     */
    join_room_tos.fromObject = function fromObject(object) {
        if (object instanceof $root.join_room_tos)
            return object;
        var message = new $root.join_room_tos();
        if (object.version != null)
            message.version = object.version >>> 0;
        if (object.name != null)
            message.name = String(object.name);
        if (object.device != null)
            message.device = String(object.device);
        if (object.password != null)
            message.password = String(object.password);
        return message;
    };

    /**
     * Creates a plain object from a join_room_tos message. Also converts values to other types if specified.
     * @function toObject
     * @memberof join_room_tos
     * @static
     * @param {join_room_tos} message join_room_tos
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    join_room_tos.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults) {
            object.version = 0;
            object.name = "";
            object.device = "";
            object.password = "";
        }
        if (message.version != null && message.hasOwnProperty("version"))
            object.version = message.version;
        if (message.name != null && message.hasOwnProperty("name"))
            object.name = message.name;
        if (message.device != null && message.hasOwnProperty("device"))
            object.device = message.device;
        if (message.password != null && message.hasOwnProperty("password"))
            object.password = message.password;
        return object;
    };

    /**
     * Converts this join_room_tos to JSON.
     * @function toJSON
     * @memberof join_room_tos
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    join_room_tos.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for join_room_tos
     * @function getTypeUrl
     * @memberof join_room_tos
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    join_room_tos.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/join_room_tos";
    };

    return join_room_tos;
})();

$root.get_room_info_toc = (function() {

    /**
     * Properties of a get_room_info_toc.
     * @exports Iget_room_info_toc
     * @interface Iget_room_info_toc
     * @property {Array.<string>|null} [names] get_room_info_toc names
     * @property {number|null} [myPosition] get_room_info_toc myPosition
     * @property {number|null} [onlineCount] get_room_info_toc onlineCount
     * @property {Array.<number>|null} [winCounts] get_room_info_toc winCounts
     */

    /**
     * Constructs a new get_room_info_toc.
     * @exports get_room_info_toc
     * @classdesc Represents a get_room_info_toc.
     * @implements Iget_room_info_toc
     * @constructor
     * @param {Iget_room_info_toc=} [properties] Properties to set
     */
    function get_room_info_toc(properties) {
        this.names = [];
        this.winCounts = [];
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * get_room_info_toc names.
     * @member {Array.<string>} names
     * @memberof get_room_info_toc
     * @instance
     */
    get_room_info_toc.prototype.names = $util.emptyArray;

    /**
     * get_room_info_toc myPosition.
     * @member {number} myPosition
     * @memberof get_room_info_toc
     * @instance
     */
    get_room_info_toc.prototype.myPosition = 0;

    /**
     * get_room_info_toc onlineCount.
     * @member {number} onlineCount
     * @memberof get_room_info_toc
     * @instance
     */
    get_room_info_toc.prototype.onlineCount = 0;

    /**
     * get_room_info_toc winCounts.
     * @member {Array.<number>} winCounts
     * @memberof get_room_info_toc
     * @instance
     */
    get_room_info_toc.prototype.winCounts = $util.emptyArray;

    /**
     * Creates a new get_room_info_toc instance using the specified properties.
     * @function create
     * @memberof get_room_info_toc
     * @static
     * @param {Iget_room_info_toc=} [properties] Properties to set
     * @returns {get_room_info_toc} get_room_info_toc instance
     */
    get_room_info_toc.create = function create(properties) {
        return new get_room_info_toc(properties);
    };

    /**
     * Encodes the specified get_room_info_toc message. Does not implicitly {@link get_room_info_toc.verify|verify} messages.
     * @function encode
     * @memberof get_room_info_toc
     * @static
     * @param {Iget_room_info_toc} message get_room_info_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    get_room_info_toc.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.names != null && message.names.length)
            for (var i = 0; i < message.names.length; ++i)
                writer.uint32(/* id 1, wireType 2 =*/10).string(message.names[i]);
        if (message.myPosition != null && Object.hasOwnProperty.call(message, "myPosition"))
            writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.myPosition);
        if (message.onlineCount != null && Object.hasOwnProperty.call(message, "onlineCount"))
            writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.onlineCount);
        if (message.winCounts != null && message.winCounts.length) {
            writer.uint32(/* id 4, wireType 2 =*/34).fork();
            for (var i = 0; i < message.winCounts.length; ++i)
                writer.uint32(message.winCounts[i]);
            writer.ldelim();
        }
        return writer;
    };

    /**
     * Encodes the specified get_room_info_toc message, length delimited. Does not implicitly {@link get_room_info_toc.verify|verify} messages.
     * @function encodeDelimited
     * @memberof get_room_info_toc
     * @static
     * @param {Iget_room_info_toc} message get_room_info_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    get_room_info_toc.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a get_room_info_toc message from the specified reader or buffer.
     * @function decode
     * @memberof get_room_info_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {get_room_info_toc} get_room_info_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    get_room_info_toc.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.get_room_info_toc();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    if (!(message.names && message.names.length))
                        message.names = [];
                    message.names.push(reader.string());
                    break;
                }
            case 2: {
                    message.myPosition = reader.uint32();
                    break;
                }
            case 3: {
                    message.onlineCount = reader.uint32();
                    break;
                }
            case 4: {
                    if (!(message.winCounts && message.winCounts.length))
                        message.winCounts = [];
                    if ((tag & 7) === 2) {
                        var end2 = reader.uint32() + reader.pos;
                        while (reader.pos < end2)
                            message.winCounts.push(reader.uint32());
                    } else
                        message.winCounts.push(reader.uint32());
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a get_room_info_toc message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof get_room_info_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {get_room_info_toc} get_room_info_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    get_room_info_toc.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a get_room_info_toc message.
     * @function verify
     * @memberof get_room_info_toc
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    get_room_info_toc.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.names != null && message.hasOwnProperty("names")) {
            if (!Array.isArray(message.names))
                return "names: array expected";
            for (var i = 0; i < message.names.length; ++i)
                if (!$util.isString(message.names[i]))
                    return "names: string[] expected";
        }
        if (message.myPosition != null && message.hasOwnProperty("myPosition"))
            if (!$util.isInteger(message.myPosition))
                return "myPosition: integer expected";
        if (message.onlineCount != null && message.hasOwnProperty("onlineCount"))
            if (!$util.isInteger(message.onlineCount))
                return "onlineCount: integer expected";
        if (message.winCounts != null && message.hasOwnProperty("winCounts")) {
            if (!Array.isArray(message.winCounts))
                return "winCounts: array expected";
            for (var i = 0; i < message.winCounts.length; ++i)
                if (!$util.isInteger(message.winCounts[i]))
                    return "winCounts: integer[] expected";
        }
        return null;
    };

    /**
     * Creates a get_room_info_toc message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof get_room_info_toc
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {get_room_info_toc} get_room_info_toc
     */
    get_room_info_toc.fromObject = function fromObject(object) {
        if (object instanceof $root.get_room_info_toc)
            return object;
        var message = new $root.get_room_info_toc();
        if (object.names) {
            if (!Array.isArray(object.names))
                throw TypeError(".get_room_info_toc.names: array expected");
            message.names = [];
            for (var i = 0; i < object.names.length; ++i)
                message.names[i] = String(object.names[i]);
        }
        if (object.myPosition != null)
            message.myPosition = object.myPosition >>> 0;
        if (object.onlineCount != null)
            message.onlineCount = object.onlineCount >>> 0;
        if (object.winCounts) {
            if (!Array.isArray(object.winCounts))
                throw TypeError(".get_room_info_toc.winCounts: array expected");
            message.winCounts = [];
            for (var i = 0; i < object.winCounts.length; ++i)
                message.winCounts[i] = object.winCounts[i] >>> 0;
        }
        return message;
    };

    /**
     * Creates a plain object from a get_room_info_toc message. Also converts values to other types if specified.
     * @function toObject
     * @memberof get_room_info_toc
     * @static
     * @param {get_room_info_toc} message get_room_info_toc
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    get_room_info_toc.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.arrays || options.defaults) {
            object.names = [];
            object.winCounts = [];
        }
        if (options.defaults) {
            object.myPosition = 0;
            object.onlineCount = 0;
        }
        if (message.names && message.names.length) {
            object.names = [];
            for (var j = 0; j < message.names.length; ++j)
                object.names[j] = message.names[j];
        }
        if (message.myPosition != null && message.hasOwnProperty("myPosition"))
            object.myPosition = message.myPosition;
        if (message.onlineCount != null && message.hasOwnProperty("onlineCount"))
            object.onlineCount = message.onlineCount;
        if (message.winCounts && message.winCounts.length) {
            object.winCounts = [];
            for (var j = 0; j < message.winCounts.length; ++j)
                object.winCounts[j] = message.winCounts[j];
        }
        return object;
    };

    /**
     * Converts this get_room_info_toc to JSON.
     * @function toJSON
     * @memberof get_room_info_toc
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    get_room_info_toc.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for get_room_info_toc
     * @function getTypeUrl
     * @memberof get_room_info_toc
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    get_room_info_toc.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/get_room_info_toc";
    };

    return get_room_info_toc;
})();

$root.add_robot_tos = (function() {

    /**
     * Properties of an add_robot_tos.
     * @exports Iadd_robot_tos
     * @interface Iadd_robot_tos
     */

    /**
     * Constructs a new add_robot_tos.
     * @exports add_robot_tos
     * @classdesc Represents an add_robot_tos.
     * @implements Iadd_robot_tos
     * @constructor
     * @param {Iadd_robot_tos=} [properties] Properties to set
     */
    function add_robot_tos(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * Creates a new add_robot_tos instance using the specified properties.
     * @function create
     * @memberof add_robot_tos
     * @static
     * @param {Iadd_robot_tos=} [properties] Properties to set
     * @returns {add_robot_tos} add_robot_tos instance
     */
    add_robot_tos.create = function create(properties) {
        return new add_robot_tos(properties);
    };

    /**
     * Encodes the specified add_robot_tos message. Does not implicitly {@link add_robot_tos.verify|verify} messages.
     * @function encode
     * @memberof add_robot_tos
     * @static
     * @param {Iadd_robot_tos} message add_robot_tos message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    add_robot_tos.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        return writer;
    };

    /**
     * Encodes the specified add_robot_tos message, length delimited. Does not implicitly {@link add_robot_tos.verify|verify} messages.
     * @function encodeDelimited
     * @memberof add_robot_tos
     * @static
     * @param {Iadd_robot_tos} message add_robot_tos message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    add_robot_tos.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes an add_robot_tos message from the specified reader or buffer.
     * @function decode
     * @memberof add_robot_tos
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {add_robot_tos} add_robot_tos
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    add_robot_tos.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.add_robot_tos();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes an add_robot_tos message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof add_robot_tos
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {add_robot_tos} add_robot_tos
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    add_robot_tos.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies an add_robot_tos message.
     * @function verify
     * @memberof add_robot_tos
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    add_robot_tos.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        return null;
    };

    /**
     * Creates an add_robot_tos message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof add_robot_tos
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {add_robot_tos} add_robot_tos
     */
    add_robot_tos.fromObject = function fromObject(object) {
        if (object instanceof $root.add_robot_tos)
            return object;
        return new $root.add_robot_tos();
    };

    /**
     * Creates a plain object from an add_robot_tos message. Also converts values to other types if specified.
     * @function toObject
     * @memberof add_robot_tos
     * @static
     * @param {add_robot_tos} message add_robot_tos
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    add_robot_tos.toObject = function toObject() {
        return {};
    };

    /**
     * Converts this add_robot_tos to JSON.
     * @function toJSON
     * @memberof add_robot_tos
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    add_robot_tos.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for add_robot_tos
     * @function getTypeUrl
     * @memberof add_robot_tos
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    add_robot_tos.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/add_robot_tos";
    };

    return add_robot_tos;
})();

$root.remove_robot_tos = (function() {

    /**
     * Properties of a remove_robot_tos.
     * @exports Iremove_robot_tos
     * @interface Iremove_robot_tos
     */

    /**
     * Constructs a new remove_robot_tos.
     * @exports remove_robot_tos
     * @classdesc Represents a remove_robot_tos.
     * @implements Iremove_robot_tos
     * @constructor
     * @param {Iremove_robot_tos=} [properties] Properties to set
     */
    function remove_robot_tos(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * Creates a new remove_robot_tos instance using the specified properties.
     * @function create
     * @memberof remove_robot_tos
     * @static
     * @param {Iremove_robot_tos=} [properties] Properties to set
     * @returns {remove_robot_tos} remove_robot_tos instance
     */
    remove_robot_tos.create = function create(properties) {
        return new remove_robot_tos(properties);
    };

    /**
     * Encodes the specified remove_robot_tos message. Does not implicitly {@link remove_robot_tos.verify|verify} messages.
     * @function encode
     * @memberof remove_robot_tos
     * @static
     * @param {Iremove_robot_tos} message remove_robot_tos message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    remove_robot_tos.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        return writer;
    };

    /**
     * Encodes the specified remove_robot_tos message, length delimited. Does not implicitly {@link remove_robot_tos.verify|verify} messages.
     * @function encodeDelimited
     * @memberof remove_robot_tos
     * @static
     * @param {Iremove_robot_tos} message remove_robot_tos message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    remove_robot_tos.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a remove_robot_tos message from the specified reader or buffer.
     * @function decode
     * @memberof remove_robot_tos
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {remove_robot_tos} remove_robot_tos
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    remove_robot_tos.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.remove_robot_tos();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a remove_robot_tos message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof remove_robot_tos
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {remove_robot_tos} remove_robot_tos
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    remove_robot_tos.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a remove_robot_tos message.
     * @function verify
     * @memberof remove_robot_tos
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    remove_robot_tos.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        return null;
    };

    /**
     * Creates a remove_robot_tos message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof remove_robot_tos
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {remove_robot_tos} remove_robot_tos
     */
    remove_robot_tos.fromObject = function fromObject(object) {
        if (object instanceof $root.remove_robot_tos)
            return object;
        return new $root.remove_robot_tos();
    };

    /**
     * Creates a plain object from a remove_robot_tos message. Also converts values to other types if specified.
     * @function toObject
     * @memberof remove_robot_tos
     * @static
     * @param {remove_robot_tos} message remove_robot_tos
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    remove_robot_tos.toObject = function toObject() {
        return {};
    };

    /**
     * Converts this remove_robot_tos to JSON.
     * @function toJSON
     * @memberof remove_robot_tos
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    remove_robot_tos.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for remove_robot_tos
     * @function getTypeUrl
     * @memberof remove_robot_tos
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    remove_robot_tos.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/remove_robot_tos";
    };

    return remove_robot_tos;
})();

$root.join_room_toc = (function() {

    /**
     * Properties of a join_room_toc.
     * @exports Ijoin_room_toc
     * @interface Ijoin_room_toc
     * @property {string|null} [name] join_room_toc name
     * @property {number|null} [position] join_room_toc position
     * @property {number|null} [winCount] join_room_toc winCount
     * @property {number|null} [gameCount] join_room_toc gameCount
     */

    /**
     * Constructs a new join_room_toc.
     * @exports join_room_toc
     * @classdesc Represents a join_room_toc.
     * @implements Ijoin_room_toc
     * @constructor
     * @param {Ijoin_room_toc=} [properties] Properties to set
     */
    function join_room_toc(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * join_room_toc name.
     * @member {string} name
     * @memberof join_room_toc
     * @instance
     */
    join_room_toc.prototype.name = "";

    /**
     * join_room_toc position.
     * @member {number} position
     * @memberof join_room_toc
     * @instance
     */
    join_room_toc.prototype.position = 0;

    /**
     * join_room_toc winCount.
     * @member {number} winCount
     * @memberof join_room_toc
     * @instance
     */
    join_room_toc.prototype.winCount = 0;

    /**
     * join_room_toc gameCount.
     * @member {number} gameCount
     * @memberof join_room_toc
     * @instance
     */
    join_room_toc.prototype.gameCount = 0;

    /**
     * Creates a new join_room_toc instance using the specified properties.
     * @function create
     * @memberof join_room_toc
     * @static
     * @param {Ijoin_room_toc=} [properties] Properties to set
     * @returns {join_room_toc} join_room_toc instance
     */
    join_room_toc.create = function create(properties) {
        return new join_room_toc(properties);
    };

    /**
     * Encodes the specified join_room_toc message. Does not implicitly {@link join_room_toc.verify|verify} messages.
     * @function encode
     * @memberof join_room_toc
     * @static
     * @param {Ijoin_room_toc} message join_room_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    join_room_toc.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.name != null && Object.hasOwnProperty.call(message, "name"))
            writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
        if (message.position != null && Object.hasOwnProperty.call(message, "position"))
            writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.position);
        if (message.winCount != null && Object.hasOwnProperty.call(message, "winCount"))
            writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.winCount);
        if (message.gameCount != null && Object.hasOwnProperty.call(message, "gameCount"))
            writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.gameCount);
        return writer;
    };

    /**
     * Encodes the specified join_room_toc message, length delimited. Does not implicitly {@link join_room_toc.verify|verify} messages.
     * @function encodeDelimited
     * @memberof join_room_toc
     * @static
     * @param {Ijoin_room_toc} message join_room_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    join_room_toc.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a join_room_toc message from the specified reader or buffer.
     * @function decode
     * @memberof join_room_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {join_room_toc} join_room_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    join_room_toc.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.join_room_toc();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.name = reader.string();
                    break;
                }
            case 2: {
                    message.position = reader.uint32();
                    break;
                }
            case 3: {
                    message.winCount = reader.uint32();
                    break;
                }
            case 4: {
                    message.gameCount = reader.uint32();
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a join_room_toc message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof join_room_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {join_room_toc} join_room_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    join_room_toc.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a join_room_toc message.
     * @function verify
     * @memberof join_room_toc
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    join_room_toc.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.name != null && message.hasOwnProperty("name"))
            if (!$util.isString(message.name))
                return "name: string expected";
        if (message.position != null && message.hasOwnProperty("position"))
            if (!$util.isInteger(message.position))
                return "position: integer expected";
        if (message.winCount != null && message.hasOwnProperty("winCount"))
            if (!$util.isInteger(message.winCount))
                return "winCount: integer expected";
        if (message.gameCount != null && message.hasOwnProperty("gameCount"))
            if (!$util.isInteger(message.gameCount))
                return "gameCount: integer expected";
        return null;
    };

    /**
     * Creates a join_room_toc message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof join_room_toc
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {join_room_toc} join_room_toc
     */
    join_room_toc.fromObject = function fromObject(object) {
        if (object instanceof $root.join_room_toc)
            return object;
        var message = new $root.join_room_toc();
        if (object.name != null)
            message.name = String(object.name);
        if (object.position != null)
            message.position = object.position >>> 0;
        if (object.winCount != null)
            message.winCount = object.winCount >>> 0;
        if (object.gameCount != null)
            message.gameCount = object.gameCount >>> 0;
        return message;
    };

    /**
     * Creates a plain object from a join_room_toc message. Also converts values to other types if specified.
     * @function toObject
     * @memberof join_room_toc
     * @static
     * @param {join_room_toc} message join_room_toc
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    join_room_toc.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults) {
            object.name = "";
            object.position = 0;
            object.winCount = 0;
            object.gameCount = 0;
        }
        if (message.name != null && message.hasOwnProperty("name"))
            object.name = message.name;
        if (message.position != null && message.hasOwnProperty("position"))
            object.position = message.position;
        if (message.winCount != null && message.hasOwnProperty("winCount"))
            object.winCount = message.winCount;
        if (message.gameCount != null && message.hasOwnProperty("gameCount"))
            object.gameCount = message.gameCount;
        return object;
    };

    /**
     * Converts this join_room_toc to JSON.
     * @function toJSON
     * @memberof join_room_toc
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    join_room_toc.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for join_room_toc
     * @function getTypeUrl
     * @memberof join_room_toc
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    join_room_toc.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/join_room_toc";
    };

    return join_room_toc;
})();

$root.leave_room_toc = (function() {

    /**
     * Properties of a leave_room_toc.
     * @exports Ileave_room_toc
     * @interface Ileave_room_toc
     * @property {number|null} [position] leave_room_toc position
     */

    /**
     * Constructs a new leave_room_toc.
     * @exports leave_room_toc
     * @classdesc Represents a leave_room_toc.
     * @implements Ileave_room_toc
     * @constructor
     * @param {Ileave_room_toc=} [properties] Properties to set
     */
    function leave_room_toc(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * leave_room_toc position.
     * @member {number} position
     * @memberof leave_room_toc
     * @instance
     */
    leave_room_toc.prototype.position = 0;

    /**
     * Creates a new leave_room_toc instance using the specified properties.
     * @function create
     * @memberof leave_room_toc
     * @static
     * @param {Ileave_room_toc=} [properties] Properties to set
     * @returns {leave_room_toc} leave_room_toc instance
     */
    leave_room_toc.create = function create(properties) {
        return new leave_room_toc(properties);
    };

    /**
     * Encodes the specified leave_room_toc message. Does not implicitly {@link leave_room_toc.verify|verify} messages.
     * @function encode
     * @memberof leave_room_toc
     * @static
     * @param {Ileave_room_toc} message leave_room_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    leave_room_toc.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.position != null && Object.hasOwnProperty.call(message, "position"))
            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.position);
        return writer;
    };

    /**
     * Encodes the specified leave_room_toc message, length delimited. Does not implicitly {@link leave_room_toc.verify|verify} messages.
     * @function encodeDelimited
     * @memberof leave_room_toc
     * @static
     * @param {Ileave_room_toc} message leave_room_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    leave_room_toc.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a leave_room_toc message from the specified reader or buffer.
     * @function decode
     * @memberof leave_room_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {leave_room_toc} leave_room_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    leave_room_toc.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.leave_room_toc();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.position = reader.uint32();
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a leave_room_toc message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof leave_room_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {leave_room_toc} leave_room_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    leave_room_toc.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a leave_room_toc message.
     * @function verify
     * @memberof leave_room_toc
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    leave_room_toc.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.position != null && message.hasOwnProperty("position"))
            if (!$util.isInteger(message.position))
                return "position: integer expected";
        return null;
    };

    /**
     * Creates a leave_room_toc message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof leave_room_toc
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {leave_room_toc} leave_room_toc
     */
    leave_room_toc.fromObject = function fromObject(object) {
        if (object instanceof $root.leave_room_toc)
            return object;
        var message = new $root.leave_room_toc();
        if (object.position != null)
            message.position = object.position >>> 0;
        return message;
    };

    /**
     * Creates a plain object from a leave_room_toc message. Also converts values to other types if specified.
     * @function toObject
     * @memberof leave_room_toc
     * @static
     * @param {leave_room_toc} message leave_room_toc
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    leave_room_toc.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults)
            object.position = 0;
        if (message.position != null && message.hasOwnProperty("position"))
            object.position = message.position;
        return object;
    };

    /**
     * Converts this leave_room_toc to JSON.
     * @function toJSON
     * @memberof leave_room_toc
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    leave_room_toc.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for leave_room_toc
     * @function getTypeUrl
     * @memberof leave_room_toc
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    leave_room_toc.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/leave_room_toc";
    };

    return leave_room_toc;
})();

$root.wait_for_select_role_toc = (function() {

    /**
     * Properties of a wait_for_select_role_toc.
     * @exports Iwait_for_select_role_toc
     * @interface Iwait_for_select_role_toc
     * @property {number|null} [playerCount] wait_for_select_role_toc playerCount
     * @property {color|null} [identity] wait_for_select_role_toc identity
     * @property {secret_task|null} [secretTask] wait_for_select_role_toc secretTask
     * @property {Array.<role>|null} [roles] wait_for_select_role_toc roles
     * @property {number|null} [waitingSecond] wait_for_select_role_toc waitingSecond
     */

    /**
     * Constructs a new wait_for_select_role_toc.
     * @exports wait_for_select_role_toc
     * @classdesc Represents a wait_for_select_role_toc.
     * @implements Iwait_for_select_role_toc
     * @constructor
     * @param {Iwait_for_select_role_toc=} [properties] Properties to set
     */
    function wait_for_select_role_toc(properties) {
        this.roles = [];
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * wait_for_select_role_toc playerCount.
     * @member {number} playerCount
     * @memberof wait_for_select_role_toc
     * @instance
     */
    wait_for_select_role_toc.prototype.playerCount = 0;

    /**
     * wait_for_select_role_toc identity.
     * @member {color} identity
     * @memberof wait_for_select_role_toc
     * @instance
     */
    wait_for_select_role_toc.prototype.identity = 0;

    /**
     * wait_for_select_role_toc secretTask.
     * @member {secret_task} secretTask
     * @memberof wait_for_select_role_toc
     * @instance
     */
    wait_for_select_role_toc.prototype.secretTask = 0;

    /**
     * wait_for_select_role_toc roles.
     * @member {Array.<role>} roles
     * @memberof wait_for_select_role_toc
     * @instance
     */
    wait_for_select_role_toc.prototype.roles = $util.emptyArray;

    /**
     * wait_for_select_role_toc waitingSecond.
     * @member {number} waitingSecond
     * @memberof wait_for_select_role_toc
     * @instance
     */
    wait_for_select_role_toc.prototype.waitingSecond = 0;

    /**
     * Creates a new wait_for_select_role_toc instance using the specified properties.
     * @function create
     * @memberof wait_for_select_role_toc
     * @static
     * @param {Iwait_for_select_role_toc=} [properties] Properties to set
     * @returns {wait_for_select_role_toc} wait_for_select_role_toc instance
     */
    wait_for_select_role_toc.create = function create(properties) {
        return new wait_for_select_role_toc(properties);
    };

    /**
     * Encodes the specified wait_for_select_role_toc message. Does not implicitly {@link wait_for_select_role_toc.verify|verify} messages.
     * @function encode
     * @memberof wait_for_select_role_toc
     * @static
     * @param {Iwait_for_select_role_toc} message wait_for_select_role_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    wait_for_select_role_toc.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.playerCount != null && Object.hasOwnProperty.call(message, "playerCount"))
            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.playerCount);
        if (message.identity != null && Object.hasOwnProperty.call(message, "identity"))
            writer.uint32(/* id 2, wireType 0 =*/16).int32(message.identity);
        if (message.secretTask != null && Object.hasOwnProperty.call(message, "secretTask"))
            writer.uint32(/* id 3, wireType 0 =*/24).int32(message.secretTask);
        if (message.roles != null && message.roles.length) {
            writer.uint32(/* id 4, wireType 2 =*/34).fork();
            for (var i = 0; i < message.roles.length; ++i)
                writer.int32(message.roles[i]);
            writer.ldelim();
        }
        if (message.waitingSecond != null && Object.hasOwnProperty.call(message, "waitingSecond"))
            writer.uint32(/* id 5, wireType 0 =*/40).uint32(message.waitingSecond);
        return writer;
    };

    /**
     * Encodes the specified wait_for_select_role_toc message, length delimited. Does not implicitly {@link wait_for_select_role_toc.verify|verify} messages.
     * @function encodeDelimited
     * @memberof wait_for_select_role_toc
     * @static
     * @param {Iwait_for_select_role_toc} message wait_for_select_role_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    wait_for_select_role_toc.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a wait_for_select_role_toc message from the specified reader or buffer.
     * @function decode
     * @memberof wait_for_select_role_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {wait_for_select_role_toc} wait_for_select_role_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    wait_for_select_role_toc.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.wait_for_select_role_toc();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.playerCount = reader.uint32();
                    break;
                }
            case 2: {
                    message.identity = reader.int32();
                    break;
                }
            case 3: {
                    message.secretTask = reader.int32();
                    break;
                }
            case 4: {
                    if (!(message.roles && message.roles.length))
                        message.roles = [];
                    if ((tag & 7) === 2) {
                        var end2 = reader.uint32() + reader.pos;
                        while (reader.pos < end2)
                            message.roles.push(reader.int32());
                    } else
                        message.roles.push(reader.int32());
                    break;
                }
            case 5: {
                    message.waitingSecond = reader.uint32();
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a wait_for_select_role_toc message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof wait_for_select_role_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {wait_for_select_role_toc} wait_for_select_role_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    wait_for_select_role_toc.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a wait_for_select_role_toc message.
     * @function verify
     * @memberof wait_for_select_role_toc
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    wait_for_select_role_toc.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.playerCount != null && message.hasOwnProperty("playerCount"))
            if (!$util.isInteger(message.playerCount))
                return "playerCount: integer expected";
        if (message.identity != null && message.hasOwnProperty("identity"))
            switch (message.identity) {
            default:
                return "identity: enum value expected";
            case 0:
            case 1:
            case 2:
            case 3:
                break;
            }
        if (message.secretTask != null && message.hasOwnProperty("secretTask"))
            switch (message.secretTask) {
            default:
                return "secretTask: enum value expected";
            case 0:
            case 1:
            case 2:
            case 3:
            case 4:
                break;
            }
        if (message.roles != null && message.hasOwnProperty("roles")) {
            if (!Array.isArray(message.roles))
                return "roles: array expected";
            for (var i = 0; i < message.roles.length; ++i)
                switch (message.roles[i]) {
                default:
                    return "roles: enum value[] expected";
                case 0:
                case 1:
                case 2:
                case 3:
                case 4:
                case 5:
                case 6:
                case 7:
                case 8:
                case 9:
                case 10:
                case 11:
                case 12:
                case 13:
                case 14:
                case 15:
                case 16:
                case 17:
                case 18:
                case 19:
                case 20:
                case 21:
                case 22:
                case 23:
                case 24:
                case 25:
                case 26:
                case 27:
                case 28:
                case 29:
                case 30:
                case 1020:
                case 1028:
                    break;
                }
        }
        if (message.waitingSecond != null && message.hasOwnProperty("waitingSecond"))
            if (!$util.isInteger(message.waitingSecond))
                return "waitingSecond: integer expected";
        return null;
    };

    /**
     * Creates a wait_for_select_role_toc message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof wait_for_select_role_toc
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {wait_for_select_role_toc} wait_for_select_role_toc
     */
    wait_for_select_role_toc.fromObject = function fromObject(object) {
        if (object instanceof $root.wait_for_select_role_toc)
            return object;
        var message = new $root.wait_for_select_role_toc();
        if (object.playerCount != null)
            message.playerCount = object.playerCount >>> 0;
        switch (object.identity) {
        default:
            if (typeof object.identity === "number") {
                message.identity = object.identity;
                break;
            }
            break;
        case "Black":
        case 0:
            message.identity = 0;
            break;
        case "Red":
        case 1:
            message.identity = 1;
            break;
        case "Blue":
        case 2:
            message.identity = 2;
            break;
        case "Has_No_Identity":
        case 3:
            message.identity = 3;
            break;
        }
        switch (object.secretTask) {
        default:
            if (typeof object.secretTask === "number") {
                message.secretTask = object.secretTask;
                break;
            }
            break;
        case "Killer":
        case 0:
            message.secretTask = 0;
            break;
        case "Stealer":
        case 1:
            message.secretTask = 1;
            break;
        case "Collector":
        case 2:
            message.secretTask = 2;
            break;
        case "Mutator":
        case 3:
            message.secretTask = 3;
            break;
        case "Pioneer":
        case 4:
            message.secretTask = 4;
            break;
        }
        if (object.roles) {
            if (!Array.isArray(object.roles))
                throw TypeError(".wait_for_select_role_toc.roles: array expected");
            message.roles = [];
            for (var i = 0; i < object.roles.length; ++i)
                switch (object.roles[i]) {
                default:
                    if (typeof object.roles[i] === "number") {
                        message.roles[i] = object.roles[i];
                        break;
                    }
                case "unknown":
                case 0:
                    message.roles[i] = 0;
                    break;
                case "wu_zhi_guo":
                case 1:
                    message.roles[i] = 1;
                    break;
                case "cheng_xiao_die":
                case 2:
                    message.roles[i] = 2;
                    break;
                case "lian_yuan":
                case 3:
                    message.roles[i] = 3;
                    break;
                case "mao_bu_ba":
                case 4:
                    message.roles[i] = 4;
                    break;
                case "zhang_yi_ting":
                case 5:
                    message.roles[i] = 5;
                    break;
                case "bai_cang_lang":
                case 6:
                    message.roles[i] = 6;
                    break;
                case "fei_yuan_long_chuan":
                case 7:
                    message.roles[i] = 7;
                    break;
                case "pei_ling":
                case 8:
                    message.roles[i] = 8;
                    break;
                case "huang_ji_ren":
                case 9:
                    message.roles[i] = 9;
                    break;
                case "wang_tian_xiang":
                case 10:
                    message.roles[i] = 10;
                    break;
                case "li_xing":
                case 11:
                    message.roles[i] = 11;
                    break;
                case "wang_kui":
                case 12:
                    message.roles[i] = 12;
                    break;
                case "a_fu_luo_la":
                case 13:
                    message.roles[i] = 13;
                    break;
                case "han_mei":
                case 14:
                    message.roles[i] = 14;
                    break;
                case "zheng_wen_xian":
                case 15:
                    message.roles[i] = 15;
                    break;
                case "xuan_qing_zi":
                case 16:
                    message.roles[i] = 16;
                    break;
                case "gui_jiao":
                case 17:
                    message.roles[i] = 17;
                    break;
                case "shao_xiu":
                case 18:
                    message.roles[i] = 18;
                    break;
                case "jin_sheng_huo":
                case 19:
                    message.roles[i] = 19;
                    break;
                case "gu_xiao_meng":
                case 20:
                    message.roles[i] = 20;
                    break;
                case "bai_fei_fei":
                case 21:
                    message.roles[i] = 21;
                    break;
                case "duan_mu_jing":
                case 22:
                    message.roles[i] = 22;
                    break;
                case "wang_fu_gui":
                case 23:
                    message.roles[i] = 23;
                    break;
                case "lao_han":
                case 24:
                    message.roles[i] = 24;
                    break;
                case "bai_xiao_nian":
                case 25:
                    message.roles[i] = 25;
                    break;
                case "lao_bie":
                case 26:
                    message.roles[i] = 26;
                    break;
                case "xiao_jiu":
                case 27:
                    message.roles[i] = 27;
                    break;
                case "li_ning_yu":
                case 28:
                    message.roles[i] = 28;
                    break;
                case "bai_kun_shan":
                case 29:
                    message.roles[i] = 29;
                    break;
                case "shang_yu":
                case 30:
                    message.roles[i] = 30;
                    break;
                case "sp_gu_xiao_meng":
                case 1020:
                    message.roles[i] = 1020;
                    break;
                case "sp_li_ning_yu":
                case 1028:
                    message.roles[i] = 1028;
                    break;
                }
        }
        if (object.waitingSecond != null)
            message.waitingSecond = object.waitingSecond >>> 0;
        return message;
    };

    /**
     * Creates a plain object from a wait_for_select_role_toc message. Also converts values to other types if specified.
     * @function toObject
     * @memberof wait_for_select_role_toc
     * @static
     * @param {wait_for_select_role_toc} message wait_for_select_role_toc
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    wait_for_select_role_toc.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.arrays || options.defaults)
            object.roles = [];
        if (options.defaults) {
            object.playerCount = 0;
            object.identity = options.enums === String ? "Black" : 0;
            object.secretTask = options.enums === String ? "Killer" : 0;
            object.waitingSecond = 0;
        }
        if (message.playerCount != null && message.hasOwnProperty("playerCount"))
            object.playerCount = message.playerCount;
        if (message.identity != null && message.hasOwnProperty("identity"))
            object.identity = options.enums === String ? $root.color[message.identity] === undefined ? message.identity : $root.color[message.identity] : message.identity;
        if (message.secretTask != null && message.hasOwnProperty("secretTask"))
            object.secretTask = options.enums === String ? $root.secret_task[message.secretTask] === undefined ? message.secretTask : $root.secret_task[message.secretTask] : message.secretTask;
        if (message.roles && message.roles.length) {
            object.roles = [];
            for (var j = 0; j < message.roles.length; ++j)
                object.roles[j] = options.enums === String ? $root.role[message.roles[j]] === undefined ? message.roles[j] : $root.role[message.roles[j]] : message.roles[j];
        }
        if (message.waitingSecond != null && message.hasOwnProperty("waitingSecond"))
            object.waitingSecond = message.waitingSecond;
        return object;
    };

    /**
     * Converts this wait_for_select_role_toc to JSON.
     * @function toJSON
     * @memberof wait_for_select_role_toc
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    wait_for_select_role_toc.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for wait_for_select_role_toc
     * @function getTypeUrl
     * @memberof wait_for_select_role_toc
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    wait_for_select_role_toc.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/wait_for_select_role_toc";
    };

    return wait_for_select_role_toc;
})();

$root.auto_play_tos = (function() {

    /**
     * Properties of an auto_play_tos.
     * @exports Iauto_play_tos
     * @interface Iauto_play_tos
     * @property {boolean|null} [enable] auto_play_tos enable
     */

    /**
     * Constructs a new auto_play_tos.
     * @exports auto_play_tos
     * @classdesc Represents an auto_play_tos.
     * @implements Iauto_play_tos
     * @constructor
     * @param {Iauto_play_tos=} [properties] Properties to set
     */
    function auto_play_tos(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * auto_play_tos enable.
     * @member {boolean} enable
     * @memberof auto_play_tos
     * @instance
     */
    auto_play_tos.prototype.enable = false;

    /**
     * Creates a new auto_play_tos instance using the specified properties.
     * @function create
     * @memberof auto_play_tos
     * @static
     * @param {Iauto_play_tos=} [properties] Properties to set
     * @returns {auto_play_tos} auto_play_tos instance
     */
    auto_play_tos.create = function create(properties) {
        return new auto_play_tos(properties);
    };

    /**
     * Encodes the specified auto_play_tos message. Does not implicitly {@link auto_play_tos.verify|verify} messages.
     * @function encode
     * @memberof auto_play_tos
     * @static
     * @param {Iauto_play_tos} message auto_play_tos message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    auto_play_tos.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.enable != null && Object.hasOwnProperty.call(message, "enable"))
            writer.uint32(/* id 1, wireType 0 =*/8).bool(message.enable);
        return writer;
    };

    /**
     * Encodes the specified auto_play_tos message, length delimited. Does not implicitly {@link auto_play_tos.verify|verify} messages.
     * @function encodeDelimited
     * @memberof auto_play_tos
     * @static
     * @param {Iauto_play_tos} message auto_play_tos message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    auto_play_tos.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes an auto_play_tos message from the specified reader or buffer.
     * @function decode
     * @memberof auto_play_tos
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {auto_play_tos} auto_play_tos
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    auto_play_tos.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.auto_play_tos();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.enable = reader.bool();
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes an auto_play_tos message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof auto_play_tos
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {auto_play_tos} auto_play_tos
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    auto_play_tos.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies an auto_play_tos message.
     * @function verify
     * @memberof auto_play_tos
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    auto_play_tos.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.enable != null && message.hasOwnProperty("enable"))
            if (typeof message.enable !== "boolean")
                return "enable: boolean expected";
        return null;
    };

    /**
     * Creates an auto_play_tos message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof auto_play_tos
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {auto_play_tos} auto_play_tos
     */
    auto_play_tos.fromObject = function fromObject(object) {
        if (object instanceof $root.auto_play_tos)
            return object;
        var message = new $root.auto_play_tos();
        if (object.enable != null)
            message.enable = Boolean(object.enable);
        return message;
    };

    /**
     * Creates a plain object from an auto_play_tos message. Also converts values to other types if specified.
     * @function toObject
     * @memberof auto_play_tos
     * @static
     * @param {auto_play_tos} message auto_play_tos
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    auto_play_tos.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults)
            object.enable = false;
        if (message.enable != null && message.hasOwnProperty("enable"))
            object.enable = message.enable;
        return object;
    };

    /**
     * Converts this auto_play_tos to JSON.
     * @function toJSON
     * @memberof auto_play_tos
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    auto_play_tos.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for auto_play_tos
     * @function getTypeUrl
     * @memberof auto_play_tos
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    auto_play_tos.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/auto_play_tos";
    };

    return auto_play_tos;
})();

$root.auto_play_toc = (function() {

    /**
     * Properties of an auto_play_toc.
     * @exports Iauto_play_toc
     * @interface Iauto_play_toc
     * @property {boolean|null} [enable] auto_play_toc enable
     */

    /**
     * Constructs a new auto_play_toc.
     * @exports auto_play_toc
     * @classdesc Represents an auto_play_toc.
     * @implements Iauto_play_toc
     * @constructor
     * @param {Iauto_play_toc=} [properties] Properties to set
     */
    function auto_play_toc(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * auto_play_toc enable.
     * @member {boolean} enable
     * @memberof auto_play_toc
     * @instance
     */
    auto_play_toc.prototype.enable = false;

    /**
     * Creates a new auto_play_toc instance using the specified properties.
     * @function create
     * @memberof auto_play_toc
     * @static
     * @param {Iauto_play_toc=} [properties] Properties to set
     * @returns {auto_play_toc} auto_play_toc instance
     */
    auto_play_toc.create = function create(properties) {
        return new auto_play_toc(properties);
    };

    /**
     * Encodes the specified auto_play_toc message. Does not implicitly {@link auto_play_toc.verify|verify} messages.
     * @function encode
     * @memberof auto_play_toc
     * @static
     * @param {Iauto_play_toc} message auto_play_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    auto_play_toc.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.enable != null && Object.hasOwnProperty.call(message, "enable"))
            writer.uint32(/* id 1, wireType 0 =*/8).bool(message.enable);
        return writer;
    };

    /**
     * Encodes the specified auto_play_toc message, length delimited. Does not implicitly {@link auto_play_toc.verify|verify} messages.
     * @function encodeDelimited
     * @memberof auto_play_toc
     * @static
     * @param {Iauto_play_toc} message auto_play_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    auto_play_toc.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes an auto_play_toc message from the specified reader or buffer.
     * @function decode
     * @memberof auto_play_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {auto_play_toc} auto_play_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    auto_play_toc.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.auto_play_toc();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.enable = reader.bool();
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes an auto_play_toc message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof auto_play_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {auto_play_toc} auto_play_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    auto_play_toc.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies an auto_play_toc message.
     * @function verify
     * @memberof auto_play_toc
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    auto_play_toc.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.enable != null && message.hasOwnProperty("enable"))
            if (typeof message.enable !== "boolean")
                return "enable: boolean expected";
        return null;
    };

    /**
     * Creates an auto_play_toc message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof auto_play_toc
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {auto_play_toc} auto_play_toc
     */
    auto_play_toc.fromObject = function fromObject(object) {
        if (object instanceof $root.auto_play_toc)
            return object;
        var message = new $root.auto_play_toc();
        if (object.enable != null)
            message.enable = Boolean(object.enable);
        return message;
    };

    /**
     * Creates a plain object from an auto_play_toc message. Also converts values to other types if specified.
     * @function toObject
     * @memberof auto_play_toc
     * @static
     * @param {auto_play_toc} message auto_play_toc
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    auto_play_toc.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults)
            object.enable = false;
        if (message.enable != null && message.hasOwnProperty("enable"))
            object.enable = message.enable;
        return object;
    };

    /**
     * Converts this auto_play_toc to JSON.
     * @function toJSON
     * @memberof auto_play_toc
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    auto_play_toc.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for auto_play_toc
     * @function getTypeUrl
     * @memberof auto_play_toc
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    auto_play_toc.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/auto_play_toc";
    };

    return auto_play_toc;
})();

$root.select_role_tos = (function() {

    /**
     * Properties of a select_role_tos.
     * @exports Iselect_role_tos
     * @interface Iselect_role_tos
     * @property {role|null} [role] select_role_tos role
     */

    /**
     * Constructs a new select_role_tos.
     * @exports select_role_tos
     * @classdesc Represents a select_role_tos.
     * @implements Iselect_role_tos
     * @constructor
     * @param {Iselect_role_tos=} [properties] Properties to set
     */
    function select_role_tos(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * select_role_tos role.
     * @member {role} role
     * @memberof select_role_tos
     * @instance
     */
    select_role_tos.prototype.role = 0;

    /**
     * Creates a new select_role_tos instance using the specified properties.
     * @function create
     * @memberof select_role_tos
     * @static
     * @param {Iselect_role_tos=} [properties] Properties to set
     * @returns {select_role_tos} select_role_tos instance
     */
    select_role_tos.create = function create(properties) {
        return new select_role_tos(properties);
    };

    /**
     * Encodes the specified select_role_tos message. Does not implicitly {@link select_role_tos.verify|verify} messages.
     * @function encode
     * @memberof select_role_tos
     * @static
     * @param {Iselect_role_tos} message select_role_tos message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    select_role_tos.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.role != null && Object.hasOwnProperty.call(message, "role"))
            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.role);
        return writer;
    };

    /**
     * Encodes the specified select_role_tos message, length delimited. Does not implicitly {@link select_role_tos.verify|verify} messages.
     * @function encodeDelimited
     * @memberof select_role_tos
     * @static
     * @param {Iselect_role_tos} message select_role_tos message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    select_role_tos.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a select_role_tos message from the specified reader or buffer.
     * @function decode
     * @memberof select_role_tos
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {select_role_tos} select_role_tos
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    select_role_tos.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.select_role_tos();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.role = reader.int32();
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a select_role_tos message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof select_role_tos
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {select_role_tos} select_role_tos
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    select_role_tos.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a select_role_tos message.
     * @function verify
     * @memberof select_role_tos
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    select_role_tos.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.role != null && message.hasOwnProperty("role"))
            switch (message.role) {
            default:
                return "role: enum value expected";
            case 0:
            case 1:
            case 2:
            case 3:
            case 4:
            case 5:
            case 6:
            case 7:
            case 8:
            case 9:
            case 10:
            case 11:
            case 12:
            case 13:
            case 14:
            case 15:
            case 16:
            case 17:
            case 18:
            case 19:
            case 20:
            case 21:
            case 22:
            case 23:
            case 24:
            case 25:
            case 26:
            case 27:
            case 28:
            case 29:
            case 30:
            case 1020:
            case 1028:
                break;
            }
        return null;
    };

    /**
     * Creates a select_role_tos message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof select_role_tos
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {select_role_tos} select_role_tos
     */
    select_role_tos.fromObject = function fromObject(object) {
        if (object instanceof $root.select_role_tos)
            return object;
        var message = new $root.select_role_tos();
        switch (object.role) {
        default:
            if (typeof object.role === "number") {
                message.role = object.role;
                break;
            }
            break;
        case "unknown":
        case 0:
            message.role = 0;
            break;
        case "wu_zhi_guo":
        case 1:
            message.role = 1;
            break;
        case "cheng_xiao_die":
        case 2:
            message.role = 2;
            break;
        case "lian_yuan":
        case 3:
            message.role = 3;
            break;
        case "mao_bu_ba":
        case 4:
            message.role = 4;
            break;
        case "zhang_yi_ting":
        case 5:
            message.role = 5;
            break;
        case "bai_cang_lang":
        case 6:
            message.role = 6;
            break;
        case "fei_yuan_long_chuan":
        case 7:
            message.role = 7;
            break;
        case "pei_ling":
        case 8:
            message.role = 8;
            break;
        case "huang_ji_ren":
        case 9:
            message.role = 9;
            break;
        case "wang_tian_xiang":
        case 10:
            message.role = 10;
            break;
        case "li_xing":
        case 11:
            message.role = 11;
            break;
        case "wang_kui":
        case 12:
            message.role = 12;
            break;
        case "a_fu_luo_la":
        case 13:
            message.role = 13;
            break;
        case "han_mei":
        case 14:
            message.role = 14;
            break;
        case "zheng_wen_xian":
        case 15:
            message.role = 15;
            break;
        case "xuan_qing_zi":
        case 16:
            message.role = 16;
            break;
        case "gui_jiao":
        case 17:
            message.role = 17;
            break;
        case "shao_xiu":
        case 18:
            message.role = 18;
            break;
        case "jin_sheng_huo":
        case 19:
            message.role = 19;
            break;
        case "gu_xiao_meng":
        case 20:
            message.role = 20;
            break;
        case "bai_fei_fei":
        case 21:
            message.role = 21;
            break;
        case "duan_mu_jing":
        case 22:
            message.role = 22;
            break;
        case "wang_fu_gui":
        case 23:
            message.role = 23;
            break;
        case "lao_han":
        case 24:
            message.role = 24;
            break;
        case "bai_xiao_nian":
        case 25:
            message.role = 25;
            break;
        case "lao_bie":
        case 26:
            message.role = 26;
            break;
        case "xiao_jiu":
        case 27:
            message.role = 27;
            break;
        case "li_ning_yu":
        case 28:
            message.role = 28;
            break;
        case "bai_kun_shan":
        case 29:
            message.role = 29;
            break;
        case "shang_yu":
        case 30:
            message.role = 30;
            break;
        case "sp_gu_xiao_meng":
        case 1020:
            message.role = 1020;
            break;
        case "sp_li_ning_yu":
        case 1028:
            message.role = 1028;
            break;
        }
        return message;
    };

    /**
     * Creates a plain object from a select_role_tos message. Also converts values to other types if specified.
     * @function toObject
     * @memberof select_role_tos
     * @static
     * @param {select_role_tos} message select_role_tos
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    select_role_tos.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults)
            object.role = options.enums === String ? "unknown" : 0;
        if (message.role != null && message.hasOwnProperty("role"))
            object.role = options.enums === String ? $root.role[message.role] === undefined ? message.role : $root.role[message.role] : message.role;
        return object;
    };

    /**
     * Converts this select_role_tos to JSON.
     * @function toJSON
     * @memberof select_role_tos
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    select_role_tos.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for select_role_tos
     * @function getTypeUrl
     * @memberof select_role_tos
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    select_role_tos.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/select_role_tos";
    };

    return select_role_tos;
})();

$root.select_role_toc = (function() {

    /**
     * Properties of a select_role_toc.
     * @exports Iselect_role_toc
     * @interface Iselect_role_toc
     * @property {role|null} [role] select_role_toc role
     */

    /**
     * Constructs a new select_role_toc.
     * @exports select_role_toc
     * @classdesc Represents a select_role_toc.
     * @implements Iselect_role_toc
     * @constructor
     * @param {Iselect_role_toc=} [properties] Properties to set
     */
    function select_role_toc(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * select_role_toc role.
     * @member {role} role
     * @memberof select_role_toc
     * @instance
     */
    select_role_toc.prototype.role = 0;

    /**
     * Creates a new select_role_toc instance using the specified properties.
     * @function create
     * @memberof select_role_toc
     * @static
     * @param {Iselect_role_toc=} [properties] Properties to set
     * @returns {select_role_toc} select_role_toc instance
     */
    select_role_toc.create = function create(properties) {
        return new select_role_toc(properties);
    };

    /**
     * Encodes the specified select_role_toc message. Does not implicitly {@link select_role_toc.verify|verify} messages.
     * @function encode
     * @memberof select_role_toc
     * @static
     * @param {Iselect_role_toc} message select_role_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    select_role_toc.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.role != null && Object.hasOwnProperty.call(message, "role"))
            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.role);
        return writer;
    };

    /**
     * Encodes the specified select_role_toc message, length delimited. Does not implicitly {@link select_role_toc.verify|verify} messages.
     * @function encodeDelimited
     * @memberof select_role_toc
     * @static
     * @param {Iselect_role_toc} message select_role_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    select_role_toc.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a select_role_toc message from the specified reader or buffer.
     * @function decode
     * @memberof select_role_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {select_role_toc} select_role_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    select_role_toc.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.select_role_toc();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.role = reader.int32();
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a select_role_toc message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof select_role_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {select_role_toc} select_role_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    select_role_toc.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a select_role_toc message.
     * @function verify
     * @memberof select_role_toc
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    select_role_toc.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.role != null && message.hasOwnProperty("role"))
            switch (message.role) {
            default:
                return "role: enum value expected";
            case 0:
            case 1:
            case 2:
            case 3:
            case 4:
            case 5:
            case 6:
            case 7:
            case 8:
            case 9:
            case 10:
            case 11:
            case 12:
            case 13:
            case 14:
            case 15:
            case 16:
            case 17:
            case 18:
            case 19:
            case 20:
            case 21:
            case 22:
            case 23:
            case 24:
            case 25:
            case 26:
            case 27:
            case 28:
            case 29:
            case 30:
            case 1020:
            case 1028:
                break;
            }
        return null;
    };

    /**
     * Creates a select_role_toc message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof select_role_toc
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {select_role_toc} select_role_toc
     */
    select_role_toc.fromObject = function fromObject(object) {
        if (object instanceof $root.select_role_toc)
            return object;
        var message = new $root.select_role_toc();
        switch (object.role) {
        default:
            if (typeof object.role === "number") {
                message.role = object.role;
                break;
            }
            break;
        case "unknown":
        case 0:
            message.role = 0;
            break;
        case "wu_zhi_guo":
        case 1:
            message.role = 1;
            break;
        case "cheng_xiao_die":
        case 2:
            message.role = 2;
            break;
        case "lian_yuan":
        case 3:
            message.role = 3;
            break;
        case "mao_bu_ba":
        case 4:
            message.role = 4;
            break;
        case "zhang_yi_ting":
        case 5:
            message.role = 5;
            break;
        case "bai_cang_lang":
        case 6:
            message.role = 6;
            break;
        case "fei_yuan_long_chuan":
        case 7:
            message.role = 7;
            break;
        case "pei_ling":
        case 8:
            message.role = 8;
            break;
        case "huang_ji_ren":
        case 9:
            message.role = 9;
            break;
        case "wang_tian_xiang":
        case 10:
            message.role = 10;
            break;
        case "li_xing":
        case 11:
            message.role = 11;
            break;
        case "wang_kui":
        case 12:
            message.role = 12;
            break;
        case "a_fu_luo_la":
        case 13:
            message.role = 13;
            break;
        case "han_mei":
        case 14:
            message.role = 14;
            break;
        case "zheng_wen_xian":
        case 15:
            message.role = 15;
            break;
        case "xuan_qing_zi":
        case 16:
            message.role = 16;
            break;
        case "gui_jiao":
        case 17:
            message.role = 17;
            break;
        case "shao_xiu":
        case 18:
            message.role = 18;
            break;
        case "jin_sheng_huo":
        case 19:
            message.role = 19;
            break;
        case "gu_xiao_meng":
        case 20:
            message.role = 20;
            break;
        case "bai_fei_fei":
        case 21:
            message.role = 21;
            break;
        case "duan_mu_jing":
        case 22:
            message.role = 22;
            break;
        case "wang_fu_gui":
        case 23:
            message.role = 23;
            break;
        case "lao_han":
        case 24:
            message.role = 24;
            break;
        case "bai_xiao_nian":
        case 25:
            message.role = 25;
            break;
        case "lao_bie":
        case 26:
            message.role = 26;
            break;
        case "xiao_jiu":
        case 27:
            message.role = 27;
            break;
        case "li_ning_yu":
        case 28:
            message.role = 28;
            break;
        case "bai_kun_shan":
        case 29:
            message.role = 29;
            break;
        case "shang_yu":
        case 30:
            message.role = 30;
            break;
        case "sp_gu_xiao_meng":
        case 1020:
            message.role = 1020;
            break;
        case "sp_li_ning_yu":
        case 1028:
            message.role = 1028;
            break;
        }
        return message;
    };

    /**
     * Creates a plain object from a select_role_toc message. Also converts values to other types if specified.
     * @function toObject
     * @memberof select_role_toc
     * @static
     * @param {select_role_toc} message select_role_toc
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    select_role_toc.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults)
            object.role = options.enums === String ? "unknown" : 0;
        if (message.role != null && message.hasOwnProperty("role"))
            object.role = options.enums === String ? $root.role[message.role] === undefined ? message.role : $root.role[message.role] : message.role;
        return object;
    };

    /**
     * Converts this select_role_toc to JSON.
     * @function toJSON
     * @memberof select_role_toc
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    select_role_toc.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for select_role_toc
     * @function getTypeUrl
     * @memberof select_role_toc
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    select_role_toc.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/select_role_toc";
    };

    return select_role_toc;
})();

$root.init_toc = (function() {

    /**
     * Properties of an init_toc.
     * @exports Iinit_toc
     * @interface Iinit_toc
     * @property {number|null} [playerCount] init_toc playerCount
     * @property {color|null} [identity] init_toc identity
     * @property {secret_task|null} [secretTask] init_toc secretTask
     * @property {Array.<role>|null} [roles] init_toc roles
     * @property {Array.<string>|null} [names] init_toc names
     */

    /**
     * Constructs a new init_toc.
     * @exports init_toc
     * @classdesc Represents an init_toc.
     * @implements Iinit_toc
     * @constructor
     * @param {Iinit_toc=} [properties] Properties to set
     */
    function init_toc(properties) {
        this.roles = [];
        this.names = [];
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * init_toc playerCount.
     * @member {number} playerCount
     * @memberof init_toc
     * @instance
     */
    init_toc.prototype.playerCount = 0;

    /**
     * init_toc identity.
     * @member {color} identity
     * @memberof init_toc
     * @instance
     */
    init_toc.prototype.identity = 0;

    /**
     * init_toc secretTask.
     * @member {secret_task} secretTask
     * @memberof init_toc
     * @instance
     */
    init_toc.prototype.secretTask = 0;

    /**
     * init_toc roles.
     * @member {Array.<role>} roles
     * @memberof init_toc
     * @instance
     */
    init_toc.prototype.roles = $util.emptyArray;

    /**
     * init_toc names.
     * @member {Array.<string>} names
     * @memberof init_toc
     * @instance
     */
    init_toc.prototype.names = $util.emptyArray;

    /**
     * Creates a new init_toc instance using the specified properties.
     * @function create
     * @memberof init_toc
     * @static
     * @param {Iinit_toc=} [properties] Properties to set
     * @returns {init_toc} init_toc instance
     */
    init_toc.create = function create(properties) {
        return new init_toc(properties);
    };

    /**
     * Encodes the specified init_toc message. Does not implicitly {@link init_toc.verify|verify} messages.
     * @function encode
     * @memberof init_toc
     * @static
     * @param {Iinit_toc} message init_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    init_toc.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.playerCount != null && Object.hasOwnProperty.call(message, "playerCount"))
            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.playerCount);
        if (message.identity != null && Object.hasOwnProperty.call(message, "identity"))
            writer.uint32(/* id 2, wireType 0 =*/16).int32(message.identity);
        if (message.secretTask != null && Object.hasOwnProperty.call(message, "secretTask"))
            writer.uint32(/* id 3, wireType 0 =*/24).int32(message.secretTask);
        if (message.roles != null && message.roles.length) {
            writer.uint32(/* id 4, wireType 2 =*/34).fork();
            for (var i = 0; i < message.roles.length; ++i)
                writer.int32(message.roles[i]);
            writer.ldelim();
        }
        if (message.names != null && message.names.length)
            for (var i = 0; i < message.names.length; ++i)
                writer.uint32(/* id 5, wireType 2 =*/42).string(message.names[i]);
        return writer;
    };

    /**
     * Encodes the specified init_toc message, length delimited. Does not implicitly {@link init_toc.verify|verify} messages.
     * @function encodeDelimited
     * @memberof init_toc
     * @static
     * @param {Iinit_toc} message init_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    init_toc.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes an init_toc message from the specified reader or buffer.
     * @function decode
     * @memberof init_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {init_toc} init_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    init_toc.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.init_toc();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.playerCount = reader.uint32();
                    break;
                }
            case 2: {
                    message.identity = reader.int32();
                    break;
                }
            case 3: {
                    message.secretTask = reader.int32();
                    break;
                }
            case 4: {
                    if (!(message.roles && message.roles.length))
                        message.roles = [];
                    if ((tag & 7) === 2) {
                        var end2 = reader.uint32() + reader.pos;
                        while (reader.pos < end2)
                            message.roles.push(reader.int32());
                    } else
                        message.roles.push(reader.int32());
                    break;
                }
            case 5: {
                    if (!(message.names && message.names.length))
                        message.names = [];
                    message.names.push(reader.string());
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes an init_toc message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof init_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {init_toc} init_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    init_toc.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies an init_toc message.
     * @function verify
     * @memberof init_toc
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    init_toc.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.playerCount != null && message.hasOwnProperty("playerCount"))
            if (!$util.isInteger(message.playerCount))
                return "playerCount: integer expected";
        if (message.identity != null && message.hasOwnProperty("identity"))
            switch (message.identity) {
            default:
                return "identity: enum value expected";
            case 0:
            case 1:
            case 2:
            case 3:
                break;
            }
        if (message.secretTask != null && message.hasOwnProperty("secretTask"))
            switch (message.secretTask) {
            default:
                return "secretTask: enum value expected";
            case 0:
            case 1:
            case 2:
            case 3:
            case 4:
                break;
            }
        if (message.roles != null && message.hasOwnProperty("roles")) {
            if (!Array.isArray(message.roles))
                return "roles: array expected";
            for (var i = 0; i < message.roles.length; ++i)
                switch (message.roles[i]) {
                default:
                    return "roles: enum value[] expected";
                case 0:
                case 1:
                case 2:
                case 3:
                case 4:
                case 5:
                case 6:
                case 7:
                case 8:
                case 9:
                case 10:
                case 11:
                case 12:
                case 13:
                case 14:
                case 15:
                case 16:
                case 17:
                case 18:
                case 19:
                case 20:
                case 21:
                case 22:
                case 23:
                case 24:
                case 25:
                case 26:
                case 27:
                case 28:
                case 29:
                case 30:
                case 1020:
                case 1028:
                    break;
                }
        }
        if (message.names != null && message.hasOwnProperty("names")) {
            if (!Array.isArray(message.names))
                return "names: array expected";
            for (var i = 0; i < message.names.length; ++i)
                if (!$util.isString(message.names[i]))
                    return "names: string[] expected";
        }
        return null;
    };

    /**
     * Creates an init_toc message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof init_toc
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {init_toc} init_toc
     */
    init_toc.fromObject = function fromObject(object) {
        if (object instanceof $root.init_toc)
            return object;
        var message = new $root.init_toc();
        if (object.playerCount != null)
            message.playerCount = object.playerCount >>> 0;
        switch (object.identity) {
        default:
            if (typeof object.identity === "number") {
                message.identity = object.identity;
                break;
            }
            break;
        case "Black":
        case 0:
            message.identity = 0;
            break;
        case "Red":
        case 1:
            message.identity = 1;
            break;
        case "Blue":
        case 2:
            message.identity = 2;
            break;
        case "Has_No_Identity":
        case 3:
            message.identity = 3;
            break;
        }
        switch (object.secretTask) {
        default:
            if (typeof object.secretTask === "number") {
                message.secretTask = object.secretTask;
                break;
            }
            break;
        case "Killer":
        case 0:
            message.secretTask = 0;
            break;
        case "Stealer":
        case 1:
            message.secretTask = 1;
            break;
        case "Collector":
        case 2:
            message.secretTask = 2;
            break;
        case "Mutator":
        case 3:
            message.secretTask = 3;
            break;
        case "Pioneer":
        case 4:
            message.secretTask = 4;
            break;
        }
        if (object.roles) {
            if (!Array.isArray(object.roles))
                throw TypeError(".init_toc.roles: array expected");
            message.roles = [];
            for (var i = 0; i < object.roles.length; ++i)
                switch (object.roles[i]) {
                default:
                    if (typeof object.roles[i] === "number") {
                        message.roles[i] = object.roles[i];
                        break;
                    }
                case "unknown":
                case 0:
                    message.roles[i] = 0;
                    break;
                case "wu_zhi_guo":
                case 1:
                    message.roles[i] = 1;
                    break;
                case "cheng_xiao_die":
                case 2:
                    message.roles[i] = 2;
                    break;
                case "lian_yuan":
                case 3:
                    message.roles[i] = 3;
                    break;
                case "mao_bu_ba":
                case 4:
                    message.roles[i] = 4;
                    break;
                case "zhang_yi_ting":
                case 5:
                    message.roles[i] = 5;
                    break;
                case "bai_cang_lang":
                case 6:
                    message.roles[i] = 6;
                    break;
                case "fei_yuan_long_chuan":
                case 7:
                    message.roles[i] = 7;
                    break;
                case "pei_ling":
                case 8:
                    message.roles[i] = 8;
                    break;
                case "huang_ji_ren":
                case 9:
                    message.roles[i] = 9;
                    break;
                case "wang_tian_xiang":
                case 10:
                    message.roles[i] = 10;
                    break;
                case "li_xing":
                case 11:
                    message.roles[i] = 11;
                    break;
                case "wang_kui":
                case 12:
                    message.roles[i] = 12;
                    break;
                case "a_fu_luo_la":
                case 13:
                    message.roles[i] = 13;
                    break;
                case "han_mei":
                case 14:
                    message.roles[i] = 14;
                    break;
                case "zheng_wen_xian":
                case 15:
                    message.roles[i] = 15;
                    break;
                case "xuan_qing_zi":
                case 16:
                    message.roles[i] = 16;
                    break;
                case "gui_jiao":
                case 17:
                    message.roles[i] = 17;
                    break;
                case "shao_xiu":
                case 18:
                    message.roles[i] = 18;
                    break;
                case "jin_sheng_huo":
                case 19:
                    message.roles[i] = 19;
                    break;
                case "gu_xiao_meng":
                case 20:
                    message.roles[i] = 20;
                    break;
                case "bai_fei_fei":
                case 21:
                    message.roles[i] = 21;
                    break;
                case "duan_mu_jing":
                case 22:
                    message.roles[i] = 22;
                    break;
                case "wang_fu_gui":
                case 23:
                    message.roles[i] = 23;
                    break;
                case "lao_han":
                case 24:
                    message.roles[i] = 24;
                    break;
                case "bai_xiao_nian":
                case 25:
                    message.roles[i] = 25;
                    break;
                case "lao_bie":
                case 26:
                    message.roles[i] = 26;
                    break;
                case "xiao_jiu":
                case 27:
                    message.roles[i] = 27;
                    break;
                case "li_ning_yu":
                case 28:
                    message.roles[i] = 28;
                    break;
                case "bai_kun_shan":
                case 29:
                    message.roles[i] = 29;
                    break;
                case "shang_yu":
                case 30:
                    message.roles[i] = 30;
                    break;
                case "sp_gu_xiao_meng":
                case 1020:
                    message.roles[i] = 1020;
                    break;
                case "sp_li_ning_yu":
                case 1028:
                    message.roles[i] = 1028;
                    break;
                }
        }
        if (object.names) {
            if (!Array.isArray(object.names))
                throw TypeError(".init_toc.names: array expected");
            message.names = [];
            for (var i = 0; i < object.names.length; ++i)
                message.names[i] = String(object.names[i]);
        }
        return message;
    };

    /**
     * Creates a plain object from an init_toc message. Also converts values to other types if specified.
     * @function toObject
     * @memberof init_toc
     * @static
     * @param {init_toc} message init_toc
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    init_toc.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.arrays || options.defaults) {
            object.roles = [];
            object.names = [];
        }
        if (options.defaults) {
            object.playerCount = 0;
            object.identity = options.enums === String ? "Black" : 0;
            object.secretTask = options.enums === String ? "Killer" : 0;
        }
        if (message.playerCount != null && message.hasOwnProperty("playerCount"))
            object.playerCount = message.playerCount;
        if (message.identity != null && message.hasOwnProperty("identity"))
            object.identity = options.enums === String ? $root.color[message.identity] === undefined ? message.identity : $root.color[message.identity] : message.identity;
        if (message.secretTask != null && message.hasOwnProperty("secretTask"))
            object.secretTask = options.enums === String ? $root.secret_task[message.secretTask] === undefined ? message.secretTask : $root.secret_task[message.secretTask] : message.secretTask;
        if (message.roles && message.roles.length) {
            object.roles = [];
            for (var j = 0; j < message.roles.length; ++j)
                object.roles[j] = options.enums === String ? $root.role[message.roles[j]] === undefined ? message.roles[j] : $root.role[message.roles[j]] : message.roles[j];
        }
        if (message.names && message.names.length) {
            object.names = [];
            for (var j = 0; j < message.names.length; ++j)
                object.names[j] = message.names[j];
        }
        return object;
    };

    /**
     * Converts this init_toc to JSON.
     * @function toJSON
     * @memberof init_toc
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    init_toc.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for init_toc
     * @function getTypeUrl
     * @memberof init_toc
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    init_toc.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/init_toc";
    };

    return init_toc;
})();

$root.notify_role_update_toc = (function() {

    /**
     * Properties of a notify_role_update_toc.
     * @exports Inotify_role_update_toc
     * @interface Inotify_role_update_toc
     * @property {number|null} [playerId] notify_role_update_toc playerId
     * @property {role|null} [role] notify_role_update_toc role
     */

    /**
     * Constructs a new notify_role_update_toc.
     * @exports notify_role_update_toc
     * @classdesc Represents a notify_role_update_toc.
     * @implements Inotify_role_update_toc
     * @constructor
     * @param {Inotify_role_update_toc=} [properties] Properties to set
     */
    function notify_role_update_toc(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * notify_role_update_toc playerId.
     * @member {number} playerId
     * @memberof notify_role_update_toc
     * @instance
     */
    notify_role_update_toc.prototype.playerId = 0;

    /**
     * notify_role_update_toc role.
     * @member {role} role
     * @memberof notify_role_update_toc
     * @instance
     */
    notify_role_update_toc.prototype.role = 0;

    /**
     * Creates a new notify_role_update_toc instance using the specified properties.
     * @function create
     * @memberof notify_role_update_toc
     * @static
     * @param {Inotify_role_update_toc=} [properties] Properties to set
     * @returns {notify_role_update_toc} notify_role_update_toc instance
     */
    notify_role_update_toc.create = function create(properties) {
        return new notify_role_update_toc(properties);
    };

    /**
     * Encodes the specified notify_role_update_toc message. Does not implicitly {@link notify_role_update_toc.verify|verify} messages.
     * @function encode
     * @memberof notify_role_update_toc
     * @static
     * @param {Inotify_role_update_toc} message notify_role_update_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    notify_role_update_toc.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.playerId != null && Object.hasOwnProperty.call(message, "playerId"))
            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.playerId);
        if (message.role != null && Object.hasOwnProperty.call(message, "role"))
            writer.uint32(/* id 2, wireType 0 =*/16).int32(message.role);
        return writer;
    };

    /**
     * Encodes the specified notify_role_update_toc message, length delimited. Does not implicitly {@link notify_role_update_toc.verify|verify} messages.
     * @function encodeDelimited
     * @memberof notify_role_update_toc
     * @static
     * @param {Inotify_role_update_toc} message notify_role_update_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    notify_role_update_toc.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a notify_role_update_toc message from the specified reader or buffer.
     * @function decode
     * @memberof notify_role_update_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {notify_role_update_toc} notify_role_update_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    notify_role_update_toc.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.notify_role_update_toc();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.playerId = reader.uint32();
                    break;
                }
            case 2: {
                    message.role = reader.int32();
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a notify_role_update_toc message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof notify_role_update_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {notify_role_update_toc} notify_role_update_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    notify_role_update_toc.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a notify_role_update_toc message.
     * @function verify
     * @memberof notify_role_update_toc
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    notify_role_update_toc.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            if (!$util.isInteger(message.playerId))
                return "playerId: integer expected";
        if (message.role != null && message.hasOwnProperty("role"))
            switch (message.role) {
            default:
                return "role: enum value expected";
            case 0:
            case 1:
            case 2:
            case 3:
            case 4:
            case 5:
            case 6:
            case 7:
            case 8:
            case 9:
            case 10:
            case 11:
            case 12:
            case 13:
            case 14:
            case 15:
            case 16:
            case 17:
            case 18:
            case 19:
            case 20:
            case 21:
            case 22:
            case 23:
            case 24:
            case 25:
            case 26:
            case 27:
            case 28:
            case 29:
            case 30:
            case 1020:
            case 1028:
                break;
            }
        return null;
    };

    /**
     * Creates a notify_role_update_toc message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof notify_role_update_toc
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {notify_role_update_toc} notify_role_update_toc
     */
    notify_role_update_toc.fromObject = function fromObject(object) {
        if (object instanceof $root.notify_role_update_toc)
            return object;
        var message = new $root.notify_role_update_toc();
        if (object.playerId != null)
            message.playerId = object.playerId >>> 0;
        switch (object.role) {
        default:
            if (typeof object.role === "number") {
                message.role = object.role;
                break;
            }
            break;
        case "unknown":
        case 0:
            message.role = 0;
            break;
        case "wu_zhi_guo":
        case 1:
            message.role = 1;
            break;
        case "cheng_xiao_die":
        case 2:
            message.role = 2;
            break;
        case "lian_yuan":
        case 3:
            message.role = 3;
            break;
        case "mao_bu_ba":
        case 4:
            message.role = 4;
            break;
        case "zhang_yi_ting":
        case 5:
            message.role = 5;
            break;
        case "bai_cang_lang":
        case 6:
            message.role = 6;
            break;
        case "fei_yuan_long_chuan":
        case 7:
            message.role = 7;
            break;
        case "pei_ling":
        case 8:
            message.role = 8;
            break;
        case "huang_ji_ren":
        case 9:
            message.role = 9;
            break;
        case "wang_tian_xiang":
        case 10:
            message.role = 10;
            break;
        case "li_xing":
        case 11:
            message.role = 11;
            break;
        case "wang_kui":
        case 12:
            message.role = 12;
            break;
        case "a_fu_luo_la":
        case 13:
            message.role = 13;
            break;
        case "han_mei":
        case 14:
            message.role = 14;
            break;
        case "zheng_wen_xian":
        case 15:
            message.role = 15;
            break;
        case "xuan_qing_zi":
        case 16:
            message.role = 16;
            break;
        case "gui_jiao":
        case 17:
            message.role = 17;
            break;
        case "shao_xiu":
        case 18:
            message.role = 18;
            break;
        case "jin_sheng_huo":
        case 19:
            message.role = 19;
            break;
        case "gu_xiao_meng":
        case 20:
            message.role = 20;
            break;
        case "bai_fei_fei":
        case 21:
            message.role = 21;
            break;
        case "duan_mu_jing":
        case 22:
            message.role = 22;
            break;
        case "wang_fu_gui":
        case 23:
            message.role = 23;
            break;
        case "lao_han":
        case 24:
            message.role = 24;
            break;
        case "bai_xiao_nian":
        case 25:
            message.role = 25;
            break;
        case "lao_bie":
        case 26:
            message.role = 26;
            break;
        case "xiao_jiu":
        case 27:
            message.role = 27;
            break;
        case "li_ning_yu":
        case 28:
            message.role = 28;
            break;
        case "bai_kun_shan":
        case 29:
            message.role = 29;
            break;
        case "shang_yu":
        case 30:
            message.role = 30;
            break;
        case "sp_gu_xiao_meng":
        case 1020:
            message.role = 1020;
            break;
        case "sp_li_ning_yu":
        case 1028:
            message.role = 1028;
            break;
        }
        return message;
    };

    /**
     * Creates a plain object from a notify_role_update_toc message. Also converts values to other types if specified.
     * @function toObject
     * @memberof notify_role_update_toc
     * @static
     * @param {notify_role_update_toc} message notify_role_update_toc
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    notify_role_update_toc.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults) {
            object.playerId = 0;
            object.role = options.enums === String ? "unknown" : 0;
        }
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            object.playerId = message.playerId;
        if (message.role != null && message.hasOwnProperty("role"))
            object.role = options.enums === String ? $root.role[message.role] === undefined ? message.role : $root.role[message.role] : message.role;
        return object;
    };

    /**
     * Converts this notify_role_update_toc to JSON.
     * @function toJSON
     * @memberof notify_role_update_toc
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    notify_role_update_toc.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for notify_role_update_toc
     * @function getTypeUrl
     * @memberof notify_role_update_toc
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    notify_role_update_toc.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/notify_role_update_toc";
    };

    return notify_role_update_toc;
})();

$root.add_card_toc = (function() {

    /**
     * Properties of an add_card_toc.
     * @exports Iadd_card_toc
     * @interface Iadd_card_toc
     * @property {number|null} [playerId] add_card_toc playerId
     * @property {number|null} [unknownCardCount] add_card_toc unknownCardCount
     * @property {Array.<Icard>|null} [cards] add_card_toc cards
     */

    /**
     * Constructs a new add_card_toc.
     * @exports add_card_toc
     * @classdesc Represents an add_card_toc.
     * @implements Iadd_card_toc
     * @constructor
     * @param {Iadd_card_toc=} [properties] Properties to set
     */
    function add_card_toc(properties) {
        this.cards = [];
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * add_card_toc playerId.
     * @member {number} playerId
     * @memberof add_card_toc
     * @instance
     */
    add_card_toc.prototype.playerId = 0;

    /**
     * add_card_toc unknownCardCount.
     * @member {number} unknownCardCount
     * @memberof add_card_toc
     * @instance
     */
    add_card_toc.prototype.unknownCardCount = 0;

    /**
     * add_card_toc cards.
     * @member {Array.<Icard>} cards
     * @memberof add_card_toc
     * @instance
     */
    add_card_toc.prototype.cards = $util.emptyArray;

    /**
     * Creates a new add_card_toc instance using the specified properties.
     * @function create
     * @memberof add_card_toc
     * @static
     * @param {Iadd_card_toc=} [properties] Properties to set
     * @returns {add_card_toc} add_card_toc instance
     */
    add_card_toc.create = function create(properties) {
        return new add_card_toc(properties);
    };

    /**
     * Encodes the specified add_card_toc message. Does not implicitly {@link add_card_toc.verify|verify} messages.
     * @function encode
     * @memberof add_card_toc
     * @static
     * @param {Iadd_card_toc} message add_card_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    add_card_toc.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.playerId != null && Object.hasOwnProperty.call(message, "playerId"))
            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.playerId);
        if (message.unknownCardCount != null && Object.hasOwnProperty.call(message, "unknownCardCount"))
            writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.unknownCardCount);
        if (message.cards != null && message.cards.length)
            for (var i = 0; i < message.cards.length; ++i)
                $root.card.encode(message.cards[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
        return writer;
    };

    /**
     * Encodes the specified add_card_toc message, length delimited. Does not implicitly {@link add_card_toc.verify|verify} messages.
     * @function encodeDelimited
     * @memberof add_card_toc
     * @static
     * @param {Iadd_card_toc} message add_card_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    add_card_toc.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes an add_card_toc message from the specified reader or buffer.
     * @function decode
     * @memberof add_card_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {add_card_toc} add_card_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    add_card_toc.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.add_card_toc();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.playerId = reader.uint32();
                    break;
                }
            case 2: {
                    message.unknownCardCount = reader.uint32();
                    break;
                }
            case 3: {
                    if (!(message.cards && message.cards.length))
                        message.cards = [];
                    message.cards.push($root.card.decode(reader, reader.uint32()));
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes an add_card_toc message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof add_card_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {add_card_toc} add_card_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    add_card_toc.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies an add_card_toc message.
     * @function verify
     * @memberof add_card_toc
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    add_card_toc.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            if (!$util.isInteger(message.playerId))
                return "playerId: integer expected";
        if (message.unknownCardCount != null && message.hasOwnProperty("unknownCardCount"))
            if (!$util.isInteger(message.unknownCardCount))
                return "unknownCardCount: integer expected";
        if (message.cards != null && message.hasOwnProperty("cards")) {
            if (!Array.isArray(message.cards))
                return "cards: array expected";
            for (var i = 0; i < message.cards.length; ++i) {
                var error = $root.card.verify(message.cards[i]);
                if (error)
                    return "cards." + error;
            }
        }
        return null;
    };

    /**
     * Creates an add_card_toc message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof add_card_toc
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {add_card_toc} add_card_toc
     */
    add_card_toc.fromObject = function fromObject(object) {
        if (object instanceof $root.add_card_toc)
            return object;
        var message = new $root.add_card_toc();
        if (object.playerId != null)
            message.playerId = object.playerId >>> 0;
        if (object.unknownCardCount != null)
            message.unknownCardCount = object.unknownCardCount >>> 0;
        if (object.cards) {
            if (!Array.isArray(object.cards))
                throw TypeError(".add_card_toc.cards: array expected");
            message.cards = [];
            for (var i = 0; i < object.cards.length; ++i) {
                if (typeof object.cards[i] !== "object")
                    throw TypeError(".add_card_toc.cards: object expected");
                message.cards[i] = $root.card.fromObject(object.cards[i]);
            }
        }
        return message;
    };

    /**
     * Creates a plain object from an add_card_toc message. Also converts values to other types if specified.
     * @function toObject
     * @memberof add_card_toc
     * @static
     * @param {add_card_toc} message add_card_toc
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    add_card_toc.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.arrays || options.defaults)
            object.cards = [];
        if (options.defaults) {
            object.playerId = 0;
            object.unknownCardCount = 0;
        }
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            object.playerId = message.playerId;
        if (message.unknownCardCount != null && message.hasOwnProperty("unknownCardCount"))
            object.unknownCardCount = message.unknownCardCount;
        if (message.cards && message.cards.length) {
            object.cards = [];
            for (var j = 0; j < message.cards.length; ++j)
                object.cards[j] = $root.card.toObject(message.cards[j], options);
        }
        return object;
    };

    /**
     * Converts this add_card_toc to JSON.
     * @function toJSON
     * @memberof add_card_toc
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    add_card_toc.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for add_card_toc
     * @function getTypeUrl
     * @memberof add_card_toc
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    add_card_toc.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/add_card_toc";
    };

    return add_card_toc;
})();

$root.use_shi_tan_tos = (function() {

    /**
     * Properties of a use_shi_tan_tos.
     * @exports Iuse_shi_tan_tos
     * @interface Iuse_shi_tan_tos
     * @property {number|null} [cardId] use_shi_tan_tos cardId
     * @property {number|null} [playerId] use_shi_tan_tos playerId
     * @property {number|null} [seq] use_shi_tan_tos seq
     */

    /**
     * Constructs a new use_shi_tan_tos.
     * @exports use_shi_tan_tos
     * @classdesc Represents a use_shi_tan_tos.
     * @implements Iuse_shi_tan_tos
     * @constructor
     * @param {Iuse_shi_tan_tos=} [properties] Properties to set
     */
    function use_shi_tan_tos(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * use_shi_tan_tos cardId.
     * @member {number} cardId
     * @memberof use_shi_tan_tos
     * @instance
     */
    use_shi_tan_tos.prototype.cardId = 0;

    /**
     * use_shi_tan_tos playerId.
     * @member {number} playerId
     * @memberof use_shi_tan_tos
     * @instance
     */
    use_shi_tan_tos.prototype.playerId = 0;

    /**
     * use_shi_tan_tos seq.
     * @member {number} seq
     * @memberof use_shi_tan_tos
     * @instance
     */
    use_shi_tan_tos.prototype.seq = 0;

    /**
     * Creates a new use_shi_tan_tos instance using the specified properties.
     * @function create
     * @memberof use_shi_tan_tos
     * @static
     * @param {Iuse_shi_tan_tos=} [properties] Properties to set
     * @returns {use_shi_tan_tos} use_shi_tan_tos instance
     */
    use_shi_tan_tos.create = function create(properties) {
        return new use_shi_tan_tos(properties);
    };

    /**
     * Encodes the specified use_shi_tan_tos message. Does not implicitly {@link use_shi_tan_tos.verify|verify} messages.
     * @function encode
     * @memberof use_shi_tan_tos
     * @static
     * @param {Iuse_shi_tan_tos} message use_shi_tan_tos message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    use_shi_tan_tos.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.cardId != null && Object.hasOwnProperty.call(message, "cardId"))
            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.cardId);
        if (message.playerId != null && Object.hasOwnProperty.call(message, "playerId"))
            writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.playerId);
        if (message.seq != null && Object.hasOwnProperty.call(message, "seq"))
            writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.seq);
        return writer;
    };

    /**
     * Encodes the specified use_shi_tan_tos message, length delimited. Does not implicitly {@link use_shi_tan_tos.verify|verify} messages.
     * @function encodeDelimited
     * @memberof use_shi_tan_tos
     * @static
     * @param {Iuse_shi_tan_tos} message use_shi_tan_tos message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    use_shi_tan_tos.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a use_shi_tan_tos message from the specified reader or buffer.
     * @function decode
     * @memberof use_shi_tan_tos
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {use_shi_tan_tos} use_shi_tan_tos
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    use_shi_tan_tos.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.use_shi_tan_tos();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.cardId = reader.uint32();
                    break;
                }
            case 2: {
                    message.playerId = reader.uint32();
                    break;
                }
            case 3: {
                    message.seq = reader.uint32();
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a use_shi_tan_tos message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof use_shi_tan_tos
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {use_shi_tan_tos} use_shi_tan_tos
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    use_shi_tan_tos.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a use_shi_tan_tos message.
     * @function verify
     * @memberof use_shi_tan_tos
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    use_shi_tan_tos.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.cardId != null && message.hasOwnProperty("cardId"))
            if (!$util.isInteger(message.cardId))
                return "cardId: integer expected";
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            if (!$util.isInteger(message.playerId))
                return "playerId: integer expected";
        if (message.seq != null && message.hasOwnProperty("seq"))
            if (!$util.isInteger(message.seq))
                return "seq: integer expected";
        return null;
    };

    /**
     * Creates a use_shi_tan_tos message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof use_shi_tan_tos
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {use_shi_tan_tos} use_shi_tan_tos
     */
    use_shi_tan_tos.fromObject = function fromObject(object) {
        if (object instanceof $root.use_shi_tan_tos)
            return object;
        var message = new $root.use_shi_tan_tos();
        if (object.cardId != null)
            message.cardId = object.cardId >>> 0;
        if (object.playerId != null)
            message.playerId = object.playerId >>> 0;
        if (object.seq != null)
            message.seq = object.seq >>> 0;
        return message;
    };

    /**
     * Creates a plain object from a use_shi_tan_tos message. Also converts values to other types if specified.
     * @function toObject
     * @memberof use_shi_tan_tos
     * @static
     * @param {use_shi_tan_tos} message use_shi_tan_tos
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    use_shi_tan_tos.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults) {
            object.cardId = 0;
            object.playerId = 0;
            object.seq = 0;
        }
        if (message.cardId != null && message.hasOwnProperty("cardId"))
            object.cardId = message.cardId;
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            object.playerId = message.playerId;
        if (message.seq != null && message.hasOwnProperty("seq"))
            object.seq = message.seq;
        return object;
    };

    /**
     * Converts this use_shi_tan_tos to JSON.
     * @function toJSON
     * @memberof use_shi_tan_tos
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    use_shi_tan_tos.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for use_shi_tan_tos
     * @function getTypeUrl
     * @memberof use_shi_tan_tos
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    use_shi_tan_tos.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/use_shi_tan_tos";
    };

    return use_shi_tan_tos;
})();

$root.use_shi_tan_toc = (function() {

    /**
     * Properties of a use_shi_tan_toc.
     * @exports Iuse_shi_tan_toc
     * @interface Iuse_shi_tan_toc
     * @property {number|null} [playerId] use_shi_tan_toc playerId
     * @property {number|null} [targetPlayerId] use_shi_tan_toc targetPlayerId
     * @property {number|null} [cardId] use_shi_tan_toc cardId
     */

    /**
     * Constructs a new use_shi_tan_toc.
     * @exports use_shi_tan_toc
     * @classdesc Represents a use_shi_tan_toc.
     * @implements Iuse_shi_tan_toc
     * @constructor
     * @param {Iuse_shi_tan_toc=} [properties] Properties to set
     */
    function use_shi_tan_toc(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * use_shi_tan_toc playerId.
     * @member {number} playerId
     * @memberof use_shi_tan_toc
     * @instance
     */
    use_shi_tan_toc.prototype.playerId = 0;

    /**
     * use_shi_tan_toc targetPlayerId.
     * @member {number} targetPlayerId
     * @memberof use_shi_tan_toc
     * @instance
     */
    use_shi_tan_toc.prototype.targetPlayerId = 0;

    /**
     * use_shi_tan_toc cardId.
     * @member {number} cardId
     * @memberof use_shi_tan_toc
     * @instance
     */
    use_shi_tan_toc.prototype.cardId = 0;

    /**
     * Creates a new use_shi_tan_toc instance using the specified properties.
     * @function create
     * @memberof use_shi_tan_toc
     * @static
     * @param {Iuse_shi_tan_toc=} [properties] Properties to set
     * @returns {use_shi_tan_toc} use_shi_tan_toc instance
     */
    use_shi_tan_toc.create = function create(properties) {
        return new use_shi_tan_toc(properties);
    };

    /**
     * Encodes the specified use_shi_tan_toc message. Does not implicitly {@link use_shi_tan_toc.verify|verify} messages.
     * @function encode
     * @memberof use_shi_tan_toc
     * @static
     * @param {Iuse_shi_tan_toc} message use_shi_tan_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    use_shi_tan_toc.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.playerId != null && Object.hasOwnProperty.call(message, "playerId"))
            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.playerId);
        if (message.targetPlayerId != null && Object.hasOwnProperty.call(message, "targetPlayerId"))
            writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.targetPlayerId);
        if (message.cardId != null && Object.hasOwnProperty.call(message, "cardId"))
            writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.cardId);
        return writer;
    };

    /**
     * Encodes the specified use_shi_tan_toc message, length delimited. Does not implicitly {@link use_shi_tan_toc.verify|verify} messages.
     * @function encodeDelimited
     * @memberof use_shi_tan_toc
     * @static
     * @param {Iuse_shi_tan_toc} message use_shi_tan_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    use_shi_tan_toc.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a use_shi_tan_toc message from the specified reader or buffer.
     * @function decode
     * @memberof use_shi_tan_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {use_shi_tan_toc} use_shi_tan_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    use_shi_tan_toc.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.use_shi_tan_toc();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.playerId = reader.uint32();
                    break;
                }
            case 2: {
                    message.targetPlayerId = reader.uint32();
                    break;
                }
            case 3: {
                    message.cardId = reader.uint32();
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a use_shi_tan_toc message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof use_shi_tan_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {use_shi_tan_toc} use_shi_tan_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    use_shi_tan_toc.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a use_shi_tan_toc message.
     * @function verify
     * @memberof use_shi_tan_toc
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    use_shi_tan_toc.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            if (!$util.isInteger(message.playerId))
                return "playerId: integer expected";
        if (message.targetPlayerId != null && message.hasOwnProperty("targetPlayerId"))
            if (!$util.isInteger(message.targetPlayerId))
                return "targetPlayerId: integer expected";
        if (message.cardId != null && message.hasOwnProperty("cardId"))
            if (!$util.isInteger(message.cardId))
                return "cardId: integer expected";
        return null;
    };

    /**
     * Creates a use_shi_tan_toc message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof use_shi_tan_toc
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {use_shi_tan_toc} use_shi_tan_toc
     */
    use_shi_tan_toc.fromObject = function fromObject(object) {
        if (object instanceof $root.use_shi_tan_toc)
            return object;
        var message = new $root.use_shi_tan_toc();
        if (object.playerId != null)
            message.playerId = object.playerId >>> 0;
        if (object.targetPlayerId != null)
            message.targetPlayerId = object.targetPlayerId >>> 0;
        if (object.cardId != null)
            message.cardId = object.cardId >>> 0;
        return message;
    };

    /**
     * Creates a plain object from a use_shi_tan_toc message. Also converts values to other types if specified.
     * @function toObject
     * @memberof use_shi_tan_toc
     * @static
     * @param {use_shi_tan_toc} message use_shi_tan_toc
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    use_shi_tan_toc.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults) {
            object.playerId = 0;
            object.targetPlayerId = 0;
            object.cardId = 0;
        }
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            object.playerId = message.playerId;
        if (message.targetPlayerId != null && message.hasOwnProperty("targetPlayerId"))
            object.targetPlayerId = message.targetPlayerId;
        if (message.cardId != null && message.hasOwnProperty("cardId"))
            object.cardId = message.cardId;
        return object;
    };

    /**
     * Converts this use_shi_tan_toc to JSON.
     * @function toJSON
     * @memberof use_shi_tan_toc
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    use_shi_tan_toc.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for use_shi_tan_toc
     * @function getTypeUrl
     * @memberof use_shi_tan_toc
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    use_shi_tan_toc.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/use_shi_tan_toc";
    };

    return use_shi_tan_toc;
})();

$root.show_shi_tan_toc = (function() {

    /**
     * Properties of a show_shi_tan_toc.
     * @exports Ishow_shi_tan_toc
     * @interface Ishow_shi_tan_toc
     * @property {number|null} [playerId] show_shi_tan_toc playerId
     * @property {number|null} [targetPlayerId] show_shi_tan_toc targetPlayerId
     * @property {Icard|null} [card] show_shi_tan_toc card
     * @property {number|null} [waitingSecond] show_shi_tan_toc waitingSecond
     * @property {number|null} [seq] show_shi_tan_toc seq
     */

    /**
     * Constructs a new show_shi_tan_toc.
     * @exports show_shi_tan_toc
     * @classdesc Represents a show_shi_tan_toc.
     * @implements Ishow_shi_tan_toc
     * @constructor
     * @param {Ishow_shi_tan_toc=} [properties] Properties to set
     */
    function show_shi_tan_toc(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * show_shi_tan_toc playerId.
     * @member {number} playerId
     * @memberof show_shi_tan_toc
     * @instance
     */
    show_shi_tan_toc.prototype.playerId = 0;

    /**
     * show_shi_tan_toc targetPlayerId.
     * @member {number} targetPlayerId
     * @memberof show_shi_tan_toc
     * @instance
     */
    show_shi_tan_toc.prototype.targetPlayerId = 0;

    /**
     * show_shi_tan_toc card.
     * @member {Icard|null|undefined} card
     * @memberof show_shi_tan_toc
     * @instance
     */
    show_shi_tan_toc.prototype.card = null;

    /**
     * show_shi_tan_toc waitingSecond.
     * @member {number} waitingSecond
     * @memberof show_shi_tan_toc
     * @instance
     */
    show_shi_tan_toc.prototype.waitingSecond = 0;

    /**
     * show_shi_tan_toc seq.
     * @member {number} seq
     * @memberof show_shi_tan_toc
     * @instance
     */
    show_shi_tan_toc.prototype.seq = 0;

    /**
     * Creates a new show_shi_tan_toc instance using the specified properties.
     * @function create
     * @memberof show_shi_tan_toc
     * @static
     * @param {Ishow_shi_tan_toc=} [properties] Properties to set
     * @returns {show_shi_tan_toc} show_shi_tan_toc instance
     */
    show_shi_tan_toc.create = function create(properties) {
        return new show_shi_tan_toc(properties);
    };

    /**
     * Encodes the specified show_shi_tan_toc message. Does not implicitly {@link show_shi_tan_toc.verify|verify} messages.
     * @function encode
     * @memberof show_shi_tan_toc
     * @static
     * @param {Ishow_shi_tan_toc} message show_shi_tan_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    show_shi_tan_toc.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.playerId != null && Object.hasOwnProperty.call(message, "playerId"))
            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.playerId);
        if (message.targetPlayerId != null && Object.hasOwnProperty.call(message, "targetPlayerId"))
            writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.targetPlayerId);
        if (message.card != null && Object.hasOwnProperty.call(message, "card"))
            $root.card.encode(message.card, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
        if (message.waitingSecond != null && Object.hasOwnProperty.call(message, "waitingSecond"))
            writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.waitingSecond);
        if (message.seq != null && Object.hasOwnProperty.call(message, "seq"))
            writer.uint32(/* id 5, wireType 0 =*/40).uint32(message.seq);
        return writer;
    };

    /**
     * Encodes the specified show_shi_tan_toc message, length delimited. Does not implicitly {@link show_shi_tan_toc.verify|verify} messages.
     * @function encodeDelimited
     * @memberof show_shi_tan_toc
     * @static
     * @param {Ishow_shi_tan_toc} message show_shi_tan_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    show_shi_tan_toc.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a show_shi_tan_toc message from the specified reader or buffer.
     * @function decode
     * @memberof show_shi_tan_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {show_shi_tan_toc} show_shi_tan_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    show_shi_tan_toc.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.show_shi_tan_toc();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.playerId = reader.uint32();
                    break;
                }
            case 2: {
                    message.targetPlayerId = reader.uint32();
                    break;
                }
            case 3: {
                    message.card = $root.card.decode(reader, reader.uint32());
                    break;
                }
            case 4: {
                    message.waitingSecond = reader.uint32();
                    break;
                }
            case 5: {
                    message.seq = reader.uint32();
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a show_shi_tan_toc message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof show_shi_tan_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {show_shi_tan_toc} show_shi_tan_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    show_shi_tan_toc.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a show_shi_tan_toc message.
     * @function verify
     * @memberof show_shi_tan_toc
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    show_shi_tan_toc.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            if (!$util.isInteger(message.playerId))
                return "playerId: integer expected";
        if (message.targetPlayerId != null && message.hasOwnProperty("targetPlayerId"))
            if (!$util.isInteger(message.targetPlayerId))
                return "targetPlayerId: integer expected";
        if (message.card != null && message.hasOwnProperty("card")) {
            var error = $root.card.verify(message.card);
            if (error)
                return "card." + error;
        }
        if (message.waitingSecond != null && message.hasOwnProperty("waitingSecond"))
            if (!$util.isInteger(message.waitingSecond))
                return "waitingSecond: integer expected";
        if (message.seq != null && message.hasOwnProperty("seq"))
            if (!$util.isInteger(message.seq))
                return "seq: integer expected";
        return null;
    };

    /**
     * Creates a show_shi_tan_toc message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof show_shi_tan_toc
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {show_shi_tan_toc} show_shi_tan_toc
     */
    show_shi_tan_toc.fromObject = function fromObject(object) {
        if (object instanceof $root.show_shi_tan_toc)
            return object;
        var message = new $root.show_shi_tan_toc();
        if (object.playerId != null)
            message.playerId = object.playerId >>> 0;
        if (object.targetPlayerId != null)
            message.targetPlayerId = object.targetPlayerId >>> 0;
        if (object.card != null) {
            if (typeof object.card !== "object")
                throw TypeError(".show_shi_tan_toc.card: object expected");
            message.card = $root.card.fromObject(object.card);
        }
        if (object.waitingSecond != null)
            message.waitingSecond = object.waitingSecond >>> 0;
        if (object.seq != null)
            message.seq = object.seq >>> 0;
        return message;
    };

    /**
     * Creates a plain object from a show_shi_tan_toc message. Also converts values to other types if specified.
     * @function toObject
     * @memberof show_shi_tan_toc
     * @static
     * @param {show_shi_tan_toc} message show_shi_tan_toc
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    show_shi_tan_toc.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults) {
            object.playerId = 0;
            object.targetPlayerId = 0;
            object.card = null;
            object.waitingSecond = 0;
            object.seq = 0;
        }
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            object.playerId = message.playerId;
        if (message.targetPlayerId != null && message.hasOwnProperty("targetPlayerId"))
            object.targetPlayerId = message.targetPlayerId;
        if (message.card != null && message.hasOwnProperty("card"))
            object.card = $root.card.toObject(message.card, options);
        if (message.waitingSecond != null && message.hasOwnProperty("waitingSecond"))
            object.waitingSecond = message.waitingSecond;
        if (message.seq != null && message.hasOwnProperty("seq"))
            object.seq = message.seq;
        return object;
    };

    /**
     * Converts this show_shi_tan_toc to JSON.
     * @function toJSON
     * @memberof show_shi_tan_toc
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    show_shi_tan_toc.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for show_shi_tan_toc
     * @function getTypeUrl
     * @memberof show_shi_tan_toc
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    show_shi_tan_toc.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/show_shi_tan_toc";
    };

    return show_shi_tan_toc;
})();

$root.execute_shi_tan_tos = (function() {

    /**
     * Properties of an execute_shi_tan_tos.
     * @exports Iexecute_shi_tan_tos
     * @interface Iexecute_shi_tan_tos
     * @property {Array.<number>|null} [cardId] execute_shi_tan_tos cardId
     * @property {number|null} [seq] execute_shi_tan_tos seq
     */

    /**
     * Constructs a new execute_shi_tan_tos.
     * @exports execute_shi_tan_tos
     * @classdesc Represents an execute_shi_tan_tos.
     * @implements Iexecute_shi_tan_tos
     * @constructor
     * @param {Iexecute_shi_tan_tos=} [properties] Properties to set
     */
    function execute_shi_tan_tos(properties) {
        this.cardId = [];
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * execute_shi_tan_tos cardId.
     * @member {Array.<number>} cardId
     * @memberof execute_shi_tan_tos
     * @instance
     */
    execute_shi_tan_tos.prototype.cardId = $util.emptyArray;

    /**
     * execute_shi_tan_tos seq.
     * @member {number} seq
     * @memberof execute_shi_tan_tos
     * @instance
     */
    execute_shi_tan_tos.prototype.seq = 0;

    /**
     * Creates a new execute_shi_tan_tos instance using the specified properties.
     * @function create
     * @memberof execute_shi_tan_tos
     * @static
     * @param {Iexecute_shi_tan_tos=} [properties] Properties to set
     * @returns {execute_shi_tan_tos} execute_shi_tan_tos instance
     */
    execute_shi_tan_tos.create = function create(properties) {
        return new execute_shi_tan_tos(properties);
    };

    /**
     * Encodes the specified execute_shi_tan_tos message. Does not implicitly {@link execute_shi_tan_tos.verify|verify} messages.
     * @function encode
     * @memberof execute_shi_tan_tos
     * @static
     * @param {Iexecute_shi_tan_tos} message execute_shi_tan_tos message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    execute_shi_tan_tos.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.cardId != null && message.cardId.length) {
            writer.uint32(/* id 1, wireType 2 =*/10).fork();
            for (var i = 0; i < message.cardId.length; ++i)
                writer.uint32(message.cardId[i]);
            writer.ldelim();
        }
        if (message.seq != null && Object.hasOwnProperty.call(message, "seq"))
            writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.seq);
        return writer;
    };

    /**
     * Encodes the specified execute_shi_tan_tos message, length delimited. Does not implicitly {@link execute_shi_tan_tos.verify|verify} messages.
     * @function encodeDelimited
     * @memberof execute_shi_tan_tos
     * @static
     * @param {Iexecute_shi_tan_tos} message execute_shi_tan_tos message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    execute_shi_tan_tos.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes an execute_shi_tan_tos message from the specified reader or buffer.
     * @function decode
     * @memberof execute_shi_tan_tos
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {execute_shi_tan_tos} execute_shi_tan_tos
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    execute_shi_tan_tos.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.execute_shi_tan_tos();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    if (!(message.cardId && message.cardId.length))
                        message.cardId = [];
                    if ((tag & 7) === 2) {
                        var end2 = reader.uint32() + reader.pos;
                        while (reader.pos < end2)
                            message.cardId.push(reader.uint32());
                    } else
                        message.cardId.push(reader.uint32());
                    break;
                }
            case 2: {
                    message.seq = reader.uint32();
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes an execute_shi_tan_tos message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof execute_shi_tan_tos
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {execute_shi_tan_tos} execute_shi_tan_tos
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    execute_shi_tan_tos.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies an execute_shi_tan_tos message.
     * @function verify
     * @memberof execute_shi_tan_tos
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    execute_shi_tan_tos.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.cardId != null && message.hasOwnProperty("cardId")) {
            if (!Array.isArray(message.cardId))
                return "cardId: array expected";
            for (var i = 0; i < message.cardId.length; ++i)
                if (!$util.isInteger(message.cardId[i]))
                    return "cardId: integer[] expected";
        }
        if (message.seq != null && message.hasOwnProperty("seq"))
            if (!$util.isInteger(message.seq))
                return "seq: integer expected";
        return null;
    };

    /**
     * Creates an execute_shi_tan_tos message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof execute_shi_tan_tos
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {execute_shi_tan_tos} execute_shi_tan_tos
     */
    execute_shi_tan_tos.fromObject = function fromObject(object) {
        if (object instanceof $root.execute_shi_tan_tos)
            return object;
        var message = new $root.execute_shi_tan_tos();
        if (object.cardId) {
            if (!Array.isArray(object.cardId))
                throw TypeError(".execute_shi_tan_tos.cardId: array expected");
            message.cardId = [];
            for (var i = 0; i < object.cardId.length; ++i)
                message.cardId[i] = object.cardId[i] >>> 0;
        }
        if (object.seq != null)
            message.seq = object.seq >>> 0;
        return message;
    };

    /**
     * Creates a plain object from an execute_shi_tan_tos message. Also converts values to other types if specified.
     * @function toObject
     * @memberof execute_shi_tan_tos
     * @static
     * @param {execute_shi_tan_tos} message execute_shi_tan_tos
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    execute_shi_tan_tos.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.arrays || options.defaults)
            object.cardId = [];
        if (options.defaults)
            object.seq = 0;
        if (message.cardId && message.cardId.length) {
            object.cardId = [];
            for (var j = 0; j < message.cardId.length; ++j)
                object.cardId[j] = message.cardId[j];
        }
        if (message.seq != null && message.hasOwnProperty("seq"))
            object.seq = message.seq;
        return object;
    };

    /**
     * Converts this execute_shi_tan_tos to JSON.
     * @function toJSON
     * @memberof execute_shi_tan_tos
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    execute_shi_tan_tos.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for execute_shi_tan_tos
     * @function getTypeUrl
     * @memberof execute_shi_tan_tos
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    execute_shi_tan_tos.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/execute_shi_tan_tos";
    };

    return execute_shi_tan_tos;
})();

$root.execute_shi_tan_toc = (function() {

    /**
     * Properties of an execute_shi_tan_toc.
     * @exports Iexecute_shi_tan_toc
     * @interface Iexecute_shi_tan_toc
     * @property {number|null} [playerId] execute_shi_tan_toc playerId
     * @property {boolean|null} [isDrawCard] execute_shi_tan_toc isDrawCard
     */

    /**
     * Constructs a new execute_shi_tan_toc.
     * @exports execute_shi_tan_toc
     * @classdesc Represents an execute_shi_tan_toc.
     * @implements Iexecute_shi_tan_toc
     * @constructor
     * @param {Iexecute_shi_tan_toc=} [properties] Properties to set
     */
    function execute_shi_tan_toc(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * execute_shi_tan_toc playerId.
     * @member {number} playerId
     * @memberof execute_shi_tan_toc
     * @instance
     */
    execute_shi_tan_toc.prototype.playerId = 0;

    /**
     * execute_shi_tan_toc isDrawCard.
     * @member {boolean} isDrawCard
     * @memberof execute_shi_tan_toc
     * @instance
     */
    execute_shi_tan_toc.prototype.isDrawCard = false;

    /**
     * Creates a new execute_shi_tan_toc instance using the specified properties.
     * @function create
     * @memberof execute_shi_tan_toc
     * @static
     * @param {Iexecute_shi_tan_toc=} [properties] Properties to set
     * @returns {execute_shi_tan_toc} execute_shi_tan_toc instance
     */
    execute_shi_tan_toc.create = function create(properties) {
        return new execute_shi_tan_toc(properties);
    };

    /**
     * Encodes the specified execute_shi_tan_toc message. Does not implicitly {@link execute_shi_tan_toc.verify|verify} messages.
     * @function encode
     * @memberof execute_shi_tan_toc
     * @static
     * @param {Iexecute_shi_tan_toc} message execute_shi_tan_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    execute_shi_tan_toc.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.playerId != null && Object.hasOwnProperty.call(message, "playerId"))
            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.playerId);
        if (message.isDrawCard != null && Object.hasOwnProperty.call(message, "isDrawCard"))
            writer.uint32(/* id 2, wireType 0 =*/16).bool(message.isDrawCard);
        return writer;
    };

    /**
     * Encodes the specified execute_shi_tan_toc message, length delimited. Does not implicitly {@link execute_shi_tan_toc.verify|verify} messages.
     * @function encodeDelimited
     * @memberof execute_shi_tan_toc
     * @static
     * @param {Iexecute_shi_tan_toc} message execute_shi_tan_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    execute_shi_tan_toc.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes an execute_shi_tan_toc message from the specified reader or buffer.
     * @function decode
     * @memberof execute_shi_tan_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {execute_shi_tan_toc} execute_shi_tan_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    execute_shi_tan_toc.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.execute_shi_tan_toc();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.playerId = reader.uint32();
                    break;
                }
            case 2: {
                    message.isDrawCard = reader.bool();
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes an execute_shi_tan_toc message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof execute_shi_tan_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {execute_shi_tan_toc} execute_shi_tan_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    execute_shi_tan_toc.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies an execute_shi_tan_toc message.
     * @function verify
     * @memberof execute_shi_tan_toc
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    execute_shi_tan_toc.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            if (!$util.isInteger(message.playerId))
                return "playerId: integer expected";
        if (message.isDrawCard != null && message.hasOwnProperty("isDrawCard"))
            if (typeof message.isDrawCard !== "boolean")
                return "isDrawCard: boolean expected";
        return null;
    };

    /**
     * Creates an execute_shi_tan_toc message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof execute_shi_tan_toc
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {execute_shi_tan_toc} execute_shi_tan_toc
     */
    execute_shi_tan_toc.fromObject = function fromObject(object) {
        if (object instanceof $root.execute_shi_tan_toc)
            return object;
        var message = new $root.execute_shi_tan_toc();
        if (object.playerId != null)
            message.playerId = object.playerId >>> 0;
        if (object.isDrawCard != null)
            message.isDrawCard = Boolean(object.isDrawCard);
        return message;
    };

    /**
     * Creates a plain object from an execute_shi_tan_toc message. Also converts values to other types if specified.
     * @function toObject
     * @memberof execute_shi_tan_toc
     * @static
     * @param {execute_shi_tan_toc} message execute_shi_tan_toc
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    execute_shi_tan_toc.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults) {
            object.playerId = 0;
            object.isDrawCard = false;
        }
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            object.playerId = message.playerId;
        if (message.isDrawCard != null && message.hasOwnProperty("isDrawCard"))
            object.isDrawCard = message.isDrawCard;
        return object;
    };

    /**
     * Converts this execute_shi_tan_toc to JSON.
     * @function toJSON
     * @memberof execute_shi_tan_toc
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    execute_shi_tan_toc.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for execute_shi_tan_toc
     * @function getTypeUrl
     * @memberof execute_shi_tan_toc
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    execute_shi_tan_toc.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/execute_shi_tan_toc";
    };

    return execute_shi_tan_toc;
})();

$root.sync_deck_num_toc = (function() {

    /**
     * Properties of a sync_deck_num_toc.
     * @exports Isync_deck_num_toc
     * @interface Isync_deck_num_toc
     * @property {number|null} [num] sync_deck_num_toc num
     * @property {boolean|null} [shuffled] sync_deck_num_toc shuffled
     */

    /**
     * Constructs a new sync_deck_num_toc.
     * @exports sync_deck_num_toc
     * @classdesc Represents a sync_deck_num_toc.
     * @implements Isync_deck_num_toc
     * @constructor
     * @param {Isync_deck_num_toc=} [properties] Properties to set
     */
    function sync_deck_num_toc(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * sync_deck_num_toc num.
     * @member {number} num
     * @memberof sync_deck_num_toc
     * @instance
     */
    sync_deck_num_toc.prototype.num = 0;

    /**
     * sync_deck_num_toc shuffled.
     * @member {boolean} shuffled
     * @memberof sync_deck_num_toc
     * @instance
     */
    sync_deck_num_toc.prototype.shuffled = false;

    /**
     * Creates a new sync_deck_num_toc instance using the specified properties.
     * @function create
     * @memberof sync_deck_num_toc
     * @static
     * @param {Isync_deck_num_toc=} [properties] Properties to set
     * @returns {sync_deck_num_toc} sync_deck_num_toc instance
     */
    sync_deck_num_toc.create = function create(properties) {
        return new sync_deck_num_toc(properties);
    };

    /**
     * Encodes the specified sync_deck_num_toc message. Does not implicitly {@link sync_deck_num_toc.verify|verify} messages.
     * @function encode
     * @memberof sync_deck_num_toc
     * @static
     * @param {Isync_deck_num_toc} message sync_deck_num_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    sync_deck_num_toc.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.num != null && Object.hasOwnProperty.call(message, "num"))
            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.num);
        if (message.shuffled != null && Object.hasOwnProperty.call(message, "shuffled"))
            writer.uint32(/* id 2, wireType 0 =*/16).bool(message.shuffled);
        return writer;
    };

    /**
     * Encodes the specified sync_deck_num_toc message, length delimited. Does not implicitly {@link sync_deck_num_toc.verify|verify} messages.
     * @function encodeDelimited
     * @memberof sync_deck_num_toc
     * @static
     * @param {Isync_deck_num_toc} message sync_deck_num_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    sync_deck_num_toc.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a sync_deck_num_toc message from the specified reader or buffer.
     * @function decode
     * @memberof sync_deck_num_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {sync_deck_num_toc} sync_deck_num_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    sync_deck_num_toc.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.sync_deck_num_toc();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.num = reader.uint32();
                    break;
                }
            case 2: {
                    message.shuffled = reader.bool();
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a sync_deck_num_toc message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof sync_deck_num_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {sync_deck_num_toc} sync_deck_num_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    sync_deck_num_toc.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a sync_deck_num_toc message.
     * @function verify
     * @memberof sync_deck_num_toc
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    sync_deck_num_toc.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.num != null && message.hasOwnProperty("num"))
            if (!$util.isInteger(message.num))
                return "num: integer expected";
        if (message.shuffled != null && message.hasOwnProperty("shuffled"))
            if (typeof message.shuffled !== "boolean")
                return "shuffled: boolean expected";
        return null;
    };

    /**
     * Creates a sync_deck_num_toc message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof sync_deck_num_toc
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {sync_deck_num_toc} sync_deck_num_toc
     */
    sync_deck_num_toc.fromObject = function fromObject(object) {
        if (object instanceof $root.sync_deck_num_toc)
            return object;
        var message = new $root.sync_deck_num_toc();
        if (object.num != null)
            message.num = object.num >>> 0;
        if (object.shuffled != null)
            message.shuffled = Boolean(object.shuffled);
        return message;
    };

    /**
     * Creates a plain object from a sync_deck_num_toc message. Also converts values to other types if specified.
     * @function toObject
     * @memberof sync_deck_num_toc
     * @static
     * @param {sync_deck_num_toc} message sync_deck_num_toc
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    sync_deck_num_toc.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults) {
            object.num = 0;
            object.shuffled = false;
        }
        if (message.num != null && message.hasOwnProperty("num"))
            object.num = message.num;
        if (message.shuffled != null && message.hasOwnProperty("shuffled"))
            object.shuffled = message.shuffled;
        return object;
    };

    /**
     * Converts this sync_deck_num_toc to JSON.
     * @function toJSON
     * @memberof sync_deck_num_toc
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    sync_deck_num_toc.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for sync_deck_num_toc
     * @function getTypeUrl
     * @memberof sync_deck_num_toc
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    sync_deck_num_toc.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/sync_deck_num_toc";
    };

    return sync_deck_num_toc;
})();

$root.discard_card_toc = (function() {

    /**
     * Properties of a discard_card_toc.
     * @exports Idiscard_card_toc
     * @interface Idiscard_card_toc
     * @property {number|null} [playerId] discard_card_toc playerId
     * @property {Array.<Icard>|null} [cards] discard_card_toc cards
     */

    /**
     * Constructs a new discard_card_toc.
     * @exports discard_card_toc
     * @classdesc Represents a discard_card_toc.
     * @implements Idiscard_card_toc
     * @constructor
     * @param {Idiscard_card_toc=} [properties] Properties to set
     */
    function discard_card_toc(properties) {
        this.cards = [];
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * discard_card_toc playerId.
     * @member {number} playerId
     * @memberof discard_card_toc
     * @instance
     */
    discard_card_toc.prototype.playerId = 0;

    /**
     * discard_card_toc cards.
     * @member {Array.<Icard>} cards
     * @memberof discard_card_toc
     * @instance
     */
    discard_card_toc.prototype.cards = $util.emptyArray;

    /**
     * Creates a new discard_card_toc instance using the specified properties.
     * @function create
     * @memberof discard_card_toc
     * @static
     * @param {Idiscard_card_toc=} [properties] Properties to set
     * @returns {discard_card_toc} discard_card_toc instance
     */
    discard_card_toc.create = function create(properties) {
        return new discard_card_toc(properties);
    };

    /**
     * Encodes the specified discard_card_toc message. Does not implicitly {@link discard_card_toc.verify|verify} messages.
     * @function encode
     * @memberof discard_card_toc
     * @static
     * @param {Idiscard_card_toc} message discard_card_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    discard_card_toc.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.playerId != null && Object.hasOwnProperty.call(message, "playerId"))
            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.playerId);
        if (message.cards != null && message.cards.length)
            for (var i = 0; i < message.cards.length; ++i)
                $root.card.encode(message.cards[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
        return writer;
    };

    /**
     * Encodes the specified discard_card_toc message, length delimited. Does not implicitly {@link discard_card_toc.verify|verify} messages.
     * @function encodeDelimited
     * @memberof discard_card_toc
     * @static
     * @param {Idiscard_card_toc} message discard_card_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    discard_card_toc.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a discard_card_toc message from the specified reader or buffer.
     * @function decode
     * @memberof discard_card_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {discard_card_toc} discard_card_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    discard_card_toc.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.discard_card_toc();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.playerId = reader.uint32();
                    break;
                }
            case 2: {
                    if (!(message.cards && message.cards.length))
                        message.cards = [];
                    message.cards.push($root.card.decode(reader, reader.uint32()));
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a discard_card_toc message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof discard_card_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {discard_card_toc} discard_card_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    discard_card_toc.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a discard_card_toc message.
     * @function verify
     * @memberof discard_card_toc
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    discard_card_toc.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            if (!$util.isInteger(message.playerId))
                return "playerId: integer expected";
        if (message.cards != null && message.hasOwnProperty("cards")) {
            if (!Array.isArray(message.cards))
                return "cards: array expected";
            for (var i = 0; i < message.cards.length; ++i) {
                var error = $root.card.verify(message.cards[i]);
                if (error)
                    return "cards." + error;
            }
        }
        return null;
    };

    /**
     * Creates a discard_card_toc message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof discard_card_toc
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {discard_card_toc} discard_card_toc
     */
    discard_card_toc.fromObject = function fromObject(object) {
        if (object instanceof $root.discard_card_toc)
            return object;
        var message = new $root.discard_card_toc();
        if (object.playerId != null)
            message.playerId = object.playerId >>> 0;
        if (object.cards) {
            if (!Array.isArray(object.cards))
                throw TypeError(".discard_card_toc.cards: array expected");
            message.cards = [];
            for (var i = 0; i < object.cards.length; ++i) {
                if (typeof object.cards[i] !== "object")
                    throw TypeError(".discard_card_toc.cards: object expected");
                message.cards[i] = $root.card.fromObject(object.cards[i]);
            }
        }
        return message;
    };

    /**
     * Creates a plain object from a discard_card_toc message. Also converts values to other types if specified.
     * @function toObject
     * @memberof discard_card_toc
     * @static
     * @param {discard_card_toc} message discard_card_toc
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    discard_card_toc.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.arrays || options.defaults)
            object.cards = [];
        if (options.defaults)
            object.playerId = 0;
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            object.playerId = message.playerId;
        if (message.cards && message.cards.length) {
            object.cards = [];
            for (var j = 0; j < message.cards.length; ++j)
                object.cards[j] = $root.card.toObject(message.cards[j], options);
        }
        return object;
    };

    /**
     * Converts this discard_card_toc to JSON.
     * @function toJSON
     * @memberof discard_card_toc
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    discard_card_toc.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for discard_card_toc
     * @function getTypeUrl
     * @memberof discard_card_toc
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    discard_card_toc.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/discard_card_toc";
    };

    return discard_card_toc;
})();

$root.notify_phase_toc = (function() {

    /**
     * Properties of a notify_phase_toc.
     * @exports Inotify_phase_toc
     * @interface Inotify_phase_toc
     * @property {number|null} [currentPlayerId] notify_phase_toc currentPlayerId
     * @property {phase|null} [currentPhase] notify_phase_toc currentPhase
     * @property {number|null} [messagePlayerId] notify_phase_toc messagePlayerId
     * @property {direction|null} [messageCardDir] notify_phase_toc messageCardDir
     * @property {Icard|null} [messageCard] notify_phase_toc messageCard
     * @property {number|null} [waitingPlayerId] notify_phase_toc waitingPlayerId
     * @property {number|null} [waitingSecond] notify_phase_toc waitingSecond
     * @property {number|null} [seq] notify_phase_toc seq
     * @property {number|null} [senderId] notify_phase_toc senderId
     */

    /**
     * Constructs a new notify_phase_toc.
     * @exports notify_phase_toc
     * @classdesc Represents a notify_phase_toc.
     * @implements Inotify_phase_toc
     * @constructor
     * @param {Inotify_phase_toc=} [properties] Properties to set
     */
    function notify_phase_toc(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * notify_phase_toc currentPlayerId.
     * @member {number} currentPlayerId
     * @memberof notify_phase_toc
     * @instance
     */
    notify_phase_toc.prototype.currentPlayerId = 0;

    /**
     * notify_phase_toc currentPhase.
     * @member {phase} currentPhase
     * @memberof notify_phase_toc
     * @instance
     */
    notify_phase_toc.prototype.currentPhase = 0;

    /**
     * notify_phase_toc messagePlayerId.
     * @member {number} messagePlayerId
     * @memberof notify_phase_toc
     * @instance
     */
    notify_phase_toc.prototype.messagePlayerId = 0;

    /**
     * notify_phase_toc messageCardDir.
     * @member {direction} messageCardDir
     * @memberof notify_phase_toc
     * @instance
     */
    notify_phase_toc.prototype.messageCardDir = 0;

    /**
     * notify_phase_toc messageCard.
     * @member {Icard|null|undefined} messageCard
     * @memberof notify_phase_toc
     * @instance
     */
    notify_phase_toc.prototype.messageCard = null;

    /**
     * notify_phase_toc waitingPlayerId.
     * @member {number} waitingPlayerId
     * @memberof notify_phase_toc
     * @instance
     */
    notify_phase_toc.prototype.waitingPlayerId = 0;

    /**
     * notify_phase_toc waitingSecond.
     * @member {number} waitingSecond
     * @memberof notify_phase_toc
     * @instance
     */
    notify_phase_toc.prototype.waitingSecond = 0;

    /**
     * notify_phase_toc seq.
     * @member {number} seq
     * @memberof notify_phase_toc
     * @instance
     */
    notify_phase_toc.prototype.seq = 0;

    /**
     * notify_phase_toc senderId.
     * @member {number} senderId
     * @memberof notify_phase_toc
     * @instance
     */
    notify_phase_toc.prototype.senderId = 0;

    /**
     * Creates a new notify_phase_toc instance using the specified properties.
     * @function create
     * @memberof notify_phase_toc
     * @static
     * @param {Inotify_phase_toc=} [properties] Properties to set
     * @returns {notify_phase_toc} notify_phase_toc instance
     */
    notify_phase_toc.create = function create(properties) {
        return new notify_phase_toc(properties);
    };

    /**
     * Encodes the specified notify_phase_toc message. Does not implicitly {@link notify_phase_toc.verify|verify} messages.
     * @function encode
     * @memberof notify_phase_toc
     * @static
     * @param {Inotify_phase_toc} message notify_phase_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    notify_phase_toc.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.currentPlayerId != null && Object.hasOwnProperty.call(message, "currentPlayerId"))
            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.currentPlayerId);
        if (message.currentPhase != null && Object.hasOwnProperty.call(message, "currentPhase"))
            writer.uint32(/* id 2, wireType 0 =*/16).int32(message.currentPhase);
        if (message.messagePlayerId != null && Object.hasOwnProperty.call(message, "messagePlayerId"))
            writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.messagePlayerId);
        if (message.messageCardDir != null && Object.hasOwnProperty.call(message, "messageCardDir"))
            writer.uint32(/* id 4, wireType 0 =*/32).int32(message.messageCardDir);
        if (message.messageCard != null && Object.hasOwnProperty.call(message, "messageCard"))
            $root.card.encode(message.messageCard, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
        if (message.waitingPlayerId != null && Object.hasOwnProperty.call(message, "waitingPlayerId"))
            writer.uint32(/* id 6, wireType 0 =*/48).uint32(message.waitingPlayerId);
        if (message.waitingSecond != null && Object.hasOwnProperty.call(message, "waitingSecond"))
            writer.uint32(/* id 7, wireType 0 =*/56).uint32(message.waitingSecond);
        if (message.seq != null && Object.hasOwnProperty.call(message, "seq"))
            writer.uint32(/* id 8, wireType 0 =*/64).uint32(message.seq);
        if (message.senderId != null && Object.hasOwnProperty.call(message, "senderId"))
            writer.uint32(/* id 9, wireType 0 =*/72).uint32(message.senderId);
        return writer;
    };

    /**
     * Encodes the specified notify_phase_toc message, length delimited. Does not implicitly {@link notify_phase_toc.verify|verify} messages.
     * @function encodeDelimited
     * @memberof notify_phase_toc
     * @static
     * @param {Inotify_phase_toc} message notify_phase_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    notify_phase_toc.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a notify_phase_toc message from the specified reader or buffer.
     * @function decode
     * @memberof notify_phase_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {notify_phase_toc} notify_phase_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    notify_phase_toc.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.notify_phase_toc();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.currentPlayerId = reader.uint32();
                    break;
                }
            case 2: {
                    message.currentPhase = reader.int32();
                    break;
                }
            case 3: {
                    message.messagePlayerId = reader.uint32();
                    break;
                }
            case 4: {
                    message.messageCardDir = reader.int32();
                    break;
                }
            case 5: {
                    message.messageCard = $root.card.decode(reader, reader.uint32());
                    break;
                }
            case 6: {
                    message.waitingPlayerId = reader.uint32();
                    break;
                }
            case 7: {
                    message.waitingSecond = reader.uint32();
                    break;
                }
            case 8: {
                    message.seq = reader.uint32();
                    break;
                }
            case 9: {
                    message.senderId = reader.uint32();
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a notify_phase_toc message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof notify_phase_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {notify_phase_toc} notify_phase_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    notify_phase_toc.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a notify_phase_toc message.
     * @function verify
     * @memberof notify_phase_toc
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    notify_phase_toc.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.currentPlayerId != null && message.hasOwnProperty("currentPlayerId"))
            if (!$util.isInteger(message.currentPlayerId))
                return "currentPlayerId: integer expected";
        if (message.currentPhase != null && message.hasOwnProperty("currentPhase"))
            switch (message.currentPhase) {
            default:
                return "currentPhase: enum value expected";
            case 0:
            case 1:
            case 2:
            case 3:
            case 4:
            case 5:
                break;
            }
        if (message.messagePlayerId != null && message.hasOwnProperty("messagePlayerId"))
            if (!$util.isInteger(message.messagePlayerId))
                return "messagePlayerId: integer expected";
        if (message.messageCardDir != null && message.hasOwnProperty("messageCardDir"))
            switch (message.messageCardDir) {
            default:
                return "messageCardDir: enum value expected";
            case 0:
            case 1:
            case 2:
                break;
            }
        if (message.messageCard != null && message.hasOwnProperty("messageCard")) {
            var error = $root.card.verify(message.messageCard);
            if (error)
                return "messageCard." + error;
        }
        if (message.waitingPlayerId != null && message.hasOwnProperty("waitingPlayerId"))
            if (!$util.isInteger(message.waitingPlayerId))
                return "waitingPlayerId: integer expected";
        if (message.waitingSecond != null && message.hasOwnProperty("waitingSecond"))
            if (!$util.isInteger(message.waitingSecond))
                return "waitingSecond: integer expected";
        if (message.seq != null && message.hasOwnProperty("seq"))
            if (!$util.isInteger(message.seq))
                return "seq: integer expected";
        if (message.senderId != null && message.hasOwnProperty("senderId"))
            if (!$util.isInteger(message.senderId))
                return "senderId: integer expected";
        return null;
    };

    /**
     * Creates a notify_phase_toc message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof notify_phase_toc
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {notify_phase_toc} notify_phase_toc
     */
    notify_phase_toc.fromObject = function fromObject(object) {
        if (object instanceof $root.notify_phase_toc)
            return object;
        var message = new $root.notify_phase_toc();
        if (object.currentPlayerId != null)
            message.currentPlayerId = object.currentPlayerId >>> 0;
        switch (object.currentPhase) {
        default:
            if (typeof object.currentPhase === "number") {
                message.currentPhase = object.currentPhase;
                break;
            }
            break;
        case "Draw_Phase":
        case 0:
            message.currentPhase = 0;
            break;
        case "Main_Phase":
        case 1:
            message.currentPhase = 1;
            break;
        case "Send_Start_Phase":
        case 2:
            message.currentPhase = 2;
            break;
        case "Send_Phase":
        case 3:
            message.currentPhase = 3;
            break;
        case "Fight_Phase":
        case 4:
            message.currentPhase = 4;
            break;
        case "Receive_Phase":
        case 5:
            message.currentPhase = 5;
            break;
        }
        if (object.messagePlayerId != null)
            message.messagePlayerId = object.messagePlayerId >>> 0;
        switch (object.messageCardDir) {
        default:
            if (typeof object.messageCardDir === "number") {
                message.messageCardDir = object.messageCardDir;
                break;
            }
            break;
        case "Up":
        case 0:
            message.messageCardDir = 0;
            break;
        case "Left":
        case 1:
            message.messageCardDir = 1;
            break;
        case "Right":
        case 2:
            message.messageCardDir = 2;
            break;
        }
        if (object.messageCard != null) {
            if (typeof object.messageCard !== "object")
                throw TypeError(".notify_phase_toc.messageCard: object expected");
            message.messageCard = $root.card.fromObject(object.messageCard);
        }
        if (object.waitingPlayerId != null)
            message.waitingPlayerId = object.waitingPlayerId >>> 0;
        if (object.waitingSecond != null)
            message.waitingSecond = object.waitingSecond >>> 0;
        if (object.seq != null)
            message.seq = object.seq >>> 0;
        if (object.senderId != null)
            message.senderId = object.senderId >>> 0;
        return message;
    };

    /**
     * Creates a plain object from a notify_phase_toc message. Also converts values to other types if specified.
     * @function toObject
     * @memberof notify_phase_toc
     * @static
     * @param {notify_phase_toc} message notify_phase_toc
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    notify_phase_toc.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults) {
            object.currentPlayerId = 0;
            object.currentPhase = options.enums === String ? "Draw_Phase" : 0;
            object.messagePlayerId = 0;
            object.messageCardDir = options.enums === String ? "Up" : 0;
            object.messageCard = null;
            object.waitingPlayerId = 0;
            object.waitingSecond = 0;
            object.seq = 0;
            object.senderId = 0;
        }
        if (message.currentPlayerId != null && message.hasOwnProperty("currentPlayerId"))
            object.currentPlayerId = message.currentPlayerId;
        if (message.currentPhase != null && message.hasOwnProperty("currentPhase"))
            object.currentPhase = options.enums === String ? $root.phase[message.currentPhase] === undefined ? message.currentPhase : $root.phase[message.currentPhase] : message.currentPhase;
        if (message.messagePlayerId != null && message.hasOwnProperty("messagePlayerId"))
            object.messagePlayerId = message.messagePlayerId;
        if (message.messageCardDir != null && message.hasOwnProperty("messageCardDir"))
            object.messageCardDir = options.enums === String ? $root.direction[message.messageCardDir] === undefined ? message.messageCardDir : $root.direction[message.messageCardDir] : message.messageCardDir;
        if (message.messageCard != null && message.hasOwnProperty("messageCard"))
            object.messageCard = $root.card.toObject(message.messageCard, options);
        if (message.waitingPlayerId != null && message.hasOwnProperty("waitingPlayerId"))
            object.waitingPlayerId = message.waitingPlayerId;
        if (message.waitingSecond != null && message.hasOwnProperty("waitingSecond"))
            object.waitingSecond = message.waitingSecond;
        if (message.seq != null && message.hasOwnProperty("seq"))
            object.seq = message.seq;
        if (message.senderId != null && message.hasOwnProperty("senderId"))
            object.senderId = message.senderId;
        return object;
    };

    /**
     * Converts this notify_phase_toc to JSON.
     * @function toJSON
     * @memberof notify_phase_toc
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    notify_phase_toc.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for notify_phase_toc
     * @function getTypeUrl
     * @memberof notify_phase_toc
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    notify_phase_toc.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/notify_phase_toc";
    };

    return notify_phase_toc;
})();

$root.end_main_phase_tos = (function() {

    /**
     * Properties of an end_main_phase_tos.
     * @exports Iend_main_phase_tos
     * @interface Iend_main_phase_tos
     * @property {number|null} [seq] end_main_phase_tos seq
     */

    /**
     * Constructs a new end_main_phase_tos.
     * @exports end_main_phase_tos
     * @classdesc Represents an end_main_phase_tos.
     * @implements Iend_main_phase_tos
     * @constructor
     * @param {Iend_main_phase_tos=} [properties] Properties to set
     */
    function end_main_phase_tos(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * end_main_phase_tos seq.
     * @member {number} seq
     * @memberof end_main_phase_tos
     * @instance
     */
    end_main_phase_tos.prototype.seq = 0;

    /**
     * Creates a new end_main_phase_tos instance using the specified properties.
     * @function create
     * @memberof end_main_phase_tos
     * @static
     * @param {Iend_main_phase_tos=} [properties] Properties to set
     * @returns {end_main_phase_tos} end_main_phase_tos instance
     */
    end_main_phase_tos.create = function create(properties) {
        return new end_main_phase_tos(properties);
    };

    /**
     * Encodes the specified end_main_phase_tos message. Does not implicitly {@link end_main_phase_tos.verify|verify} messages.
     * @function encode
     * @memberof end_main_phase_tos
     * @static
     * @param {Iend_main_phase_tos} message end_main_phase_tos message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    end_main_phase_tos.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.seq != null && Object.hasOwnProperty.call(message, "seq"))
            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.seq);
        return writer;
    };

    /**
     * Encodes the specified end_main_phase_tos message, length delimited. Does not implicitly {@link end_main_phase_tos.verify|verify} messages.
     * @function encodeDelimited
     * @memberof end_main_phase_tos
     * @static
     * @param {Iend_main_phase_tos} message end_main_phase_tos message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    end_main_phase_tos.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes an end_main_phase_tos message from the specified reader or buffer.
     * @function decode
     * @memberof end_main_phase_tos
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {end_main_phase_tos} end_main_phase_tos
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    end_main_phase_tos.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.end_main_phase_tos();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.seq = reader.uint32();
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes an end_main_phase_tos message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof end_main_phase_tos
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {end_main_phase_tos} end_main_phase_tos
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    end_main_phase_tos.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies an end_main_phase_tos message.
     * @function verify
     * @memberof end_main_phase_tos
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    end_main_phase_tos.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.seq != null && message.hasOwnProperty("seq"))
            if (!$util.isInteger(message.seq))
                return "seq: integer expected";
        return null;
    };

    /**
     * Creates an end_main_phase_tos message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof end_main_phase_tos
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {end_main_phase_tos} end_main_phase_tos
     */
    end_main_phase_tos.fromObject = function fromObject(object) {
        if (object instanceof $root.end_main_phase_tos)
            return object;
        var message = new $root.end_main_phase_tos();
        if (object.seq != null)
            message.seq = object.seq >>> 0;
        return message;
    };

    /**
     * Creates a plain object from an end_main_phase_tos message. Also converts values to other types if specified.
     * @function toObject
     * @memberof end_main_phase_tos
     * @static
     * @param {end_main_phase_tos} message end_main_phase_tos
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    end_main_phase_tos.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults)
            object.seq = 0;
        if (message.seq != null && message.hasOwnProperty("seq"))
            object.seq = message.seq;
        return object;
    };

    /**
     * Converts this end_main_phase_tos to JSON.
     * @function toJSON
     * @memberof end_main_phase_tos
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    end_main_phase_tos.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for end_main_phase_tos
     * @function getTypeUrl
     * @memberof end_main_phase_tos
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    end_main_phase_tos.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/end_main_phase_tos";
    };

    return end_main_phase_tos;
})();

$root.use_li_you_tos = (function() {

    /**
     * Properties of a use_li_you_tos.
     * @exports Iuse_li_you_tos
     * @interface Iuse_li_you_tos
     * @property {number|null} [cardId] use_li_you_tos cardId
     * @property {number|null} [playerId] use_li_you_tos playerId
     * @property {number|null} [seq] use_li_you_tos seq
     */

    /**
     * Constructs a new use_li_you_tos.
     * @exports use_li_you_tos
     * @classdesc Represents a use_li_you_tos.
     * @implements Iuse_li_you_tos
     * @constructor
     * @param {Iuse_li_you_tos=} [properties] Properties to set
     */
    function use_li_you_tos(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * use_li_you_tos cardId.
     * @member {number} cardId
     * @memberof use_li_you_tos
     * @instance
     */
    use_li_you_tos.prototype.cardId = 0;

    /**
     * use_li_you_tos playerId.
     * @member {number} playerId
     * @memberof use_li_you_tos
     * @instance
     */
    use_li_you_tos.prototype.playerId = 0;

    /**
     * use_li_you_tos seq.
     * @member {number} seq
     * @memberof use_li_you_tos
     * @instance
     */
    use_li_you_tos.prototype.seq = 0;

    /**
     * Creates a new use_li_you_tos instance using the specified properties.
     * @function create
     * @memberof use_li_you_tos
     * @static
     * @param {Iuse_li_you_tos=} [properties] Properties to set
     * @returns {use_li_you_tos} use_li_you_tos instance
     */
    use_li_you_tos.create = function create(properties) {
        return new use_li_you_tos(properties);
    };

    /**
     * Encodes the specified use_li_you_tos message. Does not implicitly {@link use_li_you_tos.verify|verify} messages.
     * @function encode
     * @memberof use_li_you_tos
     * @static
     * @param {Iuse_li_you_tos} message use_li_you_tos message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    use_li_you_tos.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.cardId != null && Object.hasOwnProperty.call(message, "cardId"))
            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.cardId);
        if (message.playerId != null && Object.hasOwnProperty.call(message, "playerId"))
            writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.playerId);
        if (message.seq != null && Object.hasOwnProperty.call(message, "seq"))
            writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.seq);
        return writer;
    };

    /**
     * Encodes the specified use_li_you_tos message, length delimited. Does not implicitly {@link use_li_you_tos.verify|verify} messages.
     * @function encodeDelimited
     * @memberof use_li_you_tos
     * @static
     * @param {Iuse_li_you_tos} message use_li_you_tos message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    use_li_you_tos.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a use_li_you_tos message from the specified reader or buffer.
     * @function decode
     * @memberof use_li_you_tos
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {use_li_you_tos} use_li_you_tos
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    use_li_you_tos.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.use_li_you_tos();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.cardId = reader.uint32();
                    break;
                }
            case 2: {
                    message.playerId = reader.uint32();
                    break;
                }
            case 3: {
                    message.seq = reader.uint32();
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a use_li_you_tos message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof use_li_you_tos
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {use_li_you_tos} use_li_you_tos
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    use_li_you_tos.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a use_li_you_tos message.
     * @function verify
     * @memberof use_li_you_tos
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    use_li_you_tos.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.cardId != null && message.hasOwnProperty("cardId"))
            if (!$util.isInteger(message.cardId))
                return "cardId: integer expected";
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            if (!$util.isInteger(message.playerId))
                return "playerId: integer expected";
        if (message.seq != null && message.hasOwnProperty("seq"))
            if (!$util.isInteger(message.seq))
                return "seq: integer expected";
        return null;
    };

    /**
     * Creates a use_li_you_tos message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof use_li_you_tos
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {use_li_you_tos} use_li_you_tos
     */
    use_li_you_tos.fromObject = function fromObject(object) {
        if (object instanceof $root.use_li_you_tos)
            return object;
        var message = new $root.use_li_you_tos();
        if (object.cardId != null)
            message.cardId = object.cardId >>> 0;
        if (object.playerId != null)
            message.playerId = object.playerId >>> 0;
        if (object.seq != null)
            message.seq = object.seq >>> 0;
        return message;
    };

    /**
     * Creates a plain object from a use_li_you_tos message. Also converts values to other types if specified.
     * @function toObject
     * @memberof use_li_you_tos
     * @static
     * @param {use_li_you_tos} message use_li_you_tos
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    use_li_you_tos.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults) {
            object.cardId = 0;
            object.playerId = 0;
            object.seq = 0;
        }
        if (message.cardId != null && message.hasOwnProperty("cardId"))
            object.cardId = message.cardId;
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            object.playerId = message.playerId;
        if (message.seq != null && message.hasOwnProperty("seq"))
            object.seq = message.seq;
        return object;
    };

    /**
     * Converts this use_li_you_tos to JSON.
     * @function toJSON
     * @memberof use_li_you_tos
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    use_li_you_tos.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for use_li_you_tos
     * @function getTypeUrl
     * @memberof use_li_you_tos
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    use_li_you_tos.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/use_li_you_tos";
    };

    return use_li_you_tos;
})();

$root.use_li_you_toc = (function() {

    /**
     * Properties of a use_li_you_toc.
     * @exports Iuse_li_you_toc
     * @interface Iuse_li_you_toc
     * @property {number|null} [playerId] use_li_you_toc playerId
     * @property {number|null} [targetPlayerId] use_li_you_toc targetPlayerId
     * @property {Icard|null} [liYouCard] use_li_you_toc liYouCard
     * @property {Icard|null} [messageCard] use_li_you_toc messageCard
     * @property {boolean|null} [joinIntoHand] use_li_you_toc joinIntoHand
     */

    /**
     * Constructs a new use_li_you_toc.
     * @exports use_li_you_toc
     * @classdesc Represents a use_li_you_toc.
     * @implements Iuse_li_you_toc
     * @constructor
     * @param {Iuse_li_you_toc=} [properties] Properties to set
     */
    function use_li_you_toc(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * use_li_you_toc playerId.
     * @member {number} playerId
     * @memberof use_li_you_toc
     * @instance
     */
    use_li_you_toc.prototype.playerId = 0;

    /**
     * use_li_you_toc targetPlayerId.
     * @member {number} targetPlayerId
     * @memberof use_li_you_toc
     * @instance
     */
    use_li_you_toc.prototype.targetPlayerId = 0;

    /**
     * use_li_you_toc liYouCard.
     * @member {Icard|null|undefined} liYouCard
     * @memberof use_li_you_toc
     * @instance
     */
    use_li_you_toc.prototype.liYouCard = null;

    /**
     * use_li_you_toc messageCard.
     * @member {Icard|null|undefined} messageCard
     * @memberof use_li_you_toc
     * @instance
     */
    use_li_you_toc.prototype.messageCard = null;

    /**
     * use_li_you_toc joinIntoHand.
     * @member {boolean} joinIntoHand
     * @memberof use_li_you_toc
     * @instance
     */
    use_li_you_toc.prototype.joinIntoHand = false;

    /**
     * Creates a new use_li_you_toc instance using the specified properties.
     * @function create
     * @memberof use_li_you_toc
     * @static
     * @param {Iuse_li_you_toc=} [properties] Properties to set
     * @returns {use_li_you_toc} use_li_you_toc instance
     */
    use_li_you_toc.create = function create(properties) {
        return new use_li_you_toc(properties);
    };

    /**
     * Encodes the specified use_li_you_toc message. Does not implicitly {@link use_li_you_toc.verify|verify} messages.
     * @function encode
     * @memberof use_li_you_toc
     * @static
     * @param {Iuse_li_you_toc} message use_li_you_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    use_li_you_toc.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.playerId != null && Object.hasOwnProperty.call(message, "playerId"))
            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.playerId);
        if (message.targetPlayerId != null && Object.hasOwnProperty.call(message, "targetPlayerId"))
            writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.targetPlayerId);
        if (message.liYouCard != null && Object.hasOwnProperty.call(message, "liYouCard"))
            $root.card.encode(message.liYouCard, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
        if (message.messageCard != null && Object.hasOwnProperty.call(message, "messageCard"))
            $root.card.encode(message.messageCard, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
        if (message.joinIntoHand != null && Object.hasOwnProperty.call(message, "joinIntoHand"))
            writer.uint32(/* id 5, wireType 0 =*/40).bool(message.joinIntoHand);
        return writer;
    };

    /**
     * Encodes the specified use_li_you_toc message, length delimited. Does not implicitly {@link use_li_you_toc.verify|verify} messages.
     * @function encodeDelimited
     * @memberof use_li_you_toc
     * @static
     * @param {Iuse_li_you_toc} message use_li_you_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    use_li_you_toc.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a use_li_you_toc message from the specified reader or buffer.
     * @function decode
     * @memberof use_li_you_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {use_li_you_toc} use_li_you_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    use_li_you_toc.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.use_li_you_toc();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.playerId = reader.uint32();
                    break;
                }
            case 2: {
                    message.targetPlayerId = reader.uint32();
                    break;
                }
            case 3: {
                    message.liYouCard = $root.card.decode(reader, reader.uint32());
                    break;
                }
            case 4: {
                    message.messageCard = $root.card.decode(reader, reader.uint32());
                    break;
                }
            case 5: {
                    message.joinIntoHand = reader.bool();
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a use_li_you_toc message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof use_li_you_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {use_li_you_toc} use_li_you_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    use_li_you_toc.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a use_li_you_toc message.
     * @function verify
     * @memberof use_li_you_toc
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    use_li_you_toc.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            if (!$util.isInteger(message.playerId))
                return "playerId: integer expected";
        if (message.targetPlayerId != null && message.hasOwnProperty("targetPlayerId"))
            if (!$util.isInteger(message.targetPlayerId))
                return "targetPlayerId: integer expected";
        if (message.liYouCard != null && message.hasOwnProperty("liYouCard")) {
            var error = $root.card.verify(message.liYouCard);
            if (error)
                return "liYouCard." + error;
        }
        if (message.messageCard != null && message.hasOwnProperty("messageCard")) {
            var error = $root.card.verify(message.messageCard);
            if (error)
                return "messageCard." + error;
        }
        if (message.joinIntoHand != null && message.hasOwnProperty("joinIntoHand"))
            if (typeof message.joinIntoHand !== "boolean")
                return "joinIntoHand: boolean expected";
        return null;
    };

    /**
     * Creates a use_li_you_toc message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof use_li_you_toc
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {use_li_you_toc} use_li_you_toc
     */
    use_li_you_toc.fromObject = function fromObject(object) {
        if (object instanceof $root.use_li_you_toc)
            return object;
        var message = new $root.use_li_you_toc();
        if (object.playerId != null)
            message.playerId = object.playerId >>> 0;
        if (object.targetPlayerId != null)
            message.targetPlayerId = object.targetPlayerId >>> 0;
        if (object.liYouCard != null) {
            if (typeof object.liYouCard !== "object")
                throw TypeError(".use_li_you_toc.liYouCard: object expected");
            message.liYouCard = $root.card.fromObject(object.liYouCard);
        }
        if (object.messageCard != null) {
            if (typeof object.messageCard !== "object")
                throw TypeError(".use_li_you_toc.messageCard: object expected");
            message.messageCard = $root.card.fromObject(object.messageCard);
        }
        if (object.joinIntoHand != null)
            message.joinIntoHand = Boolean(object.joinIntoHand);
        return message;
    };

    /**
     * Creates a plain object from a use_li_you_toc message. Also converts values to other types if specified.
     * @function toObject
     * @memberof use_li_you_toc
     * @static
     * @param {use_li_you_toc} message use_li_you_toc
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    use_li_you_toc.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults) {
            object.playerId = 0;
            object.targetPlayerId = 0;
            object.liYouCard = null;
            object.messageCard = null;
            object.joinIntoHand = false;
        }
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            object.playerId = message.playerId;
        if (message.targetPlayerId != null && message.hasOwnProperty("targetPlayerId"))
            object.targetPlayerId = message.targetPlayerId;
        if (message.liYouCard != null && message.hasOwnProperty("liYouCard"))
            object.liYouCard = $root.card.toObject(message.liYouCard, options);
        if (message.messageCard != null && message.hasOwnProperty("messageCard"))
            object.messageCard = $root.card.toObject(message.messageCard, options);
        if (message.joinIntoHand != null && message.hasOwnProperty("joinIntoHand"))
            object.joinIntoHand = message.joinIntoHand;
        return object;
    };

    /**
     * Converts this use_li_you_toc to JSON.
     * @function toJSON
     * @memberof use_li_you_toc
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    use_li_you_toc.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for use_li_you_toc
     * @function getTypeUrl
     * @memberof use_li_you_toc
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    use_li_you_toc.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/use_li_you_toc";
    };

    return use_li_you_toc;
})();

$root.use_ping_heng_tos = (function() {

    /**
     * Properties of a use_ping_heng_tos.
     * @exports Iuse_ping_heng_tos
     * @interface Iuse_ping_heng_tos
     * @property {number|null} [cardId] use_ping_heng_tos cardId
     * @property {number|null} [playerId] use_ping_heng_tos playerId
     * @property {number|null} [seq] use_ping_heng_tos seq
     */

    /**
     * Constructs a new use_ping_heng_tos.
     * @exports use_ping_heng_tos
     * @classdesc Represents a use_ping_heng_tos.
     * @implements Iuse_ping_heng_tos
     * @constructor
     * @param {Iuse_ping_heng_tos=} [properties] Properties to set
     */
    function use_ping_heng_tos(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * use_ping_heng_tos cardId.
     * @member {number} cardId
     * @memberof use_ping_heng_tos
     * @instance
     */
    use_ping_heng_tos.prototype.cardId = 0;

    /**
     * use_ping_heng_tos playerId.
     * @member {number} playerId
     * @memberof use_ping_heng_tos
     * @instance
     */
    use_ping_heng_tos.prototype.playerId = 0;

    /**
     * use_ping_heng_tos seq.
     * @member {number} seq
     * @memberof use_ping_heng_tos
     * @instance
     */
    use_ping_heng_tos.prototype.seq = 0;

    /**
     * Creates a new use_ping_heng_tos instance using the specified properties.
     * @function create
     * @memberof use_ping_heng_tos
     * @static
     * @param {Iuse_ping_heng_tos=} [properties] Properties to set
     * @returns {use_ping_heng_tos} use_ping_heng_tos instance
     */
    use_ping_heng_tos.create = function create(properties) {
        return new use_ping_heng_tos(properties);
    };

    /**
     * Encodes the specified use_ping_heng_tos message. Does not implicitly {@link use_ping_heng_tos.verify|verify} messages.
     * @function encode
     * @memberof use_ping_heng_tos
     * @static
     * @param {Iuse_ping_heng_tos} message use_ping_heng_tos message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    use_ping_heng_tos.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.cardId != null && Object.hasOwnProperty.call(message, "cardId"))
            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.cardId);
        if (message.playerId != null && Object.hasOwnProperty.call(message, "playerId"))
            writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.playerId);
        if (message.seq != null && Object.hasOwnProperty.call(message, "seq"))
            writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.seq);
        return writer;
    };

    /**
     * Encodes the specified use_ping_heng_tos message, length delimited. Does not implicitly {@link use_ping_heng_tos.verify|verify} messages.
     * @function encodeDelimited
     * @memberof use_ping_heng_tos
     * @static
     * @param {Iuse_ping_heng_tos} message use_ping_heng_tos message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    use_ping_heng_tos.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a use_ping_heng_tos message from the specified reader or buffer.
     * @function decode
     * @memberof use_ping_heng_tos
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {use_ping_heng_tos} use_ping_heng_tos
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    use_ping_heng_tos.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.use_ping_heng_tos();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.cardId = reader.uint32();
                    break;
                }
            case 2: {
                    message.playerId = reader.uint32();
                    break;
                }
            case 3: {
                    message.seq = reader.uint32();
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a use_ping_heng_tos message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof use_ping_heng_tos
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {use_ping_heng_tos} use_ping_heng_tos
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    use_ping_heng_tos.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a use_ping_heng_tos message.
     * @function verify
     * @memberof use_ping_heng_tos
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    use_ping_heng_tos.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.cardId != null && message.hasOwnProperty("cardId"))
            if (!$util.isInteger(message.cardId))
                return "cardId: integer expected";
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            if (!$util.isInteger(message.playerId))
                return "playerId: integer expected";
        if (message.seq != null && message.hasOwnProperty("seq"))
            if (!$util.isInteger(message.seq))
                return "seq: integer expected";
        return null;
    };

    /**
     * Creates a use_ping_heng_tos message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof use_ping_heng_tos
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {use_ping_heng_tos} use_ping_heng_tos
     */
    use_ping_heng_tos.fromObject = function fromObject(object) {
        if (object instanceof $root.use_ping_heng_tos)
            return object;
        var message = new $root.use_ping_heng_tos();
        if (object.cardId != null)
            message.cardId = object.cardId >>> 0;
        if (object.playerId != null)
            message.playerId = object.playerId >>> 0;
        if (object.seq != null)
            message.seq = object.seq >>> 0;
        return message;
    };

    /**
     * Creates a plain object from a use_ping_heng_tos message. Also converts values to other types if specified.
     * @function toObject
     * @memberof use_ping_heng_tos
     * @static
     * @param {use_ping_heng_tos} message use_ping_heng_tos
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    use_ping_heng_tos.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults) {
            object.cardId = 0;
            object.playerId = 0;
            object.seq = 0;
        }
        if (message.cardId != null && message.hasOwnProperty("cardId"))
            object.cardId = message.cardId;
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            object.playerId = message.playerId;
        if (message.seq != null && message.hasOwnProperty("seq"))
            object.seq = message.seq;
        return object;
    };

    /**
     * Converts this use_ping_heng_tos to JSON.
     * @function toJSON
     * @memberof use_ping_heng_tos
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    use_ping_heng_tos.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for use_ping_heng_tos
     * @function getTypeUrl
     * @memberof use_ping_heng_tos
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    use_ping_heng_tos.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/use_ping_heng_tos";
    };

    return use_ping_heng_tos;
})();

$root.use_ping_heng_toc = (function() {

    /**
     * Properties of a use_ping_heng_toc.
     * @exports Iuse_ping_heng_toc
     * @interface Iuse_ping_heng_toc
     * @property {number|null} [playerId] use_ping_heng_toc playerId
     * @property {number|null} [targetPlayerId] use_ping_heng_toc targetPlayerId
     * @property {Icard|null} [pingHengCard] use_ping_heng_toc pingHengCard
     */

    /**
     * Constructs a new use_ping_heng_toc.
     * @exports use_ping_heng_toc
     * @classdesc Represents a use_ping_heng_toc.
     * @implements Iuse_ping_heng_toc
     * @constructor
     * @param {Iuse_ping_heng_toc=} [properties] Properties to set
     */
    function use_ping_heng_toc(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * use_ping_heng_toc playerId.
     * @member {number} playerId
     * @memberof use_ping_heng_toc
     * @instance
     */
    use_ping_heng_toc.prototype.playerId = 0;

    /**
     * use_ping_heng_toc targetPlayerId.
     * @member {number} targetPlayerId
     * @memberof use_ping_heng_toc
     * @instance
     */
    use_ping_heng_toc.prototype.targetPlayerId = 0;

    /**
     * use_ping_heng_toc pingHengCard.
     * @member {Icard|null|undefined} pingHengCard
     * @memberof use_ping_heng_toc
     * @instance
     */
    use_ping_heng_toc.prototype.pingHengCard = null;

    /**
     * Creates a new use_ping_heng_toc instance using the specified properties.
     * @function create
     * @memberof use_ping_heng_toc
     * @static
     * @param {Iuse_ping_heng_toc=} [properties] Properties to set
     * @returns {use_ping_heng_toc} use_ping_heng_toc instance
     */
    use_ping_heng_toc.create = function create(properties) {
        return new use_ping_heng_toc(properties);
    };

    /**
     * Encodes the specified use_ping_heng_toc message. Does not implicitly {@link use_ping_heng_toc.verify|verify} messages.
     * @function encode
     * @memberof use_ping_heng_toc
     * @static
     * @param {Iuse_ping_heng_toc} message use_ping_heng_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    use_ping_heng_toc.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.playerId != null && Object.hasOwnProperty.call(message, "playerId"))
            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.playerId);
        if (message.targetPlayerId != null && Object.hasOwnProperty.call(message, "targetPlayerId"))
            writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.targetPlayerId);
        if (message.pingHengCard != null && Object.hasOwnProperty.call(message, "pingHengCard"))
            $root.card.encode(message.pingHengCard, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
        return writer;
    };

    /**
     * Encodes the specified use_ping_heng_toc message, length delimited. Does not implicitly {@link use_ping_heng_toc.verify|verify} messages.
     * @function encodeDelimited
     * @memberof use_ping_heng_toc
     * @static
     * @param {Iuse_ping_heng_toc} message use_ping_heng_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    use_ping_heng_toc.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a use_ping_heng_toc message from the specified reader or buffer.
     * @function decode
     * @memberof use_ping_heng_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {use_ping_heng_toc} use_ping_heng_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    use_ping_heng_toc.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.use_ping_heng_toc();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.playerId = reader.uint32();
                    break;
                }
            case 2: {
                    message.targetPlayerId = reader.uint32();
                    break;
                }
            case 3: {
                    message.pingHengCard = $root.card.decode(reader, reader.uint32());
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a use_ping_heng_toc message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof use_ping_heng_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {use_ping_heng_toc} use_ping_heng_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    use_ping_heng_toc.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a use_ping_heng_toc message.
     * @function verify
     * @memberof use_ping_heng_toc
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    use_ping_heng_toc.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            if (!$util.isInteger(message.playerId))
                return "playerId: integer expected";
        if (message.targetPlayerId != null && message.hasOwnProperty("targetPlayerId"))
            if (!$util.isInteger(message.targetPlayerId))
                return "targetPlayerId: integer expected";
        if (message.pingHengCard != null && message.hasOwnProperty("pingHengCard")) {
            var error = $root.card.verify(message.pingHengCard);
            if (error)
                return "pingHengCard." + error;
        }
        return null;
    };

    /**
     * Creates a use_ping_heng_toc message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof use_ping_heng_toc
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {use_ping_heng_toc} use_ping_heng_toc
     */
    use_ping_heng_toc.fromObject = function fromObject(object) {
        if (object instanceof $root.use_ping_heng_toc)
            return object;
        var message = new $root.use_ping_heng_toc();
        if (object.playerId != null)
            message.playerId = object.playerId >>> 0;
        if (object.targetPlayerId != null)
            message.targetPlayerId = object.targetPlayerId >>> 0;
        if (object.pingHengCard != null) {
            if (typeof object.pingHengCard !== "object")
                throw TypeError(".use_ping_heng_toc.pingHengCard: object expected");
            message.pingHengCard = $root.card.fromObject(object.pingHengCard);
        }
        return message;
    };

    /**
     * Creates a plain object from a use_ping_heng_toc message. Also converts values to other types if specified.
     * @function toObject
     * @memberof use_ping_heng_toc
     * @static
     * @param {use_ping_heng_toc} message use_ping_heng_toc
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    use_ping_heng_toc.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults) {
            object.playerId = 0;
            object.targetPlayerId = 0;
            object.pingHengCard = null;
        }
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            object.playerId = message.playerId;
        if (message.targetPlayerId != null && message.hasOwnProperty("targetPlayerId"))
            object.targetPlayerId = message.targetPlayerId;
        if (message.pingHengCard != null && message.hasOwnProperty("pingHengCard"))
            object.pingHengCard = $root.card.toObject(message.pingHengCard, options);
        return object;
    };

    /**
     * Converts this use_ping_heng_toc to JSON.
     * @function toJSON
     * @memberof use_ping_heng_toc
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    use_ping_heng_toc.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for use_ping_heng_toc
     * @function getTypeUrl
     * @memberof use_ping_heng_toc
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    use_ping_heng_toc.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/use_ping_heng_toc";
    };

    return use_ping_heng_toc;
})();

$root.use_wei_bi_tos = (function() {

    /**
     * Properties of a use_wei_bi_tos.
     * @exports Iuse_wei_bi_tos
     * @interface Iuse_wei_bi_tos
     * @property {number|null} [cardId] use_wei_bi_tos cardId
     * @property {number|null} [playerId] use_wei_bi_tos playerId
     * @property {card_type|null} [wantType] use_wei_bi_tos wantType
     * @property {number|null} [seq] use_wei_bi_tos seq
     */

    /**
     * Constructs a new use_wei_bi_tos.
     * @exports use_wei_bi_tos
     * @classdesc Represents a use_wei_bi_tos.
     * @implements Iuse_wei_bi_tos
     * @constructor
     * @param {Iuse_wei_bi_tos=} [properties] Properties to set
     */
    function use_wei_bi_tos(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * use_wei_bi_tos cardId.
     * @member {number} cardId
     * @memberof use_wei_bi_tos
     * @instance
     */
    use_wei_bi_tos.prototype.cardId = 0;

    /**
     * use_wei_bi_tos playerId.
     * @member {number} playerId
     * @memberof use_wei_bi_tos
     * @instance
     */
    use_wei_bi_tos.prototype.playerId = 0;

    /**
     * use_wei_bi_tos wantType.
     * @member {card_type} wantType
     * @memberof use_wei_bi_tos
     * @instance
     */
    use_wei_bi_tos.prototype.wantType = 0;

    /**
     * use_wei_bi_tos seq.
     * @member {number} seq
     * @memberof use_wei_bi_tos
     * @instance
     */
    use_wei_bi_tos.prototype.seq = 0;

    /**
     * Creates a new use_wei_bi_tos instance using the specified properties.
     * @function create
     * @memberof use_wei_bi_tos
     * @static
     * @param {Iuse_wei_bi_tos=} [properties] Properties to set
     * @returns {use_wei_bi_tos} use_wei_bi_tos instance
     */
    use_wei_bi_tos.create = function create(properties) {
        return new use_wei_bi_tos(properties);
    };

    /**
     * Encodes the specified use_wei_bi_tos message. Does not implicitly {@link use_wei_bi_tos.verify|verify} messages.
     * @function encode
     * @memberof use_wei_bi_tos
     * @static
     * @param {Iuse_wei_bi_tos} message use_wei_bi_tos message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    use_wei_bi_tos.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.cardId != null && Object.hasOwnProperty.call(message, "cardId"))
            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.cardId);
        if (message.playerId != null && Object.hasOwnProperty.call(message, "playerId"))
            writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.playerId);
        if (message.wantType != null && Object.hasOwnProperty.call(message, "wantType"))
            writer.uint32(/* id 3, wireType 0 =*/24).int32(message.wantType);
        if (message.seq != null && Object.hasOwnProperty.call(message, "seq"))
            writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.seq);
        return writer;
    };

    /**
     * Encodes the specified use_wei_bi_tos message, length delimited. Does not implicitly {@link use_wei_bi_tos.verify|verify} messages.
     * @function encodeDelimited
     * @memberof use_wei_bi_tos
     * @static
     * @param {Iuse_wei_bi_tos} message use_wei_bi_tos message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    use_wei_bi_tos.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a use_wei_bi_tos message from the specified reader or buffer.
     * @function decode
     * @memberof use_wei_bi_tos
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {use_wei_bi_tos} use_wei_bi_tos
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    use_wei_bi_tos.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.use_wei_bi_tos();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.cardId = reader.uint32();
                    break;
                }
            case 2: {
                    message.playerId = reader.uint32();
                    break;
                }
            case 3: {
                    message.wantType = reader.int32();
                    break;
                }
            case 4: {
                    message.seq = reader.uint32();
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a use_wei_bi_tos message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof use_wei_bi_tos
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {use_wei_bi_tos} use_wei_bi_tos
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    use_wei_bi_tos.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a use_wei_bi_tos message.
     * @function verify
     * @memberof use_wei_bi_tos
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    use_wei_bi_tos.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.cardId != null && message.hasOwnProperty("cardId"))
            if (!$util.isInteger(message.cardId))
                return "cardId: integer expected";
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            if (!$util.isInteger(message.playerId))
                return "playerId: integer expected";
        if (message.wantType != null && message.hasOwnProperty("wantType"))
            switch (message.wantType) {
            default:
                return "wantType: enum value expected";
            case 0:
            case 1:
            case 2:
            case 3:
            case 4:
            case 5:
            case 6:
            case 7:
            case 8:
            case 9:
                break;
            }
        if (message.seq != null && message.hasOwnProperty("seq"))
            if (!$util.isInteger(message.seq))
                return "seq: integer expected";
        return null;
    };

    /**
     * Creates a use_wei_bi_tos message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof use_wei_bi_tos
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {use_wei_bi_tos} use_wei_bi_tos
     */
    use_wei_bi_tos.fromObject = function fromObject(object) {
        if (object instanceof $root.use_wei_bi_tos)
            return object;
        var message = new $root.use_wei_bi_tos();
        if (object.cardId != null)
            message.cardId = object.cardId >>> 0;
        if (object.playerId != null)
            message.playerId = object.playerId >>> 0;
        switch (object.wantType) {
        default:
            if (typeof object.wantType === "number") {
                message.wantType = object.wantType;
                break;
            }
            break;
        case "Cheng_Qing":
        case 0:
            message.wantType = 0;
            break;
        case "Shi_Tan":
        case 1:
            message.wantType = 1;
            break;
        case "Wei_Bi":
        case 2:
            message.wantType = 2;
            break;
        case "Li_You":
        case 3:
            message.wantType = 3;
            break;
        case "Ping_Heng":
        case 4:
            message.wantType = 4;
            break;
        case "Po_Yi":
        case 5:
            message.wantType = 5;
            break;
        case "Jie_Huo":
        case 6:
            message.wantType = 6;
            break;
        case "Diao_Bao":
        case 7:
            message.wantType = 7;
            break;
        case "Wu_Dao":
        case 8:
            message.wantType = 8;
            break;
        case "Feng_Yun_Bian_Huan":
        case 9:
            message.wantType = 9;
            break;
        }
        if (object.seq != null)
            message.seq = object.seq >>> 0;
        return message;
    };

    /**
     * Creates a plain object from a use_wei_bi_tos message. Also converts values to other types if specified.
     * @function toObject
     * @memberof use_wei_bi_tos
     * @static
     * @param {use_wei_bi_tos} message use_wei_bi_tos
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    use_wei_bi_tos.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults) {
            object.cardId = 0;
            object.playerId = 0;
            object.wantType = options.enums === String ? "Cheng_Qing" : 0;
            object.seq = 0;
        }
        if (message.cardId != null && message.hasOwnProperty("cardId"))
            object.cardId = message.cardId;
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            object.playerId = message.playerId;
        if (message.wantType != null && message.hasOwnProperty("wantType"))
            object.wantType = options.enums === String ? $root.card_type[message.wantType] === undefined ? message.wantType : $root.card_type[message.wantType] : message.wantType;
        if (message.seq != null && message.hasOwnProperty("seq"))
            object.seq = message.seq;
        return object;
    };

    /**
     * Converts this use_wei_bi_tos to JSON.
     * @function toJSON
     * @memberof use_wei_bi_tos
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    use_wei_bi_tos.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for use_wei_bi_tos
     * @function getTypeUrl
     * @memberof use_wei_bi_tos
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    use_wei_bi_tos.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/use_wei_bi_tos";
    };

    return use_wei_bi_tos;
})();

$root.wei_bi_wait_for_give_card_toc = (function() {

    /**
     * Properties of a wei_bi_wait_for_give_card_toc.
     * @exports Iwei_bi_wait_for_give_card_toc
     * @interface Iwei_bi_wait_for_give_card_toc
     * @property {Icard|null} [card] wei_bi_wait_for_give_card_toc card
     * @property {number|null} [playerId] wei_bi_wait_for_give_card_toc playerId
     * @property {number|null} [targetPlayerId] wei_bi_wait_for_give_card_toc targetPlayerId
     * @property {card_type|null} [wantType] wei_bi_wait_for_give_card_toc wantType
     * @property {number|null} [waitingSecond] wei_bi_wait_for_give_card_toc waitingSecond
     * @property {number|null} [seq] wei_bi_wait_for_give_card_toc seq
     */

    /**
     * Constructs a new wei_bi_wait_for_give_card_toc.
     * @exports wei_bi_wait_for_give_card_toc
     * @classdesc Represents a wei_bi_wait_for_give_card_toc.
     * @implements Iwei_bi_wait_for_give_card_toc
     * @constructor
     * @param {Iwei_bi_wait_for_give_card_toc=} [properties] Properties to set
     */
    function wei_bi_wait_for_give_card_toc(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * wei_bi_wait_for_give_card_toc card.
     * @member {Icard|null|undefined} card
     * @memberof wei_bi_wait_for_give_card_toc
     * @instance
     */
    wei_bi_wait_for_give_card_toc.prototype.card = null;

    /**
     * wei_bi_wait_for_give_card_toc playerId.
     * @member {number} playerId
     * @memberof wei_bi_wait_for_give_card_toc
     * @instance
     */
    wei_bi_wait_for_give_card_toc.prototype.playerId = 0;

    /**
     * wei_bi_wait_for_give_card_toc targetPlayerId.
     * @member {number} targetPlayerId
     * @memberof wei_bi_wait_for_give_card_toc
     * @instance
     */
    wei_bi_wait_for_give_card_toc.prototype.targetPlayerId = 0;

    /**
     * wei_bi_wait_for_give_card_toc wantType.
     * @member {card_type} wantType
     * @memberof wei_bi_wait_for_give_card_toc
     * @instance
     */
    wei_bi_wait_for_give_card_toc.prototype.wantType = 0;

    /**
     * wei_bi_wait_for_give_card_toc waitingSecond.
     * @member {number} waitingSecond
     * @memberof wei_bi_wait_for_give_card_toc
     * @instance
     */
    wei_bi_wait_for_give_card_toc.prototype.waitingSecond = 0;

    /**
     * wei_bi_wait_for_give_card_toc seq.
     * @member {number} seq
     * @memberof wei_bi_wait_for_give_card_toc
     * @instance
     */
    wei_bi_wait_for_give_card_toc.prototype.seq = 0;

    /**
     * Creates a new wei_bi_wait_for_give_card_toc instance using the specified properties.
     * @function create
     * @memberof wei_bi_wait_for_give_card_toc
     * @static
     * @param {Iwei_bi_wait_for_give_card_toc=} [properties] Properties to set
     * @returns {wei_bi_wait_for_give_card_toc} wei_bi_wait_for_give_card_toc instance
     */
    wei_bi_wait_for_give_card_toc.create = function create(properties) {
        return new wei_bi_wait_for_give_card_toc(properties);
    };

    /**
     * Encodes the specified wei_bi_wait_for_give_card_toc message. Does not implicitly {@link wei_bi_wait_for_give_card_toc.verify|verify} messages.
     * @function encode
     * @memberof wei_bi_wait_for_give_card_toc
     * @static
     * @param {Iwei_bi_wait_for_give_card_toc} message wei_bi_wait_for_give_card_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    wei_bi_wait_for_give_card_toc.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.card != null && Object.hasOwnProperty.call(message, "card"))
            $root.card.encode(message.card, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
        if (message.playerId != null && Object.hasOwnProperty.call(message, "playerId"))
            writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.playerId);
        if (message.targetPlayerId != null && Object.hasOwnProperty.call(message, "targetPlayerId"))
            writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.targetPlayerId);
        if (message.wantType != null && Object.hasOwnProperty.call(message, "wantType"))
            writer.uint32(/* id 4, wireType 0 =*/32).int32(message.wantType);
        if (message.waitingSecond != null && Object.hasOwnProperty.call(message, "waitingSecond"))
            writer.uint32(/* id 5, wireType 0 =*/40).uint32(message.waitingSecond);
        if (message.seq != null && Object.hasOwnProperty.call(message, "seq"))
            writer.uint32(/* id 6, wireType 0 =*/48).uint32(message.seq);
        return writer;
    };

    /**
     * Encodes the specified wei_bi_wait_for_give_card_toc message, length delimited. Does not implicitly {@link wei_bi_wait_for_give_card_toc.verify|verify} messages.
     * @function encodeDelimited
     * @memberof wei_bi_wait_for_give_card_toc
     * @static
     * @param {Iwei_bi_wait_for_give_card_toc} message wei_bi_wait_for_give_card_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    wei_bi_wait_for_give_card_toc.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a wei_bi_wait_for_give_card_toc message from the specified reader or buffer.
     * @function decode
     * @memberof wei_bi_wait_for_give_card_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {wei_bi_wait_for_give_card_toc} wei_bi_wait_for_give_card_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    wei_bi_wait_for_give_card_toc.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.wei_bi_wait_for_give_card_toc();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.card = $root.card.decode(reader, reader.uint32());
                    break;
                }
            case 2: {
                    message.playerId = reader.uint32();
                    break;
                }
            case 3: {
                    message.targetPlayerId = reader.uint32();
                    break;
                }
            case 4: {
                    message.wantType = reader.int32();
                    break;
                }
            case 5: {
                    message.waitingSecond = reader.uint32();
                    break;
                }
            case 6: {
                    message.seq = reader.uint32();
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a wei_bi_wait_for_give_card_toc message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof wei_bi_wait_for_give_card_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {wei_bi_wait_for_give_card_toc} wei_bi_wait_for_give_card_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    wei_bi_wait_for_give_card_toc.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a wei_bi_wait_for_give_card_toc message.
     * @function verify
     * @memberof wei_bi_wait_for_give_card_toc
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    wei_bi_wait_for_give_card_toc.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.card != null && message.hasOwnProperty("card")) {
            var error = $root.card.verify(message.card);
            if (error)
                return "card." + error;
        }
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            if (!$util.isInteger(message.playerId))
                return "playerId: integer expected";
        if (message.targetPlayerId != null && message.hasOwnProperty("targetPlayerId"))
            if (!$util.isInteger(message.targetPlayerId))
                return "targetPlayerId: integer expected";
        if (message.wantType != null && message.hasOwnProperty("wantType"))
            switch (message.wantType) {
            default:
                return "wantType: enum value expected";
            case 0:
            case 1:
            case 2:
            case 3:
            case 4:
            case 5:
            case 6:
            case 7:
            case 8:
            case 9:
                break;
            }
        if (message.waitingSecond != null && message.hasOwnProperty("waitingSecond"))
            if (!$util.isInteger(message.waitingSecond))
                return "waitingSecond: integer expected";
        if (message.seq != null && message.hasOwnProperty("seq"))
            if (!$util.isInteger(message.seq))
                return "seq: integer expected";
        return null;
    };

    /**
     * Creates a wei_bi_wait_for_give_card_toc message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof wei_bi_wait_for_give_card_toc
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {wei_bi_wait_for_give_card_toc} wei_bi_wait_for_give_card_toc
     */
    wei_bi_wait_for_give_card_toc.fromObject = function fromObject(object) {
        if (object instanceof $root.wei_bi_wait_for_give_card_toc)
            return object;
        var message = new $root.wei_bi_wait_for_give_card_toc();
        if (object.card != null) {
            if (typeof object.card !== "object")
                throw TypeError(".wei_bi_wait_for_give_card_toc.card: object expected");
            message.card = $root.card.fromObject(object.card);
        }
        if (object.playerId != null)
            message.playerId = object.playerId >>> 0;
        if (object.targetPlayerId != null)
            message.targetPlayerId = object.targetPlayerId >>> 0;
        switch (object.wantType) {
        default:
            if (typeof object.wantType === "number") {
                message.wantType = object.wantType;
                break;
            }
            break;
        case "Cheng_Qing":
        case 0:
            message.wantType = 0;
            break;
        case "Shi_Tan":
        case 1:
            message.wantType = 1;
            break;
        case "Wei_Bi":
        case 2:
            message.wantType = 2;
            break;
        case "Li_You":
        case 3:
            message.wantType = 3;
            break;
        case "Ping_Heng":
        case 4:
            message.wantType = 4;
            break;
        case "Po_Yi":
        case 5:
            message.wantType = 5;
            break;
        case "Jie_Huo":
        case 6:
            message.wantType = 6;
            break;
        case "Diao_Bao":
        case 7:
            message.wantType = 7;
            break;
        case "Wu_Dao":
        case 8:
            message.wantType = 8;
            break;
        case "Feng_Yun_Bian_Huan":
        case 9:
            message.wantType = 9;
            break;
        }
        if (object.waitingSecond != null)
            message.waitingSecond = object.waitingSecond >>> 0;
        if (object.seq != null)
            message.seq = object.seq >>> 0;
        return message;
    };

    /**
     * Creates a plain object from a wei_bi_wait_for_give_card_toc message. Also converts values to other types if specified.
     * @function toObject
     * @memberof wei_bi_wait_for_give_card_toc
     * @static
     * @param {wei_bi_wait_for_give_card_toc} message wei_bi_wait_for_give_card_toc
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    wei_bi_wait_for_give_card_toc.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults) {
            object.card = null;
            object.playerId = 0;
            object.targetPlayerId = 0;
            object.wantType = options.enums === String ? "Cheng_Qing" : 0;
            object.waitingSecond = 0;
            object.seq = 0;
        }
        if (message.card != null && message.hasOwnProperty("card"))
            object.card = $root.card.toObject(message.card, options);
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            object.playerId = message.playerId;
        if (message.targetPlayerId != null && message.hasOwnProperty("targetPlayerId"))
            object.targetPlayerId = message.targetPlayerId;
        if (message.wantType != null && message.hasOwnProperty("wantType"))
            object.wantType = options.enums === String ? $root.card_type[message.wantType] === undefined ? message.wantType : $root.card_type[message.wantType] : message.wantType;
        if (message.waitingSecond != null && message.hasOwnProperty("waitingSecond"))
            object.waitingSecond = message.waitingSecond;
        if (message.seq != null && message.hasOwnProperty("seq"))
            object.seq = message.seq;
        return object;
    };

    /**
     * Converts this wei_bi_wait_for_give_card_toc to JSON.
     * @function toJSON
     * @memberof wei_bi_wait_for_give_card_toc
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    wei_bi_wait_for_give_card_toc.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for wei_bi_wait_for_give_card_toc
     * @function getTypeUrl
     * @memberof wei_bi_wait_for_give_card_toc
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    wei_bi_wait_for_give_card_toc.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/wei_bi_wait_for_give_card_toc";
    };

    return wei_bi_wait_for_give_card_toc;
})();

$root.wei_bi_give_card_tos = (function() {

    /**
     * Properties of a wei_bi_give_card_tos.
     * @exports Iwei_bi_give_card_tos
     * @interface Iwei_bi_give_card_tos
     * @property {number|null} [cardId] wei_bi_give_card_tos cardId
     * @property {number|null} [seq] wei_bi_give_card_tos seq
     */

    /**
     * Constructs a new wei_bi_give_card_tos.
     * @exports wei_bi_give_card_tos
     * @classdesc Represents a wei_bi_give_card_tos.
     * @implements Iwei_bi_give_card_tos
     * @constructor
     * @param {Iwei_bi_give_card_tos=} [properties] Properties to set
     */
    function wei_bi_give_card_tos(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * wei_bi_give_card_tos cardId.
     * @member {number} cardId
     * @memberof wei_bi_give_card_tos
     * @instance
     */
    wei_bi_give_card_tos.prototype.cardId = 0;

    /**
     * wei_bi_give_card_tos seq.
     * @member {number} seq
     * @memberof wei_bi_give_card_tos
     * @instance
     */
    wei_bi_give_card_tos.prototype.seq = 0;

    /**
     * Creates a new wei_bi_give_card_tos instance using the specified properties.
     * @function create
     * @memberof wei_bi_give_card_tos
     * @static
     * @param {Iwei_bi_give_card_tos=} [properties] Properties to set
     * @returns {wei_bi_give_card_tos} wei_bi_give_card_tos instance
     */
    wei_bi_give_card_tos.create = function create(properties) {
        return new wei_bi_give_card_tos(properties);
    };

    /**
     * Encodes the specified wei_bi_give_card_tos message. Does not implicitly {@link wei_bi_give_card_tos.verify|verify} messages.
     * @function encode
     * @memberof wei_bi_give_card_tos
     * @static
     * @param {Iwei_bi_give_card_tos} message wei_bi_give_card_tos message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    wei_bi_give_card_tos.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.cardId != null && Object.hasOwnProperty.call(message, "cardId"))
            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.cardId);
        if (message.seq != null && Object.hasOwnProperty.call(message, "seq"))
            writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.seq);
        return writer;
    };

    /**
     * Encodes the specified wei_bi_give_card_tos message, length delimited. Does not implicitly {@link wei_bi_give_card_tos.verify|verify} messages.
     * @function encodeDelimited
     * @memberof wei_bi_give_card_tos
     * @static
     * @param {Iwei_bi_give_card_tos} message wei_bi_give_card_tos message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    wei_bi_give_card_tos.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a wei_bi_give_card_tos message from the specified reader or buffer.
     * @function decode
     * @memberof wei_bi_give_card_tos
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {wei_bi_give_card_tos} wei_bi_give_card_tos
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    wei_bi_give_card_tos.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.wei_bi_give_card_tos();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.cardId = reader.uint32();
                    break;
                }
            case 2: {
                    message.seq = reader.uint32();
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a wei_bi_give_card_tos message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof wei_bi_give_card_tos
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {wei_bi_give_card_tos} wei_bi_give_card_tos
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    wei_bi_give_card_tos.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a wei_bi_give_card_tos message.
     * @function verify
     * @memberof wei_bi_give_card_tos
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    wei_bi_give_card_tos.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.cardId != null && message.hasOwnProperty("cardId"))
            if (!$util.isInteger(message.cardId))
                return "cardId: integer expected";
        if (message.seq != null && message.hasOwnProperty("seq"))
            if (!$util.isInteger(message.seq))
                return "seq: integer expected";
        return null;
    };

    /**
     * Creates a wei_bi_give_card_tos message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof wei_bi_give_card_tos
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {wei_bi_give_card_tos} wei_bi_give_card_tos
     */
    wei_bi_give_card_tos.fromObject = function fromObject(object) {
        if (object instanceof $root.wei_bi_give_card_tos)
            return object;
        var message = new $root.wei_bi_give_card_tos();
        if (object.cardId != null)
            message.cardId = object.cardId >>> 0;
        if (object.seq != null)
            message.seq = object.seq >>> 0;
        return message;
    };

    /**
     * Creates a plain object from a wei_bi_give_card_tos message. Also converts values to other types if specified.
     * @function toObject
     * @memberof wei_bi_give_card_tos
     * @static
     * @param {wei_bi_give_card_tos} message wei_bi_give_card_tos
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    wei_bi_give_card_tos.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults) {
            object.cardId = 0;
            object.seq = 0;
        }
        if (message.cardId != null && message.hasOwnProperty("cardId"))
            object.cardId = message.cardId;
        if (message.seq != null && message.hasOwnProperty("seq"))
            object.seq = message.seq;
        return object;
    };

    /**
     * Converts this wei_bi_give_card_tos to JSON.
     * @function toJSON
     * @memberof wei_bi_give_card_tos
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    wei_bi_give_card_tos.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for wei_bi_give_card_tos
     * @function getTypeUrl
     * @memberof wei_bi_give_card_tos
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    wei_bi_give_card_tos.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/wei_bi_give_card_tos";
    };

    return wei_bi_give_card_tos;
})();

$root.wei_bi_give_card_toc = (function() {

    /**
     * Properties of a wei_bi_give_card_toc.
     * @exports Iwei_bi_give_card_toc
     * @interface Iwei_bi_give_card_toc
     * @property {number|null} [playerId] wei_bi_give_card_toc playerId
     * @property {number|null} [targetPlayerId] wei_bi_give_card_toc targetPlayerId
     * @property {Icard|null} [card] wei_bi_give_card_toc card
     */

    /**
     * Constructs a new wei_bi_give_card_toc.
     * @exports wei_bi_give_card_toc
     * @classdesc Represents a wei_bi_give_card_toc.
     * @implements Iwei_bi_give_card_toc
     * @constructor
     * @param {Iwei_bi_give_card_toc=} [properties] Properties to set
     */
    function wei_bi_give_card_toc(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * wei_bi_give_card_toc playerId.
     * @member {number} playerId
     * @memberof wei_bi_give_card_toc
     * @instance
     */
    wei_bi_give_card_toc.prototype.playerId = 0;

    /**
     * wei_bi_give_card_toc targetPlayerId.
     * @member {number} targetPlayerId
     * @memberof wei_bi_give_card_toc
     * @instance
     */
    wei_bi_give_card_toc.prototype.targetPlayerId = 0;

    /**
     * wei_bi_give_card_toc card.
     * @member {Icard|null|undefined} card
     * @memberof wei_bi_give_card_toc
     * @instance
     */
    wei_bi_give_card_toc.prototype.card = null;

    /**
     * Creates a new wei_bi_give_card_toc instance using the specified properties.
     * @function create
     * @memberof wei_bi_give_card_toc
     * @static
     * @param {Iwei_bi_give_card_toc=} [properties] Properties to set
     * @returns {wei_bi_give_card_toc} wei_bi_give_card_toc instance
     */
    wei_bi_give_card_toc.create = function create(properties) {
        return new wei_bi_give_card_toc(properties);
    };

    /**
     * Encodes the specified wei_bi_give_card_toc message. Does not implicitly {@link wei_bi_give_card_toc.verify|verify} messages.
     * @function encode
     * @memberof wei_bi_give_card_toc
     * @static
     * @param {Iwei_bi_give_card_toc} message wei_bi_give_card_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    wei_bi_give_card_toc.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.playerId != null && Object.hasOwnProperty.call(message, "playerId"))
            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.playerId);
        if (message.targetPlayerId != null && Object.hasOwnProperty.call(message, "targetPlayerId"))
            writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.targetPlayerId);
        if (message.card != null && Object.hasOwnProperty.call(message, "card"))
            $root.card.encode(message.card, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
        return writer;
    };

    /**
     * Encodes the specified wei_bi_give_card_toc message, length delimited. Does not implicitly {@link wei_bi_give_card_toc.verify|verify} messages.
     * @function encodeDelimited
     * @memberof wei_bi_give_card_toc
     * @static
     * @param {Iwei_bi_give_card_toc} message wei_bi_give_card_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    wei_bi_give_card_toc.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a wei_bi_give_card_toc message from the specified reader or buffer.
     * @function decode
     * @memberof wei_bi_give_card_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {wei_bi_give_card_toc} wei_bi_give_card_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    wei_bi_give_card_toc.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.wei_bi_give_card_toc();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.playerId = reader.uint32();
                    break;
                }
            case 2: {
                    message.targetPlayerId = reader.uint32();
                    break;
                }
            case 3: {
                    message.card = $root.card.decode(reader, reader.uint32());
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a wei_bi_give_card_toc message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof wei_bi_give_card_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {wei_bi_give_card_toc} wei_bi_give_card_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    wei_bi_give_card_toc.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a wei_bi_give_card_toc message.
     * @function verify
     * @memberof wei_bi_give_card_toc
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    wei_bi_give_card_toc.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            if (!$util.isInteger(message.playerId))
                return "playerId: integer expected";
        if (message.targetPlayerId != null && message.hasOwnProperty("targetPlayerId"))
            if (!$util.isInteger(message.targetPlayerId))
                return "targetPlayerId: integer expected";
        if (message.card != null && message.hasOwnProperty("card")) {
            var error = $root.card.verify(message.card);
            if (error)
                return "card." + error;
        }
        return null;
    };

    /**
     * Creates a wei_bi_give_card_toc message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof wei_bi_give_card_toc
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {wei_bi_give_card_toc} wei_bi_give_card_toc
     */
    wei_bi_give_card_toc.fromObject = function fromObject(object) {
        if (object instanceof $root.wei_bi_give_card_toc)
            return object;
        var message = new $root.wei_bi_give_card_toc();
        if (object.playerId != null)
            message.playerId = object.playerId >>> 0;
        if (object.targetPlayerId != null)
            message.targetPlayerId = object.targetPlayerId >>> 0;
        if (object.card != null) {
            if (typeof object.card !== "object")
                throw TypeError(".wei_bi_give_card_toc.card: object expected");
            message.card = $root.card.fromObject(object.card);
        }
        return message;
    };

    /**
     * Creates a plain object from a wei_bi_give_card_toc message. Also converts values to other types if specified.
     * @function toObject
     * @memberof wei_bi_give_card_toc
     * @static
     * @param {wei_bi_give_card_toc} message wei_bi_give_card_toc
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    wei_bi_give_card_toc.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults) {
            object.playerId = 0;
            object.targetPlayerId = 0;
            object.card = null;
        }
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            object.playerId = message.playerId;
        if (message.targetPlayerId != null && message.hasOwnProperty("targetPlayerId"))
            object.targetPlayerId = message.targetPlayerId;
        if (message.card != null && message.hasOwnProperty("card"))
            object.card = $root.card.toObject(message.card, options);
        return object;
    };

    /**
     * Converts this wei_bi_give_card_toc to JSON.
     * @function toJSON
     * @memberof wei_bi_give_card_toc
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    wei_bi_give_card_toc.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for wei_bi_give_card_toc
     * @function getTypeUrl
     * @memberof wei_bi_give_card_toc
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    wei_bi_give_card_toc.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/wei_bi_give_card_toc";
    };

    return wei_bi_give_card_toc;
})();

$root.wei_bi_show_hand_card_toc = (function() {

    /**
     * Properties of a wei_bi_show_hand_card_toc.
     * @exports Iwei_bi_show_hand_card_toc
     * @interface Iwei_bi_show_hand_card_toc
     * @property {Icard|null} [card] wei_bi_show_hand_card_toc card
     * @property {number|null} [playerId] wei_bi_show_hand_card_toc playerId
     * @property {card_type|null} [wantType] wei_bi_show_hand_card_toc wantType
     * @property {number|null} [targetPlayerId] wei_bi_show_hand_card_toc targetPlayerId
     * @property {Array.<Icard>|null} [cards] wei_bi_show_hand_card_toc cards
     */

    /**
     * Constructs a new wei_bi_show_hand_card_toc.
     * @exports wei_bi_show_hand_card_toc
     * @classdesc Represents a wei_bi_show_hand_card_toc.
     * @implements Iwei_bi_show_hand_card_toc
     * @constructor
     * @param {Iwei_bi_show_hand_card_toc=} [properties] Properties to set
     */
    function wei_bi_show_hand_card_toc(properties) {
        this.cards = [];
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * wei_bi_show_hand_card_toc card.
     * @member {Icard|null|undefined} card
     * @memberof wei_bi_show_hand_card_toc
     * @instance
     */
    wei_bi_show_hand_card_toc.prototype.card = null;

    /**
     * wei_bi_show_hand_card_toc playerId.
     * @member {number} playerId
     * @memberof wei_bi_show_hand_card_toc
     * @instance
     */
    wei_bi_show_hand_card_toc.prototype.playerId = 0;

    /**
     * wei_bi_show_hand_card_toc wantType.
     * @member {card_type} wantType
     * @memberof wei_bi_show_hand_card_toc
     * @instance
     */
    wei_bi_show_hand_card_toc.prototype.wantType = 0;

    /**
     * wei_bi_show_hand_card_toc targetPlayerId.
     * @member {number} targetPlayerId
     * @memberof wei_bi_show_hand_card_toc
     * @instance
     */
    wei_bi_show_hand_card_toc.prototype.targetPlayerId = 0;

    /**
     * wei_bi_show_hand_card_toc cards.
     * @member {Array.<Icard>} cards
     * @memberof wei_bi_show_hand_card_toc
     * @instance
     */
    wei_bi_show_hand_card_toc.prototype.cards = $util.emptyArray;

    /**
     * Creates a new wei_bi_show_hand_card_toc instance using the specified properties.
     * @function create
     * @memberof wei_bi_show_hand_card_toc
     * @static
     * @param {Iwei_bi_show_hand_card_toc=} [properties] Properties to set
     * @returns {wei_bi_show_hand_card_toc} wei_bi_show_hand_card_toc instance
     */
    wei_bi_show_hand_card_toc.create = function create(properties) {
        return new wei_bi_show_hand_card_toc(properties);
    };

    /**
     * Encodes the specified wei_bi_show_hand_card_toc message. Does not implicitly {@link wei_bi_show_hand_card_toc.verify|verify} messages.
     * @function encode
     * @memberof wei_bi_show_hand_card_toc
     * @static
     * @param {Iwei_bi_show_hand_card_toc} message wei_bi_show_hand_card_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    wei_bi_show_hand_card_toc.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.card != null && Object.hasOwnProperty.call(message, "card"))
            $root.card.encode(message.card, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
        if (message.playerId != null && Object.hasOwnProperty.call(message, "playerId"))
            writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.playerId);
        if (message.wantType != null && Object.hasOwnProperty.call(message, "wantType"))
            writer.uint32(/* id 3, wireType 0 =*/24).int32(message.wantType);
        if (message.targetPlayerId != null && Object.hasOwnProperty.call(message, "targetPlayerId"))
            writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.targetPlayerId);
        if (message.cards != null && message.cards.length)
            for (var i = 0; i < message.cards.length; ++i)
                $root.card.encode(message.cards[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
        return writer;
    };

    /**
     * Encodes the specified wei_bi_show_hand_card_toc message, length delimited. Does not implicitly {@link wei_bi_show_hand_card_toc.verify|verify} messages.
     * @function encodeDelimited
     * @memberof wei_bi_show_hand_card_toc
     * @static
     * @param {Iwei_bi_show_hand_card_toc} message wei_bi_show_hand_card_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    wei_bi_show_hand_card_toc.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a wei_bi_show_hand_card_toc message from the specified reader or buffer.
     * @function decode
     * @memberof wei_bi_show_hand_card_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {wei_bi_show_hand_card_toc} wei_bi_show_hand_card_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    wei_bi_show_hand_card_toc.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.wei_bi_show_hand_card_toc();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.card = $root.card.decode(reader, reader.uint32());
                    break;
                }
            case 2: {
                    message.playerId = reader.uint32();
                    break;
                }
            case 3: {
                    message.wantType = reader.int32();
                    break;
                }
            case 4: {
                    message.targetPlayerId = reader.uint32();
                    break;
                }
            case 5: {
                    if (!(message.cards && message.cards.length))
                        message.cards = [];
                    message.cards.push($root.card.decode(reader, reader.uint32()));
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a wei_bi_show_hand_card_toc message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof wei_bi_show_hand_card_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {wei_bi_show_hand_card_toc} wei_bi_show_hand_card_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    wei_bi_show_hand_card_toc.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a wei_bi_show_hand_card_toc message.
     * @function verify
     * @memberof wei_bi_show_hand_card_toc
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    wei_bi_show_hand_card_toc.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.card != null && message.hasOwnProperty("card")) {
            var error = $root.card.verify(message.card);
            if (error)
                return "card." + error;
        }
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            if (!$util.isInteger(message.playerId))
                return "playerId: integer expected";
        if (message.wantType != null && message.hasOwnProperty("wantType"))
            switch (message.wantType) {
            default:
                return "wantType: enum value expected";
            case 0:
            case 1:
            case 2:
            case 3:
            case 4:
            case 5:
            case 6:
            case 7:
            case 8:
            case 9:
                break;
            }
        if (message.targetPlayerId != null && message.hasOwnProperty("targetPlayerId"))
            if (!$util.isInteger(message.targetPlayerId))
                return "targetPlayerId: integer expected";
        if (message.cards != null && message.hasOwnProperty("cards")) {
            if (!Array.isArray(message.cards))
                return "cards: array expected";
            for (var i = 0; i < message.cards.length; ++i) {
                var error = $root.card.verify(message.cards[i]);
                if (error)
                    return "cards." + error;
            }
        }
        return null;
    };

    /**
     * Creates a wei_bi_show_hand_card_toc message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof wei_bi_show_hand_card_toc
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {wei_bi_show_hand_card_toc} wei_bi_show_hand_card_toc
     */
    wei_bi_show_hand_card_toc.fromObject = function fromObject(object) {
        if (object instanceof $root.wei_bi_show_hand_card_toc)
            return object;
        var message = new $root.wei_bi_show_hand_card_toc();
        if (object.card != null) {
            if (typeof object.card !== "object")
                throw TypeError(".wei_bi_show_hand_card_toc.card: object expected");
            message.card = $root.card.fromObject(object.card);
        }
        if (object.playerId != null)
            message.playerId = object.playerId >>> 0;
        switch (object.wantType) {
        default:
            if (typeof object.wantType === "number") {
                message.wantType = object.wantType;
                break;
            }
            break;
        case "Cheng_Qing":
        case 0:
            message.wantType = 0;
            break;
        case "Shi_Tan":
        case 1:
            message.wantType = 1;
            break;
        case "Wei_Bi":
        case 2:
            message.wantType = 2;
            break;
        case "Li_You":
        case 3:
            message.wantType = 3;
            break;
        case "Ping_Heng":
        case 4:
            message.wantType = 4;
            break;
        case "Po_Yi":
        case 5:
            message.wantType = 5;
            break;
        case "Jie_Huo":
        case 6:
            message.wantType = 6;
            break;
        case "Diao_Bao":
        case 7:
            message.wantType = 7;
            break;
        case "Wu_Dao":
        case 8:
            message.wantType = 8;
            break;
        case "Feng_Yun_Bian_Huan":
        case 9:
            message.wantType = 9;
            break;
        }
        if (object.targetPlayerId != null)
            message.targetPlayerId = object.targetPlayerId >>> 0;
        if (object.cards) {
            if (!Array.isArray(object.cards))
                throw TypeError(".wei_bi_show_hand_card_toc.cards: array expected");
            message.cards = [];
            for (var i = 0; i < object.cards.length; ++i) {
                if (typeof object.cards[i] !== "object")
                    throw TypeError(".wei_bi_show_hand_card_toc.cards: object expected");
                message.cards[i] = $root.card.fromObject(object.cards[i]);
            }
        }
        return message;
    };

    /**
     * Creates a plain object from a wei_bi_show_hand_card_toc message. Also converts values to other types if specified.
     * @function toObject
     * @memberof wei_bi_show_hand_card_toc
     * @static
     * @param {wei_bi_show_hand_card_toc} message wei_bi_show_hand_card_toc
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    wei_bi_show_hand_card_toc.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.arrays || options.defaults)
            object.cards = [];
        if (options.defaults) {
            object.card = null;
            object.playerId = 0;
            object.wantType = options.enums === String ? "Cheng_Qing" : 0;
            object.targetPlayerId = 0;
        }
        if (message.card != null && message.hasOwnProperty("card"))
            object.card = $root.card.toObject(message.card, options);
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            object.playerId = message.playerId;
        if (message.wantType != null && message.hasOwnProperty("wantType"))
            object.wantType = options.enums === String ? $root.card_type[message.wantType] === undefined ? message.wantType : $root.card_type[message.wantType] : message.wantType;
        if (message.targetPlayerId != null && message.hasOwnProperty("targetPlayerId"))
            object.targetPlayerId = message.targetPlayerId;
        if (message.cards && message.cards.length) {
            object.cards = [];
            for (var j = 0; j < message.cards.length; ++j)
                object.cards[j] = $root.card.toObject(message.cards[j], options);
        }
        return object;
    };

    /**
     * Converts this wei_bi_show_hand_card_toc to JSON.
     * @function toJSON
     * @memberof wei_bi_show_hand_card_toc
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    wei_bi_show_hand_card_toc.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for wei_bi_show_hand_card_toc
     * @function getTypeUrl
     * @memberof wei_bi_show_hand_card_toc
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    wei_bi_show_hand_card_toc.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/wei_bi_show_hand_card_toc";
    };

    return wei_bi_show_hand_card_toc;
})();

$root.use_cheng_qing_tos = (function() {

    /**
     * Properties of a use_cheng_qing_tos.
     * @exports Iuse_cheng_qing_tos
     * @interface Iuse_cheng_qing_tos
     * @property {number|null} [cardId] use_cheng_qing_tos cardId
     * @property {number|null} [playerId] use_cheng_qing_tos playerId
     * @property {number|null} [targetCardId] use_cheng_qing_tos targetCardId
     * @property {number|null} [seq] use_cheng_qing_tos seq
     */

    /**
     * Constructs a new use_cheng_qing_tos.
     * @exports use_cheng_qing_tos
     * @classdesc Represents a use_cheng_qing_tos.
     * @implements Iuse_cheng_qing_tos
     * @constructor
     * @param {Iuse_cheng_qing_tos=} [properties] Properties to set
     */
    function use_cheng_qing_tos(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * use_cheng_qing_tos cardId.
     * @member {number} cardId
     * @memberof use_cheng_qing_tos
     * @instance
     */
    use_cheng_qing_tos.prototype.cardId = 0;

    /**
     * use_cheng_qing_tos playerId.
     * @member {number} playerId
     * @memberof use_cheng_qing_tos
     * @instance
     */
    use_cheng_qing_tos.prototype.playerId = 0;

    /**
     * use_cheng_qing_tos targetCardId.
     * @member {number} targetCardId
     * @memberof use_cheng_qing_tos
     * @instance
     */
    use_cheng_qing_tos.prototype.targetCardId = 0;

    /**
     * use_cheng_qing_tos seq.
     * @member {number} seq
     * @memberof use_cheng_qing_tos
     * @instance
     */
    use_cheng_qing_tos.prototype.seq = 0;

    /**
     * Creates a new use_cheng_qing_tos instance using the specified properties.
     * @function create
     * @memberof use_cheng_qing_tos
     * @static
     * @param {Iuse_cheng_qing_tos=} [properties] Properties to set
     * @returns {use_cheng_qing_tos} use_cheng_qing_tos instance
     */
    use_cheng_qing_tos.create = function create(properties) {
        return new use_cheng_qing_tos(properties);
    };

    /**
     * Encodes the specified use_cheng_qing_tos message. Does not implicitly {@link use_cheng_qing_tos.verify|verify} messages.
     * @function encode
     * @memberof use_cheng_qing_tos
     * @static
     * @param {Iuse_cheng_qing_tos} message use_cheng_qing_tos message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    use_cheng_qing_tos.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.cardId != null && Object.hasOwnProperty.call(message, "cardId"))
            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.cardId);
        if (message.playerId != null && Object.hasOwnProperty.call(message, "playerId"))
            writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.playerId);
        if (message.targetCardId != null && Object.hasOwnProperty.call(message, "targetCardId"))
            writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.targetCardId);
        if (message.seq != null && Object.hasOwnProperty.call(message, "seq"))
            writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.seq);
        return writer;
    };

    /**
     * Encodes the specified use_cheng_qing_tos message, length delimited. Does not implicitly {@link use_cheng_qing_tos.verify|verify} messages.
     * @function encodeDelimited
     * @memberof use_cheng_qing_tos
     * @static
     * @param {Iuse_cheng_qing_tos} message use_cheng_qing_tos message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    use_cheng_qing_tos.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a use_cheng_qing_tos message from the specified reader or buffer.
     * @function decode
     * @memberof use_cheng_qing_tos
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {use_cheng_qing_tos} use_cheng_qing_tos
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    use_cheng_qing_tos.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.use_cheng_qing_tos();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.cardId = reader.uint32();
                    break;
                }
            case 2: {
                    message.playerId = reader.uint32();
                    break;
                }
            case 3: {
                    message.targetCardId = reader.uint32();
                    break;
                }
            case 4: {
                    message.seq = reader.uint32();
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a use_cheng_qing_tos message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof use_cheng_qing_tos
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {use_cheng_qing_tos} use_cheng_qing_tos
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    use_cheng_qing_tos.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a use_cheng_qing_tos message.
     * @function verify
     * @memberof use_cheng_qing_tos
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    use_cheng_qing_tos.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.cardId != null && message.hasOwnProperty("cardId"))
            if (!$util.isInteger(message.cardId))
                return "cardId: integer expected";
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            if (!$util.isInteger(message.playerId))
                return "playerId: integer expected";
        if (message.targetCardId != null && message.hasOwnProperty("targetCardId"))
            if (!$util.isInteger(message.targetCardId))
                return "targetCardId: integer expected";
        if (message.seq != null && message.hasOwnProperty("seq"))
            if (!$util.isInteger(message.seq))
                return "seq: integer expected";
        return null;
    };

    /**
     * Creates a use_cheng_qing_tos message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof use_cheng_qing_tos
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {use_cheng_qing_tos} use_cheng_qing_tos
     */
    use_cheng_qing_tos.fromObject = function fromObject(object) {
        if (object instanceof $root.use_cheng_qing_tos)
            return object;
        var message = new $root.use_cheng_qing_tos();
        if (object.cardId != null)
            message.cardId = object.cardId >>> 0;
        if (object.playerId != null)
            message.playerId = object.playerId >>> 0;
        if (object.targetCardId != null)
            message.targetCardId = object.targetCardId >>> 0;
        if (object.seq != null)
            message.seq = object.seq >>> 0;
        return message;
    };

    /**
     * Creates a plain object from a use_cheng_qing_tos message. Also converts values to other types if specified.
     * @function toObject
     * @memberof use_cheng_qing_tos
     * @static
     * @param {use_cheng_qing_tos} message use_cheng_qing_tos
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    use_cheng_qing_tos.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults) {
            object.cardId = 0;
            object.playerId = 0;
            object.targetCardId = 0;
            object.seq = 0;
        }
        if (message.cardId != null && message.hasOwnProperty("cardId"))
            object.cardId = message.cardId;
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            object.playerId = message.playerId;
        if (message.targetCardId != null && message.hasOwnProperty("targetCardId"))
            object.targetCardId = message.targetCardId;
        if (message.seq != null && message.hasOwnProperty("seq"))
            object.seq = message.seq;
        return object;
    };

    /**
     * Converts this use_cheng_qing_tos to JSON.
     * @function toJSON
     * @memberof use_cheng_qing_tos
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    use_cheng_qing_tos.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for use_cheng_qing_tos
     * @function getTypeUrl
     * @memberof use_cheng_qing_tos
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    use_cheng_qing_tos.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/use_cheng_qing_tos";
    };

    return use_cheng_qing_tos;
})();

$root.use_cheng_qing_toc = (function() {

    /**
     * Properties of a use_cheng_qing_toc.
     * @exports Iuse_cheng_qing_toc
     * @interface Iuse_cheng_qing_toc
     * @property {Icard|null} [card] use_cheng_qing_toc card
     * @property {number|null} [playerId] use_cheng_qing_toc playerId
     * @property {number|null} [targetPlayerId] use_cheng_qing_toc targetPlayerId
     * @property {number|null} [targetCardId] use_cheng_qing_toc targetCardId
     */

    /**
     * Constructs a new use_cheng_qing_toc.
     * @exports use_cheng_qing_toc
     * @classdesc Represents a use_cheng_qing_toc.
     * @implements Iuse_cheng_qing_toc
     * @constructor
     * @param {Iuse_cheng_qing_toc=} [properties] Properties to set
     */
    function use_cheng_qing_toc(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * use_cheng_qing_toc card.
     * @member {Icard|null|undefined} card
     * @memberof use_cheng_qing_toc
     * @instance
     */
    use_cheng_qing_toc.prototype.card = null;

    /**
     * use_cheng_qing_toc playerId.
     * @member {number} playerId
     * @memberof use_cheng_qing_toc
     * @instance
     */
    use_cheng_qing_toc.prototype.playerId = 0;

    /**
     * use_cheng_qing_toc targetPlayerId.
     * @member {number} targetPlayerId
     * @memberof use_cheng_qing_toc
     * @instance
     */
    use_cheng_qing_toc.prototype.targetPlayerId = 0;

    /**
     * use_cheng_qing_toc targetCardId.
     * @member {number} targetCardId
     * @memberof use_cheng_qing_toc
     * @instance
     */
    use_cheng_qing_toc.prototype.targetCardId = 0;

    /**
     * Creates a new use_cheng_qing_toc instance using the specified properties.
     * @function create
     * @memberof use_cheng_qing_toc
     * @static
     * @param {Iuse_cheng_qing_toc=} [properties] Properties to set
     * @returns {use_cheng_qing_toc} use_cheng_qing_toc instance
     */
    use_cheng_qing_toc.create = function create(properties) {
        return new use_cheng_qing_toc(properties);
    };

    /**
     * Encodes the specified use_cheng_qing_toc message. Does not implicitly {@link use_cheng_qing_toc.verify|verify} messages.
     * @function encode
     * @memberof use_cheng_qing_toc
     * @static
     * @param {Iuse_cheng_qing_toc} message use_cheng_qing_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    use_cheng_qing_toc.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.card != null && Object.hasOwnProperty.call(message, "card"))
            $root.card.encode(message.card, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
        if (message.playerId != null && Object.hasOwnProperty.call(message, "playerId"))
            writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.playerId);
        if (message.targetPlayerId != null && Object.hasOwnProperty.call(message, "targetPlayerId"))
            writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.targetPlayerId);
        if (message.targetCardId != null && Object.hasOwnProperty.call(message, "targetCardId"))
            writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.targetCardId);
        return writer;
    };

    /**
     * Encodes the specified use_cheng_qing_toc message, length delimited. Does not implicitly {@link use_cheng_qing_toc.verify|verify} messages.
     * @function encodeDelimited
     * @memberof use_cheng_qing_toc
     * @static
     * @param {Iuse_cheng_qing_toc} message use_cheng_qing_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    use_cheng_qing_toc.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a use_cheng_qing_toc message from the specified reader or buffer.
     * @function decode
     * @memberof use_cheng_qing_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {use_cheng_qing_toc} use_cheng_qing_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    use_cheng_qing_toc.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.use_cheng_qing_toc();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.card = $root.card.decode(reader, reader.uint32());
                    break;
                }
            case 2: {
                    message.playerId = reader.uint32();
                    break;
                }
            case 3: {
                    message.targetPlayerId = reader.uint32();
                    break;
                }
            case 4: {
                    message.targetCardId = reader.uint32();
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a use_cheng_qing_toc message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof use_cheng_qing_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {use_cheng_qing_toc} use_cheng_qing_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    use_cheng_qing_toc.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a use_cheng_qing_toc message.
     * @function verify
     * @memberof use_cheng_qing_toc
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    use_cheng_qing_toc.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.card != null && message.hasOwnProperty("card")) {
            var error = $root.card.verify(message.card);
            if (error)
                return "card." + error;
        }
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            if (!$util.isInteger(message.playerId))
                return "playerId: integer expected";
        if (message.targetPlayerId != null && message.hasOwnProperty("targetPlayerId"))
            if (!$util.isInteger(message.targetPlayerId))
                return "targetPlayerId: integer expected";
        if (message.targetCardId != null && message.hasOwnProperty("targetCardId"))
            if (!$util.isInteger(message.targetCardId))
                return "targetCardId: integer expected";
        return null;
    };

    /**
     * Creates a use_cheng_qing_toc message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof use_cheng_qing_toc
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {use_cheng_qing_toc} use_cheng_qing_toc
     */
    use_cheng_qing_toc.fromObject = function fromObject(object) {
        if (object instanceof $root.use_cheng_qing_toc)
            return object;
        var message = new $root.use_cheng_qing_toc();
        if (object.card != null) {
            if (typeof object.card !== "object")
                throw TypeError(".use_cheng_qing_toc.card: object expected");
            message.card = $root.card.fromObject(object.card);
        }
        if (object.playerId != null)
            message.playerId = object.playerId >>> 0;
        if (object.targetPlayerId != null)
            message.targetPlayerId = object.targetPlayerId >>> 0;
        if (object.targetCardId != null)
            message.targetCardId = object.targetCardId >>> 0;
        return message;
    };

    /**
     * Creates a plain object from a use_cheng_qing_toc message. Also converts values to other types if specified.
     * @function toObject
     * @memberof use_cheng_qing_toc
     * @static
     * @param {use_cheng_qing_toc} message use_cheng_qing_toc
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    use_cheng_qing_toc.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults) {
            object.card = null;
            object.playerId = 0;
            object.targetPlayerId = 0;
            object.targetCardId = 0;
        }
        if (message.card != null && message.hasOwnProperty("card"))
            object.card = $root.card.toObject(message.card, options);
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            object.playerId = message.playerId;
        if (message.targetPlayerId != null && message.hasOwnProperty("targetPlayerId"))
            object.targetPlayerId = message.targetPlayerId;
        if (message.targetCardId != null && message.hasOwnProperty("targetCardId"))
            object.targetCardId = message.targetCardId;
        return object;
    };

    /**
     * Converts this use_cheng_qing_toc to JSON.
     * @function toJSON
     * @memberof use_cheng_qing_toc
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    use_cheng_qing_toc.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for use_cheng_qing_toc
     * @function getTypeUrl
     * @memberof use_cheng_qing_toc
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    use_cheng_qing_toc.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/use_cheng_qing_toc";
    };

    return use_cheng_qing_toc;
})();

$root.send_message_card_tos = (function() {

    /**
     * Properties of a send_message_card_tos.
     * @exports Isend_message_card_tos
     * @interface Isend_message_card_tos
     * @property {number|null} [cardId] send_message_card_tos cardId
     * @property {number|null} [targetPlayerId] send_message_card_tos targetPlayerId
     * @property {Array.<number>|null} [lockPlayerId] send_message_card_tos lockPlayerId
     * @property {direction|null} [cardDir] send_message_card_tos cardDir
     * @property {number|null} [seq] send_message_card_tos seq
     */

    /**
     * Constructs a new send_message_card_tos.
     * @exports send_message_card_tos
     * @classdesc Represents a send_message_card_tos.
     * @implements Isend_message_card_tos
     * @constructor
     * @param {Isend_message_card_tos=} [properties] Properties to set
     */
    function send_message_card_tos(properties) {
        this.lockPlayerId = [];
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * send_message_card_tos cardId.
     * @member {number} cardId
     * @memberof send_message_card_tos
     * @instance
     */
    send_message_card_tos.prototype.cardId = 0;

    /**
     * send_message_card_tos targetPlayerId.
     * @member {number} targetPlayerId
     * @memberof send_message_card_tos
     * @instance
     */
    send_message_card_tos.prototype.targetPlayerId = 0;

    /**
     * send_message_card_tos lockPlayerId.
     * @member {Array.<number>} lockPlayerId
     * @memberof send_message_card_tos
     * @instance
     */
    send_message_card_tos.prototype.lockPlayerId = $util.emptyArray;

    /**
     * send_message_card_tos cardDir.
     * @member {direction} cardDir
     * @memberof send_message_card_tos
     * @instance
     */
    send_message_card_tos.prototype.cardDir = 0;

    /**
     * send_message_card_tos seq.
     * @member {number} seq
     * @memberof send_message_card_tos
     * @instance
     */
    send_message_card_tos.prototype.seq = 0;

    /**
     * Creates a new send_message_card_tos instance using the specified properties.
     * @function create
     * @memberof send_message_card_tos
     * @static
     * @param {Isend_message_card_tos=} [properties] Properties to set
     * @returns {send_message_card_tos} send_message_card_tos instance
     */
    send_message_card_tos.create = function create(properties) {
        return new send_message_card_tos(properties);
    };

    /**
     * Encodes the specified send_message_card_tos message. Does not implicitly {@link send_message_card_tos.verify|verify} messages.
     * @function encode
     * @memberof send_message_card_tos
     * @static
     * @param {Isend_message_card_tos} message send_message_card_tos message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    send_message_card_tos.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.cardId != null && Object.hasOwnProperty.call(message, "cardId"))
            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.cardId);
        if (message.targetPlayerId != null && Object.hasOwnProperty.call(message, "targetPlayerId"))
            writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.targetPlayerId);
        if (message.lockPlayerId != null && message.lockPlayerId.length) {
            writer.uint32(/* id 3, wireType 2 =*/26).fork();
            for (var i = 0; i < message.lockPlayerId.length; ++i)
                writer.uint32(message.lockPlayerId[i]);
            writer.ldelim();
        }
        if (message.cardDir != null && Object.hasOwnProperty.call(message, "cardDir"))
            writer.uint32(/* id 4, wireType 0 =*/32).int32(message.cardDir);
        if (message.seq != null && Object.hasOwnProperty.call(message, "seq"))
            writer.uint32(/* id 5, wireType 0 =*/40).uint32(message.seq);
        return writer;
    };

    /**
     * Encodes the specified send_message_card_tos message, length delimited. Does not implicitly {@link send_message_card_tos.verify|verify} messages.
     * @function encodeDelimited
     * @memberof send_message_card_tos
     * @static
     * @param {Isend_message_card_tos} message send_message_card_tos message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    send_message_card_tos.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a send_message_card_tos message from the specified reader or buffer.
     * @function decode
     * @memberof send_message_card_tos
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {send_message_card_tos} send_message_card_tos
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    send_message_card_tos.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.send_message_card_tos();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.cardId = reader.uint32();
                    break;
                }
            case 2: {
                    message.targetPlayerId = reader.uint32();
                    break;
                }
            case 3: {
                    if (!(message.lockPlayerId && message.lockPlayerId.length))
                        message.lockPlayerId = [];
                    if ((tag & 7) === 2) {
                        var end2 = reader.uint32() + reader.pos;
                        while (reader.pos < end2)
                            message.lockPlayerId.push(reader.uint32());
                    } else
                        message.lockPlayerId.push(reader.uint32());
                    break;
                }
            case 4: {
                    message.cardDir = reader.int32();
                    break;
                }
            case 5: {
                    message.seq = reader.uint32();
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a send_message_card_tos message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof send_message_card_tos
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {send_message_card_tos} send_message_card_tos
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    send_message_card_tos.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a send_message_card_tos message.
     * @function verify
     * @memberof send_message_card_tos
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    send_message_card_tos.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.cardId != null && message.hasOwnProperty("cardId"))
            if (!$util.isInteger(message.cardId))
                return "cardId: integer expected";
        if (message.targetPlayerId != null && message.hasOwnProperty("targetPlayerId"))
            if (!$util.isInteger(message.targetPlayerId))
                return "targetPlayerId: integer expected";
        if (message.lockPlayerId != null && message.hasOwnProperty("lockPlayerId")) {
            if (!Array.isArray(message.lockPlayerId))
                return "lockPlayerId: array expected";
            for (var i = 0; i < message.lockPlayerId.length; ++i)
                if (!$util.isInteger(message.lockPlayerId[i]))
                    return "lockPlayerId: integer[] expected";
        }
        if (message.cardDir != null && message.hasOwnProperty("cardDir"))
            switch (message.cardDir) {
            default:
                return "cardDir: enum value expected";
            case 0:
            case 1:
            case 2:
                break;
            }
        if (message.seq != null && message.hasOwnProperty("seq"))
            if (!$util.isInteger(message.seq))
                return "seq: integer expected";
        return null;
    };

    /**
     * Creates a send_message_card_tos message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof send_message_card_tos
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {send_message_card_tos} send_message_card_tos
     */
    send_message_card_tos.fromObject = function fromObject(object) {
        if (object instanceof $root.send_message_card_tos)
            return object;
        var message = new $root.send_message_card_tos();
        if (object.cardId != null)
            message.cardId = object.cardId >>> 0;
        if (object.targetPlayerId != null)
            message.targetPlayerId = object.targetPlayerId >>> 0;
        if (object.lockPlayerId) {
            if (!Array.isArray(object.lockPlayerId))
                throw TypeError(".send_message_card_tos.lockPlayerId: array expected");
            message.lockPlayerId = [];
            for (var i = 0; i < object.lockPlayerId.length; ++i)
                message.lockPlayerId[i] = object.lockPlayerId[i] >>> 0;
        }
        switch (object.cardDir) {
        default:
            if (typeof object.cardDir === "number") {
                message.cardDir = object.cardDir;
                break;
            }
            break;
        case "Up":
        case 0:
            message.cardDir = 0;
            break;
        case "Left":
        case 1:
            message.cardDir = 1;
            break;
        case "Right":
        case 2:
            message.cardDir = 2;
            break;
        }
        if (object.seq != null)
            message.seq = object.seq >>> 0;
        return message;
    };

    /**
     * Creates a plain object from a send_message_card_tos message. Also converts values to other types if specified.
     * @function toObject
     * @memberof send_message_card_tos
     * @static
     * @param {send_message_card_tos} message send_message_card_tos
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    send_message_card_tos.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.arrays || options.defaults)
            object.lockPlayerId = [];
        if (options.defaults) {
            object.cardId = 0;
            object.targetPlayerId = 0;
            object.cardDir = options.enums === String ? "Up" : 0;
            object.seq = 0;
        }
        if (message.cardId != null && message.hasOwnProperty("cardId"))
            object.cardId = message.cardId;
        if (message.targetPlayerId != null && message.hasOwnProperty("targetPlayerId"))
            object.targetPlayerId = message.targetPlayerId;
        if (message.lockPlayerId && message.lockPlayerId.length) {
            object.lockPlayerId = [];
            for (var j = 0; j < message.lockPlayerId.length; ++j)
                object.lockPlayerId[j] = message.lockPlayerId[j];
        }
        if (message.cardDir != null && message.hasOwnProperty("cardDir"))
            object.cardDir = options.enums === String ? $root.direction[message.cardDir] === undefined ? message.cardDir : $root.direction[message.cardDir] : message.cardDir;
        if (message.seq != null && message.hasOwnProperty("seq"))
            object.seq = message.seq;
        return object;
    };

    /**
     * Converts this send_message_card_tos to JSON.
     * @function toJSON
     * @memberof send_message_card_tos
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    send_message_card_tos.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for send_message_card_tos
     * @function getTypeUrl
     * @memberof send_message_card_tos
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    send_message_card_tos.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/send_message_card_tos";
    };

    return send_message_card_tos;
})();

$root.send_message_card_toc = (function() {

    /**
     * Properties of a send_message_card_toc.
     * @exports Isend_message_card_toc
     * @interface Isend_message_card_toc
     * @property {number|null} [cardId] send_message_card_toc cardId
     * @property {number|null} [playerId] send_message_card_toc playerId
     * @property {number|null} [targetPlayerId] send_message_card_toc targetPlayerId
     * @property {Array.<number>|null} [lockPlayerIds] send_message_card_toc lockPlayerIds
     * @property {direction|null} [cardDir] send_message_card_toc cardDir
     * @property {number|null} [senderId] send_message_card_toc senderId
     */

    /**
     * Constructs a new send_message_card_toc.
     * @exports send_message_card_toc
     * @classdesc Represents a send_message_card_toc.
     * @implements Isend_message_card_toc
     * @constructor
     * @param {Isend_message_card_toc=} [properties] Properties to set
     */
    function send_message_card_toc(properties) {
        this.lockPlayerIds = [];
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * send_message_card_toc cardId.
     * @member {number} cardId
     * @memberof send_message_card_toc
     * @instance
     */
    send_message_card_toc.prototype.cardId = 0;

    /**
     * send_message_card_toc playerId.
     * @member {number} playerId
     * @memberof send_message_card_toc
     * @instance
     */
    send_message_card_toc.prototype.playerId = 0;

    /**
     * send_message_card_toc targetPlayerId.
     * @member {number} targetPlayerId
     * @memberof send_message_card_toc
     * @instance
     */
    send_message_card_toc.prototype.targetPlayerId = 0;

    /**
     * send_message_card_toc lockPlayerIds.
     * @member {Array.<number>} lockPlayerIds
     * @memberof send_message_card_toc
     * @instance
     */
    send_message_card_toc.prototype.lockPlayerIds = $util.emptyArray;

    /**
     * send_message_card_toc cardDir.
     * @member {direction} cardDir
     * @memberof send_message_card_toc
     * @instance
     */
    send_message_card_toc.prototype.cardDir = 0;

    /**
     * send_message_card_toc senderId.
     * @member {number} senderId
     * @memberof send_message_card_toc
     * @instance
     */
    send_message_card_toc.prototype.senderId = 0;

    /**
     * Creates a new send_message_card_toc instance using the specified properties.
     * @function create
     * @memberof send_message_card_toc
     * @static
     * @param {Isend_message_card_toc=} [properties] Properties to set
     * @returns {send_message_card_toc} send_message_card_toc instance
     */
    send_message_card_toc.create = function create(properties) {
        return new send_message_card_toc(properties);
    };

    /**
     * Encodes the specified send_message_card_toc message. Does not implicitly {@link send_message_card_toc.verify|verify} messages.
     * @function encode
     * @memberof send_message_card_toc
     * @static
     * @param {Isend_message_card_toc} message send_message_card_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    send_message_card_toc.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.cardId != null && Object.hasOwnProperty.call(message, "cardId"))
            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.cardId);
        if (message.playerId != null && Object.hasOwnProperty.call(message, "playerId"))
            writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.playerId);
        if (message.targetPlayerId != null && Object.hasOwnProperty.call(message, "targetPlayerId"))
            writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.targetPlayerId);
        if (message.lockPlayerIds != null && message.lockPlayerIds.length) {
            writer.uint32(/* id 4, wireType 2 =*/34).fork();
            for (var i = 0; i < message.lockPlayerIds.length; ++i)
                writer.uint32(message.lockPlayerIds[i]);
            writer.ldelim();
        }
        if (message.cardDir != null && Object.hasOwnProperty.call(message, "cardDir"))
            writer.uint32(/* id 5, wireType 0 =*/40).int32(message.cardDir);
        if (message.senderId != null && Object.hasOwnProperty.call(message, "senderId"))
            writer.uint32(/* id 6, wireType 0 =*/48).uint32(message.senderId);
        return writer;
    };

    /**
     * Encodes the specified send_message_card_toc message, length delimited. Does not implicitly {@link send_message_card_toc.verify|verify} messages.
     * @function encodeDelimited
     * @memberof send_message_card_toc
     * @static
     * @param {Isend_message_card_toc} message send_message_card_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    send_message_card_toc.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a send_message_card_toc message from the specified reader or buffer.
     * @function decode
     * @memberof send_message_card_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {send_message_card_toc} send_message_card_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    send_message_card_toc.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.send_message_card_toc();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.cardId = reader.uint32();
                    break;
                }
            case 2: {
                    message.playerId = reader.uint32();
                    break;
                }
            case 3: {
                    message.targetPlayerId = reader.uint32();
                    break;
                }
            case 4: {
                    if (!(message.lockPlayerIds && message.lockPlayerIds.length))
                        message.lockPlayerIds = [];
                    if ((tag & 7) === 2) {
                        var end2 = reader.uint32() + reader.pos;
                        while (reader.pos < end2)
                            message.lockPlayerIds.push(reader.uint32());
                    } else
                        message.lockPlayerIds.push(reader.uint32());
                    break;
                }
            case 5: {
                    message.cardDir = reader.int32();
                    break;
                }
            case 6: {
                    message.senderId = reader.uint32();
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a send_message_card_toc message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof send_message_card_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {send_message_card_toc} send_message_card_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    send_message_card_toc.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a send_message_card_toc message.
     * @function verify
     * @memberof send_message_card_toc
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    send_message_card_toc.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.cardId != null && message.hasOwnProperty("cardId"))
            if (!$util.isInteger(message.cardId))
                return "cardId: integer expected";
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            if (!$util.isInteger(message.playerId))
                return "playerId: integer expected";
        if (message.targetPlayerId != null && message.hasOwnProperty("targetPlayerId"))
            if (!$util.isInteger(message.targetPlayerId))
                return "targetPlayerId: integer expected";
        if (message.lockPlayerIds != null && message.hasOwnProperty("lockPlayerIds")) {
            if (!Array.isArray(message.lockPlayerIds))
                return "lockPlayerIds: array expected";
            for (var i = 0; i < message.lockPlayerIds.length; ++i)
                if (!$util.isInteger(message.lockPlayerIds[i]))
                    return "lockPlayerIds: integer[] expected";
        }
        if (message.cardDir != null && message.hasOwnProperty("cardDir"))
            switch (message.cardDir) {
            default:
                return "cardDir: enum value expected";
            case 0:
            case 1:
            case 2:
                break;
            }
        if (message.senderId != null && message.hasOwnProperty("senderId"))
            if (!$util.isInteger(message.senderId))
                return "senderId: integer expected";
        return null;
    };

    /**
     * Creates a send_message_card_toc message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof send_message_card_toc
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {send_message_card_toc} send_message_card_toc
     */
    send_message_card_toc.fromObject = function fromObject(object) {
        if (object instanceof $root.send_message_card_toc)
            return object;
        var message = new $root.send_message_card_toc();
        if (object.cardId != null)
            message.cardId = object.cardId >>> 0;
        if (object.playerId != null)
            message.playerId = object.playerId >>> 0;
        if (object.targetPlayerId != null)
            message.targetPlayerId = object.targetPlayerId >>> 0;
        if (object.lockPlayerIds) {
            if (!Array.isArray(object.lockPlayerIds))
                throw TypeError(".send_message_card_toc.lockPlayerIds: array expected");
            message.lockPlayerIds = [];
            for (var i = 0; i < object.lockPlayerIds.length; ++i)
                message.lockPlayerIds[i] = object.lockPlayerIds[i] >>> 0;
        }
        switch (object.cardDir) {
        default:
            if (typeof object.cardDir === "number") {
                message.cardDir = object.cardDir;
                break;
            }
            break;
        case "Up":
        case 0:
            message.cardDir = 0;
            break;
        case "Left":
        case 1:
            message.cardDir = 1;
            break;
        case "Right":
        case 2:
            message.cardDir = 2;
            break;
        }
        if (object.senderId != null)
            message.senderId = object.senderId >>> 0;
        return message;
    };

    /**
     * Creates a plain object from a send_message_card_toc message. Also converts values to other types if specified.
     * @function toObject
     * @memberof send_message_card_toc
     * @static
     * @param {send_message_card_toc} message send_message_card_toc
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    send_message_card_toc.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.arrays || options.defaults)
            object.lockPlayerIds = [];
        if (options.defaults) {
            object.cardId = 0;
            object.playerId = 0;
            object.targetPlayerId = 0;
            object.cardDir = options.enums === String ? "Up" : 0;
            object.senderId = 0;
        }
        if (message.cardId != null && message.hasOwnProperty("cardId"))
            object.cardId = message.cardId;
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            object.playerId = message.playerId;
        if (message.targetPlayerId != null && message.hasOwnProperty("targetPlayerId"))
            object.targetPlayerId = message.targetPlayerId;
        if (message.lockPlayerIds && message.lockPlayerIds.length) {
            object.lockPlayerIds = [];
            for (var j = 0; j < message.lockPlayerIds.length; ++j)
                object.lockPlayerIds[j] = message.lockPlayerIds[j];
        }
        if (message.cardDir != null && message.hasOwnProperty("cardDir"))
            object.cardDir = options.enums === String ? $root.direction[message.cardDir] === undefined ? message.cardDir : $root.direction[message.cardDir] : message.cardDir;
        if (message.senderId != null && message.hasOwnProperty("senderId"))
            object.senderId = message.senderId;
        return object;
    };

    /**
     * Converts this send_message_card_toc to JSON.
     * @function toJSON
     * @memberof send_message_card_toc
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    send_message_card_toc.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for send_message_card_toc
     * @function getTypeUrl
     * @memberof send_message_card_toc
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    send_message_card_toc.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/send_message_card_toc";
    };

    return send_message_card_toc;
})();

$root.choose_whether_receive_tos = (function() {

    /**
     * Properties of a choose_whether_receive_tos.
     * @exports Ichoose_whether_receive_tos
     * @interface Ichoose_whether_receive_tos
     * @property {boolean|null} [receive] choose_whether_receive_tos receive
     * @property {number|null} [seq] choose_whether_receive_tos seq
     */

    /**
     * Constructs a new choose_whether_receive_tos.
     * @exports choose_whether_receive_tos
     * @classdesc Represents a choose_whether_receive_tos.
     * @implements Ichoose_whether_receive_tos
     * @constructor
     * @param {Ichoose_whether_receive_tos=} [properties] Properties to set
     */
    function choose_whether_receive_tos(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * choose_whether_receive_tos receive.
     * @member {boolean} receive
     * @memberof choose_whether_receive_tos
     * @instance
     */
    choose_whether_receive_tos.prototype.receive = false;

    /**
     * choose_whether_receive_tos seq.
     * @member {number} seq
     * @memberof choose_whether_receive_tos
     * @instance
     */
    choose_whether_receive_tos.prototype.seq = 0;

    /**
     * Creates a new choose_whether_receive_tos instance using the specified properties.
     * @function create
     * @memberof choose_whether_receive_tos
     * @static
     * @param {Ichoose_whether_receive_tos=} [properties] Properties to set
     * @returns {choose_whether_receive_tos} choose_whether_receive_tos instance
     */
    choose_whether_receive_tos.create = function create(properties) {
        return new choose_whether_receive_tos(properties);
    };

    /**
     * Encodes the specified choose_whether_receive_tos message. Does not implicitly {@link choose_whether_receive_tos.verify|verify} messages.
     * @function encode
     * @memberof choose_whether_receive_tos
     * @static
     * @param {Ichoose_whether_receive_tos} message choose_whether_receive_tos message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    choose_whether_receive_tos.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.receive != null && Object.hasOwnProperty.call(message, "receive"))
            writer.uint32(/* id 1, wireType 0 =*/8).bool(message.receive);
        if (message.seq != null && Object.hasOwnProperty.call(message, "seq"))
            writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.seq);
        return writer;
    };

    /**
     * Encodes the specified choose_whether_receive_tos message, length delimited. Does not implicitly {@link choose_whether_receive_tos.verify|verify} messages.
     * @function encodeDelimited
     * @memberof choose_whether_receive_tos
     * @static
     * @param {Ichoose_whether_receive_tos} message choose_whether_receive_tos message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    choose_whether_receive_tos.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a choose_whether_receive_tos message from the specified reader or buffer.
     * @function decode
     * @memberof choose_whether_receive_tos
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {choose_whether_receive_tos} choose_whether_receive_tos
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    choose_whether_receive_tos.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.choose_whether_receive_tos();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.receive = reader.bool();
                    break;
                }
            case 2: {
                    message.seq = reader.uint32();
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a choose_whether_receive_tos message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof choose_whether_receive_tos
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {choose_whether_receive_tos} choose_whether_receive_tos
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    choose_whether_receive_tos.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a choose_whether_receive_tos message.
     * @function verify
     * @memberof choose_whether_receive_tos
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    choose_whether_receive_tos.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.receive != null && message.hasOwnProperty("receive"))
            if (typeof message.receive !== "boolean")
                return "receive: boolean expected";
        if (message.seq != null && message.hasOwnProperty("seq"))
            if (!$util.isInteger(message.seq))
                return "seq: integer expected";
        return null;
    };

    /**
     * Creates a choose_whether_receive_tos message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof choose_whether_receive_tos
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {choose_whether_receive_tos} choose_whether_receive_tos
     */
    choose_whether_receive_tos.fromObject = function fromObject(object) {
        if (object instanceof $root.choose_whether_receive_tos)
            return object;
        var message = new $root.choose_whether_receive_tos();
        if (object.receive != null)
            message.receive = Boolean(object.receive);
        if (object.seq != null)
            message.seq = object.seq >>> 0;
        return message;
    };

    /**
     * Creates a plain object from a choose_whether_receive_tos message. Also converts values to other types if specified.
     * @function toObject
     * @memberof choose_whether_receive_tos
     * @static
     * @param {choose_whether_receive_tos} message choose_whether_receive_tos
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    choose_whether_receive_tos.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults) {
            object.receive = false;
            object.seq = 0;
        }
        if (message.receive != null && message.hasOwnProperty("receive"))
            object.receive = message.receive;
        if (message.seq != null && message.hasOwnProperty("seq"))
            object.seq = message.seq;
        return object;
    };

    /**
     * Converts this choose_whether_receive_tos to JSON.
     * @function toJSON
     * @memberof choose_whether_receive_tos
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    choose_whether_receive_tos.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for choose_whether_receive_tos
     * @function getTypeUrl
     * @memberof choose_whether_receive_tos
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    choose_whether_receive_tos.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/choose_whether_receive_tos";
    };

    return choose_whether_receive_tos;
})();

$root.choose_receive_toc = (function() {

    /**
     * Properties of a choose_receive_toc.
     * @exports Ichoose_receive_toc
     * @interface Ichoose_receive_toc
     * @property {number|null} [playerId] choose_receive_toc playerId
     */

    /**
     * Constructs a new choose_receive_toc.
     * @exports choose_receive_toc
     * @classdesc Represents a choose_receive_toc.
     * @implements Ichoose_receive_toc
     * @constructor
     * @param {Ichoose_receive_toc=} [properties] Properties to set
     */
    function choose_receive_toc(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * choose_receive_toc playerId.
     * @member {number} playerId
     * @memberof choose_receive_toc
     * @instance
     */
    choose_receive_toc.prototype.playerId = 0;

    /**
     * Creates a new choose_receive_toc instance using the specified properties.
     * @function create
     * @memberof choose_receive_toc
     * @static
     * @param {Ichoose_receive_toc=} [properties] Properties to set
     * @returns {choose_receive_toc} choose_receive_toc instance
     */
    choose_receive_toc.create = function create(properties) {
        return new choose_receive_toc(properties);
    };

    /**
     * Encodes the specified choose_receive_toc message. Does not implicitly {@link choose_receive_toc.verify|verify} messages.
     * @function encode
     * @memberof choose_receive_toc
     * @static
     * @param {Ichoose_receive_toc} message choose_receive_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    choose_receive_toc.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.playerId != null && Object.hasOwnProperty.call(message, "playerId"))
            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.playerId);
        return writer;
    };

    /**
     * Encodes the specified choose_receive_toc message, length delimited. Does not implicitly {@link choose_receive_toc.verify|verify} messages.
     * @function encodeDelimited
     * @memberof choose_receive_toc
     * @static
     * @param {Ichoose_receive_toc} message choose_receive_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    choose_receive_toc.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a choose_receive_toc message from the specified reader or buffer.
     * @function decode
     * @memberof choose_receive_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {choose_receive_toc} choose_receive_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    choose_receive_toc.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.choose_receive_toc();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.playerId = reader.uint32();
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a choose_receive_toc message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof choose_receive_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {choose_receive_toc} choose_receive_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    choose_receive_toc.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a choose_receive_toc message.
     * @function verify
     * @memberof choose_receive_toc
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    choose_receive_toc.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            if (!$util.isInteger(message.playerId))
                return "playerId: integer expected";
        return null;
    };

    /**
     * Creates a choose_receive_toc message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof choose_receive_toc
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {choose_receive_toc} choose_receive_toc
     */
    choose_receive_toc.fromObject = function fromObject(object) {
        if (object instanceof $root.choose_receive_toc)
            return object;
        var message = new $root.choose_receive_toc();
        if (object.playerId != null)
            message.playerId = object.playerId >>> 0;
        return message;
    };

    /**
     * Creates a plain object from a choose_receive_toc message. Also converts values to other types if specified.
     * @function toObject
     * @memberof choose_receive_toc
     * @static
     * @param {choose_receive_toc} message choose_receive_toc
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    choose_receive_toc.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults)
            object.playerId = 0;
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            object.playerId = message.playerId;
        return object;
    };

    /**
     * Converts this choose_receive_toc to JSON.
     * @function toJSON
     * @memberof choose_receive_toc
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    choose_receive_toc.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for choose_receive_toc
     * @function getTypeUrl
     * @memberof choose_receive_toc
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    choose_receive_toc.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/choose_receive_toc";
    };

    return choose_receive_toc;
})();

$root.end_fight_phase_tos = (function() {

    /**
     * Properties of an end_fight_phase_tos.
     * @exports Iend_fight_phase_tos
     * @interface Iend_fight_phase_tos
     * @property {number|null} [seq] end_fight_phase_tos seq
     */

    /**
     * Constructs a new end_fight_phase_tos.
     * @exports end_fight_phase_tos
     * @classdesc Represents an end_fight_phase_tos.
     * @implements Iend_fight_phase_tos
     * @constructor
     * @param {Iend_fight_phase_tos=} [properties] Properties to set
     */
    function end_fight_phase_tos(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * end_fight_phase_tos seq.
     * @member {number} seq
     * @memberof end_fight_phase_tos
     * @instance
     */
    end_fight_phase_tos.prototype.seq = 0;

    /**
     * Creates a new end_fight_phase_tos instance using the specified properties.
     * @function create
     * @memberof end_fight_phase_tos
     * @static
     * @param {Iend_fight_phase_tos=} [properties] Properties to set
     * @returns {end_fight_phase_tos} end_fight_phase_tos instance
     */
    end_fight_phase_tos.create = function create(properties) {
        return new end_fight_phase_tos(properties);
    };

    /**
     * Encodes the specified end_fight_phase_tos message. Does not implicitly {@link end_fight_phase_tos.verify|verify} messages.
     * @function encode
     * @memberof end_fight_phase_tos
     * @static
     * @param {Iend_fight_phase_tos} message end_fight_phase_tos message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    end_fight_phase_tos.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.seq != null && Object.hasOwnProperty.call(message, "seq"))
            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.seq);
        return writer;
    };

    /**
     * Encodes the specified end_fight_phase_tos message, length delimited. Does not implicitly {@link end_fight_phase_tos.verify|verify} messages.
     * @function encodeDelimited
     * @memberof end_fight_phase_tos
     * @static
     * @param {Iend_fight_phase_tos} message end_fight_phase_tos message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    end_fight_phase_tos.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes an end_fight_phase_tos message from the specified reader or buffer.
     * @function decode
     * @memberof end_fight_phase_tos
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {end_fight_phase_tos} end_fight_phase_tos
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    end_fight_phase_tos.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.end_fight_phase_tos();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.seq = reader.uint32();
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes an end_fight_phase_tos message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof end_fight_phase_tos
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {end_fight_phase_tos} end_fight_phase_tos
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    end_fight_phase_tos.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies an end_fight_phase_tos message.
     * @function verify
     * @memberof end_fight_phase_tos
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    end_fight_phase_tos.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.seq != null && message.hasOwnProperty("seq"))
            if (!$util.isInteger(message.seq))
                return "seq: integer expected";
        return null;
    };

    /**
     * Creates an end_fight_phase_tos message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof end_fight_phase_tos
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {end_fight_phase_tos} end_fight_phase_tos
     */
    end_fight_phase_tos.fromObject = function fromObject(object) {
        if (object instanceof $root.end_fight_phase_tos)
            return object;
        var message = new $root.end_fight_phase_tos();
        if (object.seq != null)
            message.seq = object.seq >>> 0;
        return message;
    };

    /**
     * Creates a plain object from an end_fight_phase_tos message. Also converts values to other types if specified.
     * @function toObject
     * @memberof end_fight_phase_tos
     * @static
     * @param {end_fight_phase_tos} message end_fight_phase_tos
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    end_fight_phase_tos.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults)
            object.seq = 0;
        if (message.seq != null && message.hasOwnProperty("seq"))
            object.seq = message.seq;
        return object;
    };

    /**
     * Converts this end_fight_phase_tos to JSON.
     * @function toJSON
     * @memberof end_fight_phase_tos
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    end_fight_phase_tos.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for end_fight_phase_tos
     * @function getTypeUrl
     * @memberof end_fight_phase_tos
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    end_fight_phase_tos.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/end_fight_phase_tos";
    };

    return end_fight_phase_tos;
})();

$root.notify_dying_toc = (function() {

    /**
     * Properties of a notify_dying_toc.
     * @exports Inotify_dying_toc
     * @interface Inotify_dying_toc
     * @property {number|null} [playerId] notify_dying_toc playerId
     * @property {boolean|null} [loseGame] notify_dying_toc loseGame
     */

    /**
     * Constructs a new notify_dying_toc.
     * @exports notify_dying_toc
     * @classdesc Represents a notify_dying_toc.
     * @implements Inotify_dying_toc
     * @constructor
     * @param {Inotify_dying_toc=} [properties] Properties to set
     */
    function notify_dying_toc(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * notify_dying_toc playerId.
     * @member {number} playerId
     * @memberof notify_dying_toc
     * @instance
     */
    notify_dying_toc.prototype.playerId = 0;

    /**
     * notify_dying_toc loseGame.
     * @member {boolean} loseGame
     * @memberof notify_dying_toc
     * @instance
     */
    notify_dying_toc.prototype.loseGame = false;

    /**
     * Creates a new notify_dying_toc instance using the specified properties.
     * @function create
     * @memberof notify_dying_toc
     * @static
     * @param {Inotify_dying_toc=} [properties] Properties to set
     * @returns {notify_dying_toc} notify_dying_toc instance
     */
    notify_dying_toc.create = function create(properties) {
        return new notify_dying_toc(properties);
    };

    /**
     * Encodes the specified notify_dying_toc message. Does not implicitly {@link notify_dying_toc.verify|verify} messages.
     * @function encode
     * @memberof notify_dying_toc
     * @static
     * @param {Inotify_dying_toc} message notify_dying_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    notify_dying_toc.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.playerId != null && Object.hasOwnProperty.call(message, "playerId"))
            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.playerId);
        if (message.loseGame != null && Object.hasOwnProperty.call(message, "loseGame"))
            writer.uint32(/* id 2, wireType 0 =*/16).bool(message.loseGame);
        return writer;
    };

    /**
     * Encodes the specified notify_dying_toc message, length delimited. Does not implicitly {@link notify_dying_toc.verify|verify} messages.
     * @function encodeDelimited
     * @memberof notify_dying_toc
     * @static
     * @param {Inotify_dying_toc} message notify_dying_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    notify_dying_toc.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a notify_dying_toc message from the specified reader or buffer.
     * @function decode
     * @memberof notify_dying_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {notify_dying_toc} notify_dying_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    notify_dying_toc.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.notify_dying_toc();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.playerId = reader.uint32();
                    break;
                }
            case 2: {
                    message.loseGame = reader.bool();
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a notify_dying_toc message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof notify_dying_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {notify_dying_toc} notify_dying_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    notify_dying_toc.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a notify_dying_toc message.
     * @function verify
     * @memberof notify_dying_toc
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    notify_dying_toc.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            if (!$util.isInteger(message.playerId))
                return "playerId: integer expected";
        if (message.loseGame != null && message.hasOwnProperty("loseGame"))
            if (typeof message.loseGame !== "boolean")
                return "loseGame: boolean expected";
        return null;
    };

    /**
     * Creates a notify_dying_toc message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof notify_dying_toc
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {notify_dying_toc} notify_dying_toc
     */
    notify_dying_toc.fromObject = function fromObject(object) {
        if (object instanceof $root.notify_dying_toc)
            return object;
        var message = new $root.notify_dying_toc();
        if (object.playerId != null)
            message.playerId = object.playerId >>> 0;
        if (object.loseGame != null)
            message.loseGame = Boolean(object.loseGame);
        return message;
    };

    /**
     * Creates a plain object from a notify_dying_toc message. Also converts values to other types if specified.
     * @function toObject
     * @memberof notify_dying_toc
     * @static
     * @param {notify_dying_toc} message notify_dying_toc
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    notify_dying_toc.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults) {
            object.playerId = 0;
            object.loseGame = false;
        }
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            object.playerId = message.playerId;
        if (message.loseGame != null && message.hasOwnProperty("loseGame"))
            object.loseGame = message.loseGame;
        return object;
    };

    /**
     * Converts this notify_dying_toc to JSON.
     * @function toJSON
     * @memberof notify_dying_toc
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    notify_dying_toc.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for notify_dying_toc
     * @function getTypeUrl
     * @memberof notify_dying_toc
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    notify_dying_toc.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/notify_dying_toc";
    };

    return notify_dying_toc;
})();

$root.notify_die_toc = (function() {

    /**
     * Properties of a notify_die_toc.
     * @exports Inotify_die_toc
     * @interface Inotify_die_toc
     * @property {number|null} [playerId] notify_die_toc playerId
     */

    /**
     * Constructs a new notify_die_toc.
     * @exports notify_die_toc
     * @classdesc Represents a notify_die_toc.
     * @implements Inotify_die_toc
     * @constructor
     * @param {Inotify_die_toc=} [properties] Properties to set
     */
    function notify_die_toc(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * notify_die_toc playerId.
     * @member {number} playerId
     * @memberof notify_die_toc
     * @instance
     */
    notify_die_toc.prototype.playerId = 0;

    /**
     * Creates a new notify_die_toc instance using the specified properties.
     * @function create
     * @memberof notify_die_toc
     * @static
     * @param {Inotify_die_toc=} [properties] Properties to set
     * @returns {notify_die_toc} notify_die_toc instance
     */
    notify_die_toc.create = function create(properties) {
        return new notify_die_toc(properties);
    };

    /**
     * Encodes the specified notify_die_toc message. Does not implicitly {@link notify_die_toc.verify|verify} messages.
     * @function encode
     * @memberof notify_die_toc
     * @static
     * @param {Inotify_die_toc} message notify_die_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    notify_die_toc.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.playerId != null && Object.hasOwnProperty.call(message, "playerId"))
            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.playerId);
        return writer;
    };

    /**
     * Encodes the specified notify_die_toc message, length delimited. Does not implicitly {@link notify_die_toc.verify|verify} messages.
     * @function encodeDelimited
     * @memberof notify_die_toc
     * @static
     * @param {Inotify_die_toc} message notify_die_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    notify_die_toc.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a notify_die_toc message from the specified reader or buffer.
     * @function decode
     * @memberof notify_die_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {notify_die_toc} notify_die_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    notify_die_toc.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.notify_die_toc();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.playerId = reader.uint32();
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a notify_die_toc message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof notify_die_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {notify_die_toc} notify_die_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    notify_die_toc.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a notify_die_toc message.
     * @function verify
     * @memberof notify_die_toc
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    notify_die_toc.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            if (!$util.isInteger(message.playerId))
                return "playerId: integer expected";
        return null;
    };

    /**
     * Creates a notify_die_toc message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof notify_die_toc
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {notify_die_toc} notify_die_toc
     */
    notify_die_toc.fromObject = function fromObject(object) {
        if (object instanceof $root.notify_die_toc)
            return object;
        var message = new $root.notify_die_toc();
        if (object.playerId != null)
            message.playerId = object.playerId >>> 0;
        return message;
    };

    /**
     * Creates a plain object from a notify_die_toc message. Also converts values to other types if specified.
     * @function toObject
     * @memberof notify_die_toc
     * @static
     * @param {notify_die_toc} message notify_die_toc
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    notify_die_toc.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults)
            object.playerId = 0;
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            object.playerId = message.playerId;
        return object;
    };

    /**
     * Converts this notify_die_toc to JSON.
     * @function toJSON
     * @memberof notify_die_toc
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    notify_die_toc.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for notify_die_toc
     * @function getTypeUrl
     * @memberof notify_die_toc
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    notify_die_toc.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/notify_die_toc";
    };

    return notify_die_toc;
})();

$root.notify_winner_toc = (function() {

    /**
     * Properties of a notify_winner_toc.
     * @exports Inotify_winner_toc
     * @interface Inotify_winner_toc
     * @property {Array.<number>|null} [declarePlayerIds] notify_winner_toc declarePlayerIds
     * @property {Array.<number>|null} [winnerIds] notify_winner_toc winnerIds
     * @property {Array.<color>|null} [identity] notify_winner_toc identity
     * @property {Array.<secret_task>|null} [secretTasks] notify_winner_toc secretTasks
     */

    /**
     * Constructs a new notify_winner_toc.
     * @exports notify_winner_toc
     * @classdesc Represents a notify_winner_toc.
     * @implements Inotify_winner_toc
     * @constructor
     * @param {Inotify_winner_toc=} [properties] Properties to set
     */
    function notify_winner_toc(properties) {
        this.declarePlayerIds = [];
        this.winnerIds = [];
        this.identity = [];
        this.secretTasks = [];
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * notify_winner_toc declarePlayerIds.
     * @member {Array.<number>} declarePlayerIds
     * @memberof notify_winner_toc
     * @instance
     */
    notify_winner_toc.prototype.declarePlayerIds = $util.emptyArray;

    /**
     * notify_winner_toc winnerIds.
     * @member {Array.<number>} winnerIds
     * @memberof notify_winner_toc
     * @instance
     */
    notify_winner_toc.prototype.winnerIds = $util.emptyArray;

    /**
     * notify_winner_toc identity.
     * @member {Array.<color>} identity
     * @memberof notify_winner_toc
     * @instance
     */
    notify_winner_toc.prototype.identity = $util.emptyArray;

    /**
     * notify_winner_toc secretTasks.
     * @member {Array.<secret_task>} secretTasks
     * @memberof notify_winner_toc
     * @instance
     */
    notify_winner_toc.prototype.secretTasks = $util.emptyArray;

    /**
     * Creates a new notify_winner_toc instance using the specified properties.
     * @function create
     * @memberof notify_winner_toc
     * @static
     * @param {Inotify_winner_toc=} [properties] Properties to set
     * @returns {notify_winner_toc} notify_winner_toc instance
     */
    notify_winner_toc.create = function create(properties) {
        return new notify_winner_toc(properties);
    };

    /**
     * Encodes the specified notify_winner_toc message. Does not implicitly {@link notify_winner_toc.verify|verify} messages.
     * @function encode
     * @memberof notify_winner_toc
     * @static
     * @param {Inotify_winner_toc} message notify_winner_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    notify_winner_toc.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.declarePlayerIds != null && message.declarePlayerIds.length) {
            writer.uint32(/* id 1, wireType 2 =*/10).fork();
            for (var i = 0; i < message.declarePlayerIds.length; ++i)
                writer.uint32(message.declarePlayerIds[i]);
            writer.ldelim();
        }
        if (message.winnerIds != null && message.winnerIds.length) {
            writer.uint32(/* id 2, wireType 2 =*/18).fork();
            for (var i = 0; i < message.winnerIds.length; ++i)
                writer.uint32(message.winnerIds[i]);
            writer.ldelim();
        }
        if (message.identity != null && message.identity.length) {
            writer.uint32(/* id 3, wireType 2 =*/26).fork();
            for (var i = 0; i < message.identity.length; ++i)
                writer.int32(message.identity[i]);
            writer.ldelim();
        }
        if (message.secretTasks != null && message.secretTasks.length) {
            writer.uint32(/* id 4, wireType 2 =*/34).fork();
            for (var i = 0; i < message.secretTasks.length; ++i)
                writer.int32(message.secretTasks[i]);
            writer.ldelim();
        }
        return writer;
    };

    /**
     * Encodes the specified notify_winner_toc message, length delimited. Does not implicitly {@link notify_winner_toc.verify|verify} messages.
     * @function encodeDelimited
     * @memberof notify_winner_toc
     * @static
     * @param {Inotify_winner_toc} message notify_winner_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    notify_winner_toc.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a notify_winner_toc message from the specified reader or buffer.
     * @function decode
     * @memberof notify_winner_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {notify_winner_toc} notify_winner_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    notify_winner_toc.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.notify_winner_toc();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    if (!(message.declarePlayerIds && message.declarePlayerIds.length))
                        message.declarePlayerIds = [];
                    if ((tag & 7) === 2) {
                        var end2 = reader.uint32() + reader.pos;
                        while (reader.pos < end2)
                            message.declarePlayerIds.push(reader.uint32());
                    } else
                        message.declarePlayerIds.push(reader.uint32());
                    break;
                }
            case 2: {
                    if (!(message.winnerIds && message.winnerIds.length))
                        message.winnerIds = [];
                    if ((tag & 7) === 2) {
                        var end2 = reader.uint32() + reader.pos;
                        while (reader.pos < end2)
                            message.winnerIds.push(reader.uint32());
                    } else
                        message.winnerIds.push(reader.uint32());
                    break;
                }
            case 3: {
                    if (!(message.identity && message.identity.length))
                        message.identity = [];
                    if ((tag & 7) === 2) {
                        var end2 = reader.uint32() + reader.pos;
                        while (reader.pos < end2)
                            message.identity.push(reader.int32());
                    } else
                        message.identity.push(reader.int32());
                    break;
                }
            case 4: {
                    if (!(message.secretTasks && message.secretTasks.length))
                        message.secretTasks = [];
                    if ((tag & 7) === 2) {
                        var end2 = reader.uint32() + reader.pos;
                        while (reader.pos < end2)
                            message.secretTasks.push(reader.int32());
                    } else
                        message.secretTasks.push(reader.int32());
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a notify_winner_toc message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof notify_winner_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {notify_winner_toc} notify_winner_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    notify_winner_toc.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a notify_winner_toc message.
     * @function verify
     * @memberof notify_winner_toc
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    notify_winner_toc.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.declarePlayerIds != null && message.hasOwnProperty("declarePlayerIds")) {
            if (!Array.isArray(message.declarePlayerIds))
                return "declarePlayerIds: array expected";
            for (var i = 0; i < message.declarePlayerIds.length; ++i)
                if (!$util.isInteger(message.declarePlayerIds[i]))
                    return "declarePlayerIds: integer[] expected";
        }
        if (message.winnerIds != null && message.hasOwnProperty("winnerIds")) {
            if (!Array.isArray(message.winnerIds))
                return "winnerIds: array expected";
            for (var i = 0; i < message.winnerIds.length; ++i)
                if (!$util.isInteger(message.winnerIds[i]))
                    return "winnerIds: integer[] expected";
        }
        if (message.identity != null && message.hasOwnProperty("identity")) {
            if (!Array.isArray(message.identity))
                return "identity: array expected";
            for (var i = 0; i < message.identity.length; ++i)
                switch (message.identity[i]) {
                default:
                    return "identity: enum value[] expected";
                case 0:
                case 1:
                case 2:
                case 3:
                    break;
                }
        }
        if (message.secretTasks != null && message.hasOwnProperty("secretTasks")) {
            if (!Array.isArray(message.secretTasks))
                return "secretTasks: array expected";
            for (var i = 0; i < message.secretTasks.length; ++i)
                switch (message.secretTasks[i]) {
                default:
                    return "secretTasks: enum value[] expected";
                case 0:
                case 1:
                case 2:
                case 3:
                case 4:
                    break;
                }
        }
        return null;
    };

    /**
     * Creates a notify_winner_toc message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof notify_winner_toc
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {notify_winner_toc} notify_winner_toc
     */
    notify_winner_toc.fromObject = function fromObject(object) {
        if (object instanceof $root.notify_winner_toc)
            return object;
        var message = new $root.notify_winner_toc();
        if (object.declarePlayerIds) {
            if (!Array.isArray(object.declarePlayerIds))
                throw TypeError(".notify_winner_toc.declarePlayerIds: array expected");
            message.declarePlayerIds = [];
            for (var i = 0; i < object.declarePlayerIds.length; ++i)
                message.declarePlayerIds[i] = object.declarePlayerIds[i] >>> 0;
        }
        if (object.winnerIds) {
            if (!Array.isArray(object.winnerIds))
                throw TypeError(".notify_winner_toc.winnerIds: array expected");
            message.winnerIds = [];
            for (var i = 0; i < object.winnerIds.length; ++i)
                message.winnerIds[i] = object.winnerIds[i] >>> 0;
        }
        if (object.identity) {
            if (!Array.isArray(object.identity))
                throw TypeError(".notify_winner_toc.identity: array expected");
            message.identity = [];
            for (var i = 0; i < object.identity.length; ++i)
                switch (object.identity[i]) {
                default:
                    if (typeof object.identity[i] === "number") {
                        message.identity[i] = object.identity[i];
                        break;
                    }
                case "Black":
                case 0:
                    message.identity[i] = 0;
                    break;
                case "Red":
                case 1:
                    message.identity[i] = 1;
                    break;
                case "Blue":
                case 2:
                    message.identity[i] = 2;
                    break;
                case "Has_No_Identity":
                case 3:
                    message.identity[i] = 3;
                    break;
                }
        }
        if (object.secretTasks) {
            if (!Array.isArray(object.secretTasks))
                throw TypeError(".notify_winner_toc.secretTasks: array expected");
            message.secretTasks = [];
            for (var i = 0; i < object.secretTasks.length; ++i)
                switch (object.secretTasks[i]) {
                default:
                    if (typeof object.secretTasks[i] === "number") {
                        message.secretTasks[i] = object.secretTasks[i];
                        break;
                    }
                case "Killer":
                case 0:
                    message.secretTasks[i] = 0;
                    break;
                case "Stealer":
                case 1:
                    message.secretTasks[i] = 1;
                    break;
                case "Collector":
                case 2:
                    message.secretTasks[i] = 2;
                    break;
                case "Mutator":
                case 3:
                    message.secretTasks[i] = 3;
                    break;
                case "Pioneer":
                case 4:
                    message.secretTasks[i] = 4;
                    break;
                }
        }
        return message;
    };

    /**
     * Creates a plain object from a notify_winner_toc message. Also converts values to other types if specified.
     * @function toObject
     * @memberof notify_winner_toc
     * @static
     * @param {notify_winner_toc} message notify_winner_toc
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    notify_winner_toc.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.arrays || options.defaults) {
            object.declarePlayerIds = [];
            object.winnerIds = [];
            object.identity = [];
            object.secretTasks = [];
        }
        if (message.declarePlayerIds && message.declarePlayerIds.length) {
            object.declarePlayerIds = [];
            for (var j = 0; j < message.declarePlayerIds.length; ++j)
                object.declarePlayerIds[j] = message.declarePlayerIds[j];
        }
        if (message.winnerIds && message.winnerIds.length) {
            object.winnerIds = [];
            for (var j = 0; j < message.winnerIds.length; ++j)
                object.winnerIds[j] = message.winnerIds[j];
        }
        if (message.identity && message.identity.length) {
            object.identity = [];
            for (var j = 0; j < message.identity.length; ++j)
                object.identity[j] = options.enums === String ? $root.color[message.identity[j]] === undefined ? message.identity[j] : $root.color[message.identity[j]] : message.identity[j];
        }
        if (message.secretTasks && message.secretTasks.length) {
            object.secretTasks = [];
            for (var j = 0; j < message.secretTasks.length; ++j)
                object.secretTasks[j] = options.enums === String ? $root.secret_task[message.secretTasks[j]] === undefined ? message.secretTasks[j] : $root.secret_task[message.secretTasks[j]] : message.secretTasks[j];
        }
        return object;
    };

    /**
     * Converts this notify_winner_toc to JSON.
     * @function toJSON
     * @memberof notify_winner_toc
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    notify_winner_toc.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for notify_winner_toc
     * @function getTypeUrl
     * @memberof notify_winner_toc
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    notify_winner_toc.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/notify_winner_toc";
    };

    return notify_winner_toc;
})();

$root.wait_for_cheng_qing_toc = (function() {

    /**
     * Properties of a wait_for_cheng_qing_toc.
     * @exports Iwait_for_cheng_qing_toc
     * @interface Iwait_for_cheng_qing_toc
     * @property {number|null} [diePlayerId] wait_for_cheng_qing_toc diePlayerId
     * @property {number|null} [waitingPlayerId] wait_for_cheng_qing_toc waitingPlayerId
     * @property {number|null} [waitingSecond] wait_for_cheng_qing_toc waitingSecond
     * @property {number|null} [seq] wait_for_cheng_qing_toc seq
     */

    /**
     * Constructs a new wait_for_cheng_qing_toc.
     * @exports wait_for_cheng_qing_toc
     * @classdesc Represents a wait_for_cheng_qing_toc.
     * @implements Iwait_for_cheng_qing_toc
     * @constructor
     * @param {Iwait_for_cheng_qing_toc=} [properties] Properties to set
     */
    function wait_for_cheng_qing_toc(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * wait_for_cheng_qing_toc diePlayerId.
     * @member {number} diePlayerId
     * @memberof wait_for_cheng_qing_toc
     * @instance
     */
    wait_for_cheng_qing_toc.prototype.diePlayerId = 0;

    /**
     * wait_for_cheng_qing_toc waitingPlayerId.
     * @member {number} waitingPlayerId
     * @memberof wait_for_cheng_qing_toc
     * @instance
     */
    wait_for_cheng_qing_toc.prototype.waitingPlayerId = 0;

    /**
     * wait_for_cheng_qing_toc waitingSecond.
     * @member {number} waitingSecond
     * @memberof wait_for_cheng_qing_toc
     * @instance
     */
    wait_for_cheng_qing_toc.prototype.waitingSecond = 0;

    /**
     * wait_for_cheng_qing_toc seq.
     * @member {number} seq
     * @memberof wait_for_cheng_qing_toc
     * @instance
     */
    wait_for_cheng_qing_toc.prototype.seq = 0;

    /**
     * Creates a new wait_for_cheng_qing_toc instance using the specified properties.
     * @function create
     * @memberof wait_for_cheng_qing_toc
     * @static
     * @param {Iwait_for_cheng_qing_toc=} [properties] Properties to set
     * @returns {wait_for_cheng_qing_toc} wait_for_cheng_qing_toc instance
     */
    wait_for_cheng_qing_toc.create = function create(properties) {
        return new wait_for_cheng_qing_toc(properties);
    };

    /**
     * Encodes the specified wait_for_cheng_qing_toc message. Does not implicitly {@link wait_for_cheng_qing_toc.verify|verify} messages.
     * @function encode
     * @memberof wait_for_cheng_qing_toc
     * @static
     * @param {Iwait_for_cheng_qing_toc} message wait_for_cheng_qing_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    wait_for_cheng_qing_toc.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.diePlayerId != null && Object.hasOwnProperty.call(message, "diePlayerId"))
            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.diePlayerId);
        if (message.waitingPlayerId != null && Object.hasOwnProperty.call(message, "waitingPlayerId"))
            writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.waitingPlayerId);
        if (message.waitingSecond != null && Object.hasOwnProperty.call(message, "waitingSecond"))
            writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.waitingSecond);
        if (message.seq != null && Object.hasOwnProperty.call(message, "seq"))
            writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.seq);
        return writer;
    };

    /**
     * Encodes the specified wait_for_cheng_qing_toc message, length delimited. Does not implicitly {@link wait_for_cheng_qing_toc.verify|verify} messages.
     * @function encodeDelimited
     * @memberof wait_for_cheng_qing_toc
     * @static
     * @param {Iwait_for_cheng_qing_toc} message wait_for_cheng_qing_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    wait_for_cheng_qing_toc.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a wait_for_cheng_qing_toc message from the specified reader or buffer.
     * @function decode
     * @memberof wait_for_cheng_qing_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {wait_for_cheng_qing_toc} wait_for_cheng_qing_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    wait_for_cheng_qing_toc.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.wait_for_cheng_qing_toc();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.diePlayerId = reader.uint32();
                    break;
                }
            case 2: {
                    message.waitingPlayerId = reader.uint32();
                    break;
                }
            case 3: {
                    message.waitingSecond = reader.uint32();
                    break;
                }
            case 4: {
                    message.seq = reader.uint32();
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a wait_for_cheng_qing_toc message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof wait_for_cheng_qing_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {wait_for_cheng_qing_toc} wait_for_cheng_qing_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    wait_for_cheng_qing_toc.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a wait_for_cheng_qing_toc message.
     * @function verify
     * @memberof wait_for_cheng_qing_toc
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    wait_for_cheng_qing_toc.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.diePlayerId != null && message.hasOwnProperty("diePlayerId"))
            if (!$util.isInteger(message.diePlayerId))
                return "diePlayerId: integer expected";
        if (message.waitingPlayerId != null && message.hasOwnProperty("waitingPlayerId"))
            if (!$util.isInteger(message.waitingPlayerId))
                return "waitingPlayerId: integer expected";
        if (message.waitingSecond != null && message.hasOwnProperty("waitingSecond"))
            if (!$util.isInteger(message.waitingSecond))
                return "waitingSecond: integer expected";
        if (message.seq != null && message.hasOwnProperty("seq"))
            if (!$util.isInteger(message.seq))
                return "seq: integer expected";
        return null;
    };

    /**
     * Creates a wait_for_cheng_qing_toc message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof wait_for_cheng_qing_toc
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {wait_for_cheng_qing_toc} wait_for_cheng_qing_toc
     */
    wait_for_cheng_qing_toc.fromObject = function fromObject(object) {
        if (object instanceof $root.wait_for_cheng_qing_toc)
            return object;
        var message = new $root.wait_for_cheng_qing_toc();
        if (object.diePlayerId != null)
            message.diePlayerId = object.diePlayerId >>> 0;
        if (object.waitingPlayerId != null)
            message.waitingPlayerId = object.waitingPlayerId >>> 0;
        if (object.waitingSecond != null)
            message.waitingSecond = object.waitingSecond >>> 0;
        if (object.seq != null)
            message.seq = object.seq >>> 0;
        return message;
    };

    /**
     * Creates a plain object from a wait_for_cheng_qing_toc message. Also converts values to other types if specified.
     * @function toObject
     * @memberof wait_for_cheng_qing_toc
     * @static
     * @param {wait_for_cheng_qing_toc} message wait_for_cheng_qing_toc
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    wait_for_cheng_qing_toc.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults) {
            object.diePlayerId = 0;
            object.waitingPlayerId = 0;
            object.waitingSecond = 0;
            object.seq = 0;
        }
        if (message.diePlayerId != null && message.hasOwnProperty("diePlayerId"))
            object.diePlayerId = message.diePlayerId;
        if (message.waitingPlayerId != null && message.hasOwnProperty("waitingPlayerId"))
            object.waitingPlayerId = message.waitingPlayerId;
        if (message.waitingSecond != null && message.hasOwnProperty("waitingSecond"))
            object.waitingSecond = message.waitingSecond;
        if (message.seq != null && message.hasOwnProperty("seq"))
            object.seq = message.seq;
        return object;
    };

    /**
     * Converts this wait_for_cheng_qing_toc to JSON.
     * @function toJSON
     * @memberof wait_for_cheng_qing_toc
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    wait_for_cheng_qing_toc.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for wait_for_cheng_qing_toc
     * @function getTypeUrl
     * @memberof wait_for_cheng_qing_toc
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    wait_for_cheng_qing_toc.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/wait_for_cheng_qing_toc";
    };

    return wait_for_cheng_qing_toc;
})();

$root.cheng_qing_save_die_tos = (function() {

    /**
     * Properties of a cheng_qing_save_die_tos.
     * @exports Icheng_qing_save_die_tos
     * @interface Icheng_qing_save_die_tos
     * @property {boolean|null} [use] cheng_qing_save_die_tos use
     * @property {number|null} [cardId] cheng_qing_save_die_tos cardId
     * @property {number|null} [targetCardId] cheng_qing_save_die_tos targetCardId
     * @property {number|null} [seq] cheng_qing_save_die_tos seq
     */

    /**
     * Constructs a new cheng_qing_save_die_tos.
     * @exports cheng_qing_save_die_tos
     * @classdesc Represents a cheng_qing_save_die_tos.
     * @implements Icheng_qing_save_die_tos
     * @constructor
     * @param {Icheng_qing_save_die_tos=} [properties] Properties to set
     */
    function cheng_qing_save_die_tos(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * cheng_qing_save_die_tos use.
     * @member {boolean} use
     * @memberof cheng_qing_save_die_tos
     * @instance
     */
    cheng_qing_save_die_tos.prototype.use = false;

    /**
     * cheng_qing_save_die_tos cardId.
     * @member {number} cardId
     * @memberof cheng_qing_save_die_tos
     * @instance
     */
    cheng_qing_save_die_tos.prototype.cardId = 0;

    /**
     * cheng_qing_save_die_tos targetCardId.
     * @member {number} targetCardId
     * @memberof cheng_qing_save_die_tos
     * @instance
     */
    cheng_qing_save_die_tos.prototype.targetCardId = 0;

    /**
     * cheng_qing_save_die_tos seq.
     * @member {number} seq
     * @memberof cheng_qing_save_die_tos
     * @instance
     */
    cheng_qing_save_die_tos.prototype.seq = 0;

    /**
     * Creates a new cheng_qing_save_die_tos instance using the specified properties.
     * @function create
     * @memberof cheng_qing_save_die_tos
     * @static
     * @param {Icheng_qing_save_die_tos=} [properties] Properties to set
     * @returns {cheng_qing_save_die_tos} cheng_qing_save_die_tos instance
     */
    cheng_qing_save_die_tos.create = function create(properties) {
        return new cheng_qing_save_die_tos(properties);
    };

    /**
     * Encodes the specified cheng_qing_save_die_tos message. Does not implicitly {@link cheng_qing_save_die_tos.verify|verify} messages.
     * @function encode
     * @memberof cheng_qing_save_die_tos
     * @static
     * @param {Icheng_qing_save_die_tos} message cheng_qing_save_die_tos message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    cheng_qing_save_die_tos.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.use != null && Object.hasOwnProperty.call(message, "use"))
            writer.uint32(/* id 1, wireType 0 =*/8).bool(message.use);
        if (message.cardId != null && Object.hasOwnProperty.call(message, "cardId"))
            writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.cardId);
        if (message.targetCardId != null && Object.hasOwnProperty.call(message, "targetCardId"))
            writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.targetCardId);
        if (message.seq != null && Object.hasOwnProperty.call(message, "seq"))
            writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.seq);
        return writer;
    };

    /**
     * Encodes the specified cheng_qing_save_die_tos message, length delimited. Does not implicitly {@link cheng_qing_save_die_tos.verify|verify} messages.
     * @function encodeDelimited
     * @memberof cheng_qing_save_die_tos
     * @static
     * @param {Icheng_qing_save_die_tos} message cheng_qing_save_die_tos message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    cheng_qing_save_die_tos.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a cheng_qing_save_die_tos message from the specified reader or buffer.
     * @function decode
     * @memberof cheng_qing_save_die_tos
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {cheng_qing_save_die_tos} cheng_qing_save_die_tos
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    cheng_qing_save_die_tos.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.cheng_qing_save_die_tos();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.use = reader.bool();
                    break;
                }
            case 2: {
                    message.cardId = reader.uint32();
                    break;
                }
            case 3: {
                    message.targetCardId = reader.uint32();
                    break;
                }
            case 4: {
                    message.seq = reader.uint32();
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a cheng_qing_save_die_tos message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof cheng_qing_save_die_tos
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {cheng_qing_save_die_tos} cheng_qing_save_die_tos
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    cheng_qing_save_die_tos.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a cheng_qing_save_die_tos message.
     * @function verify
     * @memberof cheng_qing_save_die_tos
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    cheng_qing_save_die_tos.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.use != null && message.hasOwnProperty("use"))
            if (typeof message.use !== "boolean")
                return "use: boolean expected";
        if (message.cardId != null && message.hasOwnProperty("cardId"))
            if (!$util.isInteger(message.cardId))
                return "cardId: integer expected";
        if (message.targetCardId != null && message.hasOwnProperty("targetCardId"))
            if (!$util.isInteger(message.targetCardId))
                return "targetCardId: integer expected";
        if (message.seq != null && message.hasOwnProperty("seq"))
            if (!$util.isInteger(message.seq))
                return "seq: integer expected";
        return null;
    };

    /**
     * Creates a cheng_qing_save_die_tos message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof cheng_qing_save_die_tos
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {cheng_qing_save_die_tos} cheng_qing_save_die_tos
     */
    cheng_qing_save_die_tos.fromObject = function fromObject(object) {
        if (object instanceof $root.cheng_qing_save_die_tos)
            return object;
        var message = new $root.cheng_qing_save_die_tos();
        if (object.use != null)
            message.use = Boolean(object.use);
        if (object.cardId != null)
            message.cardId = object.cardId >>> 0;
        if (object.targetCardId != null)
            message.targetCardId = object.targetCardId >>> 0;
        if (object.seq != null)
            message.seq = object.seq >>> 0;
        return message;
    };

    /**
     * Creates a plain object from a cheng_qing_save_die_tos message. Also converts values to other types if specified.
     * @function toObject
     * @memberof cheng_qing_save_die_tos
     * @static
     * @param {cheng_qing_save_die_tos} message cheng_qing_save_die_tos
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    cheng_qing_save_die_tos.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults) {
            object.use = false;
            object.cardId = 0;
            object.targetCardId = 0;
            object.seq = 0;
        }
        if (message.use != null && message.hasOwnProperty("use"))
            object.use = message.use;
        if (message.cardId != null && message.hasOwnProperty("cardId"))
            object.cardId = message.cardId;
        if (message.targetCardId != null && message.hasOwnProperty("targetCardId"))
            object.targetCardId = message.targetCardId;
        if (message.seq != null && message.hasOwnProperty("seq"))
            object.seq = message.seq;
        return object;
    };

    /**
     * Converts this cheng_qing_save_die_tos to JSON.
     * @function toJSON
     * @memberof cheng_qing_save_die_tos
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    cheng_qing_save_die_tos.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for cheng_qing_save_die_tos
     * @function getTypeUrl
     * @memberof cheng_qing_save_die_tos
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    cheng_qing_save_die_tos.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/cheng_qing_save_die_tos";
    };

    return cheng_qing_save_die_tos;
})();

$root.wait_for_die_give_card_toc = (function() {

    /**
     * Properties of a wait_for_die_give_card_toc.
     * @exports Iwait_for_die_give_card_toc
     * @interface Iwait_for_die_give_card_toc
     * @property {number|null} [playerId] wait_for_die_give_card_toc playerId
     * @property {number|null} [waitingSecond] wait_for_die_give_card_toc waitingSecond
     * @property {number|null} [seq] wait_for_die_give_card_toc seq
     */

    /**
     * Constructs a new wait_for_die_give_card_toc.
     * @exports wait_for_die_give_card_toc
     * @classdesc Represents a wait_for_die_give_card_toc.
     * @implements Iwait_for_die_give_card_toc
     * @constructor
     * @param {Iwait_for_die_give_card_toc=} [properties] Properties to set
     */
    function wait_for_die_give_card_toc(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * wait_for_die_give_card_toc playerId.
     * @member {number} playerId
     * @memberof wait_for_die_give_card_toc
     * @instance
     */
    wait_for_die_give_card_toc.prototype.playerId = 0;

    /**
     * wait_for_die_give_card_toc waitingSecond.
     * @member {number} waitingSecond
     * @memberof wait_for_die_give_card_toc
     * @instance
     */
    wait_for_die_give_card_toc.prototype.waitingSecond = 0;

    /**
     * wait_for_die_give_card_toc seq.
     * @member {number} seq
     * @memberof wait_for_die_give_card_toc
     * @instance
     */
    wait_for_die_give_card_toc.prototype.seq = 0;

    /**
     * Creates a new wait_for_die_give_card_toc instance using the specified properties.
     * @function create
     * @memberof wait_for_die_give_card_toc
     * @static
     * @param {Iwait_for_die_give_card_toc=} [properties] Properties to set
     * @returns {wait_for_die_give_card_toc} wait_for_die_give_card_toc instance
     */
    wait_for_die_give_card_toc.create = function create(properties) {
        return new wait_for_die_give_card_toc(properties);
    };

    /**
     * Encodes the specified wait_for_die_give_card_toc message. Does not implicitly {@link wait_for_die_give_card_toc.verify|verify} messages.
     * @function encode
     * @memberof wait_for_die_give_card_toc
     * @static
     * @param {Iwait_for_die_give_card_toc} message wait_for_die_give_card_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    wait_for_die_give_card_toc.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.playerId != null && Object.hasOwnProperty.call(message, "playerId"))
            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.playerId);
        if (message.waitingSecond != null && Object.hasOwnProperty.call(message, "waitingSecond"))
            writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.waitingSecond);
        if (message.seq != null && Object.hasOwnProperty.call(message, "seq"))
            writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.seq);
        return writer;
    };

    /**
     * Encodes the specified wait_for_die_give_card_toc message, length delimited. Does not implicitly {@link wait_for_die_give_card_toc.verify|verify} messages.
     * @function encodeDelimited
     * @memberof wait_for_die_give_card_toc
     * @static
     * @param {Iwait_for_die_give_card_toc} message wait_for_die_give_card_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    wait_for_die_give_card_toc.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a wait_for_die_give_card_toc message from the specified reader or buffer.
     * @function decode
     * @memberof wait_for_die_give_card_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {wait_for_die_give_card_toc} wait_for_die_give_card_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    wait_for_die_give_card_toc.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.wait_for_die_give_card_toc();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.playerId = reader.uint32();
                    break;
                }
            case 2: {
                    message.waitingSecond = reader.uint32();
                    break;
                }
            case 3: {
                    message.seq = reader.uint32();
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a wait_for_die_give_card_toc message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof wait_for_die_give_card_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {wait_for_die_give_card_toc} wait_for_die_give_card_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    wait_for_die_give_card_toc.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a wait_for_die_give_card_toc message.
     * @function verify
     * @memberof wait_for_die_give_card_toc
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    wait_for_die_give_card_toc.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            if (!$util.isInteger(message.playerId))
                return "playerId: integer expected";
        if (message.waitingSecond != null && message.hasOwnProperty("waitingSecond"))
            if (!$util.isInteger(message.waitingSecond))
                return "waitingSecond: integer expected";
        if (message.seq != null && message.hasOwnProperty("seq"))
            if (!$util.isInteger(message.seq))
                return "seq: integer expected";
        return null;
    };

    /**
     * Creates a wait_for_die_give_card_toc message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof wait_for_die_give_card_toc
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {wait_for_die_give_card_toc} wait_for_die_give_card_toc
     */
    wait_for_die_give_card_toc.fromObject = function fromObject(object) {
        if (object instanceof $root.wait_for_die_give_card_toc)
            return object;
        var message = new $root.wait_for_die_give_card_toc();
        if (object.playerId != null)
            message.playerId = object.playerId >>> 0;
        if (object.waitingSecond != null)
            message.waitingSecond = object.waitingSecond >>> 0;
        if (object.seq != null)
            message.seq = object.seq >>> 0;
        return message;
    };

    /**
     * Creates a plain object from a wait_for_die_give_card_toc message. Also converts values to other types if specified.
     * @function toObject
     * @memberof wait_for_die_give_card_toc
     * @static
     * @param {wait_for_die_give_card_toc} message wait_for_die_give_card_toc
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    wait_for_die_give_card_toc.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults) {
            object.playerId = 0;
            object.waitingSecond = 0;
            object.seq = 0;
        }
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            object.playerId = message.playerId;
        if (message.waitingSecond != null && message.hasOwnProperty("waitingSecond"))
            object.waitingSecond = message.waitingSecond;
        if (message.seq != null && message.hasOwnProperty("seq"))
            object.seq = message.seq;
        return object;
    };

    /**
     * Converts this wait_for_die_give_card_toc to JSON.
     * @function toJSON
     * @memberof wait_for_die_give_card_toc
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    wait_for_die_give_card_toc.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for wait_for_die_give_card_toc
     * @function getTypeUrl
     * @memberof wait_for_die_give_card_toc
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    wait_for_die_give_card_toc.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/wait_for_die_give_card_toc";
    };

    return wait_for_die_give_card_toc;
})();

$root.die_give_card_tos = (function() {

    /**
     * Properties of a die_give_card_tos.
     * @exports Idie_give_card_tos
     * @interface Idie_give_card_tos
     * @property {number|null} [targetPlayerId] die_give_card_tos targetPlayerId
     * @property {Array.<number>|null} [cardId] die_give_card_tos cardId
     * @property {number|null} [seq] die_give_card_tos seq
     */

    /**
     * Constructs a new die_give_card_tos.
     * @exports die_give_card_tos
     * @classdesc Represents a die_give_card_tos.
     * @implements Idie_give_card_tos
     * @constructor
     * @param {Idie_give_card_tos=} [properties] Properties to set
     */
    function die_give_card_tos(properties) {
        this.cardId = [];
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * die_give_card_tos targetPlayerId.
     * @member {number} targetPlayerId
     * @memberof die_give_card_tos
     * @instance
     */
    die_give_card_tos.prototype.targetPlayerId = 0;

    /**
     * die_give_card_tos cardId.
     * @member {Array.<number>} cardId
     * @memberof die_give_card_tos
     * @instance
     */
    die_give_card_tos.prototype.cardId = $util.emptyArray;

    /**
     * die_give_card_tos seq.
     * @member {number} seq
     * @memberof die_give_card_tos
     * @instance
     */
    die_give_card_tos.prototype.seq = 0;

    /**
     * Creates a new die_give_card_tos instance using the specified properties.
     * @function create
     * @memberof die_give_card_tos
     * @static
     * @param {Idie_give_card_tos=} [properties] Properties to set
     * @returns {die_give_card_tos} die_give_card_tos instance
     */
    die_give_card_tos.create = function create(properties) {
        return new die_give_card_tos(properties);
    };

    /**
     * Encodes the specified die_give_card_tos message. Does not implicitly {@link die_give_card_tos.verify|verify} messages.
     * @function encode
     * @memberof die_give_card_tos
     * @static
     * @param {Idie_give_card_tos} message die_give_card_tos message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    die_give_card_tos.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.targetPlayerId != null && Object.hasOwnProperty.call(message, "targetPlayerId"))
            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.targetPlayerId);
        if (message.cardId != null && message.cardId.length) {
            writer.uint32(/* id 2, wireType 2 =*/18).fork();
            for (var i = 0; i < message.cardId.length; ++i)
                writer.uint32(message.cardId[i]);
            writer.ldelim();
        }
        if (message.seq != null && Object.hasOwnProperty.call(message, "seq"))
            writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.seq);
        return writer;
    };

    /**
     * Encodes the specified die_give_card_tos message, length delimited. Does not implicitly {@link die_give_card_tos.verify|verify} messages.
     * @function encodeDelimited
     * @memberof die_give_card_tos
     * @static
     * @param {Idie_give_card_tos} message die_give_card_tos message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    die_give_card_tos.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a die_give_card_tos message from the specified reader or buffer.
     * @function decode
     * @memberof die_give_card_tos
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {die_give_card_tos} die_give_card_tos
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    die_give_card_tos.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.die_give_card_tos();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.targetPlayerId = reader.uint32();
                    break;
                }
            case 2: {
                    if (!(message.cardId && message.cardId.length))
                        message.cardId = [];
                    if ((tag & 7) === 2) {
                        var end2 = reader.uint32() + reader.pos;
                        while (reader.pos < end2)
                            message.cardId.push(reader.uint32());
                    } else
                        message.cardId.push(reader.uint32());
                    break;
                }
            case 3: {
                    message.seq = reader.uint32();
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a die_give_card_tos message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof die_give_card_tos
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {die_give_card_tos} die_give_card_tos
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    die_give_card_tos.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a die_give_card_tos message.
     * @function verify
     * @memberof die_give_card_tos
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    die_give_card_tos.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.targetPlayerId != null && message.hasOwnProperty("targetPlayerId"))
            if (!$util.isInteger(message.targetPlayerId))
                return "targetPlayerId: integer expected";
        if (message.cardId != null && message.hasOwnProperty("cardId")) {
            if (!Array.isArray(message.cardId))
                return "cardId: array expected";
            for (var i = 0; i < message.cardId.length; ++i)
                if (!$util.isInteger(message.cardId[i]))
                    return "cardId: integer[] expected";
        }
        if (message.seq != null && message.hasOwnProperty("seq"))
            if (!$util.isInteger(message.seq))
                return "seq: integer expected";
        return null;
    };

    /**
     * Creates a die_give_card_tos message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof die_give_card_tos
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {die_give_card_tos} die_give_card_tos
     */
    die_give_card_tos.fromObject = function fromObject(object) {
        if (object instanceof $root.die_give_card_tos)
            return object;
        var message = new $root.die_give_card_tos();
        if (object.targetPlayerId != null)
            message.targetPlayerId = object.targetPlayerId >>> 0;
        if (object.cardId) {
            if (!Array.isArray(object.cardId))
                throw TypeError(".die_give_card_tos.cardId: array expected");
            message.cardId = [];
            for (var i = 0; i < object.cardId.length; ++i)
                message.cardId[i] = object.cardId[i] >>> 0;
        }
        if (object.seq != null)
            message.seq = object.seq >>> 0;
        return message;
    };

    /**
     * Creates a plain object from a die_give_card_tos message. Also converts values to other types if specified.
     * @function toObject
     * @memberof die_give_card_tos
     * @static
     * @param {die_give_card_tos} message die_give_card_tos
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    die_give_card_tos.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.arrays || options.defaults)
            object.cardId = [];
        if (options.defaults) {
            object.targetPlayerId = 0;
            object.seq = 0;
        }
        if (message.targetPlayerId != null && message.hasOwnProperty("targetPlayerId"))
            object.targetPlayerId = message.targetPlayerId;
        if (message.cardId && message.cardId.length) {
            object.cardId = [];
            for (var j = 0; j < message.cardId.length; ++j)
                object.cardId[j] = message.cardId[j];
        }
        if (message.seq != null && message.hasOwnProperty("seq"))
            object.seq = message.seq;
        return object;
    };

    /**
     * Converts this die_give_card_tos to JSON.
     * @function toJSON
     * @memberof die_give_card_tos
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    die_give_card_tos.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for die_give_card_tos
     * @function getTypeUrl
     * @memberof die_give_card_tos
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    die_give_card_tos.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/die_give_card_tos";
    };

    return die_give_card_tos;
})();

$root.notify_die_give_card_toc = (function() {

    /**
     * Properties of a notify_die_give_card_toc.
     * @exports Inotify_die_give_card_toc
     * @interface Inotify_die_give_card_toc
     * @property {number|null} [playerId] notify_die_give_card_toc playerId
     * @property {number|null} [targetPlayerId] notify_die_give_card_toc targetPlayerId
     * @property {Array.<Icard>|null} [card] notify_die_give_card_toc card
     * @property {number|null} [unknownCardCount] notify_die_give_card_toc unknownCardCount
     */

    /**
     * Constructs a new notify_die_give_card_toc.
     * @exports notify_die_give_card_toc
     * @classdesc Represents a notify_die_give_card_toc.
     * @implements Inotify_die_give_card_toc
     * @constructor
     * @param {Inotify_die_give_card_toc=} [properties] Properties to set
     */
    function notify_die_give_card_toc(properties) {
        this.card = [];
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * notify_die_give_card_toc playerId.
     * @member {number} playerId
     * @memberof notify_die_give_card_toc
     * @instance
     */
    notify_die_give_card_toc.prototype.playerId = 0;

    /**
     * notify_die_give_card_toc targetPlayerId.
     * @member {number} targetPlayerId
     * @memberof notify_die_give_card_toc
     * @instance
     */
    notify_die_give_card_toc.prototype.targetPlayerId = 0;

    /**
     * notify_die_give_card_toc card.
     * @member {Array.<Icard>} card
     * @memberof notify_die_give_card_toc
     * @instance
     */
    notify_die_give_card_toc.prototype.card = $util.emptyArray;

    /**
     * notify_die_give_card_toc unknownCardCount.
     * @member {number} unknownCardCount
     * @memberof notify_die_give_card_toc
     * @instance
     */
    notify_die_give_card_toc.prototype.unknownCardCount = 0;

    /**
     * Creates a new notify_die_give_card_toc instance using the specified properties.
     * @function create
     * @memberof notify_die_give_card_toc
     * @static
     * @param {Inotify_die_give_card_toc=} [properties] Properties to set
     * @returns {notify_die_give_card_toc} notify_die_give_card_toc instance
     */
    notify_die_give_card_toc.create = function create(properties) {
        return new notify_die_give_card_toc(properties);
    };

    /**
     * Encodes the specified notify_die_give_card_toc message. Does not implicitly {@link notify_die_give_card_toc.verify|verify} messages.
     * @function encode
     * @memberof notify_die_give_card_toc
     * @static
     * @param {Inotify_die_give_card_toc} message notify_die_give_card_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    notify_die_give_card_toc.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.playerId != null && Object.hasOwnProperty.call(message, "playerId"))
            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.playerId);
        if (message.targetPlayerId != null && Object.hasOwnProperty.call(message, "targetPlayerId"))
            writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.targetPlayerId);
        if (message.card != null && message.card.length)
            for (var i = 0; i < message.card.length; ++i)
                $root.card.encode(message.card[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
        if (message.unknownCardCount != null && Object.hasOwnProperty.call(message, "unknownCardCount"))
            writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.unknownCardCount);
        return writer;
    };

    /**
     * Encodes the specified notify_die_give_card_toc message, length delimited. Does not implicitly {@link notify_die_give_card_toc.verify|verify} messages.
     * @function encodeDelimited
     * @memberof notify_die_give_card_toc
     * @static
     * @param {Inotify_die_give_card_toc} message notify_die_give_card_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    notify_die_give_card_toc.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a notify_die_give_card_toc message from the specified reader or buffer.
     * @function decode
     * @memberof notify_die_give_card_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {notify_die_give_card_toc} notify_die_give_card_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    notify_die_give_card_toc.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.notify_die_give_card_toc();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.playerId = reader.uint32();
                    break;
                }
            case 2: {
                    message.targetPlayerId = reader.uint32();
                    break;
                }
            case 3: {
                    if (!(message.card && message.card.length))
                        message.card = [];
                    message.card.push($root.card.decode(reader, reader.uint32()));
                    break;
                }
            case 4: {
                    message.unknownCardCount = reader.uint32();
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a notify_die_give_card_toc message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof notify_die_give_card_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {notify_die_give_card_toc} notify_die_give_card_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    notify_die_give_card_toc.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a notify_die_give_card_toc message.
     * @function verify
     * @memberof notify_die_give_card_toc
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    notify_die_give_card_toc.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            if (!$util.isInteger(message.playerId))
                return "playerId: integer expected";
        if (message.targetPlayerId != null && message.hasOwnProperty("targetPlayerId"))
            if (!$util.isInteger(message.targetPlayerId))
                return "targetPlayerId: integer expected";
        if (message.card != null && message.hasOwnProperty("card")) {
            if (!Array.isArray(message.card))
                return "card: array expected";
            for (var i = 0; i < message.card.length; ++i) {
                var error = $root.card.verify(message.card[i]);
                if (error)
                    return "card." + error;
            }
        }
        if (message.unknownCardCount != null && message.hasOwnProperty("unknownCardCount"))
            if (!$util.isInteger(message.unknownCardCount))
                return "unknownCardCount: integer expected";
        return null;
    };

    /**
     * Creates a notify_die_give_card_toc message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof notify_die_give_card_toc
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {notify_die_give_card_toc} notify_die_give_card_toc
     */
    notify_die_give_card_toc.fromObject = function fromObject(object) {
        if (object instanceof $root.notify_die_give_card_toc)
            return object;
        var message = new $root.notify_die_give_card_toc();
        if (object.playerId != null)
            message.playerId = object.playerId >>> 0;
        if (object.targetPlayerId != null)
            message.targetPlayerId = object.targetPlayerId >>> 0;
        if (object.card) {
            if (!Array.isArray(object.card))
                throw TypeError(".notify_die_give_card_toc.card: array expected");
            message.card = [];
            for (var i = 0; i < object.card.length; ++i) {
                if (typeof object.card[i] !== "object")
                    throw TypeError(".notify_die_give_card_toc.card: object expected");
                message.card[i] = $root.card.fromObject(object.card[i]);
            }
        }
        if (object.unknownCardCount != null)
            message.unknownCardCount = object.unknownCardCount >>> 0;
        return message;
    };

    /**
     * Creates a plain object from a notify_die_give_card_toc message. Also converts values to other types if specified.
     * @function toObject
     * @memberof notify_die_give_card_toc
     * @static
     * @param {notify_die_give_card_toc} message notify_die_give_card_toc
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    notify_die_give_card_toc.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.arrays || options.defaults)
            object.card = [];
        if (options.defaults) {
            object.playerId = 0;
            object.targetPlayerId = 0;
            object.unknownCardCount = 0;
        }
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            object.playerId = message.playerId;
        if (message.targetPlayerId != null && message.hasOwnProperty("targetPlayerId"))
            object.targetPlayerId = message.targetPlayerId;
        if (message.card && message.card.length) {
            object.card = [];
            for (var j = 0; j < message.card.length; ++j)
                object.card[j] = $root.card.toObject(message.card[j], options);
        }
        if (message.unknownCardCount != null && message.hasOwnProperty("unknownCardCount"))
            object.unknownCardCount = message.unknownCardCount;
        return object;
    };

    /**
     * Converts this notify_die_give_card_toc to JSON.
     * @function toJSON
     * @memberof notify_die_give_card_toc
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    notify_die_give_card_toc.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for notify_die_give_card_toc
     * @function getTypeUrl
     * @memberof notify_die_give_card_toc
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    notify_die_give_card_toc.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/notify_die_give_card_toc";
    };

    return notify_die_give_card_toc;
})();

$root.use_po_yi_tos = (function() {

    /**
     * Properties of a use_po_yi_tos.
     * @exports Iuse_po_yi_tos
     * @interface Iuse_po_yi_tos
     * @property {number|null} [cardId] use_po_yi_tos cardId
     * @property {number|null} [seq] use_po_yi_tos seq
     */

    /**
     * Constructs a new use_po_yi_tos.
     * @exports use_po_yi_tos
     * @classdesc Represents a use_po_yi_tos.
     * @implements Iuse_po_yi_tos
     * @constructor
     * @param {Iuse_po_yi_tos=} [properties] Properties to set
     */
    function use_po_yi_tos(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * use_po_yi_tos cardId.
     * @member {number} cardId
     * @memberof use_po_yi_tos
     * @instance
     */
    use_po_yi_tos.prototype.cardId = 0;

    /**
     * use_po_yi_tos seq.
     * @member {number} seq
     * @memberof use_po_yi_tos
     * @instance
     */
    use_po_yi_tos.prototype.seq = 0;

    /**
     * Creates a new use_po_yi_tos instance using the specified properties.
     * @function create
     * @memberof use_po_yi_tos
     * @static
     * @param {Iuse_po_yi_tos=} [properties] Properties to set
     * @returns {use_po_yi_tos} use_po_yi_tos instance
     */
    use_po_yi_tos.create = function create(properties) {
        return new use_po_yi_tos(properties);
    };

    /**
     * Encodes the specified use_po_yi_tos message. Does not implicitly {@link use_po_yi_tos.verify|verify} messages.
     * @function encode
     * @memberof use_po_yi_tos
     * @static
     * @param {Iuse_po_yi_tos} message use_po_yi_tos message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    use_po_yi_tos.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.cardId != null && Object.hasOwnProperty.call(message, "cardId"))
            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.cardId);
        if (message.seq != null && Object.hasOwnProperty.call(message, "seq"))
            writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.seq);
        return writer;
    };

    /**
     * Encodes the specified use_po_yi_tos message, length delimited. Does not implicitly {@link use_po_yi_tos.verify|verify} messages.
     * @function encodeDelimited
     * @memberof use_po_yi_tos
     * @static
     * @param {Iuse_po_yi_tos} message use_po_yi_tos message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    use_po_yi_tos.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a use_po_yi_tos message from the specified reader or buffer.
     * @function decode
     * @memberof use_po_yi_tos
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {use_po_yi_tos} use_po_yi_tos
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    use_po_yi_tos.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.use_po_yi_tos();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.cardId = reader.uint32();
                    break;
                }
            case 2: {
                    message.seq = reader.uint32();
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a use_po_yi_tos message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof use_po_yi_tos
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {use_po_yi_tos} use_po_yi_tos
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    use_po_yi_tos.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a use_po_yi_tos message.
     * @function verify
     * @memberof use_po_yi_tos
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    use_po_yi_tos.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.cardId != null && message.hasOwnProperty("cardId"))
            if (!$util.isInteger(message.cardId))
                return "cardId: integer expected";
        if (message.seq != null && message.hasOwnProperty("seq"))
            if (!$util.isInteger(message.seq))
                return "seq: integer expected";
        return null;
    };

    /**
     * Creates a use_po_yi_tos message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof use_po_yi_tos
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {use_po_yi_tos} use_po_yi_tos
     */
    use_po_yi_tos.fromObject = function fromObject(object) {
        if (object instanceof $root.use_po_yi_tos)
            return object;
        var message = new $root.use_po_yi_tos();
        if (object.cardId != null)
            message.cardId = object.cardId >>> 0;
        if (object.seq != null)
            message.seq = object.seq >>> 0;
        return message;
    };

    /**
     * Creates a plain object from a use_po_yi_tos message. Also converts values to other types if specified.
     * @function toObject
     * @memberof use_po_yi_tos
     * @static
     * @param {use_po_yi_tos} message use_po_yi_tos
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    use_po_yi_tos.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults) {
            object.cardId = 0;
            object.seq = 0;
        }
        if (message.cardId != null && message.hasOwnProperty("cardId"))
            object.cardId = message.cardId;
        if (message.seq != null && message.hasOwnProperty("seq"))
            object.seq = message.seq;
        return object;
    };

    /**
     * Converts this use_po_yi_tos to JSON.
     * @function toJSON
     * @memberof use_po_yi_tos
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    use_po_yi_tos.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for use_po_yi_tos
     * @function getTypeUrl
     * @memberof use_po_yi_tos
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    use_po_yi_tos.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/use_po_yi_tos";
    };

    return use_po_yi_tos;
})();

$root.use_po_yi_toc = (function() {

    /**
     * Properties of a use_po_yi_toc.
     * @exports Iuse_po_yi_toc
     * @interface Iuse_po_yi_toc
     * @property {Icard|null} [card] use_po_yi_toc card
     * @property {number|null} [playerId] use_po_yi_toc playerId
     * @property {Icard|null} [messageCard] use_po_yi_toc messageCard
     * @property {number|null} [waitingSecond] use_po_yi_toc waitingSecond
     * @property {number|null} [seq] use_po_yi_toc seq
     */

    /**
     * Constructs a new use_po_yi_toc.
     * @exports use_po_yi_toc
     * @classdesc Represents a use_po_yi_toc.
     * @implements Iuse_po_yi_toc
     * @constructor
     * @param {Iuse_po_yi_toc=} [properties] Properties to set
     */
    function use_po_yi_toc(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * use_po_yi_toc card.
     * @member {Icard|null|undefined} card
     * @memberof use_po_yi_toc
     * @instance
     */
    use_po_yi_toc.prototype.card = null;

    /**
     * use_po_yi_toc playerId.
     * @member {number} playerId
     * @memberof use_po_yi_toc
     * @instance
     */
    use_po_yi_toc.prototype.playerId = 0;

    /**
     * use_po_yi_toc messageCard.
     * @member {Icard|null|undefined} messageCard
     * @memberof use_po_yi_toc
     * @instance
     */
    use_po_yi_toc.prototype.messageCard = null;

    /**
     * use_po_yi_toc waitingSecond.
     * @member {number} waitingSecond
     * @memberof use_po_yi_toc
     * @instance
     */
    use_po_yi_toc.prototype.waitingSecond = 0;

    /**
     * use_po_yi_toc seq.
     * @member {number} seq
     * @memberof use_po_yi_toc
     * @instance
     */
    use_po_yi_toc.prototype.seq = 0;

    /**
     * Creates a new use_po_yi_toc instance using the specified properties.
     * @function create
     * @memberof use_po_yi_toc
     * @static
     * @param {Iuse_po_yi_toc=} [properties] Properties to set
     * @returns {use_po_yi_toc} use_po_yi_toc instance
     */
    use_po_yi_toc.create = function create(properties) {
        return new use_po_yi_toc(properties);
    };

    /**
     * Encodes the specified use_po_yi_toc message. Does not implicitly {@link use_po_yi_toc.verify|verify} messages.
     * @function encode
     * @memberof use_po_yi_toc
     * @static
     * @param {Iuse_po_yi_toc} message use_po_yi_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    use_po_yi_toc.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.card != null && Object.hasOwnProperty.call(message, "card"))
            $root.card.encode(message.card, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
        if (message.playerId != null && Object.hasOwnProperty.call(message, "playerId"))
            writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.playerId);
        if (message.messageCard != null && Object.hasOwnProperty.call(message, "messageCard"))
            $root.card.encode(message.messageCard, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
        if (message.waitingSecond != null && Object.hasOwnProperty.call(message, "waitingSecond"))
            writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.waitingSecond);
        if (message.seq != null && Object.hasOwnProperty.call(message, "seq"))
            writer.uint32(/* id 5, wireType 0 =*/40).uint32(message.seq);
        return writer;
    };

    /**
     * Encodes the specified use_po_yi_toc message, length delimited. Does not implicitly {@link use_po_yi_toc.verify|verify} messages.
     * @function encodeDelimited
     * @memberof use_po_yi_toc
     * @static
     * @param {Iuse_po_yi_toc} message use_po_yi_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    use_po_yi_toc.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a use_po_yi_toc message from the specified reader or buffer.
     * @function decode
     * @memberof use_po_yi_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {use_po_yi_toc} use_po_yi_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    use_po_yi_toc.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.use_po_yi_toc();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.card = $root.card.decode(reader, reader.uint32());
                    break;
                }
            case 2: {
                    message.playerId = reader.uint32();
                    break;
                }
            case 3: {
                    message.messageCard = $root.card.decode(reader, reader.uint32());
                    break;
                }
            case 4: {
                    message.waitingSecond = reader.uint32();
                    break;
                }
            case 5: {
                    message.seq = reader.uint32();
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a use_po_yi_toc message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof use_po_yi_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {use_po_yi_toc} use_po_yi_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    use_po_yi_toc.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a use_po_yi_toc message.
     * @function verify
     * @memberof use_po_yi_toc
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    use_po_yi_toc.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.card != null && message.hasOwnProperty("card")) {
            var error = $root.card.verify(message.card);
            if (error)
                return "card." + error;
        }
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            if (!$util.isInteger(message.playerId))
                return "playerId: integer expected";
        if (message.messageCard != null && message.hasOwnProperty("messageCard")) {
            var error = $root.card.verify(message.messageCard);
            if (error)
                return "messageCard." + error;
        }
        if (message.waitingSecond != null && message.hasOwnProperty("waitingSecond"))
            if (!$util.isInteger(message.waitingSecond))
                return "waitingSecond: integer expected";
        if (message.seq != null && message.hasOwnProperty("seq"))
            if (!$util.isInteger(message.seq))
                return "seq: integer expected";
        return null;
    };

    /**
     * Creates a use_po_yi_toc message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof use_po_yi_toc
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {use_po_yi_toc} use_po_yi_toc
     */
    use_po_yi_toc.fromObject = function fromObject(object) {
        if (object instanceof $root.use_po_yi_toc)
            return object;
        var message = new $root.use_po_yi_toc();
        if (object.card != null) {
            if (typeof object.card !== "object")
                throw TypeError(".use_po_yi_toc.card: object expected");
            message.card = $root.card.fromObject(object.card);
        }
        if (object.playerId != null)
            message.playerId = object.playerId >>> 0;
        if (object.messageCard != null) {
            if (typeof object.messageCard !== "object")
                throw TypeError(".use_po_yi_toc.messageCard: object expected");
            message.messageCard = $root.card.fromObject(object.messageCard);
        }
        if (object.waitingSecond != null)
            message.waitingSecond = object.waitingSecond >>> 0;
        if (object.seq != null)
            message.seq = object.seq >>> 0;
        return message;
    };

    /**
     * Creates a plain object from a use_po_yi_toc message. Also converts values to other types if specified.
     * @function toObject
     * @memberof use_po_yi_toc
     * @static
     * @param {use_po_yi_toc} message use_po_yi_toc
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    use_po_yi_toc.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults) {
            object.card = null;
            object.playerId = 0;
            object.messageCard = null;
            object.waitingSecond = 0;
            object.seq = 0;
        }
        if (message.card != null && message.hasOwnProperty("card"))
            object.card = $root.card.toObject(message.card, options);
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            object.playerId = message.playerId;
        if (message.messageCard != null && message.hasOwnProperty("messageCard"))
            object.messageCard = $root.card.toObject(message.messageCard, options);
        if (message.waitingSecond != null && message.hasOwnProperty("waitingSecond"))
            object.waitingSecond = message.waitingSecond;
        if (message.seq != null && message.hasOwnProperty("seq"))
            object.seq = message.seq;
        return object;
    };

    /**
     * Converts this use_po_yi_toc to JSON.
     * @function toJSON
     * @memberof use_po_yi_toc
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    use_po_yi_toc.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for use_po_yi_toc
     * @function getTypeUrl
     * @memberof use_po_yi_toc
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    use_po_yi_toc.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/use_po_yi_toc";
    };

    return use_po_yi_toc;
})();

$root.po_yi_show_tos = (function() {

    /**
     * Properties of a po_yi_show_tos.
     * @exports Ipo_yi_show_tos
     * @interface Ipo_yi_show_tos
     * @property {boolean|null} [show] po_yi_show_tos show
     * @property {number|null} [seq] po_yi_show_tos seq
     */

    /**
     * Constructs a new po_yi_show_tos.
     * @exports po_yi_show_tos
     * @classdesc Represents a po_yi_show_tos.
     * @implements Ipo_yi_show_tos
     * @constructor
     * @param {Ipo_yi_show_tos=} [properties] Properties to set
     */
    function po_yi_show_tos(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * po_yi_show_tos show.
     * @member {boolean} show
     * @memberof po_yi_show_tos
     * @instance
     */
    po_yi_show_tos.prototype.show = false;

    /**
     * po_yi_show_tos seq.
     * @member {number} seq
     * @memberof po_yi_show_tos
     * @instance
     */
    po_yi_show_tos.prototype.seq = 0;

    /**
     * Creates a new po_yi_show_tos instance using the specified properties.
     * @function create
     * @memberof po_yi_show_tos
     * @static
     * @param {Ipo_yi_show_tos=} [properties] Properties to set
     * @returns {po_yi_show_tos} po_yi_show_tos instance
     */
    po_yi_show_tos.create = function create(properties) {
        return new po_yi_show_tos(properties);
    };

    /**
     * Encodes the specified po_yi_show_tos message. Does not implicitly {@link po_yi_show_tos.verify|verify} messages.
     * @function encode
     * @memberof po_yi_show_tos
     * @static
     * @param {Ipo_yi_show_tos} message po_yi_show_tos message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    po_yi_show_tos.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.show != null && Object.hasOwnProperty.call(message, "show"))
            writer.uint32(/* id 1, wireType 0 =*/8).bool(message.show);
        if (message.seq != null && Object.hasOwnProperty.call(message, "seq"))
            writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.seq);
        return writer;
    };

    /**
     * Encodes the specified po_yi_show_tos message, length delimited. Does not implicitly {@link po_yi_show_tos.verify|verify} messages.
     * @function encodeDelimited
     * @memberof po_yi_show_tos
     * @static
     * @param {Ipo_yi_show_tos} message po_yi_show_tos message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    po_yi_show_tos.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a po_yi_show_tos message from the specified reader or buffer.
     * @function decode
     * @memberof po_yi_show_tos
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {po_yi_show_tos} po_yi_show_tos
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    po_yi_show_tos.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.po_yi_show_tos();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.show = reader.bool();
                    break;
                }
            case 2: {
                    message.seq = reader.uint32();
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a po_yi_show_tos message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof po_yi_show_tos
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {po_yi_show_tos} po_yi_show_tos
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    po_yi_show_tos.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a po_yi_show_tos message.
     * @function verify
     * @memberof po_yi_show_tos
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    po_yi_show_tos.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.show != null && message.hasOwnProperty("show"))
            if (typeof message.show !== "boolean")
                return "show: boolean expected";
        if (message.seq != null && message.hasOwnProperty("seq"))
            if (!$util.isInteger(message.seq))
                return "seq: integer expected";
        return null;
    };

    /**
     * Creates a po_yi_show_tos message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof po_yi_show_tos
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {po_yi_show_tos} po_yi_show_tos
     */
    po_yi_show_tos.fromObject = function fromObject(object) {
        if (object instanceof $root.po_yi_show_tos)
            return object;
        var message = new $root.po_yi_show_tos();
        if (object.show != null)
            message.show = Boolean(object.show);
        if (object.seq != null)
            message.seq = object.seq >>> 0;
        return message;
    };

    /**
     * Creates a plain object from a po_yi_show_tos message. Also converts values to other types if specified.
     * @function toObject
     * @memberof po_yi_show_tos
     * @static
     * @param {po_yi_show_tos} message po_yi_show_tos
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    po_yi_show_tos.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults) {
            object.show = false;
            object.seq = 0;
        }
        if (message.show != null && message.hasOwnProperty("show"))
            object.show = message.show;
        if (message.seq != null && message.hasOwnProperty("seq"))
            object.seq = message.seq;
        return object;
    };

    /**
     * Converts this po_yi_show_tos to JSON.
     * @function toJSON
     * @memberof po_yi_show_tos
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    po_yi_show_tos.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for po_yi_show_tos
     * @function getTypeUrl
     * @memberof po_yi_show_tos
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    po_yi_show_tos.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/po_yi_show_tos";
    };

    return po_yi_show_tos;
})();

$root.po_yi_show_toc = (function() {

    /**
     * Properties of a po_yi_show_toc.
     * @exports Ipo_yi_show_toc
     * @interface Ipo_yi_show_toc
     * @property {number|null} [playerId] po_yi_show_toc playerId
     * @property {boolean|null} [show] po_yi_show_toc show
     * @property {Icard|null} [messageCard] po_yi_show_toc messageCard
     */

    /**
     * Constructs a new po_yi_show_toc.
     * @exports po_yi_show_toc
     * @classdesc Represents a po_yi_show_toc.
     * @implements Ipo_yi_show_toc
     * @constructor
     * @param {Ipo_yi_show_toc=} [properties] Properties to set
     */
    function po_yi_show_toc(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * po_yi_show_toc playerId.
     * @member {number} playerId
     * @memberof po_yi_show_toc
     * @instance
     */
    po_yi_show_toc.prototype.playerId = 0;

    /**
     * po_yi_show_toc show.
     * @member {boolean} show
     * @memberof po_yi_show_toc
     * @instance
     */
    po_yi_show_toc.prototype.show = false;

    /**
     * po_yi_show_toc messageCard.
     * @member {Icard|null|undefined} messageCard
     * @memberof po_yi_show_toc
     * @instance
     */
    po_yi_show_toc.prototype.messageCard = null;

    /**
     * Creates a new po_yi_show_toc instance using the specified properties.
     * @function create
     * @memberof po_yi_show_toc
     * @static
     * @param {Ipo_yi_show_toc=} [properties] Properties to set
     * @returns {po_yi_show_toc} po_yi_show_toc instance
     */
    po_yi_show_toc.create = function create(properties) {
        return new po_yi_show_toc(properties);
    };

    /**
     * Encodes the specified po_yi_show_toc message. Does not implicitly {@link po_yi_show_toc.verify|verify} messages.
     * @function encode
     * @memberof po_yi_show_toc
     * @static
     * @param {Ipo_yi_show_toc} message po_yi_show_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    po_yi_show_toc.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.playerId != null && Object.hasOwnProperty.call(message, "playerId"))
            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.playerId);
        if (message.show != null && Object.hasOwnProperty.call(message, "show"))
            writer.uint32(/* id 2, wireType 0 =*/16).bool(message.show);
        if (message.messageCard != null && Object.hasOwnProperty.call(message, "messageCard"))
            $root.card.encode(message.messageCard, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
        return writer;
    };

    /**
     * Encodes the specified po_yi_show_toc message, length delimited. Does not implicitly {@link po_yi_show_toc.verify|verify} messages.
     * @function encodeDelimited
     * @memberof po_yi_show_toc
     * @static
     * @param {Ipo_yi_show_toc} message po_yi_show_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    po_yi_show_toc.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a po_yi_show_toc message from the specified reader or buffer.
     * @function decode
     * @memberof po_yi_show_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {po_yi_show_toc} po_yi_show_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    po_yi_show_toc.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.po_yi_show_toc();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.playerId = reader.uint32();
                    break;
                }
            case 2: {
                    message.show = reader.bool();
                    break;
                }
            case 3: {
                    message.messageCard = $root.card.decode(reader, reader.uint32());
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a po_yi_show_toc message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof po_yi_show_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {po_yi_show_toc} po_yi_show_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    po_yi_show_toc.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a po_yi_show_toc message.
     * @function verify
     * @memberof po_yi_show_toc
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    po_yi_show_toc.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            if (!$util.isInteger(message.playerId))
                return "playerId: integer expected";
        if (message.show != null && message.hasOwnProperty("show"))
            if (typeof message.show !== "boolean")
                return "show: boolean expected";
        if (message.messageCard != null && message.hasOwnProperty("messageCard")) {
            var error = $root.card.verify(message.messageCard);
            if (error)
                return "messageCard." + error;
        }
        return null;
    };

    /**
     * Creates a po_yi_show_toc message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof po_yi_show_toc
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {po_yi_show_toc} po_yi_show_toc
     */
    po_yi_show_toc.fromObject = function fromObject(object) {
        if (object instanceof $root.po_yi_show_toc)
            return object;
        var message = new $root.po_yi_show_toc();
        if (object.playerId != null)
            message.playerId = object.playerId >>> 0;
        if (object.show != null)
            message.show = Boolean(object.show);
        if (object.messageCard != null) {
            if (typeof object.messageCard !== "object")
                throw TypeError(".po_yi_show_toc.messageCard: object expected");
            message.messageCard = $root.card.fromObject(object.messageCard);
        }
        return message;
    };

    /**
     * Creates a plain object from a po_yi_show_toc message. Also converts values to other types if specified.
     * @function toObject
     * @memberof po_yi_show_toc
     * @static
     * @param {po_yi_show_toc} message po_yi_show_toc
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    po_yi_show_toc.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults) {
            object.playerId = 0;
            object.show = false;
            object.messageCard = null;
        }
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            object.playerId = message.playerId;
        if (message.show != null && message.hasOwnProperty("show"))
            object.show = message.show;
        if (message.messageCard != null && message.hasOwnProperty("messageCard"))
            object.messageCard = $root.card.toObject(message.messageCard, options);
        return object;
    };

    /**
     * Converts this po_yi_show_toc to JSON.
     * @function toJSON
     * @memberof po_yi_show_toc
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    po_yi_show_toc.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for po_yi_show_toc
     * @function getTypeUrl
     * @memberof po_yi_show_toc
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    po_yi_show_toc.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/po_yi_show_toc";
    };

    return po_yi_show_toc;
})();

$root.use_jie_huo_tos = (function() {

    /**
     * Properties of a use_jie_huo_tos.
     * @exports Iuse_jie_huo_tos
     * @interface Iuse_jie_huo_tos
     * @property {number|null} [cardId] use_jie_huo_tos cardId
     * @property {number|null} [seq] use_jie_huo_tos seq
     */

    /**
     * Constructs a new use_jie_huo_tos.
     * @exports use_jie_huo_tos
     * @classdesc Represents a use_jie_huo_tos.
     * @implements Iuse_jie_huo_tos
     * @constructor
     * @param {Iuse_jie_huo_tos=} [properties] Properties to set
     */
    function use_jie_huo_tos(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * use_jie_huo_tos cardId.
     * @member {number} cardId
     * @memberof use_jie_huo_tos
     * @instance
     */
    use_jie_huo_tos.prototype.cardId = 0;

    /**
     * use_jie_huo_tos seq.
     * @member {number} seq
     * @memberof use_jie_huo_tos
     * @instance
     */
    use_jie_huo_tos.prototype.seq = 0;

    /**
     * Creates a new use_jie_huo_tos instance using the specified properties.
     * @function create
     * @memberof use_jie_huo_tos
     * @static
     * @param {Iuse_jie_huo_tos=} [properties] Properties to set
     * @returns {use_jie_huo_tos} use_jie_huo_tos instance
     */
    use_jie_huo_tos.create = function create(properties) {
        return new use_jie_huo_tos(properties);
    };

    /**
     * Encodes the specified use_jie_huo_tos message. Does not implicitly {@link use_jie_huo_tos.verify|verify} messages.
     * @function encode
     * @memberof use_jie_huo_tos
     * @static
     * @param {Iuse_jie_huo_tos} message use_jie_huo_tos message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    use_jie_huo_tos.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.cardId != null && Object.hasOwnProperty.call(message, "cardId"))
            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.cardId);
        if (message.seq != null && Object.hasOwnProperty.call(message, "seq"))
            writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.seq);
        return writer;
    };

    /**
     * Encodes the specified use_jie_huo_tos message, length delimited. Does not implicitly {@link use_jie_huo_tos.verify|verify} messages.
     * @function encodeDelimited
     * @memberof use_jie_huo_tos
     * @static
     * @param {Iuse_jie_huo_tos} message use_jie_huo_tos message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    use_jie_huo_tos.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a use_jie_huo_tos message from the specified reader or buffer.
     * @function decode
     * @memberof use_jie_huo_tos
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {use_jie_huo_tos} use_jie_huo_tos
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    use_jie_huo_tos.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.use_jie_huo_tos();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.cardId = reader.uint32();
                    break;
                }
            case 2: {
                    message.seq = reader.uint32();
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a use_jie_huo_tos message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof use_jie_huo_tos
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {use_jie_huo_tos} use_jie_huo_tos
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    use_jie_huo_tos.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a use_jie_huo_tos message.
     * @function verify
     * @memberof use_jie_huo_tos
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    use_jie_huo_tos.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.cardId != null && message.hasOwnProperty("cardId"))
            if (!$util.isInteger(message.cardId))
                return "cardId: integer expected";
        if (message.seq != null && message.hasOwnProperty("seq"))
            if (!$util.isInteger(message.seq))
                return "seq: integer expected";
        return null;
    };

    /**
     * Creates a use_jie_huo_tos message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof use_jie_huo_tos
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {use_jie_huo_tos} use_jie_huo_tos
     */
    use_jie_huo_tos.fromObject = function fromObject(object) {
        if (object instanceof $root.use_jie_huo_tos)
            return object;
        var message = new $root.use_jie_huo_tos();
        if (object.cardId != null)
            message.cardId = object.cardId >>> 0;
        if (object.seq != null)
            message.seq = object.seq >>> 0;
        return message;
    };

    /**
     * Creates a plain object from a use_jie_huo_tos message. Also converts values to other types if specified.
     * @function toObject
     * @memberof use_jie_huo_tos
     * @static
     * @param {use_jie_huo_tos} message use_jie_huo_tos
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    use_jie_huo_tos.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults) {
            object.cardId = 0;
            object.seq = 0;
        }
        if (message.cardId != null && message.hasOwnProperty("cardId"))
            object.cardId = message.cardId;
        if (message.seq != null && message.hasOwnProperty("seq"))
            object.seq = message.seq;
        return object;
    };

    /**
     * Converts this use_jie_huo_tos to JSON.
     * @function toJSON
     * @memberof use_jie_huo_tos
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    use_jie_huo_tos.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for use_jie_huo_tos
     * @function getTypeUrl
     * @memberof use_jie_huo_tos
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    use_jie_huo_tos.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/use_jie_huo_tos";
    };

    return use_jie_huo_tos;
})();

$root.use_jie_huo_toc = (function() {

    /**
     * Properties of a use_jie_huo_toc.
     * @exports Iuse_jie_huo_toc
     * @interface Iuse_jie_huo_toc
     * @property {Icard|null} [card] use_jie_huo_toc card
     * @property {number|null} [playerId] use_jie_huo_toc playerId
     */

    /**
     * Constructs a new use_jie_huo_toc.
     * @exports use_jie_huo_toc
     * @classdesc Represents a use_jie_huo_toc.
     * @implements Iuse_jie_huo_toc
     * @constructor
     * @param {Iuse_jie_huo_toc=} [properties] Properties to set
     */
    function use_jie_huo_toc(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * use_jie_huo_toc card.
     * @member {Icard|null|undefined} card
     * @memberof use_jie_huo_toc
     * @instance
     */
    use_jie_huo_toc.prototype.card = null;

    /**
     * use_jie_huo_toc playerId.
     * @member {number} playerId
     * @memberof use_jie_huo_toc
     * @instance
     */
    use_jie_huo_toc.prototype.playerId = 0;

    /**
     * Creates a new use_jie_huo_toc instance using the specified properties.
     * @function create
     * @memberof use_jie_huo_toc
     * @static
     * @param {Iuse_jie_huo_toc=} [properties] Properties to set
     * @returns {use_jie_huo_toc} use_jie_huo_toc instance
     */
    use_jie_huo_toc.create = function create(properties) {
        return new use_jie_huo_toc(properties);
    };

    /**
     * Encodes the specified use_jie_huo_toc message. Does not implicitly {@link use_jie_huo_toc.verify|verify} messages.
     * @function encode
     * @memberof use_jie_huo_toc
     * @static
     * @param {Iuse_jie_huo_toc} message use_jie_huo_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    use_jie_huo_toc.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.card != null && Object.hasOwnProperty.call(message, "card"))
            $root.card.encode(message.card, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
        if (message.playerId != null && Object.hasOwnProperty.call(message, "playerId"))
            writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.playerId);
        return writer;
    };

    /**
     * Encodes the specified use_jie_huo_toc message, length delimited. Does not implicitly {@link use_jie_huo_toc.verify|verify} messages.
     * @function encodeDelimited
     * @memberof use_jie_huo_toc
     * @static
     * @param {Iuse_jie_huo_toc} message use_jie_huo_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    use_jie_huo_toc.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a use_jie_huo_toc message from the specified reader or buffer.
     * @function decode
     * @memberof use_jie_huo_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {use_jie_huo_toc} use_jie_huo_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    use_jie_huo_toc.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.use_jie_huo_toc();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.card = $root.card.decode(reader, reader.uint32());
                    break;
                }
            case 2: {
                    message.playerId = reader.uint32();
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a use_jie_huo_toc message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof use_jie_huo_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {use_jie_huo_toc} use_jie_huo_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    use_jie_huo_toc.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a use_jie_huo_toc message.
     * @function verify
     * @memberof use_jie_huo_toc
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    use_jie_huo_toc.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.card != null && message.hasOwnProperty("card")) {
            var error = $root.card.verify(message.card);
            if (error)
                return "card." + error;
        }
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            if (!$util.isInteger(message.playerId))
                return "playerId: integer expected";
        return null;
    };

    /**
     * Creates a use_jie_huo_toc message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof use_jie_huo_toc
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {use_jie_huo_toc} use_jie_huo_toc
     */
    use_jie_huo_toc.fromObject = function fromObject(object) {
        if (object instanceof $root.use_jie_huo_toc)
            return object;
        var message = new $root.use_jie_huo_toc();
        if (object.card != null) {
            if (typeof object.card !== "object")
                throw TypeError(".use_jie_huo_toc.card: object expected");
            message.card = $root.card.fromObject(object.card);
        }
        if (object.playerId != null)
            message.playerId = object.playerId >>> 0;
        return message;
    };

    /**
     * Creates a plain object from a use_jie_huo_toc message. Also converts values to other types if specified.
     * @function toObject
     * @memberof use_jie_huo_toc
     * @static
     * @param {use_jie_huo_toc} message use_jie_huo_toc
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    use_jie_huo_toc.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults) {
            object.card = null;
            object.playerId = 0;
        }
        if (message.card != null && message.hasOwnProperty("card"))
            object.card = $root.card.toObject(message.card, options);
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            object.playerId = message.playerId;
        return object;
    };

    /**
     * Converts this use_jie_huo_toc to JSON.
     * @function toJSON
     * @memberof use_jie_huo_toc
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    use_jie_huo_toc.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for use_jie_huo_toc
     * @function getTypeUrl
     * @memberof use_jie_huo_toc
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    use_jie_huo_toc.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/use_jie_huo_toc";
    };

    return use_jie_huo_toc;
})();

$root.use_diao_bao_tos = (function() {

    /**
     * Properties of a use_diao_bao_tos.
     * @exports Iuse_diao_bao_tos
     * @interface Iuse_diao_bao_tos
     * @property {number|null} [cardId] use_diao_bao_tos cardId
     * @property {number|null} [seq] use_diao_bao_tos seq
     */

    /**
     * Constructs a new use_diao_bao_tos.
     * @exports use_diao_bao_tos
     * @classdesc Represents a use_diao_bao_tos.
     * @implements Iuse_diao_bao_tos
     * @constructor
     * @param {Iuse_diao_bao_tos=} [properties] Properties to set
     */
    function use_diao_bao_tos(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * use_diao_bao_tos cardId.
     * @member {number} cardId
     * @memberof use_diao_bao_tos
     * @instance
     */
    use_diao_bao_tos.prototype.cardId = 0;

    /**
     * use_diao_bao_tos seq.
     * @member {number} seq
     * @memberof use_diao_bao_tos
     * @instance
     */
    use_diao_bao_tos.prototype.seq = 0;

    /**
     * Creates a new use_diao_bao_tos instance using the specified properties.
     * @function create
     * @memberof use_diao_bao_tos
     * @static
     * @param {Iuse_diao_bao_tos=} [properties] Properties to set
     * @returns {use_diao_bao_tos} use_diao_bao_tos instance
     */
    use_diao_bao_tos.create = function create(properties) {
        return new use_diao_bao_tos(properties);
    };

    /**
     * Encodes the specified use_diao_bao_tos message. Does not implicitly {@link use_diao_bao_tos.verify|verify} messages.
     * @function encode
     * @memberof use_diao_bao_tos
     * @static
     * @param {Iuse_diao_bao_tos} message use_diao_bao_tos message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    use_diao_bao_tos.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.cardId != null && Object.hasOwnProperty.call(message, "cardId"))
            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.cardId);
        if (message.seq != null && Object.hasOwnProperty.call(message, "seq"))
            writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.seq);
        return writer;
    };

    /**
     * Encodes the specified use_diao_bao_tos message, length delimited. Does not implicitly {@link use_diao_bao_tos.verify|verify} messages.
     * @function encodeDelimited
     * @memberof use_diao_bao_tos
     * @static
     * @param {Iuse_diao_bao_tos} message use_diao_bao_tos message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    use_diao_bao_tos.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a use_diao_bao_tos message from the specified reader or buffer.
     * @function decode
     * @memberof use_diao_bao_tos
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {use_diao_bao_tos} use_diao_bao_tos
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    use_diao_bao_tos.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.use_diao_bao_tos();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.cardId = reader.uint32();
                    break;
                }
            case 2: {
                    message.seq = reader.uint32();
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a use_diao_bao_tos message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof use_diao_bao_tos
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {use_diao_bao_tos} use_diao_bao_tos
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    use_diao_bao_tos.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a use_diao_bao_tos message.
     * @function verify
     * @memberof use_diao_bao_tos
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    use_diao_bao_tos.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.cardId != null && message.hasOwnProperty("cardId"))
            if (!$util.isInteger(message.cardId))
                return "cardId: integer expected";
        if (message.seq != null && message.hasOwnProperty("seq"))
            if (!$util.isInteger(message.seq))
                return "seq: integer expected";
        return null;
    };

    /**
     * Creates a use_diao_bao_tos message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof use_diao_bao_tos
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {use_diao_bao_tos} use_diao_bao_tos
     */
    use_diao_bao_tos.fromObject = function fromObject(object) {
        if (object instanceof $root.use_diao_bao_tos)
            return object;
        var message = new $root.use_diao_bao_tos();
        if (object.cardId != null)
            message.cardId = object.cardId >>> 0;
        if (object.seq != null)
            message.seq = object.seq >>> 0;
        return message;
    };

    /**
     * Creates a plain object from a use_diao_bao_tos message. Also converts values to other types if specified.
     * @function toObject
     * @memberof use_diao_bao_tos
     * @static
     * @param {use_diao_bao_tos} message use_diao_bao_tos
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    use_diao_bao_tos.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults) {
            object.cardId = 0;
            object.seq = 0;
        }
        if (message.cardId != null && message.hasOwnProperty("cardId"))
            object.cardId = message.cardId;
        if (message.seq != null && message.hasOwnProperty("seq"))
            object.seq = message.seq;
        return object;
    };

    /**
     * Converts this use_diao_bao_tos to JSON.
     * @function toJSON
     * @memberof use_diao_bao_tos
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    use_diao_bao_tos.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for use_diao_bao_tos
     * @function getTypeUrl
     * @memberof use_diao_bao_tos
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    use_diao_bao_tos.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/use_diao_bao_tos";
    };

    return use_diao_bao_tos;
})();

$root.use_diao_bao_toc = (function() {

    /**
     * Properties of a use_diao_bao_toc.
     * @exports Iuse_diao_bao_toc
     * @interface Iuse_diao_bao_toc
     * @property {number|null} [cardId] use_diao_bao_toc cardId
     * @property {Icard|null} [oldMessageCard] use_diao_bao_toc oldMessageCard
     * @property {number|null} [playerId] use_diao_bao_toc playerId
     */

    /**
     * Constructs a new use_diao_bao_toc.
     * @exports use_diao_bao_toc
     * @classdesc Represents a use_diao_bao_toc.
     * @implements Iuse_diao_bao_toc
     * @constructor
     * @param {Iuse_diao_bao_toc=} [properties] Properties to set
     */
    function use_diao_bao_toc(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * use_diao_bao_toc cardId.
     * @member {number} cardId
     * @memberof use_diao_bao_toc
     * @instance
     */
    use_diao_bao_toc.prototype.cardId = 0;

    /**
     * use_diao_bao_toc oldMessageCard.
     * @member {Icard|null|undefined} oldMessageCard
     * @memberof use_diao_bao_toc
     * @instance
     */
    use_diao_bao_toc.prototype.oldMessageCard = null;

    /**
     * use_diao_bao_toc playerId.
     * @member {number} playerId
     * @memberof use_diao_bao_toc
     * @instance
     */
    use_diao_bao_toc.prototype.playerId = 0;

    /**
     * Creates a new use_diao_bao_toc instance using the specified properties.
     * @function create
     * @memberof use_diao_bao_toc
     * @static
     * @param {Iuse_diao_bao_toc=} [properties] Properties to set
     * @returns {use_diao_bao_toc} use_diao_bao_toc instance
     */
    use_diao_bao_toc.create = function create(properties) {
        return new use_diao_bao_toc(properties);
    };

    /**
     * Encodes the specified use_diao_bao_toc message. Does not implicitly {@link use_diao_bao_toc.verify|verify} messages.
     * @function encode
     * @memberof use_diao_bao_toc
     * @static
     * @param {Iuse_diao_bao_toc} message use_diao_bao_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    use_diao_bao_toc.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.cardId != null && Object.hasOwnProperty.call(message, "cardId"))
            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.cardId);
        if (message.oldMessageCard != null && Object.hasOwnProperty.call(message, "oldMessageCard"))
            $root.card.encode(message.oldMessageCard, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
        if (message.playerId != null && Object.hasOwnProperty.call(message, "playerId"))
            writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.playerId);
        return writer;
    };

    /**
     * Encodes the specified use_diao_bao_toc message, length delimited. Does not implicitly {@link use_diao_bao_toc.verify|verify} messages.
     * @function encodeDelimited
     * @memberof use_diao_bao_toc
     * @static
     * @param {Iuse_diao_bao_toc} message use_diao_bao_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    use_diao_bao_toc.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a use_diao_bao_toc message from the specified reader or buffer.
     * @function decode
     * @memberof use_diao_bao_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {use_diao_bao_toc} use_diao_bao_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    use_diao_bao_toc.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.use_diao_bao_toc();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.cardId = reader.uint32();
                    break;
                }
            case 2: {
                    message.oldMessageCard = $root.card.decode(reader, reader.uint32());
                    break;
                }
            case 3: {
                    message.playerId = reader.uint32();
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a use_diao_bao_toc message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof use_diao_bao_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {use_diao_bao_toc} use_diao_bao_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    use_diao_bao_toc.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a use_diao_bao_toc message.
     * @function verify
     * @memberof use_diao_bao_toc
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    use_diao_bao_toc.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.cardId != null && message.hasOwnProperty("cardId"))
            if (!$util.isInteger(message.cardId))
                return "cardId: integer expected";
        if (message.oldMessageCard != null && message.hasOwnProperty("oldMessageCard")) {
            var error = $root.card.verify(message.oldMessageCard);
            if (error)
                return "oldMessageCard." + error;
        }
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            if (!$util.isInteger(message.playerId))
                return "playerId: integer expected";
        return null;
    };

    /**
     * Creates a use_diao_bao_toc message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof use_diao_bao_toc
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {use_diao_bao_toc} use_diao_bao_toc
     */
    use_diao_bao_toc.fromObject = function fromObject(object) {
        if (object instanceof $root.use_diao_bao_toc)
            return object;
        var message = new $root.use_diao_bao_toc();
        if (object.cardId != null)
            message.cardId = object.cardId >>> 0;
        if (object.oldMessageCard != null) {
            if (typeof object.oldMessageCard !== "object")
                throw TypeError(".use_diao_bao_toc.oldMessageCard: object expected");
            message.oldMessageCard = $root.card.fromObject(object.oldMessageCard);
        }
        if (object.playerId != null)
            message.playerId = object.playerId >>> 0;
        return message;
    };

    /**
     * Creates a plain object from a use_diao_bao_toc message. Also converts values to other types if specified.
     * @function toObject
     * @memberof use_diao_bao_toc
     * @static
     * @param {use_diao_bao_toc} message use_diao_bao_toc
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    use_diao_bao_toc.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults) {
            object.cardId = 0;
            object.oldMessageCard = null;
            object.playerId = 0;
        }
        if (message.cardId != null && message.hasOwnProperty("cardId"))
            object.cardId = message.cardId;
        if (message.oldMessageCard != null && message.hasOwnProperty("oldMessageCard"))
            object.oldMessageCard = $root.card.toObject(message.oldMessageCard, options);
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            object.playerId = message.playerId;
        return object;
    };

    /**
     * Converts this use_diao_bao_toc to JSON.
     * @function toJSON
     * @memberof use_diao_bao_toc
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    use_diao_bao_toc.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for use_diao_bao_toc
     * @function getTypeUrl
     * @memberof use_diao_bao_toc
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    use_diao_bao_toc.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/use_diao_bao_toc";
    };

    return use_diao_bao_toc;
})();

$root.use_wu_dao_tos = (function() {

    /**
     * Properties of a use_wu_dao_tos.
     * @exports Iuse_wu_dao_tos
     * @interface Iuse_wu_dao_tos
     * @property {number|null} [cardId] use_wu_dao_tos cardId
     * @property {number|null} [targetPlayerId] use_wu_dao_tos targetPlayerId
     * @property {number|null} [seq] use_wu_dao_tos seq
     */

    /**
     * Constructs a new use_wu_dao_tos.
     * @exports use_wu_dao_tos
     * @classdesc Represents a use_wu_dao_tos.
     * @implements Iuse_wu_dao_tos
     * @constructor
     * @param {Iuse_wu_dao_tos=} [properties] Properties to set
     */
    function use_wu_dao_tos(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * use_wu_dao_tos cardId.
     * @member {number} cardId
     * @memberof use_wu_dao_tos
     * @instance
     */
    use_wu_dao_tos.prototype.cardId = 0;

    /**
     * use_wu_dao_tos targetPlayerId.
     * @member {number} targetPlayerId
     * @memberof use_wu_dao_tos
     * @instance
     */
    use_wu_dao_tos.prototype.targetPlayerId = 0;

    /**
     * use_wu_dao_tos seq.
     * @member {number} seq
     * @memberof use_wu_dao_tos
     * @instance
     */
    use_wu_dao_tos.prototype.seq = 0;

    /**
     * Creates a new use_wu_dao_tos instance using the specified properties.
     * @function create
     * @memberof use_wu_dao_tos
     * @static
     * @param {Iuse_wu_dao_tos=} [properties] Properties to set
     * @returns {use_wu_dao_tos} use_wu_dao_tos instance
     */
    use_wu_dao_tos.create = function create(properties) {
        return new use_wu_dao_tos(properties);
    };

    /**
     * Encodes the specified use_wu_dao_tos message. Does not implicitly {@link use_wu_dao_tos.verify|verify} messages.
     * @function encode
     * @memberof use_wu_dao_tos
     * @static
     * @param {Iuse_wu_dao_tos} message use_wu_dao_tos message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    use_wu_dao_tos.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.cardId != null && Object.hasOwnProperty.call(message, "cardId"))
            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.cardId);
        if (message.targetPlayerId != null && Object.hasOwnProperty.call(message, "targetPlayerId"))
            writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.targetPlayerId);
        if (message.seq != null && Object.hasOwnProperty.call(message, "seq"))
            writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.seq);
        return writer;
    };

    /**
     * Encodes the specified use_wu_dao_tos message, length delimited. Does not implicitly {@link use_wu_dao_tos.verify|verify} messages.
     * @function encodeDelimited
     * @memberof use_wu_dao_tos
     * @static
     * @param {Iuse_wu_dao_tos} message use_wu_dao_tos message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    use_wu_dao_tos.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a use_wu_dao_tos message from the specified reader or buffer.
     * @function decode
     * @memberof use_wu_dao_tos
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {use_wu_dao_tos} use_wu_dao_tos
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    use_wu_dao_tos.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.use_wu_dao_tos();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.cardId = reader.uint32();
                    break;
                }
            case 2: {
                    message.targetPlayerId = reader.uint32();
                    break;
                }
            case 3: {
                    message.seq = reader.uint32();
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a use_wu_dao_tos message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof use_wu_dao_tos
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {use_wu_dao_tos} use_wu_dao_tos
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    use_wu_dao_tos.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a use_wu_dao_tos message.
     * @function verify
     * @memberof use_wu_dao_tos
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    use_wu_dao_tos.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.cardId != null && message.hasOwnProperty("cardId"))
            if (!$util.isInteger(message.cardId))
                return "cardId: integer expected";
        if (message.targetPlayerId != null && message.hasOwnProperty("targetPlayerId"))
            if (!$util.isInteger(message.targetPlayerId))
                return "targetPlayerId: integer expected";
        if (message.seq != null && message.hasOwnProperty("seq"))
            if (!$util.isInteger(message.seq))
                return "seq: integer expected";
        return null;
    };

    /**
     * Creates a use_wu_dao_tos message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof use_wu_dao_tos
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {use_wu_dao_tos} use_wu_dao_tos
     */
    use_wu_dao_tos.fromObject = function fromObject(object) {
        if (object instanceof $root.use_wu_dao_tos)
            return object;
        var message = new $root.use_wu_dao_tos();
        if (object.cardId != null)
            message.cardId = object.cardId >>> 0;
        if (object.targetPlayerId != null)
            message.targetPlayerId = object.targetPlayerId >>> 0;
        if (object.seq != null)
            message.seq = object.seq >>> 0;
        return message;
    };

    /**
     * Creates a plain object from a use_wu_dao_tos message. Also converts values to other types if specified.
     * @function toObject
     * @memberof use_wu_dao_tos
     * @static
     * @param {use_wu_dao_tos} message use_wu_dao_tos
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    use_wu_dao_tos.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults) {
            object.cardId = 0;
            object.targetPlayerId = 0;
            object.seq = 0;
        }
        if (message.cardId != null && message.hasOwnProperty("cardId"))
            object.cardId = message.cardId;
        if (message.targetPlayerId != null && message.hasOwnProperty("targetPlayerId"))
            object.targetPlayerId = message.targetPlayerId;
        if (message.seq != null && message.hasOwnProperty("seq"))
            object.seq = message.seq;
        return object;
    };

    /**
     * Converts this use_wu_dao_tos to JSON.
     * @function toJSON
     * @memberof use_wu_dao_tos
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    use_wu_dao_tos.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for use_wu_dao_tos
     * @function getTypeUrl
     * @memberof use_wu_dao_tos
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    use_wu_dao_tos.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/use_wu_dao_tos";
    };

    return use_wu_dao_tos;
})();

$root.use_wu_dao_toc = (function() {

    /**
     * Properties of a use_wu_dao_toc.
     * @exports Iuse_wu_dao_toc
     * @interface Iuse_wu_dao_toc
     * @property {Icard|null} [card] use_wu_dao_toc card
     * @property {number|null} [playerId] use_wu_dao_toc playerId
     * @property {number|null} [targetPlayerId] use_wu_dao_toc targetPlayerId
     */

    /**
     * Constructs a new use_wu_dao_toc.
     * @exports use_wu_dao_toc
     * @classdesc Represents a use_wu_dao_toc.
     * @implements Iuse_wu_dao_toc
     * @constructor
     * @param {Iuse_wu_dao_toc=} [properties] Properties to set
     */
    function use_wu_dao_toc(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * use_wu_dao_toc card.
     * @member {Icard|null|undefined} card
     * @memberof use_wu_dao_toc
     * @instance
     */
    use_wu_dao_toc.prototype.card = null;

    /**
     * use_wu_dao_toc playerId.
     * @member {number} playerId
     * @memberof use_wu_dao_toc
     * @instance
     */
    use_wu_dao_toc.prototype.playerId = 0;

    /**
     * use_wu_dao_toc targetPlayerId.
     * @member {number} targetPlayerId
     * @memberof use_wu_dao_toc
     * @instance
     */
    use_wu_dao_toc.prototype.targetPlayerId = 0;

    /**
     * Creates a new use_wu_dao_toc instance using the specified properties.
     * @function create
     * @memberof use_wu_dao_toc
     * @static
     * @param {Iuse_wu_dao_toc=} [properties] Properties to set
     * @returns {use_wu_dao_toc} use_wu_dao_toc instance
     */
    use_wu_dao_toc.create = function create(properties) {
        return new use_wu_dao_toc(properties);
    };

    /**
     * Encodes the specified use_wu_dao_toc message. Does not implicitly {@link use_wu_dao_toc.verify|verify} messages.
     * @function encode
     * @memberof use_wu_dao_toc
     * @static
     * @param {Iuse_wu_dao_toc} message use_wu_dao_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    use_wu_dao_toc.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.card != null && Object.hasOwnProperty.call(message, "card"))
            $root.card.encode(message.card, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
        if (message.playerId != null && Object.hasOwnProperty.call(message, "playerId"))
            writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.playerId);
        if (message.targetPlayerId != null && Object.hasOwnProperty.call(message, "targetPlayerId"))
            writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.targetPlayerId);
        return writer;
    };

    /**
     * Encodes the specified use_wu_dao_toc message, length delimited. Does not implicitly {@link use_wu_dao_toc.verify|verify} messages.
     * @function encodeDelimited
     * @memberof use_wu_dao_toc
     * @static
     * @param {Iuse_wu_dao_toc} message use_wu_dao_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    use_wu_dao_toc.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a use_wu_dao_toc message from the specified reader or buffer.
     * @function decode
     * @memberof use_wu_dao_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {use_wu_dao_toc} use_wu_dao_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    use_wu_dao_toc.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.use_wu_dao_toc();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.card = $root.card.decode(reader, reader.uint32());
                    break;
                }
            case 2: {
                    message.playerId = reader.uint32();
                    break;
                }
            case 3: {
                    message.targetPlayerId = reader.uint32();
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a use_wu_dao_toc message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof use_wu_dao_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {use_wu_dao_toc} use_wu_dao_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    use_wu_dao_toc.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a use_wu_dao_toc message.
     * @function verify
     * @memberof use_wu_dao_toc
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    use_wu_dao_toc.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.card != null && message.hasOwnProperty("card")) {
            var error = $root.card.verify(message.card);
            if (error)
                return "card." + error;
        }
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            if (!$util.isInteger(message.playerId))
                return "playerId: integer expected";
        if (message.targetPlayerId != null && message.hasOwnProperty("targetPlayerId"))
            if (!$util.isInteger(message.targetPlayerId))
                return "targetPlayerId: integer expected";
        return null;
    };

    /**
     * Creates a use_wu_dao_toc message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof use_wu_dao_toc
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {use_wu_dao_toc} use_wu_dao_toc
     */
    use_wu_dao_toc.fromObject = function fromObject(object) {
        if (object instanceof $root.use_wu_dao_toc)
            return object;
        var message = new $root.use_wu_dao_toc();
        if (object.card != null) {
            if (typeof object.card !== "object")
                throw TypeError(".use_wu_dao_toc.card: object expected");
            message.card = $root.card.fromObject(object.card);
        }
        if (object.playerId != null)
            message.playerId = object.playerId >>> 0;
        if (object.targetPlayerId != null)
            message.targetPlayerId = object.targetPlayerId >>> 0;
        return message;
    };

    /**
     * Creates a plain object from a use_wu_dao_toc message. Also converts values to other types if specified.
     * @function toObject
     * @memberof use_wu_dao_toc
     * @static
     * @param {use_wu_dao_toc} message use_wu_dao_toc
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    use_wu_dao_toc.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults) {
            object.card = null;
            object.playerId = 0;
            object.targetPlayerId = 0;
        }
        if (message.card != null && message.hasOwnProperty("card"))
            object.card = $root.card.toObject(message.card, options);
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            object.playerId = message.playerId;
        if (message.targetPlayerId != null && message.hasOwnProperty("targetPlayerId"))
            object.targetPlayerId = message.targetPlayerId;
        return object;
    };

    /**
     * Converts this use_wu_dao_toc to JSON.
     * @function toJSON
     * @memberof use_wu_dao_toc
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    use_wu_dao_toc.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for use_wu_dao_toc
     * @function getTypeUrl
     * @memberof use_wu_dao_toc
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    use_wu_dao_toc.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/use_wu_dao_toc";
    };

    return use_wu_dao_toc;
})();

$root.end_receive_phase_tos = (function() {

    /**
     * Properties of an end_receive_phase_tos.
     * @exports Iend_receive_phase_tos
     * @interface Iend_receive_phase_tos
     * @property {number|null} [seq] end_receive_phase_tos seq
     */

    /**
     * Constructs a new end_receive_phase_tos.
     * @exports end_receive_phase_tos
     * @classdesc Represents an end_receive_phase_tos.
     * @implements Iend_receive_phase_tos
     * @constructor
     * @param {Iend_receive_phase_tos=} [properties] Properties to set
     */
    function end_receive_phase_tos(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * end_receive_phase_tos seq.
     * @member {number} seq
     * @memberof end_receive_phase_tos
     * @instance
     */
    end_receive_phase_tos.prototype.seq = 0;

    /**
     * Creates a new end_receive_phase_tos instance using the specified properties.
     * @function create
     * @memberof end_receive_phase_tos
     * @static
     * @param {Iend_receive_phase_tos=} [properties] Properties to set
     * @returns {end_receive_phase_tos} end_receive_phase_tos instance
     */
    end_receive_phase_tos.create = function create(properties) {
        return new end_receive_phase_tos(properties);
    };

    /**
     * Encodes the specified end_receive_phase_tos message. Does not implicitly {@link end_receive_phase_tos.verify|verify} messages.
     * @function encode
     * @memberof end_receive_phase_tos
     * @static
     * @param {Iend_receive_phase_tos} message end_receive_phase_tos message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    end_receive_phase_tos.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.seq != null && Object.hasOwnProperty.call(message, "seq"))
            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.seq);
        return writer;
    };

    /**
     * Encodes the specified end_receive_phase_tos message, length delimited. Does not implicitly {@link end_receive_phase_tos.verify|verify} messages.
     * @function encodeDelimited
     * @memberof end_receive_phase_tos
     * @static
     * @param {Iend_receive_phase_tos} message end_receive_phase_tos message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    end_receive_phase_tos.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes an end_receive_phase_tos message from the specified reader or buffer.
     * @function decode
     * @memberof end_receive_phase_tos
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {end_receive_phase_tos} end_receive_phase_tos
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    end_receive_phase_tos.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.end_receive_phase_tos();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.seq = reader.uint32();
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes an end_receive_phase_tos message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof end_receive_phase_tos
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {end_receive_phase_tos} end_receive_phase_tos
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    end_receive_phase_tos.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies an end_receive_phase_tos message.
     * @function verify
     * @memberof end_receive_phase_tos
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    end_receive_phase_tos.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.seq != null && message.hasOwnProperty("seq"))
            if (!$util.isInteger(message.seq))
                return "seq: integer expected";
        return null;
    };

    /**
     * Creates an end_receive_phase_tos message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof end_receive_phase_tos
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {end_receive_phase_tos} end_receive_phase_tos
     */
    end_receive_phase_tos.fromObject = function fromObject(object) {
        if (object instanceof $root.end_receive_phase_tos)
            return object;
        var message = new $root.end_receive_phase_tos();
        if (object.seq != null)
            message.seq = object.seq >>> 0;
        return message;
    };

    /**
     * Creates a plain object from an end_receive_phase_tos message. Also converts values to other types if specified.
     * @function toObject
     * @memberof end_receive_phase_tos
     * @static
     * @param {end_receive_phase_tos} message end_receive_phase_tos
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    end_receive_phase_tos.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults)
            object.seq = 0;
        if (message.seq != null && message.hasOwnProperty("seq"))
            object.seq = message.seq;
        return object;
    };

    /**
     * Converts this end_receive_phase_tos to JSON.
     * @function toJSON
     * @memberof end_receive_phase_tos
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    end_receive_phase_tos.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for end_receive_phase_tos
     * @function getTypeUrl
     * @memberof end_receive_phase_tos
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    end_receive_phase_tos.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/end_receive_phase_tos";
    };

    return end_receive_phase_tos;
})();

$root.use_feng_yun_bian_huan_tos = (function() {

    /**
     * Properties of a use_feng_yun_bian_huan_tos.
     * @exports Iuse_feng_yun_bian_huan_tos
     * @interface Iuse_feng_yun_bian_huan_tos
     * @property {number|null} [cardId] use_feng_yun_bian_huan_tos cardId
     * @property {number|null} [seq] use_feng_yun_bian_huan_tos seq
     */

    /**
     * Constructs a new use_feng_yun_bian_huan_tos.
     * @exports use_feng_yun_bian_huan_tos
     * @classdesc Represents a use_feng_yun_bian_huan_tos.
     * @implements Iuse_feng_yun_bian_huan_tos
     * @constructor
     * @param {Iuse_feng_yun_bian_huan_tos=} [properties] Properties to set
     */
    function use_feng_yun_bian_huan_tos(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * use_feng_yun_bian_huan_tos cardId.
     * @member {number} cardId
     * @memberof use_feng_yun_bian_huan_tos
     * @instance
     */
    use_feng_yun_bian_huan_tos.prototype.cardId = 0;

    /**
     * use_feng_yun_bian_huan_tos seq.
     * @member {number} seq
     * @memberof use_feng_yun_bian_huan_tos
     * @instance
     */
    use_feng_yun_bian_huan_tos.prototype.seq = 0;

    /**
     * Creates a new use_feng_yun_bian_huan_tos instance using the specified properties.
     * @function create
     * @memberof use_feng_yun_bian_huan_tos
     * @static
     * @param {Iuse_feng_yun_bian_huan_tos=} [properties] Properties to set
     * @returns {use_feng_yun_bian_huan_tos} use_feng_yun_bian_huan_tos instance
     */
    use_feng_yun_bian_huan_tos.create = function create(properties) {
        return new use_feng_yun_bian_huan_tos(properties);
    };

    /**
     * Encodes the specified use_feng_yun_bian_huan_tos message. Does not implicitly {@link use_feng_yun_bian_huan_tos.verify|verify} messages.
     * @function encode
     * @memberof use_feng_yun_bian_huan_tos
     * @static
     * @param {Iuse_feng_yun_bian_huan_tos} message use_feng_yun_bian_huan_tos message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    use_feng_yun_bian_huan_tos.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.cardId != null && Object.hasOwnProperty.call(message, "cardId"))
            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.cardId);
        if (message.seq != null && Object.hasOwnProperty.call(message, "seq"))
            writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.seq);
        return writer;
    };

    /**
     * Encodes the specified use_feng_yun_bian_huan_tos message, length delimited. Does not implicitly {@link use_feng_yun_bian_huan_tos.verify|verify} messages.
     * @function encodeDelimited
     * @memberof use_feng_yun_bian_huan_tos
     * @static
     * @param {Iuse_feng_yun_bian_huan_tos} message use_feng_yun_bian_huan_tos message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    use_feng_yun_bian_huan_tos.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a use_feng_yun_bian_huan_tos message from the specified reader or buffer.
     * @function decode
     * @memberof use_feng_yun_bian_huan_tos
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {use_feng_yun_bian_huan_tos} use_feng_yun_bian_huan_tos
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    use_feng_yun_bian_huan_tos.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.use_feng_yun_bian_huan_tos();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.cardId = reader.uint32();
                    break;
                }
            case 2: {
                    message.seq = reader.uint32();
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a use_feng_yun_bian_huan_tos message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof use_feng_yun_bian_huan_tos
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {use_feng_yun_bian_huan_tos} use_feng_yun_bian_huan_tos
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    use_feng_yun_bian_huan_tos.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a use_feng_yun_bian_huan_tos message.
     * @function verify
     * @memberof use_feng_yun_bian_huan_tos
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    use_feng_yun_bian_huan_tos.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.cardId != null && message.hasOwnProperty("cardId"))
            if (!$util.isInteger(message.cardId))
                return "cardId: integer expected";
        if (message.seq != null && message.hasOwnProperty("seq"))
            if (!$util.isInteger(message.seq))
                return "seq: integer expected";
        return null;
    };

    /**
     * Creates a use_feng_yun_bian_huan_tos message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof use_feng_yun_bian_huan_tos
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {use_feng_yun_bian_huan_tos} use_feng_yun_bian_huan_tos
     */
    use_feng_yun_bian_huan_tos.fromObject = function fromObject(object) {
        if (object instanceof $root.use_feng_yun_bian_huan_tos)
            return object;
        var message = new $root.use_feng_yun_bian_huan_tos();
        if (object.cardId != null)
            message.cardId = object.cardId >>> 0;
        if (object.seq != null)
            message.seq = object.seq >>> 0;
        return message;
    };

    /**
     * Creates a plain object from a use_feng_yun_bian_huan_tos message. Also converts values to other types if specified.
     * @function toObject
     * @memberof use_feng_yun_bian_huan_tos
     * @static
     * @param {use_feng_yun_bian_huan_tos} message use_feng_yun_bian_huan_tos
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    use_feng_yun_bian_huan_tos.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults) {
            object.cardId = 0;
            object.seq = 0;
        }
        if (message.cardId != null && message.hasOwnProperty("cardId"))
            object.cardId = message.cardId;
        if (message.seq != null && message.hasOwnProperty("seq"))
            object.seq = message.seq;
        return object;
    };

    /**
     * Converts this use_feng_yun_bian_huan_tos to JSON.
     * @function toJSON
     * @memberof use_feng_yun_bian_huan_tos
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    use_feng_yun_bian_huan_tos.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for use_feng_yun_bian_huan_tos
     * @function getTypeUrl
     * @memberof use_feng_yun_bian_huan_tos
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    use_feng_yun_bian_huan_tos.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/use_feng_yun_bian_huan_tos";
    };

    return use_feng_yun_bian_huan_tos;
})();

$root.use_feng_yun_bian_huan_toc = (function() {

    /**
     * Properties of a use_feng_yun_bian_huan_toc.
     * @exports Iuse_feng_yun_bian_huan_toc
     * @interface Iuse_feng_yun_bian_huan_toc
     * @property {Icard|null} [card] use_feng_yun_bian_huan_toc card
     * @property {number|null} [playerId] use_feng_yun_bian_huan_toc playerId
     * @property {Array.<Icard>|null} [showCards] use_feng_yun_bian_huan_toc showCards
     */

    /**
     * Constructs a new use_feng_yun_bian_huan_toc.
     * @exports use_feng_yun_bian_huan_toc
     * @classdesc Represents a use_feng_yun_bian_huan_toc.
     * @implements Iuse_feng_yun_bian_huan_toc
     * @constructor
     * @param {Iuse_feng_yun_bian_huan_toc=} [properties] Properties to set
     */
    function use_feng_yun_bian_huan_toc(properties) {
        this.showCards = [];
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * use_feng_yun_bian_huan_toc card.
     * @member {Icard|null|undefined} card
     * @memberof use_feng_yun_bian_huan_toc
     * @instance
     */
    use_feng_yun_bian_huan_toc.prototype.card = null;

    /**
     * use_feng_yun_bian_huan_toc playerId.
     * @member {number} playerId
     * @memberof use_feng_yun_bian_huan_toc
     * @instance
     */
    use_feng_yun_bian_huan_toc.prototype.playerId = 0;

    /**
     * use_feng_yun_bian_huan_toc showCards.
     * @member {Array.<Icard>} showCards
     * @memberof use_feng_yun_bian_huan_toc
     * @instance
     */
    use_feng_yun_bian_huan_toc.prototype.showCards = $util.emptyArray;

    /**
     * Creates a new use_feng_yun_bian_huan_toc instance using the specified properties.
     * @function create
     * @memberof use_feng_yun_bian_huan_toc
     * @static
     * @param {Iuse_feng_yun_bian_huan_toc=} [properties] Properties to set
     * @returns {use_feng_yun_bian_huan_toc} use_feng_yun_bian_huan_toc instance
     */
    use_feng_yun_bian_huan_toc.create = function create(properties) {
        return new use_feng_yun_bian_huan_toc(properties);
    };

    /**
     * Encodes the specified use_feng_yun_bian_huan_toc message. Does not implicitly {@link use_feng_yun_bian_huan_toc.verify|verify} messages.
     * @function encode
     * @memberof use_feng_yun_bian_huan_toc
     * @static
     * @param {Iuse_feng_yun_bian_huan_toc} message use_feng_yun_bian_huan_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    use_feng_yun_bian_huan_toc.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.card != null && Object.hasOwnProperty.call(message, "card"))
            $root.card.encode(message.card, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
        if (message.playerId != null && Object.hasOwnProperty.call(message, "playerId"))
            writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.playerId);
        if (message.showCards != null && message.showCards.length)
            for (var i = 0; i < message.showCards.length; ++i)
                $root.card.encode(message.showCards[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
        return writer;
    };

    /**
     * Encodes the specified use_feng_yun_bian_huan_toc message, length delimited. Does not implicitly {@link use_feng_yun_bian_huan_toc.verify|verify} messages.
     * @function encodeDelimited
     * @memberof use_feng_yun_bian_huan_toc
     * @static
     * @param {Iuse_feng_yun_bian_huan_toc} message use_feng_yun_bian_huan_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    use_feng_yun_bian_huan_toc.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a use_feng_yun_bian_huan_toc message from the specified reader or buffer.
     * @function decode
     * @memberof use_feng_yun_bian_huan_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {use_feng_yun_bian_huan_toc} use_feng_yun_bian_huan_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    use_feng_yun_bian_huan_toc.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.use_feng_yun_bian_huan_toc();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.card = $root.card.decode(reader, reader.uint32());
                    break;
                }
            case 2: {
                    message.playerId = reader.uint32();
                    break;
                }
            case 3: {
                    if (!(message.showCards && message.showCards.length))
                        message.showCards = [];
                    message.showCards.push($root.card.decode(reader, reader.uint32()));
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a use_feng_yun_bian_huan_toc message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof use_feng_yun_bian_huan_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {use_feng_yun_bian_huan_toc} use_feng_yun_bian_huan_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    use_feng_yun_bian_huan_toc.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a use_feng_yun_bian_huan_toc message.
     * @function verify
     * @memberof use_feng_yun_bian_huan_toc
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    use_feng_yun_bian_huan_toc.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.card != null && message.hasOwnProperty("card")) {
            var error = $root.card.verify(message.card);
            if (error)
                return "card." + error;
        }
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            if (!$util.isInteger(message.playerId))
                return "playerId: integer expected";
        if (message.showCards != null && message.hasOwnProperty("showCards")) {
            if (!Array.isArray(message.showCards))
                return "showCards: array expected";
            for (var i = 0; i < message.showCards.length; ++i) {
                var error = $root.card.verify(message.showCards[i]);
                if (error)
                    return "showCards." + error;
            }
        }
        return null;
    };

    /**
     * Creates a use_feng_yun_bian_huan_toc message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof use_feng_yun_bian_huan_toc
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {use_feng_yun_bian_huan_toc} use_feng_yun_bian_huan_toc
     */
    use_feng_yun_bian_huan_toc.fromObject = function fromObject(object) {
        if (object instanceof $root.use_feng_yun_bian_huan_toc)
            return object;
        var message = new $root.use_feng_yun_bian_huan_toc();
        if (object.card != null) {
            if (typeof object.card !== "object")
                throw TypeError(".use_feng_yun_bian_huan_toc.card: object expected");
            message.card = $root.card.fromObject(object.card);
        }
        if (object.playerId != null)
            message.playerId = object.playerId >>> 0;
        if (object.showCards) {
            if (!Array.isArray(object.showCards))
                throw TypeError(".use_feng_yun_bian_huan_toc.showCards: array expected");
            message.showCards = [];
            for (var i = 0; i < object.showCards.length; ++i) {
                if (typeof object.showCards[i] !== "object")
                    throw TypeError(".use_feng_yun_bian_huan_toc.showCards: object expected");
                message.showCards[i] = $root.card.fromObject(object.showCards[i]);
            }
        }
        return message;
    };

    /**
     * Creates a plain object from a use_feng_yun_bian_huan_toc message. Also converts values to other types if specified.
     * @function toObject
     * @memberof use_feng_yun_bian_huan_toc
     * @static
     * @param {use_feng_yun_bian_huan_toc} message use_feng_yun_bian_huan_toc
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    use_feng_yun_bian_huan_toc.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.arrays || options.defaults)
            object.showCards = [];
        if (options.defaults) {
            object.card = null;
            object.playerId = 0;
        }
        if (message.card != null && message.hasOwnProperty("card"))
            object.card = $root.card.toObject(message.card, options);
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            object.playerId = message.playerId;
        if (message.showCards && message.showCards.length) {
            object.showCards = [];
            for (var j = 0; j < message.showCards.length; ++j)
                object.showCards[j] = $root.card.toObject(message.showCards[j], options);
        }
        return object;
    };

    /**
     * Converts this use_feng_yun_bian_huan_toc to JSON.
     * @function toJSON
     * @memberof use_feng_yun_bian_huan_toc
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    use_feng_yun_bian_huan_toc.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for use_feng_yun_bian_huan_toc
     * @function getTypeUrl
     * @memberof use_feng_yun_bian_huan_toc
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    use_feng_yun_bian_huan_toc.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/use_feng_yun_bian_huan_toc";
    };

    return use_feng_yun_bian_huan_toc;
})();

$root.wait_for_feng_yun_bian_huan_choose_card_toc = (function() {

    /**
     * Properties of a wait_for_feng_yun_bian_huan_choose_card_toc.
     * @exports Iwait_for_feng_yun_bian_huan_choose_card_toc
     * @interface Iwait_for_feng_yun_bian_huan_choose_card_toc
     * @property {number|null} [playerId] wait_for_feng_yun_bian_huan_choose_card_toc playerId
     * @property {number|null} [waitingSecond] wait_for_feng_yun_bian_huan_choose_card_toc waitingSecond
     * @property {number|null} [seq] wait_for_feng_yun_bian_huan_choose_card_toc seq
     */

    /**
     * Constructs a new wait_for_feng_yun_bian_huan_choose_card_toc.
     * @exports wait_for_feng_yun_bian_huan_choose_card_toc
     * @classdesc Represents a wait_for_feng_yun_bian_huan_choose_card_toc.
     * @implements Iwait_for_feng_yun_bian_huan_choose_card_toc
     * @constructor
     * @param {Iwait_for_feng_yun_bian_huan_choose_card_toc=} [properties] Properties to set
     */
    function wait_for_feng_yun_bian_huan_choose_card_toc(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * wait_for_feng_yun_bian_huan_choose_card_toc playerId.
     * @member {number} playerId
     * @memberof wait_for_feng_yun_bian_huan_choose_card_toc
     * @instance
     */
    wait_for_feng_yun_bian_huan_choose_card_toc.prototype.playerId = 0;

    /**
     * wait_for_feng_yun_bian_huan_choose_card_toc waitingSecond.
     * @member {number} waitingSecond
     * @memberof wait_for_feng_yun_bian_huan_choose_card_toc
     * @instance
     */
    wait_for_feng_yun_bian_huan_choose_card_toc.prototype.waitingSecond = 0;

    /**
     * wait_for_feng_yun_bian_huan_choose_card_toc seq.
     * @member {number} seq
     * @memberof wait_for_feng_yun_bian_huan_choose_card_toc
     * @instance
     */
    wait_for_feng_yun_bian_huan_choose_card_toc.prototype.seq = 0;

    /**
     * Creates a new wait_for_feng_yun_bian_huan_choose_card_toc instance using the specified properties.
     * @function create
     * @memberof wait_for_feng_yun_bian_huan_choose_card_toc
     * @static
     * @param {Iwait_for_feng_yun_bian_huan_choose_card_toc=} [properties] Properties to set
     * @returns {wait_for_feng_yun_bian_huan_choose_card_toc} wait_for_feng_yun_bian_huan_choose_card_toc instance
     */
    wait_for_feng_yun_bian_huan_choose_card_toc.create = function create(properties) {
        return new wait_for_feng_yun_bian_huan_choose_card_toc(properties);
    };

    /**
     * Encodes the specified wait_for_feng_yun_bian_huan_choose_card_toc message. Does not implicitly {@link wait_for_feng_yun_bian_huan_choose_card_toc.verify|verify} messages.
     * @function encode
     * @memberof wait_for_feng_yun_bian_huan_choose_card_toc
     * @static
     * @param {Iwait_for_feng_yun_bian_huan_choose_card_toc} message wait_for_feng_yun_bian_huan_choose_card_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    wait_for_feng_yun_bian_huan_choose_card_toc.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.playerId != null && Object.hasOwnProperty.call(message, "playerId"))
            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.playerId);
        if (message.waitingSecond != null && Object.hasOwnProperty.call(message, "waitingSecond"))
            writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.waitingSecond);
        if (message.seq != null && Object.hasOwnProperty.call(message, "seq"))
            writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.seq);
        return writer;
    };

    /**
     * Encodes the specified wait_for_feng_yun_bian_huan_choose_card_toc message, length delimited. Does not implicitly {@link wait_for_feng_yun_bian_huan_choose_card_toc.verify|verify} messages.
     * @function encodeDelimited
     * @memberof wait_for_feng_yun_bian_huan_choose_card_toc
     * @static
     * @param {Iwait_for_feng_yun_bian_huan_choose_card_toc} message wait_for_feng_yun_bian_huan_choose_card_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    wait_for_feng_yun_bian_huan_choose_card_toc.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a wait_for_feng_yun_bian_huan_choose_card_toc message from the specified reader or buffer.
     * @function decode
     * @memberof wait_for_feng_yun_bian_huan_choose_card_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {wait_for_feng_yun_bian_huan_choose_card_toc} wait_for_feng_yun_bian_huan_choose_card_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    wait_for_feng_yun_bian_huan_choose_card_toc.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.wait_for_feng_yun_bian_huan_choose_card_toc();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.playerId = reader.uint32();
                    break;
                }
            case 2: {
                    message.waitingSecond = reader.uint32();
                    break;
                }
            case 3: {
                    message.seq = reader.uint32();
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a wait_for_feng_yun_bian_huan_choose_card_toc message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof wait_for_feng_yun_bian_huan_choose_card_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {wait_for_feng_yun_bian_huan_choose_card_toc} wait_for_feng_yun_bian_huan_choose_card_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    wait_for_feng_yun_bian_huan_choose_card_toc.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a wait_for_feng_yun_bian_huan_choose_card_toc message.
     * @function verify
     * @memberof wait_for_feng_yun_bian_huan_choose_card_toc
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    wait_for_feng_yun_bian_huan_choose_card_toc.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            if (!$util.isInteger(message.playerId))
                return "playerId: integer expected";
        if (message.waitingSecond != null && message.hasOwnProperty("waitingSecond"))
            if (!$util.isInteger(message.waitingSecond))
                return "waitingSecond: integer expected";
        if (message.seq != null && message.hasOwnProperty("seq"))
            if (!$util.isInteger(message.seq))
                return "seq: integer expected";
        return null;
    };

    /**
     * Creates a wait_for_feng_yun_bian_huan_choose_card_toc message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof wait_for_feng_yun_bian_huan_choose_card_toc
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {wait_for_feng_yun_bian_huan_choose_card_toc} wait_for_feng_yun_bian_huan_choose_card_toc
     */
    wait_for_feng_yun_bian_huan_choose_card_toc.fromObject = function fromObject(object) {
        if (object instanceof $root.wait_for_feng_yun_bian_huan_choose_card_toc)
            return object;
        var message = new $root.wait_for_feng_yun_bian_huan_choose_card_toc();
        if (object.playerId != null)
            message.playerId = object.playerId >>> 0;
        if (object.waitingSecond != null)
            message.waitingSecond = object.waitingSecond >>> 0;
        if (object.seq != null)
            message.seq = object.seq >>> 0;
        return message;
    };

    /**
     * Creates a plain object from a wait_for_feng_yun_bian_huan_choose_card_toc message. Also converts values to other types if specified.
     * @function toObject
     * @memberof wait_for_feng_yun_bian_huan_choose_card_toc
     * @static
     * @param {wait_for_feng_yun_bian_huan_choose_card_toc} message wait_for_feng_yun_bian_huan_choose_card_toc
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    wait_for_feng_yun_bian_huan_choose_card_toc.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults) {
            object.playerId = 0;
            object.waitingSecond = 0;
            object.seq = 0;
        }
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            object.playerId = message.playerId;
        if (message.waitingSecond != null && message.hasOwnProperty("waitingSecond"))
            object.waitingSecond = message.waitingSecond;
        if (message.seq != null && message.hasOwnProperty("seq"))
            object.seq = message.seq;
        return object;
    };

    /**
     * Converts this wait_for_feng_yun_bian_huan_choose_card_toc to JSON.
     * @function toJSON
     * @memberof wait_for_feng_yun_bian_huan_choose_card_toc
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    wait_for_feng_yun_bian_huan_choose_card_toc.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for wait_for_feng_yun_bian_huan_choose_card_toc
     * @function getTypeUrl
     * @memberof wait_for_feng_yun_bian_huan_choose_card_toc
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    wait_for_feng_yun_bian_huan_choose_card_toc.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/wait_for_feng_yun_bian_huan_choose_card_toc";
    };

    return wait_for_feng_yun_bian_huan_choose_card_toc;
})();

$root.feng_yun_bian_huan_choose_card_tos = (function() {

    /**
     * Properties of a feng_yun_bian_huan_choose_card_tos.
     * @exports Ifeng_yun_bian_huan_choose_card_tos
     * @interface Ifeng_yun_bian_huan_choose_card_tos
     * @property {number|null} [cardId] feng_yun_bian_huan_choose_card_tos cardId
     * @property {boolean|null} [asMessageCard] feng_yun_bian_huan_choose_card_tos asMessageCard
     * @property {number|null} [seq] feng_yun_bian_huan_choose_card_tos seq
     */

    /**
     * Constructs a new feng_yun_bian_huan_choose_card_tos.
     * @exports feng_yun_bian_huan_choose_card_tos
     * @classdesc Represents a feng_yun_bian_huan_choose_card_tos.
     * @implements Ifeng_yun_bian_huan_choose_card_tos
     * @constructor
     * @param {Ifeng_yun_bian_huan_choose_card_tos=} [properties] Properties to set
     */
    function feng_yun_bian_huan_choose_card_tos(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * feng_yun_bian_huan_choose_card_tos cardId.
     * @member {number} cardId
     * @memberof feng_yun_bian_huan_choose_card_tos
     * @instance
     */
    feng_yun_bian_huan_choose_card_tos.prototype.cardId = 0;

    /**
     * feng_yun_bian_huan_choose_card_tos asMessageCard.
     * @member {boolean} asMessageCard
     * @memberof feng_yun_bian_huan_choose_card_tos
     * @instance
     */
    feng_yun_bian_huan_choose_card_tos.prototype.asMessageCard = false;

    /**
     * feng_yun_bian_huan_choose_card_tos seq.
     * @member {number} seq
     * @memberof feng_yun_bian_huan_choose_card_tos
     * @instance
     */
    feng_yun_bian_huan_choose_card_tos.prototype.seq = 0;

    /**
     * Creates a new feng_yun_bian_huan_choose_card_tos instance using the specified properties.
     * @function create
     * @memberof feng_yun_bian_huan_choose_card_tos
     * @static
     * @param {Ifeng_yun_bian_huan_choose_card_tos=} [properties] Properties to set
     * @returns {feng_yun_bian_huan_choose_card_tos} feng_yun_bian_huan_choose_card_tos instance
     */
    feng_yun_bian_huan_choose_card_tos.create = function create(properties) {
        return new feng_yun_bian_huan_choose_card_tos(properties);
    };

    /**
     * Encodes the specified feng_yun_bian_huan_choose_card_tos message. Does not implicitly {@link feng_yun_bian_huan_choose_card_tos.verify|verify} messages.
     * @function encode
     * @memberof feng_yun_bian_huan_choose_card_tos
     * @static
     * @param {Ifeng_yun_bian_huan_choose_card_tos} message feng_yun_bian_huan_choose_card_tos message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    feng_yun_bian_huan_choose_card_tos.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.cardId != null && Object.hasOwnProperty.call(message, "cardId"))
            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.cardId);
        if (message.asMessageCard != null && Object.hasOwnProperty.call(message, "asMessageCard"))
            writer.uint32(/* id 2, wireType 0 =*/16).bool(message.asMessageCard);
        if (message.seq != null && Object.hasOwnProperty.call(message, "seq"))
            writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.seq);
        return writer;
    };

    /**
     * Encodes the specified feng_yun_bian_huan_choose_card_tos message, length delimited. Does not implicitly {@link feng_yun_bian_huan_choose_card_tos.verify|verify} messages.
     * @function encodeDelimited
     * @memberof feng_yun_bian_huan_choose_card_tos
     * @static
     * @param {Ifeng_yun_bian_huan_choose_card_tos} message feng_yun_bian_huan_choose_card_tos message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    feng_yun_bian_huan_choose_card_tos.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a feng_yun_bian_huan_choose_card_tos message from the specified reader or buffer.
     * @function decode
     * @memberof feng_yun_bian_huan_choose_card_tos
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {feng_yun_bian_huan_choose_card_tos} feng_yun_bian_huan_choose_card_tos
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    feng_yun_bian_huan_choose_card_tos.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.feng_yun_bian_huan_choose_card_tos();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.cardId = reader.uint32();
                    break;
                }
            case 2: {
                    message.asMessageCard = reader.bool();
                    break;
                }
            case 3: {
                    message.seq = reader.uint32();
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a feng_yun_bian_huan_choose_card_tos message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof feng_yun_bian_huan_choose_card_tos
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {feng_yun_bian_huan_choose_card_tos} feng_yun_bian_huan_choose_card_tos
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    feng_yun_bian_huan_choose_card_tos.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a feng_yun_bian_huan_choose_card_tos message.
     * @function verify
     * @memberof feng_yun_bian_huan_choose_card_tos
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    feng_yun_bian_huan_choose_card_tos.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.cardId != null && message.hasOwnProperty("cardId"))
            if (!$util.isInteger(message.cardId))
                return "cardId: integer expected";
        if (message.asMessageCard != null && message.hasOwnProperty("asMessageCard"))
            if (typeof message.asMessageCard !== "boolean")
                return "asMessageCard: boolean expected";
        if (message.seq != null && message.hasOwnProperty("seq"))
            if (!$util.isInteger(message.seq))
                return "seq: integer expected";
        return null;
    };

    /**
     * Creates a feng_yun_bian_huan_choose_card_tos message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof feng_yun_bian_huan_choose_card_tos
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {feng_yun_bian_huan_choose_card_tos} feng_yun_bian_huan_choose_card_tos
     */
    feng_yun_bian_huan_choose_card_tos.fromObject = function fromObject(object) {
        if (object instanceof $root.feng_yun_bian_huan_choose_card_tos)
            return object;
        var message = new $root.feng_yun_bian_huan_choose_card_tos();
        if (object.cardId != null)
            message.cardId = object.cardId >>> 0;
        if (object.asMessageCard != null)
            message.asMessageCard = Boolean(object.asMessageCard);
        if (object.seq != null)
            message.seq = object.seq >>> 0;
        return message;
    };

    /**
     * Creates a plain object from a feng_yun_bian_huan_choose_card_tos message. Also converts values to other types if specified.
     * @function toObject
     * @memberof feng_yun_bian_huan_choose_card_tos
     * @static
     * @param {feng_yun_bian_huan_choose_card_tos} message feng_yun_bian_huan_choose_card_tos
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    feng_yun_bian_huan_choose_card_tos.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults) {
            object.cardId = 0;
            object.asMessageCard = false;
            object.seq = 0;
        }
        if (message.cardId != null && message.hasOwnProperty("cardId"))
            object.cardId = message.cardId;
        if (message.asMessageCard != null && message.hasOwnProperty("asMessageCard"))
            object.asMessageCard = message.asMessageCard;
        if (message.seq != null && message.hasOwnProperty("seq"))
            object.seq = message.seq;
        return object;
    };

    /**
     * Converts this feng_yun_bian_huan_choose_card_tos to JSON.
     * @function toJSON
     * @memberof feng_yun_bian_huan_choose_card_tos
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    feng_yun_bian_huan_choose_card_tos.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for feng_yun_bian_huan_choose_card_tos
     * @function getTypeUrl
     * @memberof feng_yun_bian_huan_choose_card_tos
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    feng_yun_bian_huan_choose_card_tos.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/feng_yun_bian_huan_choose_card_tos";
    };

    return feng_yun_bian_huan_choose_card_tos;
})();

$root.feng_yun_bian_huan_choose_card_toc = (function() {

    /**
     * Properties of a feng_yun_bian_huan_choose_card_toc.
     * @exports Ifeng_yun_bian_huan_choose_card_toc
     * @interface Ifeng_yun_bian_huan_choose_card_toc
     * @property {number|null} [playerId] feng_yun_bian_huan_choose_card_toc playerId
     * @property {number|null} [cardId] feng_yun_bian_huan_choose_card_toc cardId
     * @property {boolean|null} [asMessageCard] feng_yun_bian_huan_choose_card_toc asMessageCard
     */

    /**
     * Constructs a new feng_yun_bian_huan_choose_card_toc.
     * @exports feng_yun_bian_huan_choose_card_toc
     * @classdesc Represents a feng_yun_bian_huan_choose_card_toc.
     * @implements Ifeng_yun_bian_huan_choose_card_toc
     * @constructor
     * @param {Ifeng_yun_bian_huan_choose_card_toc=} [properties] Properties to set
     */
    function feng_yun_bian_huan_choose_card_toc(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * feng_yun_bian_huan_choose_card_toc playerId.
     * @member {number} playerId
     * @memberof feng_yun_bian_huan_choose_card_toc
     * @instance
     */
    feng_yun_bian_huan_choose_card_toc.prototype.playerId = 0;

    /**
     * feng_yun_bian_huan_choose_card_toc cardId.
     * @member {number} cardId
     * @memberof feng_yun_bian_huan_choose_card_toc
     * @instance
     */
    feng_yun_bian_huan_choose_card_toc.prototype.cardId = 0;

    /**
     * feng_yun_bian_huan_choose_card_toc asMessageCard.
     * @member {boolean} asMessageCard
     * @memberof feng_yun_bian_huan_choose_card_toc
     * @instance
     */
    feng_yun_bian_huan_choose_card_toc.prototype.asMessageCard = false;

    /**
     * Creates a new feng_yun_bian_huan_choose_card_toc instance using the specified properties.
     * @function create
     * @memberof feng_yun_bian_huan_choose_card_toc
     * @static
     * @param {Ifeng_yun_bian_huan_choose_card_toc=} [properties] Properties to set
     * @returns {feng_yun_bian_huan_choose_card_toc} feng_yun_bian_huan_choose_card_toc instance
     */
    feng_yun_bian_huan_choose_card_toc.create = function create(properties) {
        return new feng_yun_bian_huan_choose_card_toc(properties);
    };

    /**
     * Encodes the specified feng_yun_bian_huan_choose_card_toc message. Does not implicitly {@link feng_yun_bian_huan_choose_card_toc.verify|verify} messages.
     * @function encode
     * @memberof feng_yun_bian_huan_choose_card_toc
     * @static
     * @param {Ifeng_yun_bian_huan_choose_card_toc} message feng_yun_bian_huan_choose_card_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    feng_yun_bian_huan_choose_card_toc.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.playerId != null && Object.hasOwnProperty.call(message, "playerId"))
            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.playerId);
        if (message.cardId != null && Object.hasOwnProperty.call(message, "cardId"))
            writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.cardId);
        if (message.asMessageCard != null && Object.hasOwnProperty.call(message, "asMessageCard"))
            writer.uint32(/* id 3, wireType 0 =*/24).bool(message.asMessageCard);
        return writer;
    };

    /**
     * Encodes the specified feng_yun_bian_huan_choose_card_toc message, length delimited. Does not implicitly {@link feng_yun_bian_huan_choose_card_toc.verify|verify} messages.
     * @function encodeDelimited
     * @memberof feng_yun_bian_huan_choose_card_toc
     * @static
     * @param {Ifeng_yun_bian_huan_choose_card_toc} message feng_yun_bian_huan_choose_card_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    feng_yun_bian_huan_choose_card_toc.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a feng_yun_bian_huan_choose_card_toc message from the specified reader or buffer.
     * @function decode
     * @memberof feng_yun_bian_huan_choose_card_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {feng_yun_bian_huan_choose_card_toc} feng_yun_bian_huan_choose_card_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    feng_yun_bian_huan_choose_card_toc.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.feng_yun_bian_huan_choose_card_toc();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.playerId = reader.uint32();
                    break;
                }
            case 2: {
                    message.cardId = reader.uint32();
                    break;
                }
            case 3: {
                    message.asMessageCard = reader.bool();
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a feng_yun_bian_huan_choose_card_toc message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof feng_yun_bian_huan_choose_card_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {feng_yun_bian_huan_choose_card_toc} feng_yun_bian_huan_choose_card_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    feng_yun_bian_huan_choose_card_toc.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a feng_yun_bian_huan_choose_card_toc message.
     * @function verify
     * @memberof feng_yun_bian_huan_choose_card_toc
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    feng_yun_bian_huan_choose_card_toc.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            if (!$util.isInteger(message.playerId))
                return "playerId: integer expected";
        if (message.cardId != null && message.hasOwnProperty("cardId"))
            if (!$util.isInteger(message.cardId))
                return "cardId: integer expected";
        if (message.asMessageCard != null && message.hasOwnProperty("asMessageCard"))
            if (typeof message.asMessageCard !== "boolean")
                return "asMessageCard: boolean expected";
        return null;
    };

    /**
     * Creates a feng_yun_bian_huan_choose_card_toc message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof feng_yun_bian_huan_choose_card_toc
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {feng_yun_bian_huan_choose_card_toc} feng_yun_bian_huan_choose_card_toc
     */
    feng_yun_bian_huan_choose_card_toc.fromObject = function fromObject(object) {
        if (object instanceof $root.feng_yun_bian_huan_choose_card_toc)
            return object;
        var message = new $root.feng_yun_bian_huan_choose_card_toc();
        if (object.playerId != null)
            message.playerId = object.playerId >>> 0;
        if (object.cardId != null)
            message.cardId = object.cardId >>> 0;
        if (object.asMessageCard != null)
            message.asMessageCard = Boolean(object.asMessageCard);
        return message;
    };

    /**
     * Creates a plain object from a feng_yun_bian_huan_choose_card_toc message. Also converts values to other types if specified.
     * @function toObject
     * @memberof feng_yun_bian_huan_choose_card_toc
     * @static
     * @param {feng_yun_bian_huan_choose_card_toc} message feng_yun_bian_huan_choose_card_toc
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    feng_yun_bian_huan_choose_card_toc.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults) {
            object.playerId = 0;
            object.cardId = 0;
            object.asMessageCard = false;
        }
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            object.playerId = message.playerId;
        if (message.cardId != null && message.hasOwnProperty("cardId"))
            object.cardId = message.cardId;
        if (message.asMessageCard != null && message.hasOwnProperty("asMessageCard"))
            object.asMessageCard = message.asMessageCard;
        return object;
    };

    /**
     * Converts this feng_yun_bian_huan_choose_card_toc to JSON.
     * @function toJSON
     * @memberof feng_yun_bian_huan_choose_card_toc
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    feng_yun_bian_huan_choose_card_toc.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for feng_yun_bian_huan_choose_card_toc
     * @function getTypeUrl
     * @memberof feng_yun_bian_huan_choose_card_toc
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    feng_yun_bian_huan_choose_card_toc.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/feng_yun_bian_huan_choose_card_toc";
    };

    return feng_yun_bian_huan_choose_card_toc;
})();

$root.record_file = (function() {

    /**
     * Properties of a record_file.
     * @exports Irecord_file
     * @interface Irecord_file
     * @property {number|null} [clientVersion] record_file clientVersion
     * @property {Array.<Irecorder_line>|null} [lines] record_file lines
     */

    /**
     * Constructs a new record_file.
     * @exports record_file
     * @classdesc Represents a record_file.
     * @implements Irecord_file
     * @constructor
     * @param {Irecord_file=} [properties] Properties to set
     */
    function record_file(properties) {
        this.lines = [];
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * record_file clientVersion.
     * @member {number} clientVersion
     * @memberof record_file
     * @instance
     */
    record_file.prototype.clientVersion = 0;

    /**
     * record_file lines.
     * @member {Array.<Irecorder_line>} lines
     * @memberof record_file
     * @instance
     */
    record_file.prototype.lines = $util.emptyArray;

    /**
     * Creates a new record_file instance using the specified properties.
     * @function create
     * @memberof record_file
     * @static
     * @param {Irecord_file=} [properties] Properties to set
     * @returns {record_file} record_file instance
     */
    record_file.create = function create(properties) {
        return new record_file(properties);
    };

    /**
     * Encodes the specified record_file message. Does not implicitly {@link record_file.verify|verify} messages.
     * @function encode
     * @memberof record_file
     * @static
     * @param {Irecord_file} message record_file message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    record_file.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.clientVersion != null && Object.hasOwnProperty.call(message, "clientVersion"))
            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.clientVersion);
        if (message.lines != null && message.lines.length)
            for (var i = 0; i < message.lines.length; ++i)
                $root.recorder_line.encode(message.lines[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
        return writer;
    };

    /**
     * Encodes the specified record_file message, length delimited. Does not implicitly {@link record_file.verify|verify} messages.
     * @function encodeDelimited
     * @memberof record_file
     * @static
     * @param {Irecord_file} message record_file message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    record_file.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a record_file message from the specified reader or buffer.
     * @function decode
     * @memberof record_file
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {record_file} record_file
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    record_file.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.record_file();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.clientVersion = reader.uint32();
                    break;
                }
            case 2: {
                    if (!(message.lines && message.lines.length))
                        message.lines = [];
                    message.lines.push($root.recorder_line.decode(reader, reader.uint32()));
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a record_file message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof record_file
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {record_file} record_file
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    record_file.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a record_file message.
     * @function verify
     * @memberof record_file
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    record_file.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.clientVersion != null && message.hasOwnProperty("clientVersion"))
            if (!$util.isInteger(message.clientVersion))
                return "clientVersion: integer expected";
        if (message.lines != null && message.hasOwnProperty("lines")) {
            if (!Array.isArray(message.lines))
                return "lines: array expected";
            for (var i = 0; i < message.lines.length; ++i) {
                var error = $root.recorder_line.verify(message.lines[i]);
                if (error)
                    return "lines." + error;
            }
        }
        return null;
    };

    /**
     * Creates a record_file message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof record_file
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {record_file} record_file
     */
    record_file.fromObject = function fromObject(object) {
        if (object instanceof $root.record_file)
            return object;
        var message = new $root.record_file();
        if (object.clientVersion != null)
            message.clientVersion = object.clientVersion >>> 0;
        if (object.lines) {
            if (!Array.isArray(object.lines))
                throw TypeError(".record_file.lines: array expected");
            message.lines = [];
            for (var i = 0; i < object.lines.length; ++i) {
                if (typeof object.lines[i] !== "object")
                    throw TypeError(".record_file.lines: object expected");
                message.lines[i] = $root.recorder_line.fromObject(object.lines[i]);
            }
        }
        return message;
    };

    /**
     * Creates a plain object from a record_file message. Also converts values to other types if specified.
     * @function toObject
     * @memberof record_file
     * @static
     * @param {record_file} message record_file
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    record_file.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.arrays || options.defaults)
            object.lines = [];
        if (options.defaults)
            object.clientVersion = 0;
        if (message.clientVersion != null && message.hasOwnProperty("clientVersion"))
            object.clientVersion = message.clientVersion;
        if (message.lines && message.lines.length) {
            object.lines = [];
            for (var j = 0; j < message.lines.length; ++j)
                object.lines[j] = $root.recorder_line.toObject(message.lines[j], options);
        }
        return object;
    };

    /**
     * Converts this record_file to JSON.
     * @function toJSON
     * @memberof record_file
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    record_file.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for record_file
     * @function getTypeUrl
     * @memberof record_file
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    record_file.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/record_file";
    };

    return record_file;
})();

$root.recorder_line = (function() {

    /**
     * Properties of a recorder_line.
     * @exports Irecorder_line
     * @interface Irecorder_line
     * @property {number|Long|null} [nanoTime] recorder_line nanoTime
     * @property {string|null} [protoName] recorder_line protoName
     * @property {Uint8Array|null} [messageBuf] recorder_line messageBuf
     */

    /**
     * Constructs a new recorder_line.
     * @exports recorder_line
     * @classdesc Represents a recorder_line.
     * @implements Irecorder_line
     * @constructor
     * @param {Irecorder_line=} [properties] Properties to set
     */
    function recorder_line(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * recorder_line nanoTime.
     * @member {number|Long} nanoTime
     * @memberof recorder_line
     * @instance
     */
    recorder_line.prototype.nanoTime = $util.Long ? $util.Long.fromBits(0,0,true) : 0;

    /**
     * recorder_line protoName.
     * @member {string} protoName
     * @memberof recorder_line
     * @instance
     */
    recorder_line.prototype.protoName = "";

    /**
     * recorder_line messageBuf.
     * @member {Uint8Array} messageBuf
     * @memberof recorder_line
     * @instance
     */
    recorder_line.prototype.messageBuf = $util.newBuffer([]);

    /**
     * Creates a new recorder_line instance using the specified properties.
     * @function create
     * @memberof recorder_line
     * @static
     * @param {Irecorder_line=} [properties] Properties to set
     * @returns {recorder_line} recorder_line instance
     */
    recorder_line.create = function create(properties) {
        return new recorder_line(properties);
    };

    /**
     * Encodes the specified recorder_line message. Does not implicitly {@link recorder_line.verify|verify} messages.
     * @function encode
     * @memberof recorder_line
     * @static
     * @param {Irecorder_line} message recorder_line message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    recorder_line.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.nanoTime != null && Object.hasOwnProperty.call(message, "nanoTime"))
            writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.nanoTime);
        if (message.protoName != null && Object.hasOwnProperty.call(message, "protoName"))
            writer.uint32(/* id 2, wireType 2 =*/18).string(message.protoName);
        if (message.messageBuf != null && Object.hasOwnProperty.call(message, "messageBuf"))
            writer.uint32(/* id 3, wireType 2 =*/26).bytes(message.messageBuf);
        return writer;
    };

    /**
     * Encodes the specified recorder_line message, length delimited. Does not implicitly {@link recorder_line.verify|verify} messages.
     * @function encodeDelimited
     * @memberof recorder_line
     * @static
     * @param {Irecorder_line} message recorder_line message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    recorder_line.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a recorder_line message from the specified reader or buffer.
     * @function decode
     * @memberof recorder_line
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {recorder_line} recorder_line
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    recorder_line.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.recorder_line();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.nanoTime = reader.uint64();
                    break;
                }
            case 2: {
                    message.protoName = reader.string();
                    break;
                }
            case 3: {
                    message.messageBuf = reader.bytes();
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a recorder_line message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof recorder_line
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {recorder_line} recorder_line
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    recorder_line.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a recorder_line message.
     * @function verify
     * @memberof recorder_line
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    recorder_line.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.nanoTime != null && message.hasOwnProperty("nanoTime"))
            if (!$util.isInteger(message.nanoTime) && !(message.nanoTime && $util.isInteger(message.nanoTime.low) && $util.isInteger(message.nanoTime.high)))
                return "nanoTime: integer|Long expected";
        if (message.protoName != null && message.hasOwnProperty("protoName"))
            if (!$util.isString(message.protoName))
                return "protoName: string expected";
        if (message.messageBuf != null && message.hasOwnProperty("messageBuf"))
            if (!(message.messageBuf && typeof message.messageBuf.length === "number" || $util.isString(message.messageBuf)))
                return "messageBuf: buffer expected";
        return null;
    };

    /**
     * Creates a recorder_line message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof recorder_line
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {recorder_line} recorder_line
     */
    recorder_line.fromObject = function fromObject(object) {
        if (object instanceof $root.recorder_line)
            return object;
        var message = new $root.recorder_line();
        if (object.nanoTime != null)
            if ($util.Long)
                (message.nanoTime = $util.Long.fromValue(object.nanoTime)).unsigned = true;
            else if (typeof object.nanoTime === "string")
                message.nanoTime = parseInt(object.nanoTime, 10);
            else if (typeof object.nanoTime === "number")
                message.nanoTime = object.nanoTime;
            else if (typeof object.nanoTime === "object")
                message.nanoTime = new $util.LongBits(object.nanoTime.low >>> 0, object.nanoTime.high >>> 0).toNumber(true);
        if (object.protoName != null)
            message.protoName = String(object.protoName);
        if (object.messageBuf != null)
            if (typeof object.messageBuf === "string")
                $util.base64.decode(object.messageBuf, message.messageBuf = $util.newBuffer($util.base64.length(object.messageBuf)), 0);
            else if (object.messageBuf.length >= 0)
                message.messageBuf = object.messageBuf;
        return message;
    };

    /**
     * Creates a plain object from a recorder_line message. Also converts values to other types if specified.
     * @function toObject
     * @memberof recorder_line
     * @static
     * @param {recorder_line} message recorder_line
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    recorder_line.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults) {
            if ($util.Long) {
                var long = new $util.Long(0, 0, true);
                object.nanoTime = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
            } else
                object.nanoTime = options.longs === String ? "0" : 0;
            object.protoName = "";
            if (options.bytes === String)
                object.messageBuf = "";
            else {
                object.messageBuf = [];
                if (options.bytes !== Array)
                    object.messageBuf = $util.newBuffer(object.messageBuf);
            }
        }
        if (message.nanoTime != null && message.hasOwnProperty("nanoTime"))
            if (typeof message.nanoTime === "number")
                object.nanoTime = options.longs === String ? String(message.nanoTime) : message.nanoTime;
            else
                object.nanoTime = options.longs === String ? $util.Long.prototype.toString.call(message.nanoTime) : options.longs === Number ? new $util.LongBits(message.nanoTime.low >>> 0, message.nanoTime.high >>> 0).toNumber(true) : message.nanoTime;
        if (message.protoName != null && message.hasOwnProperty("protoName"))
            object.protoName = message.protoName;
        if (message.messageBuf != null && message.hasOwnProperty("messageBuf"))
            object.messageBuf = options.bytes === String ? $util.base64.encode(message.messageBuf, 0, message.messageBuf.length) : options.bytes === Array ? Array.prototype.slice.call(message.messageBuf) : message.messageBuf;
        return object;
    };

    /**
     * Converts this recorder_line to JSON.
     * @function toJSON
     * @memberof recorder_line
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    recorder_line.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for recorder_line
     * @function getTypeUrl
     * @memberof recorder_line
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    recorder_line.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/recorder_line";
    };

    return recorder_line;
})();

$root.player_order = (function() {

    /**
     * Properties of a player_order.
     * @exports Iplayer_order
     * @interface Iplayer_order
     * @property {number|null} [id] player_order id
     * @property {string|null} [device] player_order device
     * @property {string|null} [name] player_order name
     * @property {number|Long|null} [time] player_order time
     */

    /**
     * Constructs a new player_order.
     * @exports player_order
     * @classdesc Represents a player_order.
     * @implements Iplayer_order
     * @constructor
     * @param {Iplayer_order=} [properties] Properties to set
     */
    function player_order(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * player_order id.
     * @member {number} id
     * @memberof player_order
     * @instance
     */
    player_order.prototype.id = 0;

    /**
     * player_order device.
     * @member {string} device
     * @memberof player_order
     * @instance
     */
    player_order.prototype.device = "";

    /**
     * player_order name.
     * @member {string} name
     * @memberof player_order
     * @instance
     */
    player_order.prototype.name = "";

    /**
     * player_order time.
     * @member {number|Long} time
     * @memberof player_order
     * @instance
     */
    player_order.prototype.time = $util.Long ? $util.Long.fromBits(0,0,true) : 0;

    /**
     * Creates a new player_order instance using the specified properties.
     * @function create
     * @memberof player_order
     * @static
     * @param {Iplayer_order=} [properties] Properties to set
     * @returns {player_order} player_order instance
     */
    player_order.create = function create(properties) {
        return new player_order(properties);
    };

    /**
     * Encodes the specified player_order message. Does not implicitly {@link player_order.verify|verify} messages.
     * @function encode
     * @memberof player_order
     * @static
     * @param {Iplayer_order} message player_order message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    player_order.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.id != null && Object.hasOwnProperty.call(message, "id"))
            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.id);
        if (message.device != null && Object.hasOwnProperty.call(message, "device"))
            writer.uint32(/* id 2, wireType 2 =*/18).string(message.device);
        if (message.name != null && Object.hasOwnProperty.call(message, "name"))
            writer.uint32(/* id 3, wireType 2 =*/26).string(message.name);
        if (message.time != null && Object.hasOwnProperty.call(message, "time"))
            writer.uint32(/* id 4, wireType 0 =*/32).uint64(message.time);
        return writer;
    };

    /**
     * Encodes the specified player_order message, length delimited. Does not implicitly {@link player_order.verify|verify} messages.
     * @function encodeDelimited
     * @memberof player_order
     * @static
     * @param {Iplayer_order} message player_order message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    player_order.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a player_order message from the specified reader or buffer.
     * @function decode
     * @memberof player_order
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {player_order} player_order
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    player_order.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.player_order();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.id = reader.uint32();
                    break;
                }
            case 2: {
                    message.device = reader.string();
                    break;
                }
            case 3: {
                    message.name = reader.string();
                    break;
                }
            case 4: {
                    message.time = reader.uint64();
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a player_order message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof player_order
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {player_order} player_order
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    player_order.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a player_order message.
     * @function verify
     * @memberof player_order
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    player_order.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.id != null && message.hasOwnProperty("id"))
            if (!$util.isInteger(message.id))
                return "id: integer expected";
        if (message.device != null && message.hasOwnProperty("device"))
            if (!$util.isString(message.device))
                return "device: string expected";
        if (message.name != null && message.hasOwnProperty("name"))
            if (!$util.isString(message.name))
                return "name: string expected";
        if (message.time != null && message.hasOwnProperty("time"))
            if (!$util.isInteger(message.time) && !(message.time && $util.isInteger(message.time.low) && $util.isInteger(message.time.high)))
                return "time: integer|Long expected";
        return null;
    };

    /**
     * Creates a player_order message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof player_order
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {player_order} player_order
     */
    player_order.fromObject = function fromObject(object) {
        if (object instanceof $root.player_order)
            return object;
        var message = new $root.player_order();
        if (object.id != null)
            message.id = object.id >>> 0;
        if (object.device != null)
            message.device = String(object.device);
        if (object.name != null)
            message.name = String(object.name);
        if (object.time != null)
            if ($util.Long)
                (message.time = $util.Long.fromValue(object.time)).unsigned = true;
            else if (typeof object.time === "string")
                message.time = parseInt(object.time, 10);
            else if (typeof object.time === "number")
                message.time = object.time;
            else if (typeof object.time === "object")
                message.time = new $util.LongBits(object.time.low >>> 0, object.time.high >>> 0).toNumber(true);
        return message;
    };

    /**
     * Creates a plain object from a player_order message. Also converts values to other types if specified.
     * @function toObject
     * @memberof player_order
     * @static
     * @param {player_order} message player_order
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    player_order.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults) {
            object.id = 0;
            object.device = "";
            object.name = "";
            if ($util.Long) {
                var long = new $util.Long(0, 0, true);
                object.time = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
            } else
                object.time = options.longs === String ? "0" : 0;
        }
        if (message.id != null && message.hasOwnProperty("id"))
            object.id = message.id;
        if (message.device != null && message.hasOwnProperty("device"))
            object.device = message.device;
        if (message.name != null && message.hasOwnProperty("name"))
            object.name = message.name;
        if (message.time != null && message.hasOwnProperty("time"))
            if (typeof message.time === "number")
                object.time = options.longs === String ? String(message.time) : message.time;
            else
                object.time = options.longs === String ? $util.Long.prototype.toString.call(message.time) : options.longs === Number ? new $util.LongBits(message.time.low >>> 0, message.time.high >>> 0).toNumber(true) : message.time;
        return object;
    };

    /**
     * Converts this player_order to JSON.
     * @function toJSON
     * @memberof player_order
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    player_order.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for player_order
     * @function getTypeUrl
     * @memberof player_order
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    player_order.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/player_order";
    };

    return player_order;
})();

$root.player_orders = (function() {

    /**
     * Properties of a player_orders.
     * @exports Iplayer_orders
     * @interface Iplayer_orders
     * @property {Object.<string,Iplayer_order>|null} [orders] player_orders orders
     * @property {number|null} [orderId] player_orders orderId
     */

    /**
     * Constructs a new player_orders.
     * @exports player_orders
     * @classdesc Represents a player_orders.
     * @implements Iplayer_orders
     * @constructor
     * @param {Iplayer_orders=} [properties] Properties to set
     */
    function player_orders(properties) {
        this.orders = {};
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * player_orders orders.
     * @member {Object.<string,Iplayer_order>} orders
     * @memberof player_orders
     * @instance
     */
    player_orders.prototype.orders = $util.emptyObject;

    /**
     * player_orders orderId.
     * @member {number} orderId
     * @memberof player_orders
     * @instance
     */
    player_orders.prototype.orderId = 0;

    /**
     * Creates a new player_orders instance using the specified properties.
     * @function create
     * @memberof player_orders
     * @static
     * @param {Iplayer_orders=} [properties] Properties to set
     * @returns {player_orders} player_orders instance
     */
    player_orders.create = function create(properties) {
        return new player_orders(properties);
    };

    /**
     * Encodes the specified player_orders message. Does not implicitly {@link player_orders.verify|verify} messages.
     * @function encode
     * @memberof player_orders
     * @static
     * @param {Iplayer_orders} message player_orders message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    player_orders.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.orders != null && Object.hasOwnProperty.call(message, "orders"))
            for (var keys = Object.keys(message.orders), i = 0; i < keys.length; ++i) {
                writer.uint32(/* id 1, wireType 2 =*/10).fork().uint32(/* id 1, wireType 0 =*/8).uint32(keys[i]);
                $root.player_order.encode(message.orders[keys[i]], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim().ldelim();
            }
        if (message.orderId != null && Object.hasOwnProperty.call(message, "orderId"))
            writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.orderId);
        return writer;
    };

    /**
     * Encodes the specified player_orders message, length delimited. Does not implicitly {@link player_orders.verify|verify} messages.
     * @function encodeDelimited
     * @memberof player_orders
     * @static
     * @param {Iplayer_orders} message player_orders message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    player_orders.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a player_orders message from the specified reader or buffer.
     * @function decode
     * @memberof player_orders
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {player_orders} player_orders
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    player_orders.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.player_orders(), key, value;
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    if (message.orders === $util.emptyObject)
                        message.orders = {};
                    var end2 = reader.uint32() + reader.pos;
                    key = 0;
                    value = null;
                    while (reader.pos < end2) {
                        var tag2 = reader.uint32();
                        switch (tag2 >>> 3) {
                        case 1:
                            key = reader.uint32();
                            break;
                        case 2:
                            value = $root.player_order.decode(reader, reader.uint32());
                            break;
                        default:
                            reader.skipType(tag2 & 7);
                            break;
                        }
                    }
                    message.orders[key] = value;
                    break;
                }
            case 2: {
                    message.orderId = reader.uint32();
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a player_orders message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof player_orders
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {player_orders} player_orders
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    player_orders.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a player_orders message.
     * @function verify
     * @memberof player_orders
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    player_orders.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.orders != null && message.hasOwnProperty("orders")) {
            if (!$util.isObject(message.orders))
                return "orders: object expected";
            var key = Object.keys(message.orders);
            for (var i = 0; i < key.length; ++i) {
                if (!$util.key32Re.test(key[i]))
                    return "orders: integer key{k:uint32} expected";
                {
                    var error = $root.player_order.verify(message.orders[key[i]]);
                    if (error)
                        return "orders." + error;
                }
            }
        }
        if (message.orderId != null && message.hasOwnProperty("orderId"))
            if (!$util.isInteger(message.orderId))
                return "orderId: integer expected";
        return null;
    };

    /**
     * Creates a player_orders message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof player_orders
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {player_orders} player_orders
     */
    player_orders.fromObject = function fromObject(object) {
        if (object instanceof $root.player_orders)
            return object;
        var message = new $root.player_orders();
        if (object.orders) {
            if (typeof object.orders !== "object")
                throw TypeError(".player_orders.orders: object expected");
            message.orders = {};
            for (var keys = Object.keys(object.orders), i = 0; i < keys.length; ++i) {
                if (typeof object.orders[keys[i]] !== "object")
                    throw TypeError(".player_orders.orders: object expected");
                message.orders[keys[i]] = $root.player_order.fromObject(object.orders[keys[i]]);
            }
        }
        if (object.orderId != null)
            message.orderId = object.orderId >>> 0;
        return message;
    };

    /**
     * Creates a plain object from a player_orders message. Also converts values to other types if specified.
     * @function toObject
     * @memberof player_orders
     * @static
     * @param {player_orders} message player_orders
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    player_orders.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.objects || options.defaults)
            object.orders = {};
        if (options.defaults)
            object.orderId = 0;
        var keys2;
        if (message.orders && (keys2 = Object.keys(message.orders)).length) {
            object.orders = {};
            for (var j = 0; j < keys2.length; ++j)
                object.orders[keys2[j]] = $root.player_order.toObject(message.orders[keys2[j]], options);
        }
        if (message.orderId != null && message.hasOwnProperty("orderId"))
            object.orderId = message.orderId;
        return object;
    };

    /**
     * Converts this player_orders to JSON.
     * @function toJSON
     * @memberof player_orders
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    player_orders.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for player_orders
     * @function getTypeUrl
     * @memberof player_orders
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    player_orders.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/player_orders";
    };

    return player_orders;
})();

$root.skill_qi_huo_ke_ju_tos = (function() {

    /**
     * Properties of a skill_qi_huo_ke_ju_tos.
     * @exports Iskill_qi_huo_ke_ju_tos
     * @interface Iskill_qi_huo_ke_ju_tos
     * @property {number|null} [cardId] skill_qi_huo_ke_ju_tos cardId
     * @property {number|null} [seq] skill_qi_huo_ke_ju_tos seq
     */

    /**
     * Constructs a new skill_qi_huo_ke_ju_tos.
     * @exports skill_qi_huo_ke_ju_tos
     * @classdesc Represents a skill_qi_huo_ke_ju_tos.
     * @implements Iskill_qi_huo_ke_ju_tos
     * @constructor
     * @param {Iskill_qi_huo_ke_ju_tos=} [properties] Properties to set
     */
    function skill_qi_huo_ke_ju_tos(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * skill_qi_huo_ke_ju_tos cardId.
     * @member {number} cardId
     * @memberof skill_qi_huo_ke_ju_tos
     * @instance
     */
    skill_qi_huo_ke_ju_tos.prototype.cardId = 0;

    /**
     * skill_qi_huo_ke_ju_tos seq.
     * @member {number} seq
     * @memberof skill_qi_huo_ke_ju_tos
     * @instance
     */
    skill_qi_huo_ke_ju_tos.prototype.seq = 0;

    /**
     * Creates a new skill_qi_huo_ke_ju_tos instance using the specified properties.
     * @function create
     * @memberof skill_qi_huo_ke_ju_tos
     * @static
     * @param {Iskill_qi_huo_ke_ju_tos=} [properties] Properties to set
     * @returns {skill_qi_huo_ke_ju_tos} skill_qi_huo_ke_ju_tos instance
     */
    skill_qi_huo_ke_ju_tos.create = function create(properties) {
        return new skill_qi_huo_ke_ju_tos(properties);
    };

    /**
     * Encodes the specified skill_qi_huo_ke_ju_tos message. Does not implicitly {@link skill_qi_huo_ke_ju_tos.verify|verify} messages.
     * @function encode
     * @memberof skill_qi_huo_ke_ju_tos
     * @static
     * @param {Iskill_qi_huo_ke_ju_tos} message skill_qi_huo_ke_ju_tos message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_qi_huo_ke_ju_tos.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.cardId != null && Object.hasOwnProperty.call(message, "cardId"))
            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.cardId);
        if (message.seq != null && Object.hasOwnProperty.call(message, "seq"))
            writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.seq);
        return writer;
    };

    /**
     * Encodes the specified skill_qi_huo_ke_ju_tos message, length delimited. Does not implicitly {@link skill_qi_huo_ke_ju_tos.verify|verify} messages.
     * @function encodeDelimited
     * @memberof skill_qi_huo_ke_ju_tos
     * @static
     * @param {Iskill_qi_huo_ke_ju_tos} message skill_qi_huo_ke_ju_tos message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_qi_huo_ke_ju_tos.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a skill_qi_huo_ke_ju_tos message from the specified reader or buffer.
     * @function decode
     * @memberof skill_qi_huo_ke_ju_tos
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {skill_qi_huo_ke_ju_tos} skill_qi_huo_ke_ju_tos
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_qi_huo_ke_ju_tos.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.skill_qi_huo_ke_ju_tos();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.cardId = reader.uint32();
                    break;
                }
            case 2: {
                    message.seq = reader.uint32();
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a skill_qi_huo_ke_ju_tos message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof skill_qi_huo_ke_ju_tos
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {skill_qi_huo_ke_ju_tos} skill_qi_huo_ke_ju_tos
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_qi_huo_ke_ju_tos.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a skill_qi_huo_ke_ju_tos message.
     * @function verify
     * @memberof skill_qi_huo_ke_ju_tos
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    skill_qi_huo_ke_ju_tos.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.cardId != null && message.hasOwnProperty("cardId"))
            if (!$util.isInteger(message.cardId))
                return "cardId: integer expected";
        if (message.seq != null && message.hasOwnProperty("seq"))
            if (!$util.isInteger(message.seq))
                return "seq: integer expected";
        return null;
    };

    /**
     * Creates a skill_qi_huo_ke_ju_tos message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof skill_qi_huo_ke_ju_tos
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {skill_qi_huo_ke_ju_tos} skill_qi_huo_ke_ju_tos
     */
    skill_qi_huo_ke_ju_tos.fromObject = function fromObject(object) {
        if (object instanceof $root.skill_qi_huo_ke_ju_tos)
            return object;
        var message = new $root.skill_qi_huo_ke_ju_tos();
        if (object.cardId != null)
            message.cardId = object.cardId >>> 0;
        if (object.seq != null)
            message.seq = object.seq >>> 0;
        return message;
    };

    /**
     * Creates a plain object from a skill_qi_huo_ke_ju_tos message. Also converts values to other types if specified.
     * @function toObject
     * @memberof skill_qi_huo_ke_ju_tos
     * @static
     * @param {skill_qi_huo_ke_ju_tos} message skill_qi_huo_ke_ju_tos
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    skill_qi_huo_ke_ju_tos.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults) {
            object.cardId = 0;
            object.seq = 0;
        }
        if (message.cardId != null && message.hasOwnProperty("cardId"))
            object.cardId = message.cardId;
        if (message.seq != null && message.hasOwnProperty("seq"))
            object.seq = message.seq;
        return object;
    };

    /**
     * Converts this skill_qi_huo_ke_ju_tos to JSON.
     * @function toJSON
     * @memberof skill_qi_huo_ke_ju_tos
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    skill_qi_huo_ke_ju_tos.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for skill_qi_huo_ke_ju_tos
     * @function getTypeUrl
     * @memberof skill_qi_huo_ke_ju_tos
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    skill_qi_huo_ke_ju_tos.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/skill_qi_huo_ke_ju_tos";
    };

    return skill_qi_huo_ke_ju_tos;
})();

$root.skill_qi_huo_ke_ju_toc = (function() {

    /**
     * Properties of a skill_qi_huo_ke_ju_toc.
     * @exports Iskill_qi_huo_ke_ju_toc
     * @interface Iskill_qi_huo_ke_ju_toc
     * @property {number|null} [playerId] skill_qi_huo_ke_ju_toc playerId
     * @property {number|null} [cardId] skill_qi_huo_ke_ju_toc cardId
     */

    /**
     * Constructs a new skill_qi_huo_ke_ju_toc.
     * @exports skill_qi_huo_ke_ju_toc
     * @classdesc Represents a skill_qi_huo_ke_ju_toc.
     * @implements Iskill_qi_huo_ke_ju_toc
     * @constructor
     * @param {Iskill_qi_huo_ke_ju_toc=} [properties] Properties to set
     */
    function skill_qi_huo_ke_ju_toc(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * skill_qi_huo_ke_ju_toc playerId.
     * @member {number} playerId
     * @memberof skill_qi_huo_ke_ju_toc
     * @instance
     */
    skill_qi_huo_ke_ju_toc.prototype.playerId = 0;

    /**
     * skill_qi_huo_ke_ju_toc cardId.
     * @member {number} cardId
     * @memberof skill_qi_huo_ke_ju_toc
     * @instance
     */
    skill_qi_huo_ke_ju_toc.prototype.cardId = 0;

    /**
     * Creates a new skill_qi_huo_ke_ju_toc instance using the specified properties.
     * @function create
     * @memberof skill_qi_huo_ke_ju_toc
     * @static
     * @param {Iskill_qi_huo_ke_ju_toc=} [properties] Properties to set
     * @returns {skill_qi_huo_ke_ju_toc} skill_qi_huo_ke_ju_toc instance
     */
    skill_qi_huo_ke_ju_toc.create = function create(properties) {
        return new skill_qi_huo_ke_ju_toc(properties);
    };

    /**
     * Encodes the specified skill_qi_huo_ke_ju_toc message. Does not implicitly {@link skill_qi_huo_ke_ju_toc.verify|verify} messages.
     * @function encode
     * @memberof skill_qi_huo_ke_ju_toc
     * @static
     * @param {Iskill_qi_huo_ke_ju_toc} message skill_qi_huo_ke_ju_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_qi_huo_ke_ju_toc.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.playerId != null && Object.hasOwnProperty.call(message, "playerId"))
            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.playerId);
        if (message.cardId != null && Object.hasOwnProperty.call(message, "cardId"))
            writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.cardId);
        return writer;
    };

    /**
     * Encodes the specified skill_qi_huo_ke_ju_toc message, length delimited. Does not implicitly {@link skill_qi_huo_ke_ju_toc.verify|verify} messages.
     * @function encodeDelimited
     * @memberof skill_qi_huo_ke_ju_toc
     * @static
     * @param {Iskill_qi_huo_ke_ju_toc} message skill_qi_huo_ke_ju_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_qi_huo_ke_ju_toc.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a skill_qi_huo_ke_ju_toc message from the specified reader or buffer.
     * @function decode
     * @memberof skill_qi_huo_ke_ju_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {skill_qi_huo_ke_ju_toc} skill_qi_huo_ke_ju_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_qi_huo_ke_ju_toc.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.skill_qi_huo_ke_ju_toc();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.playerId = reader.uint32();
                    break;
                }
            case 2: {
                    message.cardId = reader.uint32();
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a skill_qi_huo_ke_ju_toc message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof skill_qi_huo_ke_ju_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {skill_qi_huo_ke_ju_toc} skill_qi_huo_ke_ju_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_qi_huo_ke_ju_toc.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a skill_qi_huo_ke_ju_toc message.
     * @function verify
     * @memberof skill_qi_huo_ke_ju_toc
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    skill_qi_huo_ke_ju_toc.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            if (!$util.isInteger(message.playerId))
                return "playerId: integer expected";
        if (message.cardId != null && message.hasOwnProperty("cardId"))
            if (!$util.isInteger(message.cardId))
                return "cardId: integer expected";
        return null;
    };

    /**
     * Creates a skill_qi_huo_ke_ju_toc message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof skill_qi_huo_ke_ju_toc
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {skill_qi_huo_ke_ju_toc} skill_qi_huo_ke_ju_toc
     */
    skill_qi_huo_ke_ju_toc.fromObject = function fromObject(object) {
        if (object instanceof $root.skill_qi_huo_ke_ju_toc)
            return object;
        var message = new $root.skill_qi_huo_ke_ju_toc();
        if (object.playerId != null)
            message.playerId = object.playerId >>> 0;
        if (object.cardId != null)
            message.cardId = object.cardId >>> 0;
        return message;
    };

    /**
     * Creates a plain object from a skill_qi_huo_ke_ju_toc message. Also converts values to other types if specified.
     * @function toObject
     * @memberof skill_qi_huo_ke_ju_toc
     * @static
     * @param {skill_qi_huo_ke_ju_toc} message skill_qi_huo_ke_ju_toc
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    skill_qi_huo_ke_ju_toc.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults) {
            object.playerId = 0;
            object.cardId = 0;
        }
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            object.playerId = message.playerId;
        if (message.cardId != null && message.hasOwnProperty("cardId"))
            object.cardId = message.cardId;
        return object;
    };

    /**
     * Converts this skill_qi_huo_ke_ju_toc to JSON.
     * @function toJSON
     * @memberof skill_qi_huo_ke_ju_toc
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    skill_qi_huo_ke_ju_toc.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for skill_qi_huo_ke_ju_toc
     * @function getTypeUrl
     * @memberof skill_qi_huo_ke_ju_toc
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    skill_qi_huo_ke_ju_toc.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/skill_qi_huo_ke_ju_toc";
    };

    return skill_qi_huo_ke_ju_toc;
})();

$root.skill_gui_zha_tos = (function() {

    /**
     * Properties of a skill_gui_zha_tos.
     * @exports Iskill_gui_zha_tos
     * @interface Iskill_gui_zha_tos
     * @property {number|null} [targetPlayerId] skill_gui_zha_tos targetPlayerId
     * @property {card_type|null} [cardType] skill_gui_zha_tos cardType
     * @property {card_type|null} [wantType] skill_gui_zha_tos wantType
     * @property {number|null} [seq] skill_gui_zha_tos seq
     */

    /**
     * Constructs a new skill_gui_zha_tos.
     * @exports skill_gui_zha_tos
     * @classdesc Represents a skill_gui_zha_tos.
     * @implements Iskill_gui_zha_tos
     * @constructor
     * @param {Iskill_gui_zha_tos=} [properties] Properties to set
     */
    function skill_gui_zha_tos(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * skill_gui_zha_tos targetPlayerId.
     * @member {number} targetPlayerId
     * @memberof skill_gui_zha_tos
     * @instance
     */
    skill_gui_zha_tos.prototype.targetPlayerId = 0;

    /**
     * skill_gui_zha_tos cardType.
     * @member {card_type} cardType
     * @memberof skill_gui_zha_tos
     * @instance
     */
    skill_gui_zha_tos.prototype.cardType = 0;

    /**
     * skill_gui_zha_tos wantType.
     * @member {card_type} wantType
     * @memberof skill_gui_zha_tos
     * @instance
     */
    skill_gui_zha_tos.prototype.wantType = 0;

    /**
     * skill_gui_zha_tos seq.
     * @member {number} seq
     * @memberof skill_gui_zha_tos
     * @instance
     */
    skill_gui_zha_tos.prototype.seq = 0;

    /**
     * Creates a new skill_gui_zha_tos instance using the specified properties.
     * @function create
     * @memberof skill_gui_zha_tos
     * @static
     * @param {Iskill_gui_zha_tos=} [properties] Properties to set
     * @returns {skill_gui_zha_tos} skill_gui_zha_tos instance
     */
    skill_gui_zha_tos.create = function create(properties) {
        return new skill_gui_zha_tos(properties);
    };

    /**
     * Encodes the specified skill_gui_zha_tos message. Does not implicitly {@link skill_gui_zha_tos.verify|verify} messages.
     * @function encode
     * @memberof skill_gui_zha_tos
     * @static
     * @param {Iskill_gui_zha_tos} message skill_gui_zha_tos message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_gui_zha_tos.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.targetPlayerId != null && Object.hasOwnProperty.call(message, "targetPlayerId"))
            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.targetPlayerId);
        if (message.cardType != null && Object.hasOwnProperty.call(message, "cardType"))
            writer.uint32(/* id 2, wireType 0 =*/16).int32(message.cardType);
        if (message.wantType != null && Object.hasOwnProperty.call(message, "wantType"))
            writer.uint32(/* id 3, wireType 0 =*/24).int32(message.wantType);
        if (message.seq != null && Object.hasOwnProperty.call(message, "seq"))
            writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.seq);
        return writer;
    };

    /**
     * Encodes the specified skill_gui_zha_tos message, length delimited. Does not implicitly {@link skill_gui_zha_tos.verify|verify} messages.
     * @function encodeDelimited
     * @memberof skill_gui_zha_tos
     * @static
     * @param {Iskill_gui_zha_tos} message skill_gui_zha_tos message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_gui_zha_tos.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a skill_gui_zha_tos message from the specified reader or buffer.
     * @function decode
     * @memberof skill_gui_zha_tos
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {skill_gui_zha_tos} skill_gui_zha_tos
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_gui_zha_tos.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.skill_gui_zha_tos();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.targetPlayerId = reader.uint32();
                    break;
                }
            case 2: {
                    message.cardType = reader.int32();
                    break;
                }
            case 3: {
                    message.wantType = reader.int32();
                    break;
                }
            case 4: {
                    message.seq = reader.uint32();
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a skill_gui_zha_tos message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof skill_gui_zha_tos
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {skill_gui_zha_tos} skill_gui_zha_tos
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_gui_zha_tos.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a skill_gui_zha_tos message.
     * @function verify
     * @memberof skill_gui_zha_tos
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    skill_gui_zha_tos.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.targetPlayerId != null && message.hasOwnProperty("targetPlayerId"))
            if (!$util.isInteger(message.targetPlayerId))
                return "targetPlayerId: integer expected";
        if (message.cardType != null && message.hasOwnProperty("cardType"))
            switch (message.cardType) {
            default:
                return "cardType: enum value expected";
            case 0:
            case 1:
            case 2:
            case 3:
            case 4:
            case 5:
            case 6:
            case 7:
            case 8:
            case 9:
                break;
            }
        if (message.wantType != null && message.hasOwnProperty("wantType"))
            switch (message.wantType) {
            default:
                return "wantType: enum value expected";
            case 0:
            case 1:
            case 2:
            case 3:
            case 4:
            case 5:
            case 6:
            case 7:
            case 8:
            case 9:
                break;
            }
        if (message.seq != null && message.hasOwnProperty("seq"))
            if (!$util.isInteger(message.seq))
                return "seq: integer expected";
        return null;
    };

    /**
     * Creates a skill_gui_zha_tos message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof skill_gui_zha_tos
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {skill_gui_zha_tos} skill_gui_zha_tos
     */
    skill_gui_zha_tos.fromObject = function fromObject(object) {
        if (object instanceof $root.skill_gui_zha_tos)
            return object;
        var message = new $root.skill_gui_zha_tos();
        if (object.targetPlayerId != null)
            message.targetPlayerId = object.targetPlayerId >>> 0;
        switch (object.cardType) {
        default:
            if (typeof object.cardType === "number") {
                message.cardType = object.cardType;
                break;
            }
            break;
        case "Cheng_Qing":
        case 0:
            message.cardType = 0;
            break;
        case "Shi_Tan":
        case 1:
            message.cardType = 1;
            break;
        case "Wei_Bi":
        case 2:
            message.cardType = 2;
            break;
        case "Li_You":
        case 3:
            message.cardType = 3;
            break;
        case "Ping_Heng":
        case 4:
            message.cardType = 4;
            break;
        case "Po_Yi":
        case 5:
            message.cardType = 5;
            break;
        case "Jie_Huo":
        case 6:
            message.cardType = 6;
            break;
        case "Diao_Bao":
        case 7:
            message.cardType = 7;
            break;
        case "Wu_Dao":
        case 8:
            message.cardType = 8;
            break;
        case "Feng_Yun_Bian_Huan":
        case 9:
            message.cardType = 9;
            break;
        }
        switch (object.wantType) {
        default:
            if (typeof object.wantType === "number") {
                message.wantType = object.wantType;
                break;
            }
            break;
        case "Cheng_Qing":
        case 0:
            message.wantType = 0;
            break;
        case "Shi_Tan":
        case 1:
            message.wantType = 1;
            break;
        case "Wei_Bi":
        case 2:
            message.wantType = 2;
            break;
        case "Li_You":
        case 3:
            message.wantType = 3;
            break;
        case "Ping_Heng":
        case 4:
            message.wantType = 4;
            break;
        case "Po_Yi":
        case 5:
            message.wantType = 5;
            break;
        case "Jie_Huo":
        case 6:
            message.wantType = 6;
            break;
        case "Diao_Bao":
        case 7:
            message.wantType = 7;
            break;
        case "Wu_Dao":
        case 8:
            message.wantType = 8;
            break;
        case "Feng_Yun_Bian_Huan":
        case 9:
            message.wantType = 9;
            break;
        }
        if (object.seq != null)
            message.seq = object.seq >>> 0;
        return message;
    };

    /**
     * Creates a plain object from a skill_gui_zha_tos message. Also converts values to other types if specified.
     * @function toObject
     * @memberof skill_gui_zha_tos
     * @static
     * @param {skill_gui_zha_tos} message skill_gui_zha_tos
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    skill_gui_zha_tos.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults) {
            object.targetPlayerId = 0;
            object.cardType = options.enums === String ? "Cheng_Qing" : 0;
            object.wantType = options.enums === String ? "Cheng_Qing" : 0;
            object.seq = 0;
        }
        if (message.targetPlayerId != null && message.hasOwnProperty("targetPlayerId"))
            object.targetPlayerId = message.targetPlayerId;
        if (message.cardType != null && message.hasOwnProperty("cardType"))
            object.cardType = options.enums === String ? $root.card_type[message.cardType] === undefined ? message.cardType : $root.card_type[message.cardType] : message.cardType;
        if (message.wantType != null && message.hasOwnProperty("wantType"))
            object.wantType = options.enums === String ? $root.card_type[message.wantType] === undefined ? message.wantType : $root.card_type[message.wantType] : message.wantType;
        if (message.seq != null && message.hasOwnProperty("seq"))
            object.seq = message.seq;
        return object;
    };

    /**
     * Converts this skill_gui_zha_tos to JSON.
     * @function toJSON
     * @memberof skill_gui_zha_tos
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    skill_gui_zha_tos.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for skill_gui_zha_tos
     * @function getTypeUrl
     * @memberof skill_gui_zha_tos
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    skill_gui_zha_tos.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/skill_gui_zha_tos";
    };

    return skill_gui_zha_tos;
})();

$root.skill_gui_zha_toc = (function() {

    /**
     * Properties of a skill_gui_zha_toc.
     * @exports Iskill_gui_zha_toc
     * @interface Iskill_gui_zha_toc
     * @property {number|null} [playerId] skill_gui_zha_toc playerId
     * @property {number|null} [targetPlayerId] skill_gui_zha_toc targetPlayerId
     * @property {card_type|null} [cardType] skill_gui_zha_toc cardType
     */

    /**
     * Constructs a new skill_gui_zha_toc.
     * @exports skill_gui_zha_toc
     * @classdesc Represents a skill_gui_zha_toc.
     * @implements Iskill_gui_zha_toc
     * @constructor
     * @param {Iskill_gui_zha_toc=} [properties] Properties to set
     */
    function skill_gui_zha_toc(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * skill_gui_zha_toc playerId.
     * @member {number} playerId
     * @memberof skill_gui_zha_toc
     * @instance
     */
    skill_gui_zha_toc.prototype.playerId = 0;

    /**
     * skill_gui_zha_toc targetPlayerId.
     * @member {number} targetPlayerId
     * @memberof skill_gui_zha_toc
     * @instance
     */
    skill_gui_zha_toc.prototype.targetPlayerId = 0;

    /**
     * skill_gui_zha_toc cardType.
     * @member {card_type} cardType
     * @memberof skill_gui_zha_toc
     * @instance
     */
    skill_gui_zha_toc.prototype.cardType = 0;

    /**
     * Creates a new skill_gui_zha_toc instance using the specified properties.
     * @function create
     * @memberof skill_gui_zha_toc
     * @static
     * @param {Iskill_gui_zha_toc=} [properties] Properties to set
     * @returns {skill_gui_zha_toc} skill_gui_zha_toc instance
     */
    skill_gui_zha_toc.create = function create(properties) {
        return new skill_gui_zha_toc(properties);
    };

    /**
     * Encodes the specified skill_gui_zha_toc message. Does not implicitly {@link skill_gui_zha_toc.verify|verify} messages.
     * @function encode
     * @memberof skill_gui_zha_toc
     * @static
     * @param {Iskill_gui_zha_toc} message skill_gui_zha_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_gui_zha_toc.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.playerId != null && Object.hasOwnProperty.call(message, "playerId"))
            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.playerId);
        if (message.targetPlayerId != null && Object.hasOwnProperty.call(message, "targetPlayerId"))
            writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.targetPlayerId);
        if (message.cardType != null && Object.hasOwnProperty.call(message, "cardType"))
            writer.uint32(/* id 3, wireType 0 =*/24).int32(message.cardType);
        return writer;
    };

    /**
     * Encodes the specified skill_gui_zha_toc message, length delimited. Does not implicitly {@link skill_gui_zha_toc.verify|verify} messages.
     * @function encodeDelimited
     * @memberof skill_gui_zha_toc
     * @static
     * @param {Iskill_gui_zha_toc} message skill_gui_zha_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_gui_zha_toc.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a skill_gui_zha_toc message from the specified reader or buffer.
     * @function decode
     * @memberof skill_gui_zha_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {skill_gui_zha_toc} skill_gui_zha_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_gui_zha_toc.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.skill_gui_zha_toc();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.playerId = reader.uint32();
                    break;
                }
            case 2: {
                    message.targetPlayerId = reader.uint32();
                    break;
                }
            case 3: {
                    message.cardType = reader.int32();
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a skill_gui_zha_toc message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof skill_gui_zha_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {skill_gui_zha_toc} skill_gui_zha_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_gui_zha_toc.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a skill_gui_zha_toc message.
     * @function verify
     * @memberof skill_gui_zha_toc
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    skill_gui_zha_toc.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            if (!$util.isInteger(message.playerId))
                return "playerId: integer expected";
        if (message.targetPlayerId != null && message.hasOwnProperty("targetPlayerId"))
            if (!$util.isInteger(message.targetPlayerId))
                return "targetPlayerId: integer expected";
        if (message.cardType != null && message.hasOwnProperty("cardType"))
            switch (message.cardType) {
            default:
                return "cardType: enum value expected";
            case 0:
            case 1:
            case 2:
            case 3:
            case 4:
            case 5:
            case 6:
            case 7:
            case 8:
            case 9:
                break;
            }
        return null;
    };

    /**
     * Creates a skill_gui_zha_toc message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof skill_gui_zha_toc
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {skill_gui_zha_toc} skill_gui_zha_toc
     */
    skill_gui_zha_toc.fromObject = function fromObject(object) {
        if (object instanceof $root.skill_gui_zha_toc)
            return object;
        var message = new $root.skill_gui_zha_toc();
        if (object.playerId != null)
            message.playerId = object.playerId >>> 0;
        if (object.targetPlayerId != null)
            message.targetPlayerId = object.targetPlayerId >>> 0;
        switch (object.cardType) {
        default:
            if (typeof object.cardType === "number") {
                message.cardType = object.cardType;
                break;
            }
            break;
        case "Cheng_Qing":
        case 0:
            message.cardType = 0;
            break;
        case "Shi_Tan":
        case 1:
            message.cardType = 1;
            break;
        case "Wei_Bi":
        case 2:
            message.cardType = 2;
            break;
        case "Li_You":
        case 3:
            message.cardType = 3;
            break;
        case "Ping_Heng":
        case 4:
            message.cardType = 4;
            break;
        case "Po_Yi":
        case 5:
            message.cardType = 5;
            break;
        case "Jie_Huo":
        case 6:
            message.cardType = 6;
            break;
        case "Diao_Bao":
        case 7:
            message.cardType = 7;
            break;
        case "Wu_Dao":
        case 8:
            message.cardType = 8;
            break;
        case "Feng_Yun_Bian_Huan":
        case 9:
            message.cardType = 9;
            break;
        }
        return message;
    };

    /**
     * Creates a plain object from a skill_gui_zha_toc message. Also converts values to other types if specified.
     * @function toObject
     * @memberof skill_gui_zha_toc
     * @static
     * @param {skill_gui_zha_toc} message skill_gui_zha_toc
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    skill_gui_zha_toc.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults) {
            object.playerId = 0;
            object.targetPlayerId = 0;
            object.cardType = options.enums === String ? "Cheng_Qing" : 0;
        }
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            object.playerId = message.playerId;
        if (message.targetPlayerId != null && message.hasOwnProperty("targetPlayerId"))
            object.targetPlayerId = message.targetPlayerId;
        if (message.cardType != null && message.hasOwnProperty("cardType"))
            object.cardType = options.enums === String ? $root.card_type[message.cardType] === undefined ? message.cardType : $root.card_type[message.cardType] : message.cardType;
        return object;
    };

    /**
     * Converts this skill_gui_zha_toc to JSON.
     * @function toJSON
     * @memberof skill_gui_zha_toc
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    skill_gui_zha_toc.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for skill_gui_zha_toc
     * @function getTypeUrl
     * @memberof skill_gui_zha_toc
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    skill_gui_zha_toc.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/skill_gui_zha_toc";
    };

    return skill_gui_zha_toc;
})();

$root.skill_yi_ya_huan_ya_tos = (function() {

    /**
     * Properties of a skill_yi_ya_huan_ya_tos.
     * @exports Iskill_yi_ya_huan_ya_tos
     * @interface Iskill_yi_ya_huan_ya_tos
     * @property {number|null} [targetPlayerId] skill_yi_ya_huan_ya_tos targetPlayerId
     * @property {number|null} [cardId] skill_yi_ya_huan_ya_tos cardId
     * @property {number|null} [seq] skill_yi_ya_huan_ya_tos seq
     */

    /**
     * Constructs a new skill_yi_ya_huan_ya_tos.
     * @exports skill_yi_ya_huan_ya_tos
     * @classdesc Represents a skill_yi_ya_huan_ya_tos.
     * @implements Iskill_yi_ya_huan_ya_tos
     * @constructor
     * @param {Iskill_yi_ya_huan_ya_tos=} [properties] Properties to set
     */
    function skill_yi_ya_huan_ya_tos(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * skill_yi_ya_huan_ya_tos targetPlayerId.
     * @member {number} targetPlayerId
     * @memberof skill_yi_ya_huan_ya_tos
     * @instance
     */
    skill_yi_ya_huan_ya_tos.prototype.targetPlayerId = 0;

    /**
     * skill_yi_ya_huan_ya_tos cardId.
     * @member {number} cardId
     * @memberof skill_yi_ya_huan_ya_tos
     * @instance
     */
    skill_yi_ya_huan_ya_tos.prototype.cardId = 0;

    /**
     * skill_yi_ya_huan_ya_tos seq.
     * @member {number} seq
     * @memberof skill_yi_ya_huan_ya_tos
     * @instance
     */
    skill_yi_ya_huan_ya_tos.prototype.seq = 0;

    /**
     * Creates a new skill_yi_ya_huan_ya_tos instance using the specified properties.
     * @function create
     * @memberof skill_yi_ya_huan_ya_tos
     * @static
     * @param {Iskill_yi_ya_huan_ya_tos=} [properties] Properties to set
     * @returns {skill_yi_ya_huan_ya_tos} skill_yi_ya_huan_ya_tos instance
     */
    skill_yi_ya_huan_ya_tos.create = function create(properties) {
        return new skill_yi_ya_huan_ya_tos(properties);
    };

    /**
     * Encodes the specified skill_yi_ya_huan_ya_tos message. Does not implicitly {@link skill_yi_ya_huan_ya_tos.verify|verify} messages.
     * @function encode
     * @memberof skill_yi_ya_huan_ya_tos
     * @static
     * @param {Iskill_yi_ya_huan_ya_tos} message skill_yi_ya_huan_ya_tos message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_yi_ya_huan_ya_tos.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.targetPlayerId != null && Object.hasOwnProperty.call(message, "targetPlayerId"))
            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.targetPlayerId);
        if (message.cardId != null && Object.hasOwnProperty.call(message, "cardId"))
            writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.cardId);
        if (message.seq != null && Object.hasOwnProperty.call(message, "seq"))
            writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.seq);
        return writer;
    };

    /**
     * Encodes the specified skill_yi_ya_huan_ya_tos message, length delimited. Does not implicitly {@link skill_yi_ya_huan_ya_tos.verify|verify} messages.
     * @function encodeDelimited
     * @memberof skill_yi_ya_huan_ya_tos
     * @static
     * @param {Iskill_yi_ya_huan_ya_tos} message skill_yi_ya_huan_ya_tos message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_yi_ya_huan_ya_tos.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a skill_yi_ya_huan_ya_tos message from the specified reader or buffer.
     * @function decode
     * @memberof skill_yi_ya_huan_ya_tos
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {skill_yi_ya_huan_ya_tos} skill_yi_ya_huan_ya_tos
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_yi_ya_huan_ya_tos.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.skill_yi_ya_huan_ya_tos();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.targetPlayerId = reader.uint32();
                    break;
                }
            case 2: {
                    message.cardId = reader.uint32();
                    break;
                }
            case 3: {
                    message.seq = reader.uint32();
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a skill_yi_ya_huan_ya_tos message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof skill_yi_ya_huan_ya_tos
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {skill_yi_ya_huan_ya_tos} skill_yi_ya_huan_ya_tos
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_yi_ya_huan_ya_tos.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a skill_yi_ya_huan_ya_tos message.
     * @function verify
     * @memberof skill_yi_ya_huan_ya_tos
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    skill_yi_ya_huan_ya_tos.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.targetPlayerId != null && message.hasOwnProperty("targetPlayerId"))
            if (!$util.isInteger(message.targetPlayerId))
                return "targetPlayerId: integer expected";
        if (message.cardId != null && message.hasOwnProperty("cardId"))
            if (!$util.isInteger(message.cardId))
                return "cardId: integer expected";
        if (message.seq != null && message.hasOwnProperty("seq"))
            if (!$util.isInteger(message.seq))
                return "seq: integer expected";
        return null;
    };

    /**
     * Creates a skill_yi_ya_huan_ya_tos message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof skill_yi_ya_huan_ya_tos
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {skill_yi_ya_huan_ya_tos} skill_yi_ya_huan_ya_tos
     */
    skill_yi_ya_huan_ya_tos.fromObject = function fromObject(object) {
        if (object instanceof $root.skill_yi_ya_huan_ya_tos)
            return object;
        var message = new $root.skill_yi_ya_huan_ya_tos();
        if (object.targetPlayerId != null)
            message.targetPlayerId = object.targetPlayerId >>> 0;
        if (object.cardId != null)
            message.cardId = object.cardId >>> 0;
        if (object.seq != null)
            message.seq = object.seq >>> 0;
        return message;
    };

    /**
     * Creates a plain object from a skill_yi_ya_huan_ya_tos message. Also converts values to other types if specified.
     * @function toObject
     * @memberof skill_yi_ya_huan_ya_tos
     * @static
     * @param {skill_yi_ya_huan_ya_tos} message skill_yi_ya_huan_ya_tos
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    skill_yi_ya_huan_ya_tos.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults) {
            object.targetPlayerId = 0;
            object.cardId = 0;
            object.seq = 0;
        }
        if (message.targetPlayerId != null && message.hasOwnProperty("targetPlayerId"))
            object.targetPlayerId = message.targetPlayerId;
        if (message.cardId != null && message.hasOwnProperty("cardId"))
            object.cardId = message.cardId;
        if (message.seq != null && message.hasOwnProperty("seq"))
            object.seq = message.seq;
        return object;
    };

    /**
     * Converts this skill_yi_ya_huan_ya_tos to JSON.
     * @function toJSON
     * @memberof skill_yi_ya_huan_ya_tos
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    skill_yi_ya_huan_ya_tos.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for skill_yi_ya_huan_ya_tos
     * @function getTypeUrl
     * @memberof skill_yi_ya_huan_ya_tos
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    skill_yi_ya_huan_ya_tos.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/skill_yi_ya_huan_ya_tos";
    };

    return skill_yi_ya_huan_ya_tos;
})();

$root.skill_yi_ya_huan_ya_toc = (function() {

    /**
     * Properties of a skill_yi_ya_huan_ya_toc.
     * @exports Iskill_yi_ya_huan_ya_toc
     * @interface Iskill_yi_ya_huan_ya_toc
     * @property {number|null} [playerId] skill_yi_ya_huan_ya_toc playerId
     * @property {number|null} [targetPlayerId] skill_yi_ya_huan_ya_toc targetPlayerId
     * @property {Icard|null} [card] skill_yi_ya_huan_ya_toc card
     */

    /**
     * Constructs a new skill_yi_ya_huan_ya_toc.
     * @exports skill_yi_ya_huan_ya_toc
     * @classdesc Represents a skill_yi_ya_huan_ya_toc.
     * @implements Iskill_yi_ya_huan_ya_toc
     * @constructor
     * @param {Iskill_yi_ya_huan_ya_toc=} [properties] Properties to set
     */
    function skill_yi_ya_huan_ya_toc(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * skill_yi_ya_huan_ya_toc playerId.
     * @member {number} playerId
     * @memberof skill_yi_ya_huan_ya_toc
     * @instance
     */
    skill_yi_ya_huan_ya_toc.prototype.playerId = 0;

    /**
     * skill_yi_ya_huan_ya_toc targetPlayerId.
     * @member {number} targetPlayerId
     * @memberof skill_yi_ya_huan_ya_toc
     * @instance
     */
    skill_yi_ya_huan_ya_toc.prototype.targetPlayerId = 0;

    /**
     * skill_yi_ya_huan_ya_toc card.
     * @member {Icard|null|undefined} card
     * @memberof skill_yi_ya_huan_ya_toc
     * @instance
     */
    skill_yi_ya_huan_ya_toc.prototype.card = null;

    /**
     * Creates a new skill_yi_ya_huan_ya_toc instance using the specified properties.
     * @function create
     * @memberof skill_yi_ya_huan_ya_toc
     * @static
     * @param {Iskill_yi_ya_huan_ya_toc=} [properties] Properties to set
     * @returns {skill_yi_ya_huan_ya_toc} skill_yi_ya_huan_ya_toc instance
     */
    skill_yi_ya_huan_ya_toc.create = function create(properties) {
        return new skill_yi_ya_huan_ya_toc(properties);
    };

    /**
     * Encodes the specified skill_yi_ya_huan_ya_toc message. Does not implicitly {@link skill_yi_ya_huan_ya_toc.verify|verify} messages.
     * @function encode
     * @memberof skill_yi_ya_huan_ya_toc
     * @static
     * @param {Iskill_yi_ya_huan_ya_toc} message skill_yi_ya_huan_ya_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_yi_ya_huan_ya_toc.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.playerId != null && Object.hasOwnProperty.call(message, "playerId"))
            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.playerId);
        if (message.targetPlayerId != null && Object.hasOwnProperty.call(message, "targetPlayerId"))
            writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.targetPlayerId);
        if (message.card != null && Object.hasOwnProperty.call(message, "card"))
            $root.card.encode(message.card, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
        return writer;
    };

    /**
     * Encodes the specified skill_yi_ya_huan_ya_toc message, length delimited. Does not implicitly {@link skill_yi_ya_huan_ya_toc.verify|verify} messages.
     * @function encodeDelimited
     * @memberof skill_yi_ya_huan_ya_toc
     * @static
     * @param {Iskill_yi_ya_huan_ya_toc} message skill_yi_ya_huan_ya_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_yi_ya_huan_ya_toc.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a skill_yi_ya_huan_ya_toc message from the specified reader or buffer.
     * @function decode
     * @memberof skill_yi_ya_huan_ya_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {skill_yi_ya_huan_ya_toc} skill_yi_ya_huan_ya_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_yi_ya_huan_ya_toc.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.skill_yi_ya_huan_ya_toc();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.playerId = reader.uint32();
                    break;
                }
            case 2: {
                    message.targetPlayerId = reader.uint32();
                    break;
                }
            case 3: {
                    message.card = $root.card.decode(reader, reader.uint32());
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a skill_yi_ya_huan_ya_toc message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof skill_yi_ya_huan_ya_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {skill_yi_ya_huan_ya_toc} skill_yi_ya_huan_ya_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_yi_ya_huan_ya_toc.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a skill_yi_ya_huan_ya_toc message.
     * @function verify
     * @memberof skill_yi_ya_huan_ya_toc
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    skill_yi_ya_huan_ya_toc.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            if (!$util.isInteger(message.playerId))
                return "playerId: integer expected";
        if (message.targetPlayerId != null && message.hasOwnProperty("targetPlayerId"))
            if (!$util.isInteger(message.targetPlayerId))
                return "targetPlayerId: integer expected";
        if (message.card != null && message.hasOwnProperty("card")) {
            var error = $root.card.verify(message.card);
            if (error)
                return "card." + error;
        }
        return null;
    };

    /**
     * Creates a skill_yi_ya_huan_ya_toc message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof skill_yi_ya_huan_ya_toc
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {skill_yi_ya_huan_ya_toc} skill_yi_ya_huan_ya_toc
     */
    skill_yi_ya_huan_ya_toc.fromObject = function fromObject(object) {
        if (object instanceof $root.skill_yi_ya_huan_ya_toc)
            return object;
        var message = new $root.skill_yi_ya_huan_ya_toc();
        if (object.playerId != null)
            message.playerId = object.playerId >>> 0;
        if (object.targetPlayerId != null)
            message.targetPlayerId = object.targetPlayerId >>> 0;
        if (object.card != null) {
            if (typeof object.card !== "object")
                throw TypeError(".skill_yi_ya_huan_ya_toc.card: object expected");
            message.card = $root.card.fromObject(object.card);
        }
        return message;
    };

    /**
     * Creates a plain object from a skill_yi_ya_huan_ya_toc message. Also converts values to other types if specified.
     * @function toObject
     * @memberof skill_yi_ya_huan_ya_toc
     * @static
     * @param {skill_yi_ya_huan_ya_toc} message skill_yi_ya_huan_ya_toc
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    skill_yi_ya_huan_ya_toc.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults) {
            object.playerId = 0;
            object.targetPlayerId = 0;
            object.card = null;
        }
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            object.playerId = message.playerId;
        if (message.targetPlayerId != null && message.hasOwnProperty("targetPlayerId"))
            object.targetPlayerId = message.targetPlayerId;
        if (message.card != null && message.hasOwnProperty("card"))
            object.card = $root.card.toObject(message.card, options);
        return object;
    };

    /**
     * Converts this skill_yi_ya_huan_ya_toc to JSON.
     * @function toJSON
     * @memberof skill_yi_ya_huan_ya_toc
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    skill_yi_ya_huan_ya_toc.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for skill_yi_ya_huan_ya_toc
     * @function getTypeUrl
     * @memberof skill_yi_ya_huan_ya_toc
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    skill_yi_ya_huan_ya_toc.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/skill_yi_ya_huan_ya_toc";
    };

    return skill_yi_ya_huan_ya_toc;
})();

$root.skill_yi_hua_jie_mu_tos = (function() {

    /**
     * Properties of a skill_yi_hua_jie_mu_tos.
     * @exports Iskill_yi_hua_jie_mu_tos
     * @interface Iskill_yi_hua_jie_mu_tos
     * @property {number|null} [fromPlayerId] skill_yi_hua_jie_mu_tos fromPlayerId
     * @property {number|null} [cardId] skill_yi_hua_jie_mu_tos cardId
     * @property {number|null} [toPlayerId] skill_yi_hua_jie_mu_tos toPlayerId
     * @property {number|null} [seq] skill_yi_hua_jie_mu_tos seq
     */

    /**
     * Constructs a new skill_yi_hua_jie_mu_tos.
     * @exports skill_yi_hua_jie_mu_tos
     * @classdesc Represents a skill_yi_hua_jie_mu_tos.
     * @implements Iskill_yi_hua_jie_mu_tos
     * @constructor
     * @param {Iskill_yi_hua_jie_mu_tos=} [properties] Properties to set
     */
    function skill_yi_hua_jie_mu_tos(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * skill_yi_hua_jie_mu_tos fromPlayerId.
     * @member {number} fromPlayerId
     * @memberof skill_yi_hua_jie_mu_tos
     * @instance
     */
    skill_yi_hua_jie_mu_tos.prototype.fromPlayerId = 0;

    /**
     * skill_yi_hua_jie_mu_tos cardId.
     * @member {number} cardId
     * @memberof skill_yi_hua_jie_mu_tos
     * @instance
     */
    skill_yi_hua_jie_mu_tos.prototype.cardId = 0;

    /**
     * skill_yi_hua_jie_mu_tos toPlayerId.
     * @member {number} toPlayerId
     * @memberof skill_yi_hua_jie_mu_tos
     * @instance
     */
    skill_yi_hua_jie_mu_tos.prototype.toPlayerId = 0;

    /**
     * skill_yi_hua_jie_mu_tos seq.
     * @member {number} seq
     * @memberof skill_yi_hua_jie_mu_tos
     * @instance
     */
    skill_yi_hua_jie_mu_tos.prototype.seq = 0;

    /**
     * Creates a new skill_yi_hua_jie_mu_tos instance using the specified properties.
     * @function create
     * @memberof skill_yi_hua_jie_mu_tos
     * @static
     * @param {Iskill_yi_hua_jie_mu_tos=} [properties] Properties to set
     * @returns {skill_yi_hua_jie_mu_tos} skill_yi_hua_jie_mu_tos instance
     */
    skill_yi_hua_jie_mu_tos.create = function create(properties) {
        return new skill_yi_hua_jie_mu_tos(properties);
    };

    /**
     * Encodes the specified skill_yi_hua_jie_mu_tos message. Does not implicitly {@link skill_yi_hua_jie_mu_tos.verify|verify} messages.
     * @function encode
     * @memberof skill_yi_hua_jie_mu_tos
     * @static
     * @param {Iskill_yi_hua_jie_mu_tos} message skill_yi_hua_jie_mu_tos message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_yi_hua_jie_mu_tos.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.fromPlayerId != null && Object.hasOwnProperty.call(message, "fromPlayerId"))
            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.fromPlayerId);
        if (message.cardId != null && Object.hasOwnProperty.call(message, "cardId"))
            writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.cardId);
        if (message.toPlayerId != null && Object.hasOwnProperty.call(message, "toPlayerId"))
            writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.toPlayerId);
        if (message.seq != null && Object.hasOwnProperty.call(message, "seq"))
            writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.seq);
        return writer;
    };

    /**
     * Encodes the specified skill_yi_hua_jie_mu_tos message, length delimited. Does not implicitly {@link skill_yi_hua_jie_mu_tos.verify|verify} messages.
     * @function encodeDelimited
     * @memberof skill_yi_hua_jie_mu_tos
     * @static
     * @param {Iskill_yi_hua_jie_mu_tos} message skill_yi_hua_jie_mu_tos message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_yi_hua_jie_mu_tos.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a skill_yi_hua_jie_mu_tos message from the specified reader or buffer.
     * @function decode
     * @memberof skill_yi_hua_jie_mu_tos
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {skill_yi_hua_jie_mu_tos} skill_yi_hua_jie_mu_tos
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_yi_hua_jie_mu_tos.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.skill_yi_hua_jie_mu_tos();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.fromPlayerId = reader.uint32();
                    break;
                }
            case 2: {
                    message.cardId = reader.uint32();
                    break;
                }
            case 3: {
                    message.toPlayerId = reader.uint32();
                    break;
                }
            case 4: {
                    message.seq = reader.uint32();
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a skill_yi_hua_jie_mu_tos message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof skill_yi_hua_jie_mu_tos
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {skill_yi_hua_jie_mu_tos} skill_yi_hua_jie_mu_tos
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_yi_hua_jie_mu_tos.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a skill_yi_hua_jie_mu_tos message.
     * @function verify
     * @memberof skill_yi_hua_jie_mu_tos
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    skill_yi_hua_jie_mu_tos.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.fromPlayerId != null && message.hasOwnProperty("fromPlayerId"))
            if (!$util.isInteger(message.fromPlayerId))
                return "fromPlayerId: integer expected";
        if (message.cardId != null && message.hasOwnProperty("cardId"))
            if (!$util.isInteger(message.cardId))
                return "cardId: integer expected";
        if (message.toPlayerId != null && message.hasOwnProperty("toPlayerId"))
            if (!$util.isInteger(message.toPlayerId))
                return "toPlayerId: integer expected";
        if (message.seq != null && message.hasOwnProperty("seq"))
            if (!$util.isInteger(message.seq))
                return "seq: integer expected";
        return null;
    };

    /**
     * Creates a skill_yi_hua_jie_mu_tos message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof skill_yi_hua_jie_mu_tos
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {skill_yi_hua_jie_mu_tos} skill_yi_hua_jie_mu_tos
     */
    skill_yi_hua_jie_mu_tos.fromObject = function fromObject(object) {
        if (object instanceof $root.skill_yi_hua_jie_mu_tos)
            return object;
        var message = new $root.skill_yi_hua_jie_mu_tos();
        if (object.fromPlayerId != null)
            message.fromPlayerId = object.fromPlayerId >>> 0;
        if (object.cardId != null)
            message.cardId = object.cardId >>> 0;
        if (object.toPlayerId != null)
            message.toPlayerId = object.toPlayerId >>> 0;
        if (object.seq != null)
            message.seq = object.seq >>> 0;
        return message;
    };

    /**
     * Creates a plain object from a skill_yi_hua_jie_mu_tos message. Also converts values to other types if specified.
     * @function toObject
     * @memberof skill_yi_hua_jie_mu_tos
     * @static
     * @param {skill_yi_hua_jie_mu_tos} message skill_yi_hua_jie_mu_tos
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    skill_yi_hua_jie_mu_tos.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults) {
            object.fromPlayerId = 0;
            object.cardId = 0;
            object.toPlayerId = 0;
            object.seq = 0;
        }
        if (message.fromPlayerId != null && message.hasOwnProperty("fromPlayerId"))
            object.fromPlayerId = message.fromPlayerId;
        if (message.cardId != null && message.hasOwnProperty("cardId"))
            object.cardId = message.cardId;
        if (message.toPlayerId != null && message.hasOwnProperty("toPlayerId"))
            object.toPlayerId = message.toPlayerId;
        if (message.seq != null && message.hasOwnProperty("seq"))
            object.seq = message.seq;
        return object;
    };

    /**
     * Converts this skill_yi_hua_jie_mu_tos to JSON.
     * @function toJSON
     * @memberof skill_yi_hua_jie_mu_tos
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    skill_yi_hua_jie_mu_tos.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for skill_yi_hua_jie_mu_tos
     * @function getTypeUrl
     * @memberof skill_yi_hua_jie_mu_tos
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    skill_yi_hua_jie_mu_tos.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/skill_yi_hua_jie_mu_tos";
    };

    return skill_yi_hua_jie_mu_tos;
})();

$root.skill_yi_hua_jie_mu_toc = (function() {

    /**
     * Properties of a skill_yi_hua_jie_mu_toc.
     * @exports Iskill_yi_hua_jie_mu_toc
     * @interface Iskill_yi_hua_jie_mu_toc
     * @property {number|null} [playerId] skill_yi_hua_jie_mu_toc playerId
     * @property {number|null} [fromPlayerId] skill_yi_hua_jie_mu_toc fromPlayerId
     * @property {number|null} [cardId] skill_yi_hua_jie_mu_toc cardId
     * @property {number|null} [toPlayerId] skill_yi_hua_jie_mu_toc toPlayerId
     * @property {boolean|null} [joinIntoHand] skill_yi_hua_jie_mu_toc joinIntoHand
     */

    /**
     * Constructs a new skill_yi_hua_jie_mu_toc.
     * @exports skill_yi_hua_jie_mu_toc
     * @classdesc Represents a skill_yi_hua_jie_mu_toc.
     * @implements Iskill_yi_hua_jie_mu_toc
     * @constructor
     * @param {Iskill_yi_hua_jie_mu_toc=} [properties] Properties to set
     */
    function skill_yi_hua_jie_mu_toc(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * skill_yi_hua_jie_mu_toc playerId.
     * @member {number} playerId
     * @memberof skill_yi_hua_jie_mu_toc
     * @instance
     */
    skill_yi_hua_jie_mu_toc.prototype.playerId = 0;

    /**
     * skill_yi_hua_jie_mu_toc fromPlayerId.
     * @member {number} fromPlayerId
     * @memberof skill_yi_hua_jie_mu_toc
     * @instance
     */
    skill_yi_hua_jie_mu_toc.prototype.fromPlayerId = 0;

    /**
     * skill_yi_hua_jie_mu_toc cardId.
     * @member {number} cardId
     * @memberof skill_yi_hua_jie_mu_toc
     * @instance
     */
    skill_yi_hua_jie_mu_toc.prototype.cardId = 0;

    /**
     * skill_yi_hua_jie_mu_toc toPlayerId.
     * @member {number} toPlayerId
     * @memberof skill_yi_hua_jie_mu_toc
     * @instance
     */
    skill_yi_hua_jie_mu_toc.prototype.toPlayerId = 0;

    /**
     * skill_yi_hua_jie_mu_toc joinIntoHand.
     * @member {boolean} joinIntoHand
     * @memberof skill_yi_hua_jie_mu_toc
     * @instance
     */
    skill_yi_hua_jie_mu_toc.prototype.joinIntoHand = false;

    /**
     * Creates a new skill_yi_hua_jie_mu_toc instance using the specified properties.
     * @function create
     * @memberof skill_yi_hua_jie_mu_toc
     * @static
     * @param {Iskill_yi_hua_jie_mu_toc=} [properties] Properties to set
     * @returns {skill_yi_hua_jie_mu_toc} skill_yi_hua_jie_mu_toc instance
     */
    skill_yi_hua_jie_mu_toc.create = function create(properties) {
        return new skill_yi_hua_jie_mu_toc(properties);
    };

    /**
     * Encodes the specified skill_yi_hua_jie_mu_toc message. Does not implicitly {@link skill_yi_hua_jie_mu_toc.verify|verify} messages.
     * @function encode
     * @memberof skill_yi_hua_jie_mu_toc
     * @static
     * @param {Iskill_yi_hua_jie_mu_toc} message skill_yi_hua_jie_mu_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_yi_hua_jie_mu_toc.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.playerId != null && Object.hasOwnProperty.call(message, "playerId"))
            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.playerId);
        if (message.fromPlayerId != null && Object.hasOwnProperty.call(message, "fromPlayerId"))
            writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.fromPlayerId);
        if (message.cardId != null && Object.hasOwnProperty.call(message, "cardId"))
            writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.cardId);
        if (message.toPlayerId != null && Object.hasOwnProperty.call(message, "toPlayerId"))
            writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.toPlayerId);
        if (message.joinIntoHand != null && Object.hasOwnProperty.call(message, "joinIntoHand"))
            writer.uint32(/* id 5, wireType 0 =*/40).bool(message.joinIntoHand);
        return writer;
    };

    /**
     * Encodes the specified skill_yi_hua_jie_mu_toc message, length delimited. Does not implicitly {@link skill_yi_hua_jie_mu_toc.verify|verify} messages.
     * @function encodeDelimited
     * @memberof skill_yi_hua_jie_mu_toc
     * @static
     * @param {Iskill_yi_hua_jie_mu_toc} message skill_yi_hua_jie_mu_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_yi_hua_jie_mu_toc.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a skill_yi_hua_jie_mu_toc message from the specified reader or buffer.
     * @function decode
     * @memberof skill_yi_hua_jie_mu_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {skill_yi_hua_jie_mu_toc} skill_yi_hua_jie_mu_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_yi_hua_jie_mu_toc.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.skill_yi_hua_jie_mu_toc();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.playerId = reader.uint32();
                    break;
                }
            case 2: {
                    message.fromPlayerId = reader.uint32();
                    break;
                }
            case 3: {
                    message.cardId = reader.uint32();
                    break;
                }
            case 4: {
                    message.toPlayerId = reader.uint32();
                    break;
                }
            case 5: {
                    message.joinIntoHand = reader.bool();
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a skill_yi_hua_jie_mu_toc message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof skill_yi_hua_jie_mu_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {skill_yi_hua_jie_mu_toc} skill_yi_hua_jie_mu_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_yi_hua_jie_mu_toc.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a skill_yi_hua_jie_mu_toc message.
     * @function verify
     * @memberof skill_yi_hua_jie_mu_toc
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    skill_yi_hua_jie_mu_toc.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            if (!$util.isInteger(message.playerId))
                return "playerId: integer expected";
        if (message.fromPlayerId != null && message.hasOwnProperty("fromPlayerId"))
            if (!$util.isInteger(message.fromPlayerId))
                return "fromPlayerId: integer expected";
        if (message.cardId != null && message.hasOwnProperty("cardId"))
            if (!$util.isInteger(message.cardId))
                return "cardId: integer expected";
        if (message.toPlayerId != null && message.hasOwnProperty("toPlayerId"))
            if (!$util.isInteger(message.toPlayerId))
                return "toPlayerId: integer expected";
        if (message.joinIntoHand != null && message.hasOwnProperty("joinIntoHand"))
            if (typeof message.joinIntoHand !== "boolean")
                return "joinIntoHand: boolean expected";
        return null;
    };

    /**
     * Creates a skill_yi_hua_jie_mu_toc message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof skill_yi_hua_jie_mu_toc
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {skill_yi_hua_jie_mu_toc} skill_yi_hua_jie_mu_toc
     */
    skill_yi_hua_jie_mu_toc.fromObject = function fromObject(object) {
        if (object instanceof $root.skill_yi_hua_jie_mu_toc)
            return object;
        var message = new $root.skill_yi_hua_jie_mu_toc();
        if (object.playerId != null)
            message.playerId = object.playerId >>> 0;
        if (object.fromPlayerId != null)
            message.fromPlayerId = object.fromPlayerId >>> 0;
        if (object.cardId != null)
            message.cardId = object.cardId >>> 0;
        if (object.toPlayerId != null)
            message.toPlayerId = object.toPlayerId >>> 0;
        if (object.joinIntoHand != null)
            message.joinIntoHand = Boolean(object.joinIntoHand);
        return message;
    };

    /**
     * Creates a plain object from a skill_yi_hua_jie_mu_toc message. Also converts values to other types if specified.
     * @function toObject
     * @memberof skill_yi_hua_jie_mu_toc
     * @static
     * @param {skill_yi_hua_jie_mu_toc} message skill_yi_hua_jie_mu_toc
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    skill_yi_hua_jie_mu_toc.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults) {
            object.playerId = 0;
            object.fromPlayerId = 0;
            object.cardId = 0;
            object.toPlayerId = 0;
            object.joinIntoHand = false;
        }
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            object.playerId = message.playerId;
        if (message.fromPlayerId != null && message.hasOwnProperty("fromPlayerId"))
            object.fromPlayerId = message.fromPlayerId;
        if (message.cardId != null && message.hasOwnProperty("cardId"))
            object.cardId = message.cardId;
        if (message.toPlayerId != null && message.hasOwnProperty("toPlayerId"))
            object.toPlayerId = message.toPlayerId;
        if (message.joinIntoHand != null && message.hasOwnProperty("joinIntoHand"))
            object.joinIntoHand = message.joinIntoHand;
        return object;
    };

    /**
     * Converts this skill_yi_hua_jie_mu_toc to JSON.
     * @function toJSON
     * @memberof skill_yi_hua_jie_mu_toc
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    skill_yi_hua_jie_mu_toc.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for skill_yi_hua_jie_mu_toc
     * @function getTypeUrl
     * @memberof skill_yi_hua_jie_mu_toc
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    skill_yi_hua_jie_mu_toc.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/skill_yi_hua_jie_mu_toc";
    };

    return skill_yi_hua_jie_mu_toc;
})();

$root.skill_tou_tian_tos = (function() {

    /**
     * Properties of a skill_tou_tian_tos.
     * @exports Iskill_tou_tian_tos
     * @interface Iskill_tou_tian_tos
     * @property {number|null} [seq] skill_tou_tian_tos seq
     */

    /**
     * Constructs a new skill_tou_tian_tos.
     * @exports skill_tou_tian_tos
     * @classdesc Represents a skill_tou_tian_tos.
     * @implements Iskill_tou_tian_tos
     * @constructor
     * @param {Iskill_tou_tian_tos=} [properties] Properties to set
     */
    function skill_tou_tian_tos(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * skill_tou_tian_tos seq.
     * @member {number} seq
     * @memberof skill_tou_tian_tos
     * @instance
     */
    skill_tou_tian_tos.prototype.seq = 0;

    /**
     * Creates a new skill_tou_tian_tos instance using the specified properties.
     * @function create
     * @memberof skill_tou_tian_tos
     * @static
     * @param {Iskill_tou_tian_tos=} [properties] Properties to set
     * @returns {skill_tou_tian_tos} skill_tou_tian_tos instance
     */
    skill_tou_tian_tos.create = function create(properties) {
        return new skill_tou_tian_tos(properties);
    };

    /**
     * Encodes the specified skill_tou_tian_tos message. Does not implicitly {@link skill_tou_tian_tos.verify|verify} messages.
     * @function encode
     * @memberof skill_tou_tian_tos
     * @static
     * @param {Iskill_tou_tian_tos} message skill_tou_tian_tos message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_tou_tian_tos.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.seq != null && Object.hasOwnProperty.call(message, "seq"))
            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.seq);
        return writer;
    };

    /**
     * Encodes the specified skill_tou_tian_tos message, length delimited. Does not implicitly {@link skill_tou_tian_tos.verify|verify} messages.
     * @function encodeDelimited
     * @memberof skill_tou_tian_tos
     * @static
     * @param {Iskill_tou_tian_tos} message skill_tou_tian_tos message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_tou_tian_tos.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a skill_tou_tian_tos message from the specified reader or buffer.
     * @function decode
     * @memberof skill_tou_tian_tos
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {skill_tou_tian_tos} skill_tou_tian_tos
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_tou_tian_tos.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.skill_tou_tian_tos();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.seq = reader.uint32();
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a skill_tou_tian_tos message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof skill_tou_tian_tos
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {skill_tou_tian_tos} skill_tou_tian_tos
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_tou_tian_tos.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a skill_tou_tian_tos message.
     * @function verify
     * @memberof skill_tou_tian_tos
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    skill_tou_tian_tos.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.seq != null && message.hasOwnProperty("seq"))
            if (!$util.isInteger(message.seq))
                return "seq: integer expected";
        return null;
    };

    /**
     * Creates a skill_tou_tian_tos message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof skill_tou_tian_tos
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {skill_tou_tian_tos} skill_tou_tian_tos
     */
    skill_tou_tian_tos.fromObject = function fromObject(object) {
        if (object instanceof $root.skill_tou_tian_tos)
            return object;
        var message = new $root.skill_tou_tian_tos();
        if (object.seq != null)
            message.seq = object.seq >>> 0;
        return message;
    };

    /**
     * Creates a plain object from a skill_tou_tian_tos message. Also converts values to other types if specified.
     * @function toObject
     * @memberof skill_tou_tian_tos
     * @static
     * @param {skill_tou_tian_tos} message skill_tou_tian_tos
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    skill_tou_tian_tos.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults)
            object.seq = 0;
        if (message.seq != null && message.hasOwnProperty("seq"))
            object.seq = message.seq;
        return object;
    };

    /**
     * Converts this skill_tou_tian_tos to JSON.
     * @function toJSON
     * @memberof skill_tou_tian_tos
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    skill_tou_tian_tos.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for skill_tou_tian_tos
     * @function getTypeUrl
     * @memberof skill_tou_tian_tos
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    skill_tou_tian_tos.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/skill_tou_tian_tos";
    };

    return skill_tou_tian_tos;
})();

$root.skill_tou_tian_toc = (function() {

    /**
     * Properties of a skill_tou_tian_toc.
     * @exports Iskill_tou_tian_toc
     * @interface Iskill_tou_tian_toc
     * @property {number|null} [playerId] skill_tou_tian_toc playerId
     */

    /**
     * Constructs a new skill_tou_tian_toc.
     * @exports skill_tou_tian_toc
     * @classdesc Represents a skill_tou_tian_toc.
     * @implements Iskill_tou_tian_toc
     * @constructor
     * @param {Iskill_tou_tian_toc=} [properties] Properties to set
     */
    function skill_tou_tian_toc(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * skill_tou_tian_toc playerId.
     * @member {number} playerId
     * @memberof skill_tou_tian_toc
     * @instance
     */
    skill_tou_tian_toc.prototype.playerId = 0;

    /**
     * Creates a new skill_tou_tian_toc instance using the specified properties.
     * @function create
     * @memberof skill_tou_tian_toc
     * @static
     * @param {Iskill_tou_tian_toc=} [properties] Properties to set
     * @returns {skill_tou_tian_toc} skill_tou_tian_toc instance
     */
    skill_tou_tian_toc.create = function create(properties) {
        return new skill_tou_tian_toc(properties);
    };

    /**
     * Encodes the specified skill_tou_tian_toc message. Does not implicitly {@link skill_tou_tian_toc.verify|verify} messages.
     * @function encode
     * @memberof skill_tou_tian_toc
     * @static
     * @param {Iskill_tou_tian_toc} message skill_tou_tian_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_tou_tian_toc.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.playerId != null && Object.hasOwnProperty.call(message, "playerId"))
            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.playerId);
        return writer;
    };

    /**
     * Encodes the specified skill_tou_tian_toc message, length delimited. Does not implicitly {@link skill_tou_tian_toc.verify|verify} messages.
     * @function encodeDelimited
     * @memberof skill_tou_tian_toc
     * @static
     * @param {Iskill_tou_tian_toc} message skill_tou_tian_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_tou_tian_toc.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a skill_tou_tian_toc message from the specified reader or buffer.
     * @function decode
     * @memberof skill_tou_tian_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {skill_tou_tian_toc} skill_tou_tian_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_tou_tian_toc.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.skill_tou_tian_toc();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.playerId = reader.uint32();
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a skill_tou_tian_toc message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof skill_tou_tian_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {skill_tou_tian_toc} skill_tou_tian_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_tou_tian_toc.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a skill_tou_tian_toc message.
     * @function verify
     * @memberof skill_tou_tian_toc
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    skill_tou_tian_toc.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            if (!$util.isInteger(message.playerId))
                return "playerId: integer expected";
        return null;
    };

    /**
     * Creates a skill_tou_tian_toc message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof skill_tou_tian_toc
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {skill_tou_tian_toc} skill_tou_tian_toc
     */
    skill_tou_tian_toc.fromObject = function fromObject(object) {
        if (object instanceof $root.skill_tou_tian_toc)
            return object;
        var message = new $root.skill_tou_tian_toc();
        if (object.playerId != null)
            message.playerId = object.playerId >>> 0;
        return message;
    };

    /**
     * Creates a plain object from a skill_tou_tian_toc message. Also converts values to other types if specified.
     * @function toObject
     * @memberof skill_tou_tian_toc
     * @static
     * @param {skill_tou_tian_toc} message skill_tou_tian_toc
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    skill_tou_tian_toc.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults)
            object.playerId = 0;
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            object.playerId = message.playerId;
        return object;
    };

    /**
     * Converts this skill_tou_tian_toc to JSON.
     * @function toJSON
     * @memberof skill_tou_tian_toc
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    skill_tou_tian_toc.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for skill_tou_tian_toc
     * @function getTypeUrl
     * @memberof skill_tou_tian_toc
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    skill_tou_tian_toc.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/skill_tou_tian_toc";
    };

    return skill_tou_tian_toc;
})();

$root.skill_huan_ri_toc = (function() {

    /**
     * Properties of a skill_huan_ri_toc.
     * @exports Iskill_huan_ri_toc
     * @interface Iskill_huan_ri_toc
     * @property {number|null} [playerId] skill_huan_ri_toc playerId
     */

    /**
     * Constructs a new skill_huan_ri_toc.
     * @exports skill_huan_ri_toc
     * @classdesc Represents a skill_huan_ri_toc.
     * @implements Iskill_huan_ri_toc
     * @constructor
     * @param {Iskill_huan_ri_toc=} [properties] Properties to set
     */
    function skill_huan_ri_toc(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * skill_huan_ri_toc playerId.
     * @member {number} playerId
     * @memberof skill_huan_ri_toc
     * @instance
     */
    skill_huan_ri_toc.prototype.playerId = 0;

    /**
     * Creates a new skill_huan_ri_toc instance using the specified properties.
     * @function create
     * @memberof skill_huan_ri_toc
     * @static
     * @param {Iskill_huan_ri_toc=} [properties] Properties to set
     * @returns {skill_huan_ri_toc} skill_huan_ri_toc instance
     */
    skill_huan_ri_toc.create = function create(properties) {
        return new skill_huan_ri_toc(properties);
    };

    /**
     * Encodes the specified skill_huan_ri_toc message. Does not implicitly {@link skill_huan_ri_toc.verify|verify} messages.
     * @function encode
     * @memberof skill_huan_ri_toc
     * @static
     * @param {Iskill_huan_ri_toc} message skill_huan_ri_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_huan_ri_toc.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.playerId != null && Object.hasOwnProperty.call(message, "playerId"))
            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.playerId);
        return writer;
    };

    /**
     * Encodes the specified skill_huan_ri_toc message, length delimited. Does not implicitly {@link skill_huan_ri_toc.verify|verify} messages.
     * @function encodeDelimited
     * @memberof skill_huan_ri_toc
     * @static
     * @param {Iskill_huan_ri_toc} message skill_huan_ri_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_huan_ri_toc.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a skill_huan_ri_toc message from the specified reader or buffer.
     * @function decode
     * @memberof skill_huan_ri_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {skill_huan_ri_toc} skill_huan_ri_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_huan_ri_toc.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.skill_huan_ri_toc();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.playerId = reader.uint32();
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a skill_huan_ri_toc message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof skill_huan_ri_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {skill_huan_ri_toc} skill_huan_ri_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_huan_ri_toc.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a skill_huan_ri_toc message.
     * @function verify
     * @memberof skill_huan_ri_toc
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    skill_huan_ri_toc.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            if (!$util.isInteger(message.playerId))
                return "playerId: integer expected";
        return null;
    };

    /**
     * Creates a skill_huan_ri_toc message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof skill_huan_ri_toc
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {skill_huan_ri_toc} skill_huan_ri_toc
     */
    skill_huan_ri_toc.fromObject = function fromObject(object) {
        if (object instanceof $root.skill_huan_ri_toc)
            return object;
        var message = new $root.skill_huan_ri_toc();
        if (object.playerId != null)
            message.playerId = object.playerId >>> 0;
        return message;
    };

    /**
     * Creates a plain object from a skill_huan_ri_toc message. Also converts values to other types if specified.
     * @function toObject
     * @memberof skill_huan_ri_toc
     * @static
     * @param {skill_huan_ri_toc} message skill_huan_ri_toc
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    skill_huan_ri_toc.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults)
            object.playerId = 0;
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            object.playerId = message.playerId;
        return object;
    };

    /**
     * Converts this skill_huan_ri_toc to JSON.
     * @function toJSON
     * @memberof skill_huan_ri_toc
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    skill_huan_ri_toc.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for skill_huan_ri_toc
     * @function getTypeUrl
     * @memberof skill_huan_ri_toc
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    skill_huan_ri_toc.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/skill_huan_ri_toc";
    };

    return skill_huan_ri_toc;
})();

$root.skill_ji_song_tos = (function() {

    /**
     * Properties of a skill_ji_song_tos.
     * @exports Iskill_ji_song_tos
     * @interface Iskill_ji_song_tos
     * @property {Array.<number>|null} [cardIds] skill_ji_song_tos cardIds
     * @property {number|null} [messageCard] skill_ji_song_tos messageCard
     * @property {number|null} [targetPlayerId] skill_ji_song_tos targetPlayerId
     * @property {number|null} [seq] skill_ji_song_tos seq
     */

    /**
     * Constructs a new skill_ji_song_tos.
     * @exports skill_ji_song_tos
     * @classdesc Represents a skill_ji_song_tos.
     * @implements Iskill_ji_song_tos
     * @constructor
     * @param {Iskill_ji_song_tos=} [properties] Properties to set
     */
    function skill_ji_song_tos(properties) {
        this.cardIds = [];
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * skill_ji_song_tos cardIds.
     * @member {Array.<number>} cardIds
     * @memberof skill_ji_song_tos
     * @instance
     */
    skill_ji_song_tos.prototype.cardIds = $util.emptyArray;

    /**
     * skill_ji_song_tos messageCard.
     * @member {number} messageCard
     * @memberof skill_ji_song_tos
     * @instance
     */
    skill_ji_song_tos.prototype.messageCard = 0;

    /**
     * skill_ji_song_tos targetPlayerId.
     * @member {number} targetPlayerId
     * @memberof skill_ji_song_tos
     * @instance
     */
    skill_ji_song_tos.prototype.targetPlayerId = 0;

    /**
     * skill_ji_song_tos seq.
     * @member {number} seq
     * @memberof skill_ji_song_tos
     * @instance
     */
    skill_ji_song_tos.prototype.seq = 0;

    /**
     * Creates a new skill_ji_song_tos instance using the specified properties.
     * @function create
     * @memberof skill_ji_song_tos
     * @static
     * @param {Iskill_ji_song_tos=} [properties] Properties to set
     * @returns {skill_ji_song_tos} skill_ji_song_tos instance
     */
    skill_ji_song_tos.create = function create(properties) {
        return new skill_ji_song_tos(properties);
    };

    /**
     * Encodes the specified skill_ji_song_tos message. Does not implicitly {@link skill_ji_song_tos.verify|verify} messages.
     * @function encode
     * @memberof skill_ji_song_tos
     * @static
     * @param {Iskill_ji_song_tos} message skill_ji_song_tos message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_ji_song_tos.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.cardIds != null && message.cardIds.length) {
            writer.uint32(/* id 1, wireType 2 =*/10).fork();
            for (var i = 0; i < message.cardIds.length; ++i)
                writer.uint32(message.cardIds[i]);
            writer.ldelim();
        }
        if (message.messageCard != null && Object.hasOwnProperty.call(message, "messageCard"))
            writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.messageCard);
        if (message.targetPlayerId != null && Object.hasOwnProperty.call(message, "targetPlayerId"))
            writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.targetPlayerId);
        if (message.seq != null && Object.hasOwnProperty.call(message, "seq"))
            writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.seq);
        return writer;
    };

    /**
     * Encodes the specified skill_ji_song_tos message, length delimited. Does not implicitly {@link skill_ji_song_tos.verify|verify} messages.
     * @function encodeDelimited
     * @memberof skill_ji_song_tos
     * @static
     * @param {Iskill_ji_song_tos} message skill_ji_song_tos message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_ji_song_tos.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a skill_ji_song_tos message from the specified reader or buffer.
     * @function decode
     * @memberof skill_ji_song_tos
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {skill_ji_song_tos} skill_ji_song_tos
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_ji_song_tos.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.skill_ji_song_tos();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    if (!(message.cardIds && message.cardIds.length))
                        message.cardIds = [];
                    if ((tag & 7) === 2) {
                        var end2 = reader.uint32() + reader.pos;
                        while (reader.pos < end2)
                            message.cardIds.push(reader.uint32());
                    } else
                        message.cardIds.push(reader.uint32());
                    break;
                }
            case 2: {
                    message.messageCard = reader.uint32();
                    break;
                }
            case 3: {
                    message.targetPlayerId = reader.uint32();
                    break;
                }
            case 4: {
                    message.seq = reader.uint32();
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a skill_ji_song_tos message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof skill_ji_song_tos
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {skill_ji_song_tos} skill_ji_song_tos
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_ji_song_tos.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a skill_ji_song_tos message.
     * @function verify
     * @memberof skill_ji_song_tos
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    skill_ji_song_tos.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.cardIds != null && message.hasOwnProperty("cardIds")) {
            if (!Array.isArray(message.cardIds))
                return "cardIds: array expected";
            for (var i = 0; i < message.cardIds.length; ++i)
                if (!$util.isInteger(message.cardIds[i]))
                    return "cardIds: integer[] expected";
        }
        if (message.messageCard != null && message.hasOwnProperty("messageCard"))
            if (!$util.isInteger(message.messageCard))
                return "messageCard: integer expected";
        if (message.targetPlayerId != null && message.hasOwnProperty("targetPlayerId"))
            if (!$util.isInteger(message.targetPlayerId))
                return "targetPlayerId: integer expected";
        if (message.seq != null && message.hasOwnProperty("seq"))
            if (!$util.isInteger(message.seq))
                return "seq: integer expected";
        return null;
    };

    /**
     * Creates a skill_ji_song_tos message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof skill_ji_song_tos
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {skill_ji_song_tos} skill_ji_song_tos
     */
    skill_ji_song_tos.fromObject = function fromObject(object) {
        if (object instanceof $root.skill_ji_song_tos)
            return object;
        var message = new $root.skill_ji_song_tos();
        if (object.cardIds) {
            if (!Array.isArray(object.cardIds))
                throw TypeError(".skill_ji_song_tos.cardIds: array expected");
            message.cardIds = [];
            for (var i = 0; i < object.cardIds.length; ++i)
                message.cardIds[i] = object.cardIds[i] >>> 0;
        }
        if (object.messageCard != null)
            message.messageCard = object.messageCard >>> 0;
        if (object.targetPlayerId != null)
            message.targetPlayerId = object.targetPlayerId >>> 0;
        if (object.seq != null)
            message.seq = object.seq >>> 0;
        return message;
    };

    /**
     * Creates a plain object from a skill_ji_song_tos message. Also converts values to other types if specified.
     * @function toObject
     * @memberof skill_ji_song_tos
     * @static
     * @param {skill_ji_song_tos} message skill_ji_song_tos
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    skill_ji_song_tos.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.arrays || options.defaults)
            object.cardIds = [];
        if (options.defaults) {
            object.messageCard = 0;
            object.targetPlayerId = 0;
            object.seq = 0;
        }
        if (message.cardIds && message.cardIds.length) {
            object.cardIds = [];
            for (var j = 0; j < message.cardIds.length; ++j)
                object.cardIds[j] = message.cardIds[j];
        }
        if (message.messageCard != null && message.hasOwnProperty("messageCard"))
            object.messageCard = message.messageCard;
        if (message.targetPlayerId != null && message.hasOwnProperty("targetPlayerId"))
            object.targetPlayerId = message.targetPlayerId;
        if (message.seq != null && message.hasOwnProperty("seq"))
            object.seq = message.seq;
        return object;
    };

    /**
     * Converts this skill_ji_song_tos to JSON.
     * @function toJSON
     * @memberof skill_ji_song_tos
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    skill_ji_song_tos.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for skill_ji_song_tos
     * @function getTypeUrl
     * @memberof skill_ji_song_tos
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    skill_ji_song_tos.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/skill_ji_song_tos";
    };

    return skill_ji_song_tos;
})();

$root.skill_ji_song_toc = (function() {

    /**
     * Properties of a skill_ji_song_toc.
     * @exports Iskill_ji_song_toc
     * @interface Iskill_ji_song_toc
     * @property {number|null} [playerId] skill_ji_song_toc playerId
     * @property {Icard|null} [messageCard] skill_ji_song_toc messageCard
     * @property {number|null} [targetPlayerId] skill_ji_song_toc targetPlayerId
     */

    /**
     * Constructs a new skill_ji_song_toc.
     * @exports skill_ji_song_toc
     * @classdesc Represents a skill_ji_song_toc.
     * @implements Iskill_ji_song_toc
     * @constructor
     * @param {Iskill_ji_song_toc=} [properties] Properties to set
     */
    function skill_ji_song_toc(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * skill_ji_song_toc playerId.
     * @member {number} playerId
     * @memberof skill_ji_song_toc
     * @instance
     */
    skill_ji_song_toc.prototype.playerId = 0;

    /**
     * skill_ji_song_toc messageCard.
     * @member {Icard|null|undefined} messageCard
     * @memberof skill_ji_song_toc
     * @instance
     */
    skill_ji_song_toc.prototype.messageCard = null;

    /**
     * skill_ji_song_toc targetPlayerId.
     * @member {number} targetPlayerId
     * @memberof skill_ji_song_toc
     * @instance
     */
    skill_ji_song_toc.prototype.targetPlayerId = 0;

    /**
     * Creates a new skill_ji_song_toc instance using the specified properties.
     * @function create
     * @memberof skill_ji_song_toc
     * @static
     * @param {Iskill_ji_song_toc=} [properties] Properties to set
     * @returns {skill_ji_song_toc} skill_ji_song_toc instance
     */
    skill_ji_song_toc.create = function create(properties) {
        return new skill_ji_song_toc(properties);
    };

    /**
     * Encodes the specified skill_ji_song_toc message. Does not implicitly {@link skill_ji_song_toc.verify|verify} messages.
     * @function encode
     * @memberof skill_ji_song_toc
     * @static
     * @param {Iskill_ji_song_toc} message skill_ji_song_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_ji_song_toc.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.playerId != null && Object.hasOwnProperty.call(message, "playerId"))
            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.playerId);
        if (message.messageCard != null && Object.hasOwnProperty.call(message, "messageCard"))
            $root.card.encode(message.messageCard, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
        if (message.targetPlayerId != null && Object.hasOwnProperty.call(message, "targetPlayerId"))
            writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.targetPlayerId);
        return writer;
    };

    /**
     * Encodes the specified skill_ji_song_toc message, length delimited. Does not implicitly {@link skill_ji_song_toc.verify|verify} messages.
     * @function encodeDelimited
     * @memberof skill_ji_song_toc
     * @static
     * @param {Iskill_ji_song_toc} message skill_ji_song_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_ji_song_toc.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a skill_ji_song_toc message from the specified reader or buffer.
     * @function decode
     * @memberof skill_ji_song_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {skill_ji_song_toc} skill_ji_song_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_ji_song_toc.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.skill_ji_song_toc();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.playerId = reader.uint32();
                    break;
                }
            case 2: {
                    message.messageCard = $root.card.decode(reader, reader.uint32());
                    break;
                }
            case 3: {
                    message.targetPlayerId = reader.uint32();
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a skill_ji_song_toc message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof skill_ji_song_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {skill_ji_song_toc} skill_ji_song_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_ji_song_toc.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a skill_ji_song_toc message.
     * @function verify
     * @memberof skill_ji_song_toc
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    skill_ji_song_toc.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            if (!$util.isInteger(message.playerId))
                return "playerId: integer expected";
        if (message.messageCard != null && message.hasOwnProperty("messageCard")) {
            var error = $root.card.verify(message.messageCard);
            if (error)
                return "messageCard." + error;
        }
        if (message.targetPlayerId != null && message.hasOwnProperty("targetPlayerId"))
            if (!$util.isInteger(message.targetPlayerId))
                return "targetPlayerId: integer expected";
        return null;
    };

    /**
     * Creates a skill_ji_song_toc message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof skill_ji_song_toc
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {skill_ji_song_toc} skill_ji_song_toc
     */
    skill_ji_song_toc.fromObject = function fromObject(object) {
        if (object instanceof $root.skill_ji_song_toc)
            return object;
        var message = new $root.skill_ji_song_toc();
        if (object.playerId != null)
            message.playerId = object.playerId >>> 0;
        if (object.messageCard != null) {
            if (typeof object.messageCard !== "object")
                throw TypeError(".skill_ji_song_toc.messageCard: object expected");
            message.messageCard = $root.card.fromObject(object.messageCard);
        }
        if (object.targetPlayerId != null)
            message.targetPlayerId = object.targetPlayerId >>> 0;
        return message;
    };

    /**
     * Creates a plain object from a skill_ji_song_toc message. Also converts values to other types if specified.
     * @function toObject
     * @memberof skill_ji_song_toc
     * @static
     * @param {skill_ji_song_toc} message skill_ji_song_toc
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    skill_ji_song_toc.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults) {
            object.playerId = 0;
            object.messageCard = null;
            object.targetPlayerId = 0;
        }
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            object.playerId = message.playerId;
        if (message.messageCard != null && message.hasOwnProperty("messageCard"))
            object.messageCard = $root.card.toObject(message.messageCard, options);
        if (message.targetPlayerId != null && message.hasOwnProperty("targetPlayerId"))
            object.targetPlayerId = message.targetPlayerId;
        return object;
    };

    /**
     * Converts this skill_ji_song_toc to JSON.
     * @function toJSON
     * @memberof skill_ji_song_toc
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    skill_ji_song_toc.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for skill_ji_song_toc
     * @function getTypeUrl
     * @memberof skill_ji_song_toc
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    skill_ji_song_toc.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/skill_ji_song_toc";
    };

    return skill_ji_song_toc;
})();

$root.skill_mian_li_cang_zhen_tos = (function() {

    /**
     * Properties of a skill_mian_li_cang_zhen_tos.
     * @exports Iskill_mian_li_cang_zhen_tos
     * @interface Iskill_mian_li_cang_zhen_tos
     * @property {number|null} [cardId] skill_mian_li_cang_zhen_tos cardId
     * @property {number|null} [seq] skill_mian_li_cang_zhen_tos seq
     */

    /**
     * Constructs a new skill_mian_li_cang_zhen_tos.
     * @exports skill_mian_li_cang_zhen_tos
     * @classdesc Represents a skill_mian_li_cang_zhen_tos.
     * @implements Iskill_mian_li_cang_zhen_tos
     * @constructor
     * @param {Iskill_mian_li_cang_zhen_tos=} [properties] Properties to set
     */
    function skill_mian_li_cang_zhen_tos(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * skill_mian_li_cang_zhen_tos cardId.
     * @member {number} cardId
     * @memberof skill_mian_li_cang_zhen_tos
     * @instance
     */
    skill_mian_li_cang_zhen_tos.prototype.cardId = 0;

    /**
     * skill_mian_li_cang_zhen_tos seq.
     * @member {number} seq
     * @memberof skill_mian_li_cang_zhen_tos
     * @instance
     */
    skill_mian_li_cang_zhen_tos.prototype.seq = 0;

    /**
     * Creates a new skill_mian_li_cang_zhen_tos instance using the specified properties.
     * @function create
     * @memberof skill_mian_li_cang_zhen_tos
     * @static
     * @param {Iskill_mian_li_cang_zhen_tos=} [properties] Properties to set
     * @returns {skill_mian_li_cang_zhen_tos} skill_mian_li_cang_zhen_tos instance
     */
    skill_mian_li_cang_zhen_tos.create = function create(properties) {
        return new skill_mian_li_cang_zhen_tos(properties);
    };

    /**
     * Encodes the specified skill_mian_li_cang_zhen_tos message. Does not implicitly {@link skill_mian_li_cang_zhen_tos.verify|verify} messages.
     * @function encode
     * @memberof skill_mian_li_cang_zhen_tos
     * @static
     * @param {Iskill_mian_li_cang_zhen_tos} message skill_mian_li_cang_zhen_tos message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_mian_li_cang_zhen_tos.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.cardId != null && Object.hasOwnProperty.call(message, "cardId"))
            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.cardId);
        if (message.seq != null && Object.hasOwnProperty.call(message, "seq"))
            writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.seq);
        return writer;
    };

    /**
     * Encodes the specified skill_mian_li_cang_zhen_tos message, length delimited. Does not implicitly {@link skill_mian_li_cang_zhen_tos.verify|verify} messages.
     * @function encodeDelimited
     * @memberof skill_mian_li_cang_zhen_tos
     * @static
     * @param {Iskill_mian_li_cang_zhen_tos} message skill_mian_li_cang_zhen_tos message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_mian_li_cang_zhen_tos.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a skill_mian_li_cang_zhen_tos message from the specified reader or buffer.
     * @function decode
     * @memberof skill_mian_li_cang_zhen_tos
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {skill_mian_li_cang_zhen_tos} skill_mian_li_cang_zhen_tos
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_mian_li_cang_zhen_tos.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.skill_mian_li_cang_zhen_tos();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.cardId = reader.uint32();
                    break;
                }
            case 2: {
                    message.seq = reader.uint32();
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a skill_mian_li_cang_zhen_tos message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof skill_mian_li_cang_zhen_tos
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {skill_mian_li_cang_zhen_tos} skill_mian_li_cang_zhen_tos
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_mian_li_cang_zhen_tos.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a skill_mian_li_cang_zhen_tos message.
     * @function verify
     * @memberof skill_mian_li_cang_zhen_tos
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    skill_mian_li_cang_zhen_tos.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.cardId != null && message.hasOwnProperty("cardId"))
            if (!$util.isInteger(message.cardId))
                return "cardId: integer expected";
        if (message.seq != null && message.hasOwnProperty("seq"))
            if (!$util.isInteger(message.seq))
                return "seq: integer expected";
        return null;
    };

    /**
     * Creates a skill_mian_li_cang_zhen_tos message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof skill_mian_li_cang_zhen_tos
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {skill_mian_li_cang_zhen_tos} skill_mian_li_cang_zhen_tos
     */
    skill_mian_li_cang_zhen_tos.fromObject = function fromObject(object) {
        if (object instanceof $root.skill_mian_li_cang_zhen_tos)
            return object;
        var message = new $root.skill_mian_li_cang_zhen_tos();
        if (object.cardId != null)
            message.cardId = object.cardId >>> 0;
        if (object.seq != null)
            message.seq = object.seq >>> 0;
        return message;
    };

    /**
     * Creates a plain object from a skill_mian_li_cang_zhen_tos message. Also converts values to other types if specified.
     * @function toObject
     * @memberof skill_mian_li_cang_zhen_tos
     * @static
     * @param {skill_mian_li_cang_zhen_tos} message skill_mian_li_cang_zhen_tos
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    skill_mian_li_cang_zhen_tos.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults) {
            object.cardId = 0;
            object.seq = 0;
        }
        if (message.cardId != null && message.hasOwnProperty("cardId"))
            object.cardId = message.cardId;
        if (message.seq != null && message.hasOwnProperty("seq"))
            object.seq = message.seq;
        return object;
    };

    /**
     * Converts this skill_mian_li_cang_zhen_tos to JSON.
     * @function toJSON
     * @memberof skill_mian_li_cang_zhen_tos
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    skill_mian_li_cang_zhen_tos.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for skill_mian_li_cang_zhen_tos
     * @function getTypeUrl
     * @memberof skill_mian_li_cang_zhen_tos
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    skill_mian_li_cang_zhen_tos.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/skill_mian_li_cang_zhen_tos";
    };

    return skill_mian_li_cang_zhen_tos;
})();

$root.skill_mian_li_cang_zhen_toc = (function() {

    /**
     * Properties of a skill_mian_li_cang_zhen_toc.
     * @exports Iskill_mian_li_cang_zhen_toc
     * @interface Iskill_mian_li_cang_zhen_toc
     * @property {number|null} [playerId] skill_mian_li_cang_zhen_toc playerId
     * @property {Icard|null} [card] skill_mian_li_cang_zhen_toc card
     * @property {number|null} [targetPlayerId] skill_mian_li_cang_zhen_toc targetPlayerId
     */

    /**
     * Constructs a new skill_mian_li_cang_zhen_toc.
     * @exports skill_mian_li_cang_zhen_toc
     * @classdesc Represents a skill_mian_li_cang_zhen_toc.
     * @implements Iskill_mian_li_cang_zhen_toc
     * @constructor
     * @param {Iskill_mian_li_cang_zhen_toc=} [properties] Properties to set
     */
    function skill_mian_li_cang_zhen_toc(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * skill_mian_li_cang_zhen_toc playerId.
     * @member {number} playerId
     * @memberof skill_mian_li_cang_zhen_toc
     * @instance
     */
    skill_mian_li_cang_zhen_toc.prototype.playerId = 0;

    /**
     * skill_mian_li_cang_zhen_toc card.
     * @member {Icard|null|undefined} card
     * @memberof skill_mian_li_cang_zhen_toc
     * @instance
     */
    skill_mian_li_cang_zhen_toc.prototype.card = null;

    /**
     * skill_mian_li_cang_zhen_toc targetPlayerId.
     * @member {number} targetPlayerId
     * @memberof skill_mian_li_cang_zhen_toc
     * @instance
     */
    skill_mian_li_cang_zhen_toc.prototype.targetPlayerId = 0;

    /**
     * Creates a new skill_mian_li_cang_zhen_toc instance using the specified properties.
     * @function create
     * @memberof skill_mian_li_cang_zhen_toc
     * @static
     * @param {Iskill_mian_li_cang_zhen_toc=} [properties] Properties to set
     * @returns {skill_mian_li_cang_zhen_toc} skill_mian_li_cang_zhen_toc instance
     */
    skill_mian_li_cang_zhen_toc.create = function create(properties) {
        return new skill_mian_li_cang_zhen_toc(properties);
    };

    /**
     * Encodes the specified skill_mian_li_cang_zhen_toc message. Does not implicitly {@link skill_mian_li_cang_zhen_toc.verify|verify} messages.
     * @function encode
     * @memberof skill_mian_li_cang_zhen_toc
     * @static
     * @param {Iskill_mian_li_cang_zhen_toc} message skill_mian_li_cang_zhen_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_mian_li_cang_zhen_toc.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.playerId != null && Object.hasOwnProperty.call(message, "playerId"))
            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.playerId);
        if (message.card != null && Object.hasOwnProperty.call(message, "card"))
            $root.card.encode(message.card, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
        if (message.targetPlayerId != null && Object.hasOwnProperty.call(message, "targetPlayerId"))
            writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.targetPlayerId);
        return writer;
    };

    /**
     * Encodes the specified skill_mian_li_cang_zhen_toc message, length delimited. Does not implicitly {@link skill_mian_li_cang_zhen_toc.verify|verify} messages.
     * @function encodeDelimited
     * @memberof skill_mian_li_cang_zhen_toc
     * @static
     * @param {Iskill_mian_li_cang_zhen_toc} message skill_mian_li_cang_zhen_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_mian_li_cang_zhen_toc.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a skill_mian_li_cang_zhen_toc message from the specified reader or buffer.
     * @function decode
     * @memberof skill_mian_li_cang_zhen_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {skill_mian_li_cang_zhen_toc} skill_mian_li_cang_zhen_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_mian_li_cang_zhen_toc.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.skill_mian_li_cang_zhen_toc();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.playerId = reader.uint32();
                    break;
                }
            case 2: {
                    message.card = $root.card.decode(reader, reader.uint32());
                    break;
                }
            case 3: {
                    message.targetPlayerId = reader.uint32();
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a skill_mian_li_cang_zhen_toc message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof skill_mian_li_cang_zhen_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {skill_mian_li_cang_zhen_toc} skill_mian_li_cang_zhen_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_mian_li_cang_zhen_toc.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a skill_mian_li_cang_zhen_toc message.
     * @function verify
     * @memberof skill_mian_li_cang_zhen_toc
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    skill_mian_li_cang_zhen_toc.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            if (!$util.isInteger(message.playerId))
                return "playerId: integer expected";
        if (message.card != null && message.hasOwnProperty("card")) {
            var error = $root.card.verify(message.card);
            if (error)
                return "card." + error;
        }
        if (message.targetPlayerId != null && message.hasOwnProperty("targetPlayerId"))
            if (!$util.isInteger(message.targetPlayerId))
                return "targetPlayerId: integer expected";
        return null;
    };

    /**
     * Creates a skill_mian_li_cang_zhen_toc message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof skill_mian_li_cang_zhen_toc
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {skill_mian_li_cang_zhen_toc} skill_mian_li_cang_zhen_toc
     */
    skill_mian_li_cang_zhen_toc.fromObject = function fromObject(object) {
        if (object instanceof $root.skill_mian_li_cang_zhen_toc)
            return object;
        var message = new $root.skill_mian_li_cang_zhen_toc();
        if (object.playerId != null)
            message.playerId = object.playerId >>> 0;
        if (object.card != null) {
            if (typeof object.card !== "object")
                throw TypeError(".skill_mian_li_cang_zhen_toc.card: object expected");
            message.card = $root.card.fromObject(object.card);
        }
        if (object.targetPlayerId != null)
            message.targetPlayerId = object.targetPlayerId >>> 0;
        return message;
    };

    /**
     * Creates a plain object from a skill_mian_li_cang_zhen_toc message. Also converts values to other types if specified.
     * @function toObject
     * @memberof skill_mian_li_cang_zhen_toc
     * @static
     * @param {skill_mian_li_cang_zhen_toc} message skill_mian_li_cang_zhen_toc
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    skill_mian_li_cang_zhen_toc.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults) {
            object.playerId = 0;
            object.card = null;
            object.targetPlayerId = 0;
        }
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            object.playerId = message.playerId;
        if (message.card != null && message.hasOwnProperty("card"))
            object.card = $root.card.toObject(message.card, options);
        if (message.targetPlayerId != null && message.hasOwnProperty("targetPlayerId"))
            object.targetPlayerId = message.targetPlayerId;
        return object;
    };

    /**
     * Converts this skill_mian_li_cang_zhen_toc to JSON.
     * @function toJSON
     * @memberof skill_mian_li_cang_zhen_toc
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    skill_mian_li_cang_zhen_toc.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for skill_mian_li_cang_zhen_toc
     * @function getTypeUrl
     * @memberof skill_mian_li_cang_zhen_toc
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    skill_mian_li_cang_zhen_toc.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/skill_mian_li_cang_zhen_toc";
    };

    return skill_mian_li_cang_zhen_toc;
})();

$root.skill_jin_shen_tos = (function() {

    /**
     * Properties of a skill_jin_shen_tos.
     * @exports Iskill_jin_shen_tos
     * @interface Iskill_jin_shen_tos
     * @property {number|null} [cardId] skill_jin_shen_tos cardId
     * @property {number|null} [seq] skill_jin_shen_tos seq
     */

    /**
     * Constructs a new skill_jin_shen_tos.
     * @exports skill_jin_shen_tos
     * @classdesc Represents a skill_jin_shen_tos.
     * @implements Iskill_jin_shen_tos
     * @constructor
     * @param {Iskill_jin_shen_tos=} [properties] Properties to set
     */
    function skill_jin_shen_tos(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * skill_jin_shen_tos cardId.
     * @member {number} cardId
     * @memberof skill_jin_shen_tos
     * @instance
     */
    skill_jin_shen_tos.prototype.cardId = 0;

    /**
     * skill_jin_shen_tos seq.
     * @member {number} seq
     * @memberof skill_jin_shen_tos
     * @instance
     */
    skill_jin_shen_tos.prototype.seq = 0;

    /**
     * Creates a new skill_jin_shen_tos instance using the specified properties.
     * @function create
     * @memberof skill_jin_shen_tos
     * @static
     * @param {Iskill_jin_shen_tos=} [properties] Properties to set
     * @returns {skill_jin_shen_tos} skill_jin_shen_tos instance
     */
    skill_jin_shen_tos.create = function create(properties) {
        return new skill_jin_shen_tos(properties);
    };

    /**
     * Encodes the specified skill_jin_shen_tos message. Does not implicitly {@link skill_jin_shen_tos.verify|verify} messages.
     * @function encode
     * @memberof skill_jin_shen_tos
     * @static
     * @param {Iskill_jin_shen_tos} message skill_jin_shen_tos message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_jin_shen_tos.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.cardId != null && Object.hasOwnProperty.call(message, "cardId"))
            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.cardId);
        if (message.seq != null && Object.hasOwnProperty.call(message, "seq"))
            writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.seq);
        return writer;
    };

    /**
     * Encodes the specified skill_jin_shen_tos message, length delimited. Does not implicitly {@link skill_jin_shen_tos.verify|verify} messages.
     * @function encodeDelimited
     * @memberof skill_jin_shen_tos
     * @static
     * @param {Iskill_jin_shen_tos} message skill_jin_shen_tos message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_jin_shen_tos.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a skill_jin_shen_tos message from the specified reader or buffer.
     * @function decode
     * @memberof skill_jin_shen_tos
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {skill_jin_shen_tos} skill_jin_shen_tos
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_jin_shen_tos.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.skill_jin_shen_tos();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.cardId = reader.uint32();
                    break;
                }
            case 2: {
                    message.seq = reader.uint32();
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a skill_jin_shen_tos message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof skill_jin_shen_tos
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {skill_jin_shen_tos} skill_jin_shen_tos
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_jin_shen_tos.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a skill_jin_shen_tos message.
     * @function verify
     * @memberof skill_jin_shen_tos
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    skill_jin_shen_tos.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.cardId != null && message.hasOwnProperty("cardId"))
            if (!$util.isInteger(message.cardId))
                return "cardId: integer expected";
        if (message.seq != null && message.hasOwnProperty("seq"))
            if (!$util.isInteger(message.seq))
                return "seq: integer expected";
        return null;
    };

    /**
     * Creates a skill_jin_shen_tos message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof skill_jin_shen_tos
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {skill_jin_shen_tos} skill_jin_shen_tos
     */
    skill_jin_shen_tos.fromObject = function fromObject(object) {
        if (object instanceof $root.skill_jin_shen_tos)
            return object;
        var message = new $root.skill_jin_shen_tos();
        if (object.cardId != null)
            message.cardId = object.cardId >>> 0;
        if (object.seq != null)
            message.seq = object.seq >>> 0;
        return message;
    };

    /**
     * Creates a plain object from a skill_jin_shen_tos message. Also converts values to other types if specified.
     * @function toObject
     * @memberof skill_jin_shen_tos
     * @static
     * @param {skill_jin_shen_tos} message skill_jin_shen_tos
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    skill_jin_shen_tos.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults) {
            object.cardId = 0;
            object.seq = 0;
        }
        if (message.cardId != null && message.hasOwnProperty("cardId"))
            object.cardId = message.cardId;
        if (message.seq != null && message.hasOwnProperty("seq"))
            object.seq = message.seq;
        return object;
    };

    /**
     * Converts this skill_jin_shen_tos to JSON.
     * @function toJSON
     * @memberof skill_jin_shen_tos
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    skill_jin_shen_tos.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for skill_jin_shen_tos
     * @function getTypeUrl
     * @memberof skill_jin_shen_tos
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    skill_jin_shen_tos.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/skill_jin_shen_tos";
    };

    return skill_jin_shen_tos;
})();

$root.skill_jin_shen_toc = (function() {

    /**
     * Properties of a skill_jin_shen_toc.
     * @exports Iskill_jin_shen_toc
     * @interface Iskill_jin_shen_toc
     * @property {number|null} [playerId] skill_jin_shen_toc playerId
     * @property {Icard|null} [card] skill_jin_shen_toc card
     */

    /**
     * Constructs a new skill_jin_shen_toc.
     * @exports skill_jin_shen_toc
     * @classdesc Represents a skill_jin_shen_toc.
     * @implements Iskill_jin_shen_toc
     * @constructor
     * @param {Iskill_jin_shen_toc=} [properties] Properties to set
     */
    function skill_jin_shen_toc(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * skill_jin_shen_toc playerId.
     * @member {number} playerId
     * @memberof skill_jin_shen_toc
     * @instance
     */
    skill_jin_shen_toc.prototype.playerId = 0;

    /**
     * skill_jin_shen_toc card.
     * @member {Icard|null|undefined} card
     * @memberof skill_jin_shen_toc
     * @instance
     */
    skill_jin_shen_toc.prototype.card = null;

    /**
     * Creates a new skill_jin_shen_toc instance using the specified properties.
     * @function create
     * @memberof skill_jin_shen_toc
     * @static
     * @param {Iskill_jin_shen_toc=} [properties] Properties to set
     * @returns {skill_jin_shen_toc} skill_jin_shen_toc instance
     */
    skill_jin_shen_toc.create = function create(properties) {
        return new skill_jin_shen_toc(properties);
    };

    /**
     * Encodes the specified skill_jin_shen_toc message. Does not implicitly {@link skill_jin_shen_toc.verify|verify} messages.
     * @function encode
     * @memberof skill_jin_shen_toc
     * @static
     * @param {Iskill_jin_shen_toc} message skill_jin_shen_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_jin_shen_toc.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.playerId != null && Object.hasOwnProperty.call(message, "playerId"))
            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.playerId);
        if (message.card != null && Object.hasOwnProperty.call(message, "card"))
            $root.card.encode(message.card, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
        return writer;
    };

    /**
     * Encodes the specified skill_jin_shen_toc message, length delimited. Does not implicitly {@link skill_jin_shen_toc.verify|verify} messages.
     * @function encodeDelimited
     * @memberof skill_jin_shen_toc
     * @static
     * @param {Iskill_jin_shen_toc} message skill_jin_shen_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_jin_shen_toc.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a skill_jin_shen_toc message from the specified reader or buffer.
     * @function decode
     * @memberof skill_jin_shen_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {skill_jin_shen_toc} skill_jin_shen_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_jin_shen_toc.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.skill_jin_shen_toc();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.playerId = reader.uint32();
                    break;
                }
            case 2: {
                    message.card = $root.card.decode(reader, reader.uint32());
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a skill_jin_shen_toc message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof skill_jin_shen_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {skill_jin_shen_toc} skill_jin_shen_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_jin_shen_toc.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a skill_jin_shen_toc message.
     * @function verify
     * @memberof skill_jin_shen_toc
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    skill_jin_shen_toc.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            if (!$util.isInteger(message.playerId))
                return "playerId: integer expected";
        if (message.card != null && message.hasOwnProperty("card")) {
            var error = $root.card.verify(message.card);
            if (error)
                return "card." + error;
        }
        return null;
    };

    /**
     * Creates a skill_jin_shen_toc message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof skill_jin_shen_toc
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {skill_jin_shen_toc} skill_jin_shen_toc
     */
    skill_jin_shen_toc.fromObject = function fromObject(object) {
        if (object instanceof $root.skill_jin_shen_toc)
            return object;
        var message = new $root.skill_jin_shen_toc();
        if (object.playerId != null)
            message.playerId = object.playerId >>> 0;
        if (object.card != null) {
            if (typeof object.card !== "object")
                throw TypeError(".skill_jin_shen_toc.card: object expected");
            message.card = $root.card.fromObject(object.card);
        }
        return message;
    };

    /**
     * Creates a plain object from a skill_jin_shen_toc message. Also converts values to other types if specified.
     * @function toObject
     * @memberof skill_jin_shen_toc
     * @static
     * @param {skill_jin_shen_toc} message skill_jin_shen_toc
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    skill_jin_shen_toc.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults) {
            object.playerId = 0;
            object.card = null;
        }
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            object.playerId = message.playerId;
        if (message.card != null && message.hasOwnProperty("card"))
            object.card = $root.card.toObject(message.card, options);
        return object;
    };

    /**
     * Converts this skill_jin_shen_toc to JSON.
     * @function toJSON
     * @memberof skill_jin_shen_toc
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    skill_jin_shen_toc.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for skill_jin_shen_toc
     * @function getTypeUrl
     * @memberof skill_jin_shen_toc
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    skill_jin_shen_toc.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/skill_jin_shen_toc";
    };

    return skill_jin_shen_toc;
})();

$root.skill_lian_min_tos = (function() {

    /**
     * Properties of a skill_lian_min_tos.
     * @exports Iskill_lian_min_tos
     * @interface Iskill_lian_min_tos
     * @property {number|null} [targetPlayerId] skill_lian_min_tos targetPlayerId
     * @property {number|null} [cardId] skill_lian_min_tos cardId
     * @property {number|null} [seq] skill_lian_min_tos seq
     */

    /**
     * Constructs a new skill_lian_min_tos.
     * @exports skill_lian_min_tos
     * @classdesc Represents a skill_lian_min_tos.
     * @implements Iskill_lian_min_tos
     * @constructor
     * @param {Iskill_lian_min_tos=} [properties] Properties to set
     */
    function skill_lian_min_tos(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * skill_lian_min_tos targetPlayerId.
     * @member {number} targetPlayerId
     * @memberof skill_lian_min_tos
     * @instance
     */
    skill_lian_min_tos.prototype.targetPlayerId = 0;

    /**
     * skill_lian_min_tos cardId.
     * @member {number} cardId
     * @memberof skill_lian_min_tos
     * @instance
     */
    skill_lian_min_tos.prototype.cardId = 0;

    /**
     * skill_lian_min_tos seq.
     * @member {number} seq
     * @memberof skill_lian_min_tos
     * @instance
     */
    skill_lian_min_tos.prototype.seq = 0;

    /**
     * Creates a new skill_lian_min_tos instance using the specified properties.
     * @function create
     * @memberof skill_lian_min_tos
     * @static
     * @param {Iskill_lian_min_tos=} [properties] Properties to set
     * @returns {skill_lian_min_tos} skill_lian_min_tos instance
     */
    skill_lian_min_tos.create = function create(properties) {
        return new skill_lian_min_tos(properties);
    };

    /**
     * Encodes the specified skill_lian_min_tos message. Does not implicitly {@link skill_lian_min_tos.verify|verify} messages.
     * @function encode
     * @memberof skill_lian_min_tos
     * @static
     * @param {Iskill_lian_min_tos} message skill_lian_min_tos message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_lian_min_tos.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.targetPlayerId != null && Object.hasOwnProperty.call(message, "targetPlayerId"))
            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.targetPlayerId);
        if (message.cardId != null && Object.hasOwnProperty.call(message, "cardId"))
            writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.cardId);
        if (message.seq != null && Object.hasOwnProperty.call(message, "seq"))
            writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.seq);
        return writer;
    };

    /**
     * Encodes the specified skill_lian_min_tos message, length delimited. Does not implicitly {@link skill_lian_min_tos.verify|verify} messages.
     * @function encodeDelimited
     * @memberof skill_lian_min_tos
     * @static
     * @param {Iskill_lian_min_tos} message skill_lian_min_tos message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_lian_min_tos.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a skill_lian_min_tos message from the specified reader or buffer.
     * @function decode
     * @memberof skill_lian_min_tos
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {skill_lian_min_tos} skill_lian_min_tos
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_lian_min_tos.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.skill_lian_min_tos();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.targetPlayerId = reader.uint32();
                    break;
                }
            case 2: {
                    message.cardId = reader.uint32();
                    break;
                }
            case 3: {
                    message.seq = reader.uint32();
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a skill_lian_min_tos message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof skill_lian_min_tos
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {skill_lian_min_tos} skill_lian_min_tos
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_lian_min_tos.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a skill_lian_min_tos message.
     * @function verify
     * @memberof skill_lian_min_tos
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    skill_lian_min_tos.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.targetPlayerId != null && message.hasOwnProperty("targetPlayerId"))
            if (!$util.isInteger(message.targetPlayerId))
                return "targetPlayerId: integer expected";
        if (message.cardId != null && message.hasOwnProperty("cardId"))
            if (!$util.isInteger(message.cardId))
                return "cardId: integer expected";
        if (message.seq != null && message.hasOwnProperty("seq"))
            if (!$util.isInteger(message.seq))
                return "seq: integer expected";
        return null;
    };

    /**
     * Creates a skill_lian_min_tos message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof skill_lian_min_tos
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {skill_lian_min_tos} skill_lian_min_tos
     */
    skill_lian_min_tos.fromObject = function fromObject(object) {
        if (object instanceof $root.skill_lian_min_tos)
            return object;
        var message = new $root.skill_lian_min_tos();
        if (object.targetPlayerId != null)
            message.targetPlayerId = object.targetPlayerId >>> 0;
        if (object.cardId != null)
            message.cardId = object.cardId >>> 0;
        if (object.seq != null)
            message.seq = object.seq >>> 0;
        return message;
    };

    /**
     * Creates a plain object from a skill_lian_min_tos message. Also converts values to other types if specified.
     * @function toObject
     * @memberof skill_lian_min_tos
     * @static
     * @param {skill_lian_min_tos} message skill_lian_min_tos
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    skill_lian_min_tos.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults) {
            object.targetPlayerId = 0;
            object.cardId = 0;
            object.seq = 0;
        }
        if (message.targetPlayerId != null && message.hasOwnProperty("targetPlayerId"))
            object.targetPlayerId = message.targetPlayerId;
        if (message.cardId != null && message.hasOwnProperty("cardId"))
            object.cardId = message.cardId;
        if (message.seq != null && message.hasOwnProperty("seq"))
            object.seq = message.seq;
        return object;
    };

    /**
     * Converts this skill_lian_min_tos to JSON.
     * @function toJSON
     * @memberof skill_lian_min_tos
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    skill_lian_min_tos.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for skill_lian_min_tos
     * @function getTypeUrl
     * @memberof skill_lian_min_tos
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    skill_lian_min_tos.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/skill_lian_min_tos";
    };

    return skill_lian_min_tos;
})();

$root.skill_lian_min_toc = (function() {

    /**
     * Properties of a skill_lian_min_toc.
     * @exports Iskill_lian_min_toc
     * @interface Iskill_lian_min_toc
     * @property {number|null} [playerId] skill_lian_min_toc playerId
     * @property {number|null} [targetPlayerId] skill_lian_min_toc targetPlayerId
     * @property {number|null} [cardId] skill_lian_min_toc cardId
     */

    /**
     * Constructs a new skill_lian_min_toc.
     * @exports skill_lian_min_toc
     * @classdesc Represents a skill_lian_min_toc.
     * @implements Iskill_lian_min_toc
     * @constructor
     * @param {Iskill_lian_min_toc=} [properties] Properties to set
     */
    function skill_lian_min_toc(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * skill_lian_min_toc playerId.
     * @member {number} playerId
     * @memberof skill_lian_min_toc
     * @instance
     */
    skill_lian_min_toc.prototype.playerId = 0;

    /**
     * skill_lian_min_toc targetPlayerId.
     * @member {number} targetPlayerId
     * @memberof skill_lian_min_toc
     * @instance
     */
    skill_lian_min_toc.prototype.targetPlayerId = 0;

    /**
     * skill_lian_min_toc cardId.
     * @member {number} cardId
     * @memberof skill_lian_min_toc
     * @instance
     */
    skill_lian_min_toc.prototype.cardId = 0;

    /**
     * Creates a new skill_lian_min_toc instance using the specified properties.
     * @function create
     * @memberof skill_lian_min_toc
     * @static
     * @param {Iskill_lian_min_toc=} [properties] Properties to set
     * @returns {skill_lian_min_toc} skill_lian_min_toc instance
     */
    skill_lian_min_toc.create = function create(properties) {
        return new skill_lian_min_toc(properties);
    };

    /**
     * Encodes the specified skill_lian_min_toc message. Does not implicitly {@link skill_lian_min_toc.verify|verify} messages.
     * @function encode
     * @memberof skill_lian_min_toc
     * @static
     * @param {Iskill_lian_min_toc} message skill_lian_min_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_lian_min_toc.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.playerId != null && Object.hasOwnProperty.call(message, "playerId"))
            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.playerId);
        if (message.targetPlayerId != null && Object.hasOwnProperty.call(message, "targetPlayerId"))
            writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.targetPlayerId);
        if (message.cardId != null && Object.hasOwnProperty.call(message, "cardId"))
            writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.cardId);
        return writer;
    };

    /**
     * Encodes the specified skill_lian_min_toc message, length delimited. Does not implicitly {@link skill_lian_min_toc.verify|verify} messages.
     * @function encodeDelimited
     * @memberof skill_lian_min_toc
     * @static
     * @param {Iskill_lian_min_toc} message skill_lian_min_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_lian_min_toc.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a skill_lian_min_toc message from the specified reader or buffer.
     * @function decode
     * @memberof skill_lian_min_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {skill_lian_min_toc} skill_lian_min_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_lian_min_toc.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.skill_lian_min_toc();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.playerId = reader.uint32();
                    break;
                }
            case 2: {
                    message.targetPlayerId = reader.uint32();
                    break;
                }
            case 3: {
                    message.cardId = reader.uint32();
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a skill_lian_min_toc message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof skill_lian_min_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {skill_lian_min_toc} skill_lian_min_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_lian_min_toc.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a skill_lian_min_toc message.
     * @function verify
     * @memberof skill_lian_min_toc
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    skill_lian_min_toc.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            if (!$util.isInteger(message.playerId))
                return "playerId: integer expected";
        if (message.targetPlayerId != null && message.hasOwnProperty("targetPlayerId"))
            if (!$util.isInteger(message.targetPlayerId))
                return "targetPlayerId: integer expected";
        if (message.cardId != null && message.hasOwnProperty("cardId"))
            if (!$util.isInteger(message.cardId))
                return "cardId: integer expected";
        return null;
    };

    /**
     * Creates a skill_lian_min_toc message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof skill_lian_min_toc
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {skill_lian_min_toc} skill_lian_min_toc
     */
    skill_lian_min_toc.fromObject = function fromObject(object) {
        if (object instanceof $root.skill_lian_min_toc)
            return object;
        var message = new $root.skill_lian_min_toc();
        if (object.playerId != null)
            message.playerId = object.playerId >>> 0;
        if (object.targetPlayerId != null)
            message.targetPlayerId = object.targetPlayerId >>> 0;
        if (object.cardId != null)
            message.cardId = object.cardId >>> 0;
        return message;
    };

    /**
     * Creates a plain object from a skill_lian_min_toc message. Also converts values to other types if specified.
     * @function toObject
     * @memberof skill_lian_min_toc
     * @static
     * @param {skill_lian_min_toc} message skill_lian_min_toc
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    skill_lian_min_toc.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults) {
            object.playerId = 0;
            object.targetPlayerId = 0;
            object.cardId = 0;
        }
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            object.playerId = message.playerId;
        if (message.targetPlayerId != null && message.hasOwnProperty("targetPlayerId"))
            object.targetPlayerId = message.targetPlayerId;
        if (message.cardId != null && message.hasOwnProperty("cardId"))
            object.cardId = message.cardId;
        return object;
    };

    /**
     * Converts this skill_lian_min_toc to JSON.
     * @function toJSON
     * @memberof skill_lian_min_toc
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    skill_lian_min_toc.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for skill_lian_min_toc
     * @function getTypeUrl
     * @memberof skill_lian_min_toc
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    skill_lian_min_toc.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/skill_lian_min_toc";
    };

    return skill_lian_min_toc;
})();

$root.skill_fu_hei_toc = (function() {

    /**
     * Properties of a skill_fu_hei_toc.
     * @exports Iskill_fu_hei_toc
     * @interface Iskill_fu_hei_toc
     * @property {number|null} [playerId] skill_fu_hei_toc playerId
     */

    /**
     * Constructs a new skill_fu_hei_toc.
     * @exports skill_fu_hei_toc
     * @classdesc Represents a skill_fu_hei_toc.
     * @implements Iskill_fu_hei_toc
     * @constructor
     * @param {Iskill_fu_hei_toc=} [properties] Properties to set
     */
    function skill_fu_hei_toc(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * skill_fu_hei_toc playerId.
     * @member {number} playerId
     * @memberof skill_fu_hei_toc
     * @instance
     */
    skill_fu_hei_toc.prototype.playerId = 0;

    /**
     * Creates a new skill_fu_hei_toc instance using the specified properties.
     * @function create
     * @memberof skill_fu_hei_toc
     * @static
     * @param {Iskill_fu_hei_toc=} [properties] Properties to set
     * @returns {skill_fu_hei_toc} skill_fu_hei_toc instance
     */
    skill_fu_hei_toc.create = function create(properties) {
        return new skill_fu_hei_toc(properties);
    };

    /**
     * Encodes the specified skill_fu_hei_toc message. Does not implicitly {@link skill_fu_hei_toc.verify|verify} messages.
     * @function encode
     * @memberof skill_fu_hei_toc
     * @static
     * @param {Iskill_fu_hei_toc} message skill_fu_hei_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_fu_hei_toc.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.playerId != null && Object.hasOwnProperty.call(message, "playerId"))
            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.playerId);
        return writer;
    };

    /**
     * Encodes the specified skill_fu_hei_toc message, length delimited. Does not implicitly {@link skill_fu_hei_toc.verify|verify} messages.
     * @function encodeDelimited
     * @memberof skill_fu_hei_toc
     * @static
     * @param {Iskill_fu_hei_toc} message skill_fu_hei_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_fu_hei_toc.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a skill_fu_hei_toc message from the specified reader or buffer.
     * @function decode
     * @memberof skill_fu_hei_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {skill_fu_hei_toc} skill_fu_hei_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_fu_hei_toc.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.skill_fu_hei_toc();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.playerId = reader.uint32();
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a skill_fu_hei_toc message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof skill_fu_hei_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {skill_fu_hei_toc} skill_fu_hei_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_fu_hei_toc.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a skill_fu_hei_toc message.
     * @function verify
     * @memberof skill_fu_hei_toc
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    skill_fu_hei_toc.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            if (!$util.isInteger(message.playerId))
                return "playerId: integer expected";
        return null;
    };

    /**
     * Creates a skill_fu_hei_toc message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof skill_fu_hei_toc
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {skill_fu_hei_toc} skill_fu_hei_toc
     */
    skill_fu_hei_toc.fromObject = function fromObject(object) {
        if (object instanceof $root.skill_fu_hei_toc)
            return object;
        var message = new $root.skill_fu_hei_toc();
        if (object.playerId != null)
            message.playerId = object.playerId >>> 0;
        return message;
    };

    /**
     * Creates a plain object from a skill_fu_hei_toc message. Also converts values to other types if specified.
     * @function toObject
     * @memberof skill_fu_hei_toc
     * @static
     * @param {skill_fu_hei_toc} message skill_fu_hei_toc
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    skill_fu_hei_toc.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults)
            object.playerId = 0;
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            object.playerId = message.playerId;
        return object;
    };

    /**
     * Converts this skill_fu_hei_toc to JSON.
     * @function toJSON
     * @memberof skill_fu_hei_toc
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    skill_fu_hei_toc.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for skill_fu_hei_toc
     * @function getTypeUrl
     * @memberof skill_fu_hei_toc
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    skill_fu_hei_toc.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/skill_fu_hei_toc";
    };

    return skill_fu_hei_toc;
})();

$root.skill_xin_si_chao_tos = (function() {

    /**
     * Properties of a skill_xin_si_chao_tos.
     * @exports Iskill_xin_si_chao_tos
     * @interface Iskill_xin_si_chao_tos
     * @property {number|null} [cardId] skill_xin_si_chao_tos cardId
     * @property {number|null} [seq] skill_xin_si_chao_tos seq
     */

    /**
     * Constructs a new skill_xin_si_chao_tos.
     * @exports skill_xin_si_chao_tos
     * @classdesc Represents a skill_xin_si_chao_tos.
     * @implements Iskill_xin_si_chao_tos
     * @constructor
     * @param {Iskill_xin_si_chao_tos=} [properties] Properties to set
     */
    function skill_xin_si_chao_tos(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * skill_xin_si_chao_tos cardId.
     * @member {number} cardId
     * @memberof skill_xin_si_chao_tos
     * @instance
     */
    skill_xin_si_chao_tos.prototype.cardId = 0;

    /**
     * skill_xin_si_chao_tos seq.
     * @member {number} seq
     * @memberof skill_xin_si_chao_tos
     * @instance
     */
    skill_xin_si_chao_tos.prototype.seq = 0;

    /**
     * Creates a new skill_xin_si_chao_tos instance using the specified properties.
     * @function create
     * @memberof skill_xin_si_chao_tos
     * @static
     * @param {Iskill_xin_si_chao_tos=} [properties] Properties to set
     * @returns {skill_xin_si_chao_tos} skill_xin_si_chao_tos instance
     */
    skill_xin_si_chao_tos.create = function create(properties) {
        return new skill_xin_si_chao_tos(properties);
    };

    /**
     * Encodes the specified skill_xin_si_chao_tos message. Does not implicitly {@link skill_xin_si_chao_tos.verify|verify} messages.
     * @function encode
     * @memberof skill_xin_si_chao_tos
     * @static
     * @param {Iskill_xin_si_chao_tos} message skill_xin_si_chao_tos message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_xin_si_chao_tos.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.cardId != null && Object.hasOwnProperty.call(message, "cardId"))
            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.cardId);
        if (message.seq != null && Object.hasOwnProperty.call(message, "seq"))
            writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.seq);
        return writer;
    };

    /**
     * Encodes the specified skill_xin_si_chao_tos message, length delimited. Does not implicitly {@link skill_xin_si_chao_tos.verify|verify} messages.
     * @function encodeDelimited
     * @memberof skill_xin_si_chao_tos
     * @static
     * @param {Iskill_xin_si_chao_tos} message skill_xin_si_chao_tos message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_xin_si_chao_tos.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a skill_xin_si_chao_tos message from the specified reader or buffer.
     * @function decode
     * @memberof skill_xin_si_chao_tos
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {skill_xin_si_chao_tos} skill_xin_si_chao_tos
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_xin_si_chao_tos.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.skill_xin_si_chao_tos();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.cardId = reader.uint32();
                    break;
                }
            case 2: {
                    message.seq = reader.uint32();
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a skill_xin_si_chao_tos message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof skill_xin_si_chao_tos
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {skill_xin_si_chao_tos} skill_xin_si_chao_tos
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_xin_si_chao_tos.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a skill_xin_si_chao_tos message.
     * @function verify
     * @memberof skill_xin_si_chao_tos
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    skill_xin_si_chao_tos.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.cardId != null && message.hasOwnProperty("cardId"))
            if (!$util.isInteger(message.cardId))
                return "cardId: integer expected";
        if (message.seq != null && message.hasOwnProperty("seq"))
            if (!$util.isInteger(message.seq))
                return "seq: integer expected";
        return null;
    };

    /**
     * Creates a skill_xin_si_chao_tos message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof skill_xin_si_chao_tos
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {skill_xin_si_chao_tos} skill_xin_si_chao_tos
     */
    skill_xin_si_chao_tos.fromObject = function fromObject(object) {
        if (object instanceof $root.skill_xin_si_chao_tos)
            return object;
        var message = new $root.skill_xin_si_chao_tos();
        if (object.cardId != null)
            message.cardId = object.cardId >>> 0;
        if (object.seq != null)
            message.seq = object.seq >>> 0;
        return message;
    };

    /**
     * Creates a plain object from a skill_xin_si_chao_tos message. Also converts values to other types if specified.
     * @function toObject
     * @memberof skill_xin_si_chao_tos
     * @static
     * @param {skill_xin_si_chao_tos} message skill_xin_si_chao_tos
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    skill_xin_si_chao_tos.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults) {
            object.cardId = 0;
            object.seq = 0;
        }
        if (message.cardId != null && message.hasOwnProperty("cardId"))
            object.cardId = message.cardId;
        if (message.seq != null && message.hasOwnProperty("seq"))
            object.seq = message.seq;
        return object;
    };

    /**
     * Converts this skill_xin_si_chao_tos to JSON.
     * @function toJSON
     * @memberof skill_xin_si_chao_tos
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    skill_xin_si_chao_tos.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for skill_xin_si_chao_tos
     * @function getTypeUrl
     * @memberof skill_xin_si_chao_tos
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    skill_xin_si_chao_tos.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/skill_xin_si_chao_tos";
    };

    return skill_xin_si_chao_tos;
})();

$root.skill_xin_si_chao_toc = (function() {

    /**
     * Properties of a skill_xin_si_chao_toc.
     * @exports Iskill_xin_si_chao_toc
     * @interface Iskill_xin_si_chao_toc
     * @property {number|null} [playerId] skill_xin_si_chao_toc playerId
     */

    /**
     * Constructs a new skill_xin_si_chao_toc.
     * @exports skill_xin_si_chao_toc
     * @classdesc Represents a skill_xin_si_chao_toc.
     * @implements Iskill_xin_si_chao_toc
     * @constructor
     * @param {Iskill_xin_si_chao_toc=} [properties] Properties to set
     */
    function skill_xin_si_chao_toc(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * skill_xin_si_chao_toc playerId.
     * @member {number} playerId
     * @memberof skill_xin_si_chao_toc
     * @instance
     */
    skill_xin_si_chao_toc.prototype.playerId = 0;

    /**
     * Creates a new skill_xin_si_chao_toc instance using the specified properties.
     * @function create
     * @memberof skill_xin_si_chao_toc
     * @static
     * @param {Iskill_xin_si_chao_toc=} [properties] Properties to set
     * @returns {skill_xin_si_chao_toc} skill_xin_si_chao_toc instance
     */
    skill_xin_si_chao_toc.create = function create(properties) {
        return new skill_xin_si_chao_toc(properties);
    };

    /**
     * Encodes the specified skill_xin_si_chao_toc message. Does not implicitly {@link skill_xin_si_chao_toc.verify|verify} messages.
     * @function encode
     * @memberof skill_xin_si_chao_toc
     * @static
     * @param {Iskill_xin_si_chao_toc} message skill_xin_si_chao_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_xin_si_chao_toc.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.playerId != null && Object.hasOwnProperty.call(message, "playerId"))
            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.playerId);
        return writer;
    };

    /**
     * Encodes the specified skill_xin_si_chao_toc message, length delimited. Does not implicitly {@link skill_xin_si_chao_toc.verify|verify} messages.
     * @function encodeDelimited
     * @memberof skill_xin_si_chao_toc
     * @static
     * @param {Iskill_xin_si_chao_toc} message skill_xin_si_chao_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_xin_si_chao_toc.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a skill_xin_si_chao_toc message from the specified reader or buffer.
     * @function decode
     * @memberof skill_xin_si_chao_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {skill_xin_si_chao_toc} skill_xin_si_chao_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_xin_si_chao_toc.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.skill_xin_si_chao_toc();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.playerId = reader.uint32();
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a skill_xin_si_chao_toc message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof skill_xin_si_chao_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {skill_xin_si_chao_toc} skill_xin_si_chao_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_xin_si_chao_toc.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a skill_xin_si_chao_toc message.
     * @function verify
     * @memberof skill_xin_si_chao_toc
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    skill_xin_si_chao_toc.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            if (!$util.isInteger(message.playerId))
                return "playerId: integer expected";
        return null;
    };

    /**
     * Creates a skill_xin_si_chao_toc message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof skill_xin_si_chao_toc
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {skill_xin_si_chao_toc} skill_xin_si_chao_toc
     */
    skill_xin_si_chao_toc.fromObject = function fromObject(object) {
        if (object instanceof $root.skill_xin_si_chao_toc)
            return object;
        var message = new $root.skill_xin_si_chao_toc();
        if (object.playerId != null)
            message.playerId = object.playerId >>> 0;
        return message;
    };

    /**
     * Creates a plain object from a skill_xin_si_chao_toc message. Also converts values to other types if specified.
     * @function toObject
     * @memberof skill_xin_si_chao_toc
     * @static
     * @param {skill_xin_si_chao_toc} message skill_xin_si_chao_toc
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    skill_xin_si_chao_toc.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults)
            object.playerId = 0;
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            object.playerId = message.playerId;
        return object;
    };

    /**
     * Converts this skill_xin_si_chao_toc to JSON.
     * @function toJSON
     * @memberof skill_xin_si_chao_toc
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    skill_xin_si_chao_toc.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for skill_xin_si_chao_toc
     * @function getTypeUrl
     * @memberof skill_xin_si_chao_toc
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    skill_xin_si_chao_toc.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/skill_xin_si_chao_toc";
    };

    return skill_xin_si_chao_toc;
})();

$root.skill_shi_si_toc = (function() {

    /**
     * Properties of a skill_shi_si_toc.
     * @exports Iskill_shi_si_toc
     * @interface Iskill_shi_si_toc
     * @property {number|null} [playerId] skill_shi_si_toc playerId
     */

    /**
     * Constructs a new skill_shi_si_toc.
     * @exports skill_shi_si_toc
     * @classdesc Represents a skill_shi_si_toc.
     * @implements Iskill_shi_si_toc
     * @constructor
     * @param {Iskill_shi_si_toc=} [properties] Properties to set
     */
    function skill_shi_si_toc(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * skill_shi_si_toc playerId.
     * @member {number} playerId
     * @memberof skill_shi_si_toc
     * @instance
     */
    skill_shi_si_toc.prototype.playerId = 0;

    /**
     * Creates a new skill_shi_si_toc instance using the specified properties.
     * @function create
     * @memberof skill_shi_si_toc
     * @static
     * @param {Iskill_shi_si_toc=} [properties] Properties to set
     * @returns {skill_shi_si_toc} skill_shi_si_toc instance
     */
    skill_shi_si_toc.create = function create(properties) {
        return new skill_shi_si_toc(properties);
    };

    /**
     * Encodes the specified skill_shi_si_toc message. Does not implicitly {@link skill_shi_si_toc.verify|verify} messages.
     * @function encode
     * @memberof skill_shi_si_toc
     * @static
     * @param {Iskill_shi_si_toc} message skill_shi_si_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_shi_si_toc.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.playerId != null && Object.hasOwnProperty.call(message, "playerId"))
            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.playerId);
        return writer;
    };

    /**
     * Encodes the specified skill_shi_si_toc message, length delimited. Does not implicitly {@link skill_shi_si_toc.verify|verify} messages.
     * @function encodeDelimited
     * @memberof skill_shi_si_toc
     * @static
     * @param {Iskill_shi_si_toc} message skill_shi_si_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_shi_si_toc.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a skill_shi_si_toc message from the specified reader or buffer.
     * @function decode
     * @memberof skill_shi_si_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {skill_shi_si_toc} skill_shi_si_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_shi_si_toc.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.skill_shi_si_toc();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.playerId = reader.uint32();
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a skill_shi_si_toc message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof skill_shi_si_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {skill_shi_si_toc} skill_shi_si_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_shi_si_toc.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a skill_shi_si_toc message.
     * @function verify
     * @memberof skill_shi_si_toc
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    skill_shi_si_toc.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            if (!$util.isInteger(message.playerId))
                return "playerId: integer expected";
        return null;
    };

    /**
     * Creates a skill_shi_si_toc message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof skill_shi_si_toc
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {skill_shi_si_toc} skill_shi_si_toc
     */
    skill_shi_si_toc.fromObject = function fromObject(object) {
        if (object instanceof $root.skill_shi_si_toc)
            return object;
        var message = new $root.skill_shi_si_toc();
        if (object.playerId != null)
            message.playerId = object.playerId >>> 0;
        return message;
    };

    /**
     * Creates a plain object from a skill_shi_si_toc message. Also converts values to other types if specified.
     * @function toObject
     * @memberof skill_shi_si_toc
     * @static
     * @param {skill_shi_si_toc} message skill_shi_si_toc
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    skill_shi_si_toc.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults)
            object.playerId = 0;
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            object.playerId = message.playerId;
        return object;
    };

    /**
     * Converts this skill_shi_si_toc to JSON.
     * @function toJSON
     * @memberof skill_shi_si_toc
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    skill_shi_si_toc.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for skill_shi_si_toc
     * @function getTypeUrl
     * @memberof skill_shi_si_toc
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    skill_shi_si_toc.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/skill_shi_si_toc";
    };

    return skill_shi_si_toc;
})();

$root.skill_wait_for_ru_gui_toc = (function() {

    /**
     * Properties of a skill_wait_for_ru_gui_toc.
     * @exports Iskill_wait_for_ru_gui_toc
     * @interface Iskill_wait_for_ru_gui_toc
     * @property {number|null} [playerId] skill_wait_for_ru_gui_toc playerId
     * @property {number|null} [waitingSecond] skill_wait_for_ru_gui_toc waitingSecond
     * @property {number|null} [seq] skill_wait_for_ru_gui_toc seq
     */

    /**
     * Constructs a new skill_wait_for_ru_gui_toc.
     * @exports skill_wait_for_ru_gui_toc
     * @classdesc Represents a skill_wait_for_ru_gui_toc.
     * @implements Iskill_wait_for_ru_gui_toc
     * @constructor
     * @param {Iskill_wait_for_ru_gui_toc=} [properties] Properties to set
     */
    function skill_wait_for_ru_gui_toc(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * skill_wait_for_ru_gui_toc playerId.
     * @member {number} playerId
     * @memberof skill_wait_for_ru_gui_toc
     * @instance
     */
    skill_wait_for_ru_gui_toc.prototype.playerId = 0;

    /**
     * skill_wait_for_ru_gui_toc waitingSecond.
     * @member {number} waitingSecond
     * @memberof skill_wait_for_ru_gui_toc
     * @instance
     */
    skill_wait_for_ru_gui_toc.prototype.waitingSecond = 0;

    /**
     * skill_wait_for_ru_gui_toc seq.
     * @member {number} seq
     * @memberof skill_wait_for_ru_gui_toc
     * @instance
     */
    skill_wait_for_ru_gui_toc.prototype.seq = 0;

    /**
     * Creates a new skill_wait_for_ru_gui_toc instance using the specified properties.
     * @function create
     * @memberof skill_wait_for_ru_gui_toc
     * @static
     * @param {Iskill_wait_for_ru_gui_toc=} [properties] Properties to set
     * @returns {skill_wait_for_ru_gui_toc} skill_wait_for_ru_gui_toc instance
     */
    skill_wait_for_ru_gui_toc.create = function create(properties) {
        return new skill_wait_for_ru_gui_toc(properties);
    };

    /**
     * Encodes the specified skill_wait_for_ru_gui_toc message. Does not implicitly {@link skill_wait_for_ru_gui_toc.verify|verify} messages.
     * @function encode
     * @memberof skill_wait_for_ru_gui_toc
     * @static
     * @param {Iskill_wait_for_ru_gui_toc} message skill_wait_for_ru_gui_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_wait_for_ru_gui_toc.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.playerId != null && Object.hasOwnProperty.call(message, "playerId"))
            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.playerId);
        if (message.waitingSecond != null && Object.hasOwnProperty.call(message, "waitingSecond"))
            writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.waitingSecond);
        if (message.seq != null && Object.hasOwnProperty.call(message, "seq"))
            writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.seq);
        return writer;
    };

    /**
     * Encodes the specified skill_wait_for_ru_gui_toc message, length delimited. Does not implicitly {@link skill_wait_for_ru_gui_toc.verify|verify} messages.
     * @function encodeDelimited
     * @memberof skill_wait_for_ru_gui_toc
     * @static
     * @param {Iskill_wait_for_ru_gui_toc} message skill_wait_for_ru_gui_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_wait_for_ru_gui_toc.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a skill_wait_for_ru_gui_toc message from the specified reader or buffer.
     * @function decode
     * @memberof skill_wait_for_ru_gui_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {skill_wait_for_ru_gui_toc} skill_wait_for_ru_gui_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_wait_for_ru_gui_toc.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.skill_wait_for_ru_gui_toc();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.playerId = reader.uint32();
                    break;
                }
            case 2: {
                    message.waitingSecond = reader.uint32();
                    break;
                }
            case 3: {
                    message.seq = reader.uint32();
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a skill_wait_for_ru_gui_toc message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof skill_wait_for_ru_gui_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {skill_wait_for_ru_gui_toc} skill_wait_for_ru_gui_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_wait_for_ru_gui_toc.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a skill_wait_for_ru_gui_toc message.
     * @function verify
     * @memberof skill_wait_for_ru_gui_toc
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    skill_wait_for_ru_gui_toc.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            if (!$util.isInteger(message.playerId))
                return "playerId: integer expected";
        if (message.waitingSecond != null && message.hasOwnProperty("waitingSecond"))
            if (!$util.isInteger(message.waitingSecond))
                return "waitingSecond: integer expected";
        if (message.seq != null && message.hasOwnProperty("seq"))
            if (!$util.isInteger(message.seq))
                return "seq: integer expected";
        return null;
    };

    /**
     * Creates a skill_wait_for_ru_gui_toc message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof skill_wait_for_ru_gui_toc
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {skill_wait_for_ru_gui_toc} skill_wait_for_ru_gui_toc
     */
    skill_wait_for_ru_gui_toc.fromObject = function fromObject(object) {
        if (object instanceof $root.skill_wait_for_ru_gui_toc)
            return object;
        var message = new $root.skill_wait_for_ru_gui_toc();
        if (object.playerId != null)
            message.playerId = object.playerId >>> 0;
        if (object.waitingSecond != null)
            message.waitingSecond = object.waitingSecond >>> 0;
        if (object.seq != null)
            message.seq = object.seq >>> 0;
        return message;
    };

    /**
     * Creates a plain object from a skill_wait_for_ru_gui_toc message. Also converts values to other types if specified.
     * @function toObject
     * @memberof skill_wait_for_ru_gui_toc
     * @static
     * @param {skill_wait_for_ru_gui_toc} message skill_wait_for_ru_gui_toc
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    skill_wait_for_ru_gui_toc.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults) {
            object.playerId = 0;
            object.waitingSecond = 0;
            object.seq = 0;
        }
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            object.playerId = message.playerId;
        if (message.waitingSecond != null && message.hasOwnProperty("waitingSecond"))
            object.waitingSecond = message.waitingSecond;
        if (message.seq != null && message.hasOwnProperty("seq"))
            object.seq = message.seq;
        return object;
    };

    /**
     * Converts this skill_wait_for_ru_gui_toc to JSON.
     * @function toJSON
     * @memberof skill_wait_for_ru_gui_toc
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    skill_wait_for_ru_gui_toc.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for skill_wait_for_ru_gui_toc
     * @function getTypeUrl
     * @memberof skill_wait_for_ru_gui_toc
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    skill_wait_for_ru_gui_toc.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/skill_wait_for_ru_gui_toc";
    };

    return skill_wait_for_ru_gui_toc;
})();

$root.skill_ru_gui_tos = (function() {

    /**
     * Properties of a skill_ru_gui_tos.
     * @exports Iskill_ru_gui_tos
     * @interface Iskill_ru_gui_tos
     * @property {boolean|null} [enable] skill_ru_gui_tos enable
     * @property {number|null} [cardId] skill_ru_gui_tos cardId
     * @property {number|null} [seq] skill_ru_gui_tos seq
     */

    /**
     * Constructs a new skill_ru_gui_tos.
     * @exports skill_ru_gui_tos
     * @classdesc Represents a skill_ru_gui_tos.
     * @implements Iskill_ru_gui_tos
     * @constructor
     * @param {Iskill_ru_gui_tos=} [properties] Properties to set
     */
    function skill_ru_gui_tos(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * skill_ru_gui_tos enable.
     * @member {boolean} enable
     * @memberof skill_ru_gui_tos
     * @instance
     */
    skill_ru_gui_tos.prototype.enable = false;

    /**
     * skill_ru_gui_tos cardId.
     * @member {number} cardId
     * @memberof skill_ru_gui_tos
     * @instance
     */
    skill_ru_gui_tos.prototype.cardId = 0;

    /**
     * skill_ru_gui_tos seq.
     * @member {number} seq
     * @memberof skill_ru_gui_tos
     * @instance
     */
    skill_ru_gui_tos.prototype.seq = 0;

    /**
     * Creates a new skill_ru_gui_tos instance using the specified properties.
     * @function create
     * @memberof skill_ru_gui_tos
     * @static
     * @param {Iskill_ru_gui_tos=} [properties] Properties to set
     * @returns {skill_ru_gui_tos} skill_ru_gui_tos instance
     */
    skill_ru_gui_tos.create = function create(properties) {
        return new skill_ru_gui_tos(properties);
    };

    /**
     * Encodes the specified skill_ru_gui_tos message. Does not implicitly {@link skill_ru_gui_tos.verify|verify} messages.
     * @function encode
     * @memberof skill_ru_gui_tos
     * @static
     * @param {Iskill_ru_gui_tos} message skill_ru_gui_tos message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_ru_gui_tos.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.enable != null && Object.hasOwnProperty.call(message, "enable"))
            writer.uint32(/* id 1, wireType 0 =*/8).bool(message.enable);
        if (message.cardId != null && Object.hasOwnProperty.call(message, "cardId"))
            writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.cardId);
        if (message.seq != null && Object.hasOwnProperty.call(message, "seq"))
            writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.seq);
        return writer;
    };

    /**
     * Encodes the specified skill_ru_gui_tos message, length delimited. Does not implicitly {@link skill_ru_gui_tos.verify|verify} messages.
     * @function encodeDelimited
     * @memberof skill_ru_gui_tos
     * @static
     * @param {Iskill_ru_gui_tos} message skill_ru_gui_tos message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_ru_gui_tos.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a skill_ru_gui_tos message from the specified reader or buffer.
     * @function decode
     * @memberof skill_ru_gui_tos
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {skill_ru_gui_tos} skill_ru_gui_tos
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_ru_gui_tos.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.skill_ru_gui_tos();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.enable = reader.bool();
                    break;
                }
            case 2: {
                    message.cardId = reader.uint32();
                    break;
                }
            case 3: {
                    message.seq = reader.uint32();
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a skill_ru_gui_tos message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof skill_ru_gui_tos
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {skill_ru_gui_tos} skill_ru_gui_tos
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_ru_gui_tos.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a skill_ru_gui_tos message.
     * @function verify
     * @memberof skill_ru_gui_tos
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    skill_ru_gui_tos.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.enable != null && message.hasOwnProperty("enable"))
            if (typeof message.enable !== "boolean")
                return "enable: boolean expected";
        if (message.cardId != null && message.hasOwnProperty("cardId"))
            if (!$util.isInteger(message.cardId))
                return "cardId: integer expected";
        if (message.seq != null && message.hasOwnProperty("seq"))
            if (!$util.isInteger(message.seq))
                return "seq: integer expected";
        return null;
    };

    /**
     * Creates a skill_ru_gui_tos message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof skill_ru_gui_tos
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {skill_ru_gui_tos} skill_ru_gui_tos
     */
    skill_ru_gui_tos.fromObject = function fromObject(object) {
        if (object instanceof $root.skill_ru_gui_tos)
            return object;
        var message = new $root.skill_ru_gui_tos();
        if (object.enable != null)
            message.enable = Boolean(object.enable);
        if (object.cardId != null)
            message.cardId = object.cardId >>> 0;
        if (object.seq != null)
            message.seq = object.seq >>> 0;
        return message;
    };

    /**
     * Creates a plain object from a skill_ru_gui_tos message. Also converts values to other types if specified.
     * @function toObject
     * @memberof skill_ru_gui_tos
     * @static
     * @param {skill_ru_gui_tos} message skill_ru_gui_tos
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    skill_ru_gui_tos.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults) {
            object.enable = false;
            object.cardId = 0;
            object.seq = 0;
        }
        if (message.enable != null && message.hasOwnProperty("enable"))
            object.enable = message.enable;
        if (message.cardId != null && message.hasOwnProperty("cardId"))
            object.cardId = message.cardId;
        if (message.seq != null && message.hasOwnProperty("seq"))
            object.seq = message.seq;
        return object;
    };

    /**
     * Converts this skill_ru_gui_tos to JSON.
     * @function toJSON
     * @memberof skill_ru_gui_tos
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    skill_ru_gui_tos.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for skill_ru_gui_tos
     * @function getTypeUrl
     * @memberof skill_ru_gui_tos
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    skill_ru_gui_tos.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/skill_ru_gui_tos";
    };

    return skill_ru_gui_tos;
})();

$root.skill_ru_gui_toc = (function() {

    /**
     * Properties of a skill_ru_gui_toc.
     * @exports Iskill_ru_gui_toc
     * @interface Iskill_ru_gui_toc
     * @property {number|null} [playerId] skill_ru_gui_toc playerId
     * @property {number|null} [cardId] skill_ru_gui_toc cardId
     * @property {boolean|null} [enable] skill_ru_gui_toc enable
     */

    /**
     * Constructs a new skill_ru_gui_toc.
     * @exports skill_ru_gui_toc
     * @classdesc Represents a skill_ru_gui_toc.
     * @implements Iskill_ru_gui_toc
     * @constructor
     * @param {Iskill_ru_gui_toc=} [properties] Properties to set
     */
    function skill_ru_gui_toc(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * skill_ru_gui_toc playerId.
     * @member {number} playerId
     * @memberof skill_ru_gui_toc
     * @instance
     */
    skill_ru_gui_toc.prototype.playerId = 0;

    /**
     * skill_ru_gui_toc cardId.
     * @member {number} cardId
     * @memberof skill_ru_gui_toc
     * @instance
     */
    skill_ru_gui_toc.prototype.cardId = 0;

    /**
     * skill_ru_gui_toc enable.
     * @member {boolean} enable
     * @memberof skill_ru_gui_toc
     * @instance
     */
    skill_ru_gui_toc.prototype.enable = false;

    /**
     * Creates a new skill_ru_gui_toc instance using the specified properties.
     * @function create
     * @memberof skill_ru_gui_toc
     * @static
     * @param {Iskill_ru_gui_toc=} [properties] Properties to set
     * @returns {skill_ru_gui_toc} skill_ru_gui_toc instance
     */
    skill_ru_gui_toc.create = function create(properties) {
        return new skill_ru_gui_toc(properties);
    };

    /**
     * Encodes the specified skill_ru_gui_toc message. Does not implicitly {@link skill_ru_gui_toc.verify|verify} messages.
     * @function encode
     * @memberof skill_ru_gui_toc
     * @static
     * @param {Iskill_ru_gui_toc} message skill_ru_gui_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_ru_gui_toc.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.playerId != null && Object.hasOwnProperty.call(message, "playerId"))
            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.playerId);
        if (message.cardId != null && Object.hasOwnProperty.call(message, "cardId"))
            writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.cardId);
        if (message.enable != null && Object.hasOwnProperty.call(message, "enable"))
            writer.uint32(/* id 3, wireType 0 =*/24).bool(message.enable);
        return writer;
    };

    /**
     * Encodes the specified skill_ru_gui_toc message, length delimited. Does not implicitly {@link skill_ru_gui_toc.verify|verify} messages.
     * @function encodeDelimited
     * @memberof skill_ru_gui_toc
     * @static
     * @param {Iskill_ru_gui_toc} message skill_ru_gui_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_ru_gui_toc.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a skill_ru_gui_toc message from the specified reader or buffer.
     * @function decode
     * @memberof skill_ru_gui_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {skill_ru_gui_toc} skill_ru_gui_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_ru_gui_toc.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.skill_ru_gui_toc();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.playerId = reader.uint32();
                    break;
                }
            case 2: {
                    message.cardId = reader.uint32();
                    break;
                }
            case 3: {
                    message.enable = reader.bool();
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a skill_ru_gui_toc message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof skill_ru_gui_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {skill_ru_gui_toc} skill_ru_gui_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_ru_gui_toc.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a skill_ru_gui_toc message.
     * @function verify
     * @memberof skill_ru_gui_toc
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    skill_ru_gui_toc.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            if (!$util.isInteger(message.playerId))
                return "playerId: integer expected";
        if (message.cardId != null && message.hasOwnProperty("cardId"))
            if (!$util.isInteger(message.cardId))
                return "cardId: integer expected";
        if (message.enable != null && message.hasOwnProperty("enable"))
            if (typeof message.enable !== "boolean")
                return "enable: boolean expected";
        return null;
    };

    /**
     * Creates a skill_ru_gui_toc message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof skill_ru_gui_toc
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {skill_ru_gui_toc} skill_ru_gui_toc
     */
    skill_ru_gui_toc.fromObject = function fromObject(object) {
        if (object instanceof $root.skill_ru_gui_toc)
            return object;
        var message = new $root.skill_ru_gui_toc();
        if (object.playerId != null)
            message.playerId = object.playerId >>> 0;
        if (object.cardId != null)
            message.cardId = object.cardId >>> 0;
        if (object.enable != null)
            message.enable = Boolean(object.enable);
        return message;
    };

    /**
     * Creates a plain object from a skill_ru_gui_toc message. Also converts values to other types if specified.
     * @function toObject
     * @memberof skill_ru_gui_toc
     * @static
     * @param {skill_ru_gui_toc} message skill_ru_gui_toc
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    skill_ru_gui_toc.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults) {
            object.playerId = 0;
            object.cardId = 0;
            object.enable = false;
        }
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            object.playerId = message.playerId;
        if (message.cardId != null && message.hasOwnProperty("cardId"))
            object.cardId = message.cardId;
        if (message.enable != null && message.hasOwnProperty("enable"))
            object.enable = message.enable;
        return object;
    };

    /**
     * Converts this skill_ru_gui_toc to JSON.
     * @function toJSON
     * @memberof skill_ru_gui_toc
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    skill_ru_gui_toc.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for skill_ru_gui_toc
     * @function getTypeUrl
     * @memberof skill_ru_gui_toc
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    skill_ru_gui_toc.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/skill_ru_gui_toc";
    };

    return skill_ru_gui_toc;
})();

$root.skill_wait_for_zhuan_jiao_toc = (function() {

    /**
     * Properties of a skill_wait_for_zhuan_jiao_toc.
     * @exports Iskill_wait_for_zhuan_jiao_toc
     * @interface Iskill_wait_for_zhuan_jiao_toc
     * @property {number|null} [playerId] skill_wait_for_zhuan_jiao_toc playerId
     * @property {number|null} [waitingSecond] skill_wait_for_zhuan_jiao_toc waitingSecond
     * @property {number|null} [seq] skill_wait_for_zhuan_jiao_toc seq
     */

    /**
     * Constructs a new skill_wait_for_zhuan_jiao_toc.
     * @exports skill_wait_for_zhuan_jiao_toc
     * @classdesc Represents a skill_wait_for_zhuan_jiao_toc.
     * @implements Iskill_wait_for_zhuan_jiao_toc
     * @constructor
     * @param {Iskill_wait_for_zhuan_jiao_toc=} [properties] Properties to set
     */
    function skill_wait_for_zhuan_jiao_toc(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * skill_wait_for_zhuan_jiao_toc playerId.
     * @member {number} playerId
     * @memberof skill_wait_for_zhuan_jiao_toc
     * @instance
     */
    skill_wait_for_zhuan_jiao_toc.prototype.playerId = 0;

    /**
     * skill_wait_for_zhuan_jiao_toc waitingSecond.
     * @member {number} waitingSecond
     * @memberof skill_wait_for_zhuan_jiao_toc
     * @instance
     */
    skill_wait_for_zhuan_jiao_toc.prototype.waitingSecond = 0;

    /**
     * skill_wait_for_zhuan_jiao_toc seq.
     * @member {number} seq
     * @memberof skill_wait_for_zhuan_jiao_toc
     * @instance
     */
    skill_wait_for_zhuan_jiao_toc.prototype.seq = 0;

    /**
     * Creates a new skill_wait_for_zhuan_jiao_toc instance using the specified properties.
     * @function create
     * @memberof skill_wait_for_zhuan_jiao_toc
     * @static
     * @param {Iskill_wait_for_zhuan_jiao_toc=} [properties] Properties to set
     * @returns {skill_wait_for_zhuan_jiao_toc} skill_wait_for_zhuan_jiao_toc instance
     */
    skill_wait_for_zhuan_jiao_toc.create = function create(properties) {
        return new skill_wait_for_zhuan_jiao_toc(properties);
    };

    /**
     * Encodes the specified skill_wait_for_zhuan_jiao_toc message. Does not implicitly {@link skill_wait_for_zhuan_jiao_toc.verify|verify} messages.
     * @function encode
     * @memberof skill_wait_for_zhuan_jiao_toc
     * @static
     * @param {Iskill_wait_for_zhuan_jiao_toc} message skill_wait_for_zhuan_jiao_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_wait_for_zhuan_jiao_toc.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.playerId != null && Object.hasOwnProperty.call(message, "playerId"))
            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.playerId);
        if (message.waitingSecond != null && Object.hasOwnProperty.call(message, "waitingSecond"))
            writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.waitingSecond);
        if (message.seq != null && Object.hasOwnProperty.call(message, "seq"))
            writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.seq);
        return writer;
    };

    /**
     * Encodes the specified skill_wait_for_zhuan_jiao_toc message, length delimited. Does not implicitly {@link skill_wait_for_zhuan_jiao_toc.verify|verify} messages.
     * @function encodeDelimited
     * @memberof skill_wait_for_zhuan_jiao_toc
     * @static
     * @param {Iskill_wait_for_zhuan_jiao_toc} message skill_wait_for_zhuan_jiao_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_wait_for_zhuan_jiao_toc.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a skill_wait_for_zhuan_jiao_toc message from the specified reader or buffer.
     * @function decode
     * @memberof skill_wait_for_zhuan_jiao_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {skill_wait_for_zhuan_jiao_toc} skill_wait_for_zhuan_jiao_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_wait_for_zhuan_jiao_toc.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.skill_wait_for_zhuan_jiao_toc();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.playerId = reader.uint32();
                    break;
                }
            case 2: {
                    message.waitingSecond = reader.uint32();
                    break;
                }
            case 3: {
                    message.seq = reader.uint32();
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a skill_wait_for_zhuan_jiao_toc message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof skill_wait_for_zhuan_jiao_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {skill_wait_for_zhuan_jiao_toc} skill_wait_for_zhuan_jiao_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_wait_for_zhuan_jiao_toc.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a skill_wait_for_zhuan_jiao_toc message.
     * @function verify
     * @memberof skill_wait_for_zhuan_jiao_toc
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    skill_wait_for_zhuan_jiao_toc.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            if (!$util.isInteger(message.playerId))
                return "playerId: integer expected";
        if (message.waitingSecond != null && message.hasOwnProperty("waitingSecond"))
            if (!$util.isInteger(message.waitingSecond))
                return "waitingSecond: integer expected";
        if (message.seq != null && message.hasOwnProperty("seq"))
            if (!$util.isInteger(message.seq))
                return "seq: integer expected";
        return null;
    };

    /**
     * Creates a skill_wait_for_zhuan_jiao_toc message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof skill_wait_for_zhuan_jiao_toc
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {skill_wait_for_zhuan_jiao_toc} skill_wait_for_zhuan_jiao_toc
     */
    skill_wait_for_zhuan_jiao_toc.fromObject = function fromObject(object) {
        if (object instanceof $root.skill_wait_for_zhuan_jiao_toc)
            return object;
        var message = new $root.skill_wait_for_zhuan_jiao_toc();
        if (object.playerId != null)
            message.playerId = object.playerId >>> 0;
        if (object.waitingSecond != null)
            message.waitingSecond = object.waitingSecond >>> 0;
        if (object.seq != null)
            message.seq = object.seq >>> 0;
        return message;
    };

    /**
     * Creates a plain object from a skill_wait_for_zhuan_jiao_toc message. Also converts values to other types if specified.
     * @function toObject
     * @memberof skill_wait_for_zhuan_jiao_toc
     * @static
     * @param {skill_wait_for_zhuan_jiao_toc} message skill_wait_for_zhuan_jiao_toc
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    skill_wait_for_zhuan_jiao_toc.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults) {
            object.playerId = 0;
            object.waitingSecond = 0;
            object.seq = 0;
        }
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            object.playerId = message.playerId;
        if (message.waitingSecond != null && message.hasOwnProperty("waitingSecond"))
            object.waitingSecond = message.waitingSecond;
        if (message.seq != null && message.hasOwnProperty("seq"))
            object.seq = message.seq;
        return object;
    };

    /**
     * Converts this skill_wait_for_zhuan_jiao_toc to JSON.
     * @function toJSON
     * @memberof skill_wait_for_zhuan_jiao_toc
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    skill_wait_for_zhuan_jiao_toc.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for skill_wait_for_zhuan_jiao_toc
     * @function getTypeUrl
     * @memberof skill_wait_for_zhuan_jiao_toc
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    skill_wait_for_zhuan_jiao_toc.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/skill_wait_for_zhuan_jiao_toc";
    };

    return skill_wait_for_zhuan_jiao_toc;
})();

$root.skill_zhuan_jiao_tos = (function() {

    /**
     * Properties of a skill_zhuan_jiao_tos.
     * @exports Iskill_zhuan_jiao_tos
     * @interface Iskill_zhuan_jiao_tos
     * @property {boolean|null} [enable] skill_zhuan_jiao_tos enable
     * @property {number|null} [cardId] skill_zhuan_jiao_tos cardId
     * @property {number|null} [targetPlayerId] skill_zhuan_jiao_tos targetPlayerId
     * @property {number|null} [seq] skill_zhuan_jiao_tos seq
     */

    /**
     * Constructs a new skill_zhuan_jiao_tos.
     * @exports skill_zhuan_jiao_tos
     * @classdesc Represents a skill_zhuan_jiao_tos.
     * @implements Iskill_zhuan_jiao_tos
     * @constructor
     * @param {Iskill_zhuan_jiao_tos=} [properties] Properties to set
     */
    function skill_zhuan_jiao_tos(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * skill_zhuan_jiao_tos enable.
     * @member {boolean} enable
     * @memberof skill_zhuan_jiao_tos
     * @instance
     */
    skill_zhuan_jiao_tos.prototype.enable = false;

    /**
     * skill_zhuan_jiao_tos cardId.
     * @member {number} cardId
     * @memberof skill_zhuan_jiao_tos
     * @instance
     */
    skill_zhuan_jiao_tos.prototype.cardId = 0;

    /**
     * skill_zhuan_jiao_tos targetPlayerId.
     * @member {number} targetPlayerId
     * @memberof skill_zhuan_jiao_tos
     * @instance
     */
    skill_zhuan_jiao_tos.prototype.targetPlayerId = 0;

    /**
     * skill_zhuan_jiao_tos seq.
     * @member {number} seq
     * @memberof skill_zhuan_jiao_tos
     * @instance
     */
    skill_zhuan_jiao_tos.prototype.seq = 0;

    /**
     * Creates a new skill_zhuan_jiao_tos instance using the specified properties.
     * @function create
     * @memberof skill_zhuan_jiao_tos
     * @static
     * @param {Iskill_zhuan_jiao_tos=} [properties] Properties to set
     * @returns {skill_zhuan_jiao_tos} skill_zhuan_jiao_tos instance
     */
    skill_zhuan_jiao_tos.create = function create(properties) {
        return new skill_zhuan_jiao_tos(properties);
    };

    /**
     * Encodes the specified skill_zhuan_jiao_tos message. Does not implicitly {@link skill_zhuan_jiao_tos.verify|verify} messages.
     * @function encode
     * @memberof skill_zhuan_jiao_tos
     * @static
     * @param {Iskill_zhuan_jiao_tos} message skill_zhuan_jiao_tos message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_zhuan_jiao_tos.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.enable != null && Object.hasOwnProperty.call(message, "enable"))
            writer.uint32(/* id 1, wireType 0 =*/8).bool(message.enable);
        if (message.cardId != null && Object.hasOwnProperty.call(message, "cardId"))
            writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.cardId);
        if (message.targetPlayerId != null && Object.hasOwnProperty.call(message, "targetPlayerId"))
            writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.targetPlayerId);
        if (message.seq != null && Object.hasOwnProperty.call(message, "seq"))
            writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.seq);
        return writer;
    };

    /**
     * Encodes the specified skill_zhuan_jiao_tos message, length delimited. Does not implicitly {@link skill_zhuan_jiao_tos.verify|verify} messages.
     * @function encodeDelimited
     * @memberof skill_zhuan_jiao_tos
     * @static
     * @param {Iskill_zhuan_jiao_tos} message skill_zhuan_jiao_tos message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_zhuan_jiao_tos.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a skill_zhuan_jiao_tos message from the specified reader or buffer.
     * @function decode
     * @memberof skill_zhuan_jiao_tos
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {skill_zhuan_jiao_tos} skill_zhuan_jiao_tos
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_zhuan_jiao_tos.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.skill_zhuan_jiao_tos();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.enable = reader.bool();
                    break;
                }
            case 2: {
                    message.cardId = reader.uint32();
                    break;
                }
            case 3: {
                    message.targetPlayerId = reader.uint32();
                    break;
                }
            case 4: {
                    message.seq = reader.uint32();
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a skill_zhuan_jiao_tos message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof skill_zhuan_jiao_tos
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {skill_zhuan_jiao_tos} skill_zhuan_jiao_tos
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_zhuan_jiao_tos.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a skill_zhuan_jiao_tos message.
     * @function verify
     * @memberof skill_zhuan_jiao_tos
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    skill_zhuan_jiao_tos.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.enable != null && message.hasOwnProperty("enable"))
            if (typeof message.enable !== "boolean")
                return "enable: boolean expected";
        if (message.cardId != null && message.hasOwnProperty("cardId"))
            if (!$util.isInteger(message.cardId))
                return "cardId: integer expected";
        if (message.targetPlayerId != null && message.hasOwnProperty("targetPlayerId"))
            if (!$util.isInteger(message.targetPlayerId))
                return "targetPlayerId: integer expected";
        if (message.seq != null && message.hasOwnProperty("seq"))
            if (!$util.isInteger(message.seq))
                return "seq: integer expected";
        return null;
    };

    /**
     * Creates a skill_zhuan_jiao_tos message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof skill_zhuan_jiao_tos
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {skill_zhuan_jiao_tos} skill_zhuan_jiao_tos
     */
    skill_zhuan_jiao_tos.fromObject = function fromObject(object) {
        if (object instanceof $root.skill_zhuan_jiao_tos)
            return object;
        var message = new $root.skill_zhuan_jiao_tos();
        if (object.enable != null)
            message.enable = Boolean(object.enable);
        if (object.cardId != null)
            message.cardId = object.cardId >>> 0;
        if (object.targetPlayerId != null)
            message.targetPlayerId = object.targetPlayerId >>> 0;
        if (object.seq != null)
            message.seq = object.seq >>> 0;
        return message;
    };

    /**
     * Creates a plain object from a skill_zhuan_jiao_tos message. Also converts values to other types if specified.
     * @function toObject
     * @memberof skill_zhuan_jiao_tos
     * @static
     * @param {skill_zhuan_jiao_tos} message skill_zhuan_jiao_tos
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    skill_zhuan_jiao_tos.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults) {
            object.enable = false;
            object.cardId = 0;
            object.targetPlayerId = 0;
            object.seq = 0;
        }
        if (message.enable != null && message.hasOwnProperty("enable"))
            object.enable = message.enable;
        if (message.cardId != null && message.hasOwnProperty("cardId"))
            object.cardId = message.cardId;
        if (message.targetPlayerId != null && message.hasOwnProperty("targetPlayerId"))
            object.targetPlayerId = message.targetPlayerId;
        if (message.seq != null && message.hasOwnProperty("seq"))
            object.seq = message.seq;
        return object;
    };

    /**
     * Converts this skill_zhuan_jiao_tos to JSON.
     * @function toJSON
     * @memberof skill_zhuan_jiao_tos
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    skill_zhuan_jiao_tos.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for skill_zhuan_jiao_tos
     * @function getTypeUrl
     * @memberof skill_zhuan_jiao_tos
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    skill_zhuan_jiao_tos.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/skill_zhuan_jiao_tos";
    };

    return skill_zhuan_jiao_tos;
})();

$root.skill_zhuan_jiao_toc = (function() {

    /**
     * Properties of a skill_zhuan_jiao_toc.
     * @exports Iskill_zhuan_jiao_toc
     * @interface Iskill_zhuan_jiao_toc
     * @property {number|null} [playerId] skill_zhuan_jiao_toc playerId
     * @property {number|null} [cardId] skill_zhuan_jiao_toc cardId
     * @property {number|null} [targetPlayerId] skill_zhuan_jiao_toc targetPlayerId
     */

    /**
     * Constructs a new skill_zhuan_jiao_toc.
     * @exports skill_zhuan_jiao_toc
     * @classdesc Represents a skill_zhuan_jiao_toc.
     * @implements Iskill_zhuan_jiao_toc
     * @constructor
     * @param {Iskill_zhuan_jiao_toc=} [properties] Properties to set
     */
    function skill_zhuan_jiao_toc(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * skill_zhuan_jiao_toc playerId.
     * @member {number} playerId
     * @memberof skill_zhuan_jiao_toc
     * @instance
     */
    skill_zhuan_jiao_toc.prototype.playerId = 0;

    /**
     * skill_zhuan_jiao_toc cardId.
     * @member {number} cardId
     * @memberof skill_zhuan_jiao_toc
     * @instance
     */
    skill_zhuan_jiao_toc.prototype.cardId = 0;

    /**
     * skill_zhuan_jiao_toc targetPlayerId.
     * @member {number} targetPlayerId
     * @memberof skill_zhuan_jiao_toc
     * @instance
     */
    skill_zhuan_jiao_toc.prototype.targetPlayerId = 0;

    /**
     * Creates a new skill_zhuan_jiao_toc instance using the specified properties.
     * @function create
     * @memberof skill_zhuan_jiao_toc
     * @static
     * @param {Iskill_zhuan_jiao_toc=} [properties] Properties to set
     * @returns {skill_zhuan_jiao_toc} skill_zhuan_jiao_toc instance
     */
    skill_zhuan_jiao_toc.create = function create(properties) {
        return new skill_zhuan_jiao_toc(properties);
    };

    /**
     * Encodes the specified skill_zhuan_jiao_toc message. Does not implicitly {@link skill_zhuan_jiao_toc.verify|verify} messages.
     * @function encode
     * @memberof skill_zhuan_jiao_toc
     * @static
     * @param {Iskill_zhuan_jiao_toc} message skill_zhuan_jiao_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_zhuan_jiao_toc.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.playerId != null && Object.hasOwnProperty.call(message, "playerId"))
            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.playerId);
        if (message.cardId != null && Object.hasOwnProperty.call(message, "cardId"))
            writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.cardId);
        if (message.targetPlayerId != null && Object.hasOwnProperty.call(message, "targetPlayerId"))
            writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.targetPlayerId);
        return writer;
    };

    /**
     * Encodes the specified skill_zhuan_jiao_toc message, length delimited. Does not implicitly {@link skill_zhuan_jiao_toc.verify|verify} messages.
     * @function encodeDelimited
     * @memberof skill_zhuan_jiao_toc
     * @static
     * @param {Iskill_zhuan_jiao_toc} message skill_zhuan_jiao_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_zhuan_jiao_toc.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a skill_zhuan_jiao_toc message from the specified reader or buffer.
     * @function decode
     * @memberof skill_zhuan_jiao_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {skill_zhuan_jiao_toc} skill_zhuan_jiao_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_zhuan_jiao_toc.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.skill_zhuan_jiao_toc();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.playerId = reader.uint32();
                    break;
                }
            case 2: {
                    message.cardId = reader.uint32();
                    break;
                }
            case 3: {
                    message.targetPlayerId = reader.uint32();
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a skill_zhuan_jiao_toc message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof skill_zhuan_jiao_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {skill_zhuan_jiao_toc} skill_zhuan_jiao_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_zhuan_jiao_toc.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a skill_zhuan_jiao_toc message.
     * @function verify
     * @memberof skill_zhuan_jiao_toc
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    skill_zhuan_jiao_toc.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            if (!$util.isInteger(message.playerId))
                return "playerId: integer expected";
        if (message.cardId != null && message.hasOwnProperty("cardId"))
            if (!$util.isInteger(message.cardId))
                return "cardId: integer expected";
        if (message.targetPlayerId != null && message.hasOwnProperty("targetPlayerId"))
            if (!$util.isInteger(message.targetPlayerId))
                return "targetPlayerId: integer expected";
        return null;
    };

    /**
     * Creates a skill_zhuan_jiao_toc message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof skill_zhuan_jiao_toc
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {skill_zhuan_jiao_toc} skill_zhuan_jiao_toc
     */
    skill_zhuan_jiao_toc.fromObject = function fromObject(object) {
        if (object instanceof $root.skill_zhuan_jiao_toc)
            return object;
        var message = new $root.skill_zhuan_jiao_toc();
        if (object.playerId != null)
            message.playerId = object.playerId >>> 0;
        if (object.cardId != null)
            message.cardId = object.cardId >>> 0;
        if (object.targetPlayerId != null)
            message.targetPlayerId = object.targetPlayerId >>> 0;
        return message;
    };

    /**
     * Creates a plain object from a skill_zhuan_jiao_toc message. Also converts values to other types if specified.
     * @function toObject
     * @memberof skill_zhuan_jiao_toc
     * @static
     * @param {skill_zhuan_jiao_toc} message skill_zhuan_jiao_toc
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    skill_zhuan_jiao_toc.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults) {
            object.playerId = 0;
            object.cardId = 0;
            object.targetPlayerId = 0;
        }
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            object.playerId = message.playerId;
        if (message.cardId != null && message.hasOwnProperty("cardId"))
            object.cardId = message.cardId;
        if (message.targetPlayerId != null && message.hasOwnProperty("targetPlayerId"))
            object.targetPlayerId = message.targetPlayerId;
        return object;
    };

    /**
     * Converts this skill_zhuan_jiao_toc to JSON.
     * @function toJSON
     * @memberof skill_zhuan_jiao_toc
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    skill_zhuan_jiao_toc.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for skill_zhuan_jiao_toc
     * @function getTypeUrl
     * @memberof skill_zhuan_jiao_toc
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    skill_zhuan_jiao_toc.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/skill_zhuan_jiao_toc";
    };

    return skill_zhuan_jiao_toc;
})();

$root.skill_ming_er_toc = (function() {

    /**
     * Properties of a skill_ming_er_toc.
     * @exports Iskill_ming_er_toc
     * @interface Iskill_ming_er_toc
     * @property {number|null} [playerId] skill_ming_er_toc playerId
     */

    /**
     * Constructs a new skill_ming_er_toc.
     * @exports skill_ming_er_toc
     * @classdesc Represents a skill_ming_er_toc.
     * @implements Iskill_ming_er_toc
     * @constructor
     * @param {Iskill_ming_er_toc=} [properties] Properties to set
     */
    function skill_ming_er_toc(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * skill_ming_er_toc playerId.
     * @member {number} playerId
     * @memberof skill_ming_er_toc
     * @instance
     */
    skill_ming_er_toc.prototype.playerId = 0;

    /**
     * Creates a new skill_ming_er_toc instance using the specified properties.
     * @function create
     * @memberof skill_ming_er_toc
     * @static
     * @param {Iskill_ming_er_toc=} [properties] Properties to set
     * @returns {skill_ming_er_toc} skill_ming_er_toc instance
     */
    skill_ming_er_toc.create = function create(properties) {
        return new skill_ming_er_toc(properties);
    };

    /**
     * Encodes the specified skill_ming_er_toc message. Does not implicitly {@link skill_ming_er_toc.verify|verify} messages.
     * @function encode
     * @memberof skill_ming_er_toc
     * @static
     * @param {Iskill_ming_er_toc} message skill_ming_er_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_ming_er_toc.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.playerId != null && Object.hasOwnProperty.call(message, "playerId"))
            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.playerId);
        return writer;
    };

    /**
     * Encodes the specified skill_ming_er_toc message, length delimited. Does not implicitly {@link skill_ming_er_toc.verify|verify} messages.
     * @function encodeDelimited
     * @memberof skill_ming_er_toc
     * @static
     * @param {Iskill_ming_er_toc} message skill_ming_er_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_ming_er_toc.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a skill_ming_er_toc message from the specified reader or buffer.
     * @function decode
     * @memberof skill_ming_er_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {skill_ming_er_toc} skill_ming_er_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_ming_er_toc.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.skill_ming_er_toc();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.playerId = reader.uint32();
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a skill_ming_er_toc message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof skill_ming_er_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {skill_ming_er_toc} skill_ming_er_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_ming_er_toc.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a skill_ming_er_toc message.
     * @function verify
     * @memberof skill_ming_er_toc
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    skill_ming_er_toc.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            if (!$util.isInteger(message.playerId))
                return "playerId: integer expected";
        return null;
    };

    /**
     * Creates a skill_ming_er_toc message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof skill_ming_er_toc
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {skill_ming_er_toc} skill_ming_er_toc
     */
    skill_ming_er_toc.fromObject = function fromObject(object) {
        if (object instanceof $root.skill_ming_er_toc)
            return object;
        var message = new $root.skill_ming_er_toc();
        if (object.playerId != null)
            message.playerId = object.playerId >>> 0;
        return message;
    };

    /**
     * Creates a plain object from a skill_ming_er_toc message. Also converts values to other types if specified.
     * @function toObject
     * @memberof skill_ming_er_toc
     * @static
     * @param {skill_ming_er_toc} message skill_ming_er_toc
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    skill_ming_er_toc.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults)
            object.playerId = 0;
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            object.playerId = message.playerId;
        return object;
    };

    /**
     * Converts this skill_ming_er_toc to JSON.
     * @function toJSON
     * @memberof skill_ming_er_toc
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    skill_ming_er_toc.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for skill_ming_er_toc
     * @function getTypeUrl
     * @memberof skill_ming_er_toc
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    skill_ming_er_toc.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/skill_ming_er_toc";
    };

    return skill_ming_er_toc;
})();

$root.skill_ji_zhi_tos = (function() {

    /**
     * Properties of a skill_ji_zhi_tos.
     * @exports Iskill_ji_zhi_tos
     * @interface Iskill_ji_zhi_tos
     * @property {number|null} [seq] skill_ji_zhi_tos seq
     */

    /**
     * Constructs a new skill_ji_zhi_tos.
     * @exports skill_ji_zhi_tos
     * @classdesc Represents a skill_ji_zhi_tos.
     * @implements Iskill_ji_zhi_tos
     * @constructor
     * @param {Iskill_ji_zhi_tos=} [properties] Properties to set
     */
    function skill_ji_zhi_tos(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * skill_ji_zhi_tos seq.
     * @member {number} seq
     * @memberof skill_ji_zhi_tos
     * @instance
     */
    skill_ji_zhi_tos.prototype.seq = 0;

    /**
     * Creates a new skill_ji_zhi_tos instance using the specified properties.
     * @function create
     * @memberof skill_ji_zhi_tos
     * @static
     * @param {Iskill_ji_zhi_tos=} [properties] Properties to set
     * @returns {skill_ji_zhi_tos} skill_ji_zhi_tos instance
     */
    skill_ji_zhi_tos.create = function create(properties) {
        return new skill_ji_zhi_tos(properties);
    };

    /**
     * Encodes the specified skill_ji_zhi_tos message. Does not implicitly {@link skill_ji_zhi_tos.verify|verify} messages.
     * @function encode
     * @memberof skill_ji_zhi_tos
     * @static
     * @param {Iskill_ji_zhi_tos} message skill_ji_zhi_tos message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_ji_zhi_tos.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.seq != null && Object.hasOwnProperty.call(message, "seq"))
            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.seq);
        return writer;
    };

    /**
     * Encodes the specified skill_ji_zhi_tos message, length delimited. Does not implicitly {@link skill_ji_zhi_tos.verify|verify} messages.
     * @function encodeDelimited
     * @memberof skill_ji_zhi_tos
     * @static
     * @param {Iskill_ji_zhi_tos} message skill_ji_zhi_tos message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_ji_zhi_tos.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a skill_ji_zhi_tos message from the specified reader or buffer.
     * @function decode
     * @memberof skill_ji_zhi_tos
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {skill_ji_zhi_tos} skill_ji_zhi_tos
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_ji_zhi_tos.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.skill_ji_zhi_tos();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.seq = reader.uint32();
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a skill_ji_zhi_tos message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof skill_ji_zhi_tos
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {skill_ji_zhi_tos} skill_ji_zhi_tos
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_ji_zhi_tos.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a skill_ji_zhi_tos message.
     * @function verify
     * @memberof skill_ji_zhi_tos
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    skill_ji_zhi_tos.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.seq != null && message.hasOwnProperty("seq"))
            if (!$util.isInteger(message.seq))
                return "seq: integer expected";
        return null;
    };

    /**
     * Creates a skill_ji_zhi_tos message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof skill_ji_zhi_tos
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {skill_ji_zhi_tos} skill_ji_zhi_tos
     */
    skill_ji_zhi_tos.fromObject = function fromObject(object) {
        if (object instanceof $root.skill_ji_zhi_tos)
            return object;
        var message = new $root.skill_ji_zhi_tos();
        if (object.seq != null)
            message.seq = object.seq >>> 0;
        return message;
    };

    /**
     * Creates a plain object from a skill_ji_zhi_tos message. Also converts values to other types if specified.
     * @function toObject
     * @memberof skill_ji_zhi_tos
     * @static
     * @param {skill_ji_zhi_tos} message skill_ji_zhi_tos
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    skill_ji_zhi_tos.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults)
            object.seq = 0;
        if (message.seq != null && message.hasOwnProperty("seq"))
            object.seq = message.seq;
        return object;
    };

    /**
     * Converts this skill_ji_zhi_tos to JSON.
     * @function toJSON
     * @memberof skill_ji_zhi_tos
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    skill_ji_zhi_tos.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for skill_ji_zhi_tos
     * @function getTypeUrl
     * @memberof skill_ji_zhi_tos
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    skill_ji_zhi_tos.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/skill_ji_zhi_tos";
    };

    return skill_ji_zhi_tos;
})();

$root.skill_ji_zhi_toc = (function() {

    /**
     * Properties of a skill_ji_zhi_toc.
     * @exports Iskill_ji_zhi_toc
     * @interface Iskill_ji_zhi_toc
     * @property {number|null} [playerId] skill_ji_zhi_toc playerId
     */

    /**
     * Constructs a new skill_ji_zhi_toc.
     * @exports skill_ji_zhi_toc
     * @classdesc Represents a skill_ji_zhi_toc.
     * @implements Iskill_ji_zhi_toc
     * @constructor
     * @param {Iskill_ji_zhi_toc=} [properties] Properties to set
     */
    function skill_ji_zhi_toc(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * skill_ji_zhi_toc playerId.
     * @member {number} playerId
     * @memberof skill_ji_zhi_toc
     * @instance
     */
    skill_ji_zhi_toc.prototype.playerId = 0;

    /**
     * Creates a new skill_ji_zhi_toc instance using the specified properties.
     * @function create
     * @memberof skill_ji_zhi_toc
     * @static
     * @param {Iskill_ji_zhi_toc=} [properties] Properties to set
     * @returns {skill_ji_zhi_toc} skill_ji_zhi_toc instance
     */
    skill_ji_zhi_toc.create = function create(properties) {
        return new skill_ji_zhi_toc(properties);
    };

    /**
     * Encodes the specified skill_ji_zhi_toc message. Does not implicitly {@link skill_ji_zhi_toc.verify|verify} messages.
     * @function encode
     * @memberof skill_ji_zhi_toc
     * @static
     * @param {Iskill_ji_zhi_toc} message skill_ji_zhi_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_ji_zhi_toc.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.playerId != null && Object.hasOwnProperty.call(message, "playerId"))
            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.playerId);
        return writer;
    };

    /**
     * Encodes the specified skill_ji_zhi_toc message, length delimited. Does not implicitly {@link skill_ji_zhi_toc.verify|verify} messages.
     * @function encodeDelimited
     * @memberof skill_ji_zhi_toc
     * @static
     * @param {Iskill_ji_zhi_toc} message skill_ji_zhi_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_ji_zhi_toc.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a skill_ji_zhi_toc message from the specified reader or buffer.
     * @function decode
     * @memberof skill_ji_zhi_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {skill_ji_zhi_toc} skill_ji_zhi_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_ji_zhi_toc.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.skill_ji_zhi_toc();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.playerId = reader.uint32();
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a skill_ji_zhi_toc message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof skill_ji_zhi_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {skill_ji_zhi_toc} skill_ji_zhi_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_ji_zhi_toc.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a skill_ji_zhi_toc message.
     * @function verify
     * @memberof skill_ji_zhi_toc
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    skill_ji_zhi_toc.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            if (!$util.isInteger(message.playerId))
                return "playerId: integer expected";
        return null;
    };

    /**
     * Creates a skill_ji_zhi_toc message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof skill_ji_zhi_toc
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {skill_ji_zhi_toc} skill_ji_zhi_toc
     */
    skill_ji_zhi_toc.fromObject = function fromObject(object) {
        if (object instanceof $root.skill_ji_zhi_toc)
            return object;
        var message = new $root.skill_ji_zhi_toc();
        if (object.playerId != null)
            message.playerId = object.playerId >>> 0;
        return message;
    };

    /**
     * Creates a plain object from a skill_ji_zhi_toc message. Also converts values to other types if specified.
     * @function toObject
     * @memberof skill_ji_zhi_toc
     * @static
     * @param {skill_ji_zhi_toc} message skill_ji_zhi_toc
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    skill_ji_zhi_toc.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults)
            object.playerId = 0;
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            object.playerId = message.playerId;
        return object;
    };

    /**
     * Converts this skill_ji_zhi_toc to JSON.
     * @function toJSON
     * @memberof skill_ji_zhi_toc
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    skill_ji_zhi_toc.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for skill_ji_zhi_toc
     * @function getTypeUrl
     * @memberof skill_ji_zhi_toc
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    skill_ji_zhi_toc.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/skill_ji_zhi_toc";
    };

    return skill_ji_zhi_toc;
})();

$root.skill_wait_for_cheng_zhi_toc = (function() {

    /**
     * Properties of a skill_wait_for_cheng_zhi_toc.
     * @exports Iskill_wait_for_cheng_zhi_toc
     * @interface Iskill_wait_for_cheng_zhi_toc
     * @property {number|null} [playerId] skill_wait_for_cheng_zhi_toc playerId
     * @property {number|null} [diePlayerId] skill_wait_for_cheng_zhi_toc diePlayerId
     * @property {Array.<Icard>|null} [cards] skill_wait_for_cheng_zhi_toc cards
     * @property {color|null} [identity] skill_wait_for_cheng_zhi_toc identity
     * @property {secret_task|null} [secretTask] skill_wait_for_cheng_zhi_toc secretTask
     * @property {number|null} [waitingSecond] skill_wait_for_cheng_zhi_toc waitingSecond
     * @property {number|null} [seq] skill_wait_for_cheng_zhi_toc seq
     */

    /**
     * Constructs a new skill_wait_for_cheng_zhi_toc.
     * @exports skill_wait_for_cheng_zhi_toc
     * @classdesc Represents a skill_wait_for_cheng_zhi_toc.
     * @implements Iskill_wait_for_cheng_zhi_toc
     * @constructor
     * @param {Iskill_wait_for_cheng_zhi_toc=} [properties] Properties to set
     */
    function skill_wait_for_cheng_zhi_toc(properties) {
        this.cards = [];
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * skill_wait_for_cheng_zhi_toc playerId.
     * @member {number} playerId
     * @memberof skill_wait_for_cheng_zhi_toc
     * @instance
     */
    skill_wait_for_cheng_zhi_toc.prototype.playerId = 0;

    /**
     * skill_wait_for_cheng_zhi_toc diePlayerId.
     * @member {number} diePlayerId
     * @memberof skill_wait_for_cheng_zhi_toc
     * @instance
     */
    skill_wait_for_cheng_zhi_toc.prototype.diePlayerId = 0;

    /**
     * skill_wait_for_cheng_zhi_toc cards.
     * @member {Array.<Icard>} cards
     * @memberof skill_wait_for_cheng_zhi_toc
     * @instance
     */
    skill_wait_for_cheng_zhi_toc.prototype.cards = $util.emptyArray;

    /**
     * skill_wait_for_cheng_zhi_toc identity.
     * @member {color} identity
     * @memberof skill_wait_for_cheng_zhi_toc
     * @instance
     */
    skill_wait_for_cheng_zhi_toc.prototype.identity = 0;

    /**
     * skill_wait_for_cheng_zhi_toc secretTask.
     * @member {secret_task} secretTask
     * @memberof skill_wait_for_cheng_zhi_toc
     * @instance
     */
    skill_wait_for_cheng_zhi_toc.prototype.secretTask = 0;

    /**
     * skill_wait_for_cheng_zhi_toc waitingSecond.
     * @member {number} waitingSecond
     * @memberof skill_wait_for_cheng_zhi_toc
     * @instance
     */
    skill_wait_for_cheng_zhi_toc.prototype.waitingSecond = 0;

    /**
     * skill_wait_for_cheng_zhi_toc seq.
     * @member {number} seq
     * @memberof skill_wait_for_cheng_zhi_toc
     * @instance
     */
    skill_wait_for_cheng_zhi_toc.prototype.seq = 0;

    /**
     * Creates a new skill_wait_for_cheng_zhi_toc instance using the specified properties.
     * @function create
     * @memberof skill_wait_for_cheng_zhi_toc
     * @static
     * @param {Iskill_wait_for_cheng_zhi_toc=} [properties] Properties to set
     * @returns {skill_wait_for_cheng_zhi_toc} skill_wait_for_cheng_zhi_toc instance
     */
    skill_wait_for_cheng_zhi_toc.create = function create(properties) {
        return new skill_wait_for_cheng_zhi_toc(properties);
    };

    /**
     * Encodes the specified skill_wait_for_cheng_zhi_toc message. Does not implicitly {@link skill_wait_for_cheng_zhi_toc.verify|verify} messages.
     * @function encode
     * @memberof skill_wait_for_cheng_zhi_toc
     * @static
     * @param {Iskill_wait_for_cheng_zhi_toc} message skill_wait_for_cheng_zhi_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_wait_for_cheng_zhi_toc.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.playerId != null && Object.hasOwnProperty.call(message, "playerId"))
            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.playerId);
        if (message.diePlayerId != null && Object.hasOwnProperty.call(message, "diePlayerId"))
            writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.diePlayerId);
        if (message.cards != null && message.cards.length)
            for (var i = 0; i < message.cards.length; ++i)
                $root.card.encode(message.cards[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
        if (message.identity != null && Object.hasOwnProperty.call(message, "identity"))
            writer.uint32(/* id 4, wireType 0 =*/32).int32(message.identity);
        if (message.secretTask != null && Object.hasOwnProperty.call(message, "secretTask"))
            writer.uint32(/* id 5, wireType 0 =*/40).int32(message.secretTask);
        if (message.waitingSecond != null && Object.hasOwnProperty.call(message, "waitingSecond"))
            writer.uint32(/* id 6, wireType 0 =*/48).uint32(message.waitingSecond);
        if (message.seq != null && Object.hasOwnProperty.call(message, "seq"))
            writer.uint32(/* id 7, wireType 0 =*/56).uint32(message.seq);
        return writer;
    };

    /**
     * Encodes the specified skill_wait_for_cheng_zhi_toc message, length delimited. Does not implicitly {@link skill_wait_for_cheng_zhi_toc.verify|verify} messages.
     * @function encodeDelimited
     * @memberof skill_wait_for_cheng_zhi_toc
     * @static
     * @param {Iskill_wait_for_cheng_zhi_toc} message skill_wait_for_cheng_zhi_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_wait_for_cheng_zhi_toc.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a skill_wait_for_cheng_zhi_toc message from the specified reader or buffer.
     * @function decode
     * @memberof skill_wait_for_cheng_zhi_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {skill_wait_for_cheng_zhi_toc} skill_wait_for_cheng_zhi_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_wait_for_cheng_zhi_toc.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.skill_wait_for_cheng_zhi_toc();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.playerId = reader.uint32();
                    break;
                }
            case 2: {
                    message.diePlayerId = reader.uint32();
                    break;
                }
            case 3: {
                    if (!(message.cards && message.cards.length))
                        message.cards = [];
                    message.cards.push($root.card.decode(reader, reader.uint32()));
                    break;
                }
            case 4: {
                    message.identity = reader.int32();
                    break;
                }
            case 5: {
                    message.secretTask = reader.int32();
                    break;
                }
            case 6: {
                    message.waitingSecond = reader.uint32();
                    break;
                }
            case 7: {
                    message.seq = reader.uint32();
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a skill_wait_for_cheng_zhi_toc message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof skill_wait_for_cheng_zhi_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {skill_wait_for_cheng_zhi_toc} skill_wait_for_cheng_zhi_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_wait_for_cheng_zhi_toc.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a skill_wait_for_cheng_zhi_toc message.
     * @function verify
     * @memberof skill_wait_for_cheng_zhi_toc
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    skill_wait_for_cheng_zhi_toc.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            if (!$util.isInteger(message.playerId))
                return "playerId: integer expected";
        if (message.diePlayerId != null && message.hasOwnProperty("diePlayerId"))
            if (!$util.isInteger(message.diePlayerId))
                return "diePlayerId: integer expected";
        if (message.cards != null && message.hasOwnProperty("cards")) {
            if (!Array.isArray(message.cards))
                return "cards: array expected";
            for (var i = 0; i < message.cards.length; ++i) {
                var error = $root.card.verify(message.cards[i]);
                if (error)
                    return "cards." + error;
            }
        }
        if (message.identity != null && message.hasOwnProperty("identity"))
            switch (message.identity) {
            default:
                return "identity: enum value expected";
            case 0:
            case 1:
            case 2:
            case 3:
                break;
            }
        if (message.secretTask != null && message.hasOwnProperty("secretTask"))
            switch (message.secretTask) {
            default:
                return "secretTask: enum value expected";
            case 0:
            case 1:
            case 2:
            case 3:
            case 4:
                break;
            }
        if (message.waitingSecond != null && message.hasOwnProperty("waitingSecond"))
            if (!$util.isInteger(message.waitingSecond))
                return "waitingSecond: integer expected";
        if (message.seq != null && message.hasOwnProperty("seq"))
            if (!$util.isInteger(message.seq))
                return "seq: integer expected";
        return null;
    };

    /**
     * Creates a skill_wait_for_cheng_zhi_toc message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof skill_wait_for_cheng_zhi_toc
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {skill_wait_for_cheng_zhi_toc} skill_wait_for_cheng_zhi_toc
     */
    skill_wait_for_cheng_zhi_toc.fromObject = function fromObject(object) {
        if (object instanceof $root.skill_wait_for_cheng_zhi_toc)
            return object;
        var message = new $root.skill_wait_for_cheng_zhi_toc();
        if (object.playerId != null)
            message.playerId = object.playerId >>> 0;
        if (object.diePlayerId != null)
            message.diePlayerId = object.diePlayerId >>> 0;
        if (object.cards) {
            if (!Array.isArray(object.cards))
                throw TypeError(".skill_wait_for_cheng_zhi_toc.cards: array expected");
            message.cards = [];
            for (var i = 0; i < object.cards.length; ++i) {
                if (typeof object.cards[i] !== "object")
                    throw TypeError(".skill_wait_for_cheng_zhi_toc.cards: object expected");
                message.cards[i] = $root.card.fromObject(object.cards[i]);
            }
        }
        switch (object.identity) {
        default:
            if (typeof object.identity === "number") {
                message.identity = object.identity;
                break;
            }
            break;
        case "Black":
        case 0:
            message.identity = 0;
            break;
        case "Red":
        case 1:
            message.identity = 1;
            break;
        case "Blue":
        case 2:
            message.identity = 2;
            break;
        case "Has_No_Identity":
        case 3:
            message.identity = 3;
            break;
        }
        switch (object.secretTask) {
        default:
            if (typeof object.secretTask === "number") {
                message.secretTask = object.secretTask;
                break;
            }
            break;
        case "Killer":
        case 0:
            message.secretTask = 0;
            break;
        case "Stealer":
        case 1:
            message.secretTask = 1;
            break;
        case "Collector":
        case 2:
            message.secretTask = 2;
            break;
        case "Mutator":
        case 3:
            message.secretTask = 3;
            break;
        case "Pioneer":
        case 4:
            message.secretTask = 4;
            break;
        }
        if (object.waitingSecond != null)
            message.waitingSecond = object.waitingSecond >>> 0;
        if (object.seq != null)
            message.seq = object.seq >>> 0;
        return message;
    };

    /**
     * Creates a plain object from a skill_wait_for_cheng_zhi_toc message. Also converts values to other types if specified.
     * @function toObject
     * @memberof skill_wait_for_cheng_zhi_toc
     * @static
     * @param {skill_wait_for_cheng_zhi_toc} message skill_wait_for_cheng_zhi_toc
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    skill_wait_for_cheng_zhi_toc.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.arrays || options.defaults)
            object.cards = [];
        if (options.defaults) {
            object.playerId = 0;
            object.diePlayerId = 0;
            object.identity = options.enums === String ? "Black" : 0;
            object.secretTask = options.enums === String ? "Killer" : 0;
            object.waitingSecond = 0;
            object.seq = 0;
        }
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            object.playerId = message.playerId;
        if (message.diePlayerId != null && message.hasOwnProperty("diePlayerId"))
            object.diePlayerId = message.diePlayerId;
        if (message.cards && message.cards.length) {
            object.cards = [];
            for (var j = 0; j < message.cards.length; ++j)
                object.cards[j] = $root.card.toObject(message.cards[j], options);
        }
        if (message.identity != null && message.hasOwnProperty("identity"))
            object.identity = options.enums === String ? $root.color[message.identity] === undefined ? message.identity : $root.color[message.identity] : message.identity;
        if (message.secretTask != null && message.hasOwnProperty("secretTask"))
            object.secretTask = options.enums === String ? $root.secret_task[message.secretTask] === undefined ? message.secretTask : $root.secret_task[message.secretTask] : message.secretTask;
        if (message.waitingSecond != null && message.hasOwnProperty("waitingSecond"))
            object.waitingSecond = message.waitingSecond;
        if (message.seq != null && message.hasOwnProperty("seq"))
            object.seq = message.seq;
        return object;
    };

    /**
     * Converts this skill_wait_for_cheng_zhi_toc to JSON.
     * @function toJSON
     * @memberof skill_wait_for_cheng_zhi_toc
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    skill_wait_for_cheng_zhi_toc.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for skill_wait_for_cheng_zhi_toc
     * @function getTypeUrl
     * @memberof skill_wait_for_cheng_zhi_toc
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    skill_wait_for_cheng_zhi_toc.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/skill_wait_for_cheng_zhi_toc";
    };

    return skill_wait_for_cheng_zhi_toc;
})();

$root.skill_cheng_zhi_tos = (function() {

    /**
     * Properties of a skill_cheng_zhi_tos.
     * @exports Iskill_cheng_zhi_tos
     * @interface Iskill_cheng_zhi_tos
     * @property {boolean|null} [enable] skill_cheng_zhi_tos enable
     * @property {number|null} [seq] skill_cheng_zhi_tos seq
     */

    /**
     * Constructs a new skill_cheng_zhi_tos.
     * @exports skill_cheng_zhi_tos
     * @classdesc Represents a skill_cheng_zhi_tos.
     * @implements Iskill_cheng_zhi_tos
     * @constructor
     * @param {Iskill_cheng_zhi_tos=} [properties] Properties to set
     */
    function skill_cheng_zhi_tos(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * skill_cheng_zhi_tos enable.
     * @member {boolean} enable
     * @memberof skill_cheng_zhi_tos
     * @instance
     */
    skill_cheng_zhi_tos.prototype.enable = false;

    /**
     * skill_cheng_zhi_tos seq.
     * @member {number} seq
     * @memberof skill_cheng_zhi_tos
     * @instance
     */
    skill_cheng_zhi_tos.prototype.seq = 0;

    /**
     * Creates a new skill_cheng_zhi_tos instance using the specified properties.
     * @function create
     * @memberof skill_cheng_zhi_tos
     * @static
     * @param {Iskill_cheng_zhi_tos=} [properties] Properties to set
     * @returns {skill_cheng_zhi_tos} skill_cheng_zhi_tos instance
     */
    skill_cheng_zhi_tos.create = function create(properties) {
        return new skill_cheng_zhi_tos(properties);
    };

    /**
     * Encodes the specified skill_cheng_zhi_tos message. Does not implicitly {@link skill_cheng_zhi_tos.verify|verify} messages.
     * @function encode
     * @memberof skill_cheng_zhi_tos
     * @static
     * @param {Iskill_cheng_zhi_tos} message skill_cheng_zhi_tos message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_cheng_zhi_tos.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.enable != null && Object.hasOwnProperty.call(message, "enable"))
            writer.uint32(/* id 1, wireType 0 =*/8).bool(message.enable);
        if (message.seq != null && Object.hasOwnProperty.call(message, "seq"))
            writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.seq);
        return writer;
    };

    /**
     * Encodes the specified skill_cheng_zhi_tos message, length delimited. Does not implicitly {@link skill_cheng_zhi_tos.verify|verify} messages.
     * @function encodeDelimited
     * @memberof skill_cheng_zhi_tos
     * @static
     * @param {Iskill_cheng_zhi_tos} message skill_cheng_zhi_tos message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_cheng_zhi_tos.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a skill_cheng_zhi_tos message from the specified reader or buffer.
     * @function decode
     * @memberof skill_cheng_zhi_tos
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {skill_cheng_zhi_tos} skill_cheng_zhi_tos
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_cheng_zhi_tos.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.skill_cheng_zhi_tos();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.enable = reader.bool();
                    break;
                }
            case 2: {
                    message.seq = reader.uint32();
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a skill_cheng_zhi_tos message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof skill_cheng_zhi_tos
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {skill_cheng_zhi_tos} skill_cheng_zhi_tos
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_cheng_zhi_tos.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a skill_cheng_zhi_tos message.
     * @function verify
     * @memberof skill_cheng_zhi_tos
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    skill_cheng_zhi_tos.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.enable != null && message.hasOwnProperty("enable"))
            if (typeof message.enable !== "boolean")
                return "enable: boolean expected";
        if (message.seq != null && message.hasOwnProperty("seq"))
            if (!$util.isInteger(message.seq))
                return "seq: integer expected";
        return null;
    };

    /**
     * Creates a skill_cheng_zhi_tos message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof skill_cheng_zhi_tos
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {skill_cheng_zhi_tos} skill_cheng_zhi_tos
     */
    skill_cheng_zhi_tos.fromObject = function fromObject(object) {
        if (object instanceof $root.skill_cheng_zhi_tos)
            return object;
        var message = new $root.skill_cheng_zhi_tos();
        if (object.enable != null)
            message.enable = Boolean(object.enable);
        if (object.seq != null)
            message.seq = object.seq >>> 0;
        return message;
    };

    /**
     * Creates a plain object from a skill_cheng_zhi_tos message. Also converts values to other types if specified.
     * @function toObject
     * @memberof skill_cheng_zhi_tos
     * @static
     * @param {skill_cheng_zhi_tos} message skill_cheng_zhi_tos
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    skill_cheng_zhi_tos.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults) {
            object.enable = false;
            object.seq = 0;
        }
        if (message.enable != null && message.hasOwnProperty("enable"))
            object.enable = message.enable;
        if (message.seq != null && message.hasOwnProperty("seq"))
            object.seq = message.seq;
        return object;
    };

    /**
     * Converts this skill_cheng_zhi_tos to JSON.
     * @function toJSON
     * @memberof skill_cheng_zhi_tos
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    skill_cheng_zhi_tos.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for skill_cheng_zhi_tos
     * @function getTypeUrl
     * @memberof skill_cheng_zhi_tos
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    skill_cheng_zhi_tos.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/skill_cheng_zhi_tos";
    };

    return skill_cheng_zhi_tos;
})();

$root.skill_cheng_zhi_toc = (function() {

    /**
     * Properties of a skill_cheng_zhi_toc.
     * @exports Iskill_cheng_zhi_toc
     * @interface Iskill_cheng_zhi_toc
     * @property {number|null} [playerId] skill_cheng_zhi_toc playerId
     * @property {number|null} [diePlayerId] skill_cheng_zhi_toc diePlayerId
     * @property {boolean|null} [enable] skill_cheng_zhi_toc enable
     */

    /**
     * Constructs a new skill_cheng_zhi_toc.
     * @exports skill_cheng_zhi_toc
     * @classdesc Represents a skill_cheng_zhi_toc.
     * @implements Iskill_cheng_zhi_toc
     * @constructor
     * @param {Iskill_cheng_zhi_toc=} [properties] Properties to set
     */
    function skill_cheng_zhi_toc(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * skill_cheng_zhi_toc playerId.
     * @member {number} playerId
     * @memberof skill_cheng_zhi_toc
     * @instance
     */
    skill_cheng_zhi_toc.prototype.playerId = 0;

    /**
     * skill_cheng_zhi_toc diePlayerId.
     * @member {number} diePlayerId
     * @memberof skill_cheng_zhi_toc
     * @instance
     */
    skill_cheng_zhi_toc.prototype.diePlayerId = 0;

    /**
     * skill_cheng_zhi_toc enable.
     * @member {boolean} enable
     * @memberof skill_cheng_zhi_toc
     * @instance
     */
    skill_cheng_zhi_toc.prototype.enable = false;

    /**
     * Creates a new skill_cheng_zhi_toc instance using the specified properties.
     * @function create
     * @memberof skill_cheng_zhi_toc
     * @static
     * @param {Iskill_cheng_zhi_toc=} [properties] Properties to set
     * @returns {skill_cheng_zhi_toc} skill_cheng_zhi_toc instance
     */
    skill_cheng_zhi_toc.create = function create(properties) {
        return new skill_cheng_zhi_toc(properties);
    };

    /**
     * Encodes the specified skill_cheng_zhi_toc message. Does not implicitly {@link skill_cheng_zhi_toc.verify|verify} messages.
     * @function encode
     * @memberof skill_cheng_zhi_toc
     * @static
     * @param {Iskill_cheng_zhi_toc} message skill_cheng_zhi_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_cheng_zhi_toc.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.playerId != null && Object.hasOwnProperty.call(message, "playerId"))
            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.playerId);
        if (message.diePlayerId != null && Object.hasOwnProperty.call(message, "diePlayerId"))
            writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.diePlayerId);
        if (message.enable != null && Object.hasOwnProperty.call(message, "enable"))
            writer.uint32(/* id 3, wireType 0 =*/24).bool(message.enable);
        return writer;
    };

    /**
     * Encodes the specified skill_cheng_zhi_toc message, length delimited. Does not implicitly {@link skill_cheng_zhi_toc.verify|verify} messages.
     * @function encodeDelimited
     * @memberof skill_cheng_zhi_toc
     * @static
     * @param {Iskill_cheng_zhi_toc} message skill_cheng_zhi_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_cheng_zhi_toc.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a skill_cheng_zhi_toc message from the specified reader or buffer.
     * @function decode
     * @memberof skill_cheng_zhi_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {skill_cheng_zhi_toc} skill_cheng_zhi_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_cheng_zhi_toc.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.skill_cheng_zhi_toc();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.playerId = reader.uint32();
                    break;
                }
            case 2: {
                    message.diePlayerId = reader.uint32();
                    break;
                }
            case 3: {
                    message.enable = reader.bool();
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a skill_cheng_zhi_toc message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof skill_cheng_zhi_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {skill_cheng_zhi_toc} skill_cheng_zhi_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_cheng_zhi_toc.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a skill_cheng_zhi_toc message.
     * @function verify
     * @memberof skill_cheng_zhi_toc
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    skill_cheng_zhi_toc.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            if (!$util.isInteger(message.playerId))
                return "playerId: integer expected";
        if (message.diePlayerId != null && message.hasOwnProperty("diePlayerId"))
            if (!$util.isInteger(message.diePlayerId))
                return "diePlayerId: integer expected";
        if (message.enable != null && message.hasOwnProperty("enable"))
            if (typeof message.enable !== "boolean")
                return "enable: boolean expected";
        return null;
    };

    /**
     * Creates a skill_cheng_zhi_toc message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof skill_cheng_zhi_toc
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {skill_cheng_zhi_toc} skill_cheng_zhi_toc
     */
    skill_cheng_zhi_toc.fromObject = function fromObject(object) {
        if (object instanceof $root.skill_cheng_zhi_toc)
            return object;
        var message = new $root.skill_cheng_zhi_toc();
        if (object.playerId != null)
            message.playerId = object.playerId >>> 0;
        if (object.diePlayerId != null)
            message.diePlayerId = object.diePlayerId >>> 0;
        if (object.enable != null)
            message.enable = Boolean(object.enable);
        return message;
    };

    /**
     * Creates a plain object from a skill_cheng_zhi_toc message. Also converts values to other types if specified.
     * @function toObject
     * @memberof skill_cheng_zhi_toc
     * @static
     * @param {skill_cheng_zhi_toc} message skill_cheng_zhi_toc
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    skill_cheng_zhi_toc.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults) {
            object.playerId = 0;
            object.diePlayerId = 0;
            object.enable = false;
        }
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            object.playerId = message.playerId;
        if (message.diePlayerId != null && message.hasOwnProperty("diePlayerId"))
            object.diePlayerId = message.diePlayerId;
        if (message.enable != null && message.hasOwnProperty("enable"))
            object.enable = message.enable;
        return object;
    };

    /**
     * Converts this skill_cheng_zhi_toc to JSON.
     * @function toJSON
     * @memberof skill_cheng_zhi_toc
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    skill_cheng_zhi_toc.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for skill_cheng_zhi_toc
     * @function getTypeUrl
     * @memberof skill_cheng_zhi_toc
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    skill_cheng_zhi_toc.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/skill_cheng_zhi_toc";
    };

    return skill_cheng_zhi_toc;
})();

$root.skill_jiu_ji_a_toc = (function() {

    /**
     * Properties of a skill_jiu_ji_a_toc.
     * @exports Iskill_jiu_ji_a_toc
     * @interface Iskill_jiu_ji_a_toc
     * @property {number|null} [playerId] skill_jiu_ji_a_toc playerId
     */

    /**
     * Constructs a new skill_jiu_ji_a_toc.
     * @exports skill_jiu_ji_a_toc
     * @classdesc Represents a skill_jiu_ji_a_toc.
     * @implements Iskill_jiu_ji_a_toc
     * @constructor
     * @param {Iskill_jiu_ji_a_toc=} [properties] Properties to set
     */
    function skill_jiu_ji_a_toc(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * skill_jiu_ji_a_toc playerId.
     * @member {number} playerId
     * @memberof skill_jiu_ji_a_toc
     * @instance
     */
    skill_jiu_ji_a_toc.prototype.playerId = 0;

    /**
     * Creates a new skill_jiu_ji_a_toc instance using the specified properties.
     * @function create
     * @memberof skill_jiu_ji_a_toc
     * @static
     * @param {Iskill_jiu_ji_a_toc=} [properties] Properties to set
     * @returns {skill_jiu_ji_a_toc} skill_jiu_ji_a_toc instance
     */
    skill_jiu_ji_a_toc.create = function create(properties) {
        return new skill_jiu_ji_a_toc(properties);
    };

    /**
     * Encodes the specified skill_jiu_ji_a_toc message. Does not implicitly {@link skill_jiu_ji_a_toc.verify|verify} messages.
     * @function encode
     * @memberof skill_jiu_ji_a_toc
     * @static
     * @param {Iskill_jiu_ji_a_toc} message skill_jiu_ji_a_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_jiu_ji_a_toc.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.playerId != null && Object.hasOwnProperty.call(message, "playerId"))
            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.playerId);
        return writer;
    };

    /**
     * Encodes the specified skill_jiu_ji_a_toc message, length delimited. Does not implicitly {@link skill_jiu_ji_a_toc.verify|verify} messages.
     * @function encodeDelimited
     * @memberof skill_jiu_ji_a_toc
     * @static
     * @param {Iskill_jiu_ji_a_toc} message skill_jiu_ji_a_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_jiu_ji_a_toc.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a skill_jiu_ji_a_toc message from the specified reader or buffer.
     * @function decode
     * @memberof skill_jiu_ji_a_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {skill_jiu_ji_a_toc} skill_jiu_ji_a_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_jiu_ji_a_toc.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.skill_jiu_ji_a_toc();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.playerId = reader.uint32();
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a skill_jiu_ji_a_toc message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof skill_jiu_ji_a_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {skill_jiu_ji_a_toc} skill_jiu_ji_a_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_jiu_ji_a_toc.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a skill_jiu_ji_a_toc message.
     * @function verify
     * @memberof skill_jiu_ji_a_toc
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    skill_jiu_ji_a_toc.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            if (!$util.isInteger(message.playerId))
                return "playerId: integer expected";
        return null;
    };

    /**
     * Creates a skill_jiu_ji_a_toc message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof skill_jiu_ji_a_toc
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {skill_jiu_ji_a_toc} skill_jiu_ji_a_toc
     */
    skill_jiu_ji_a_toc.fromObject = function fromObject(object) {
        if (object instanceof $root.skill_jiu_ji_a_toc)
            return object;
        var message = new $root.skill_jiu_ji_a_toc();
        if (object.playerId != null)
            message.playerId = object.playerId >>> 0;
        return message;
    };

    /**
     * Creates a plain object from a skill_jiu_ji_a_toc message. Also converts values to other types if specified.
     * @function toObject
     * @memberof skill_jiu_ji_a_toc
     * @static
     * @param {skill_jiu_ji_a_toc} message skill_jiu_ji_a_toc
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    skill_jiu_ji_a_toc.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults)
            object.playerId = 0;
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            object.playerId = message.playerId;
        return object;
    };

    /**
     * Converts this skill_jiu_ji_a_toc to JSON.
     * @function toJSON
     * @memberof skill_jiu_ji_a_toc
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    skill_jiu_ji_a_toc.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for skill_jiu_ji_a_toc
     * @function getTypeUrl
     * @memberof skill_jiu_ji_a_toc
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    skill_jiu_ji_a_toc.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/skill_jiu_ji_a_toc";
    };

    return skill_jiu_ji_a_toc;
})();

$root.skill_cheng_fu_toc = (function() {

    /**
     * Properties of a skill_cheng_fu_toc.
     * @exports Iskill_cheng_fu_toc
     * @interface Iskill_cheng_fu_toc
     * @property {number|null} [playerId] skill_cheng_fu_toc playerId
     * @property {number|null} [fromPlayerId] skill_cheng_fu_toc fromPlayerId
     * @property {Icard|null} [card] skill_cheng_fu_toc card
     * @property {number|null} [unknownCardCount] skill_cheng_fu_toc unknownCardCount
     */

    /**
     * Constructs a new skill_cheng_fu_toc.
     * @exports skill_cheng_fu_toc
     * @classdesc Represents a skill_cheng_fu_toc.
     * @implements Iskill_cheng_fu_toc
     * @constructor
     * @param {Iskill_cheng_fu_toc=} [properties] Properties to set
     */
    function skill_cheng_fu_toc(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * skill_cheng_fu_toc playerId.
     * @member {number} playerId
     * @memberof skill_cheng_fu_toc
     * @instance
     */
    skill_cheng_fu_toc.prototype.playerId = 0;

    /**
     * skill_cheng_fu_toc fromPlayerId.
     * @member {number} fromPlayerId
     * @memberof skill_cheng_fu_toc
     * @instance
     */
    skill_cheng_fu_toc.prototype.fromPlayerId = 0;

    /**
     * skill_cheng_fu_toc card.
     * @member {Icard|null|undefined} card
     * @memberof skill_cheng_fu_toc
     * @instance
     */
    skill_cheng_fu_toc.prototype.card = null;

    /**
     * skill_cheng_fu_toc unknownCardCount.
     * @member {number} unknownCardCount
     * @memberof skill_cheng_fu_toc
     * @instance
     */
    skill_cheng_fu_toc.prototype.unknownCardCount = 0;

    /**
     * Creates a new skill_cheng_fu_toc instance using the specified properties.
     * @function create
     * @memberof skill_cheng_fu_toc
     * @static
     * @param {Iskill_cheng_fu_toc=} [properties] Properties to set
     * @returns {skill_cheng_fu_toc} skill_cheng_fu_toc instance
     */
    skill_cheng_fu_toc.create = function create(properties) {
        return new skill_cheng_fu_toc(properties);
    };

    /**
     * Encodes the specified skill_cheng_fu_toc message. Does not implicitly {@link skill_cheng_fu_toc.verify|verify} messages.
     * @function encode
     * @memberof skill_cheng_fu_toc
     * @static
     * @param {Iskill_cheng_fu_toc} message skill_cheng_fu_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_cheng_fu_toc.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.playerId != null && Object.hasOwnProperty.call(message, "playerId"))
            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.playerId);
        if (message.fromPlayerId != null && Object.hasOwnProperty.call(message, "fromPlayerId"))
            writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.fromPlayerId);
        if (message.card != null && Object.hasOwnProperty.call(message, "card"))
            $root.card.encode(message.card, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
        if (message.unknownCardCount != null && Object.hasOwnProperty.call(message, "unknownCardCount"))
            writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.unknownCardCount);
        return writer;
    };

    /**
     * Encodes the specified skill_cheng_fu_toc message, length delimited. Does not implicitly {@link skill_cheng_fu_toc.verify|verify} messages.
     * @function encodeDelimited
     * @memberof skill_cheng_fu_toc
     * @static
     * @param {Iskill_cheng_fu_toc} message skill_cheng_fu_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_cheng_fu_toc.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a skill_cheng_fu_toc message from the specified reader or buffer.
     * @function decode
     * @memberof skill_cheng_fu_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {skill_cheng_fu_toc} skill_cheng_fu_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_cheng_fu_toc.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.skill_cheng_fu_toc();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.playerId = reader.uint32();
                    break;
                }
            case 2: {
                    message.fromPlayerId = reader.uint32();
                    break;
                }
            case 3: {
                    message.card = $root.card.decode(reader, reader.uint32());
                    break;
                }
            case 4: {
                    message.unknownCardCount = reader.uint32();
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a skill_cheng_fu_toc message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof skill_cheng_fu_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {skill_cheng_fu_toc} skill_cheng_fu_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_cheng_fu_toc.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a skill_cheng_fu_toc message.
     * @function verify
     * @memberof skill_cheng_fu_toc
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    skill_cheng_fu_toc.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            if (!$util.isInteger(message.playerId))
                return "playerId: integer expected";
        if (message.fromPlayerId != null && message.hasOwnProperty("fromPlayerId"))
            if (!$util.isInteger(message.fromPlayerId))
                return "fromPlayerId: integer expected";
        if (message.card != null && message.hasOwnProperty("card")) {
            var error = $root.card.verify(message.card);
            if (error)
                return "card." + error;
        }
        if (message.unknownCardCount != null && message.hasOwnProperty("unknownCardCount"))
            if (!$util.isInteger(message.unknownCardCount))
                return "unknownCardCount: integer expected";
        return null;
    };

    /**
     * Creates a skill_cheng_fu_toc message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof skill_cheng_fu_toc
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {skill_cheng_fu_toc} skill_cheng_fu_toc
     */
    skill_cheng_fu_toc.fromObject = function fromObject(object) {
        if (object instanceof $root.skill_cheng_fu_toc)
            return object;
        var message = new $root.skill_cheng_fu_toc();
        if (object.playerId != null)
            message.playerId = object.playerId >>> 0;
        if (object.fromPlayerId != null)
            message.fromPlayerId = object.fromPlayerId >>> 0;
        if (object.card != null) {
            if (typeof object.card !== "object")
                throw TypeError(".skill_cheng_fu_toc.card: object expected");
            message.card = $root.card.fromObject(object.card);
        }
        if (object.unknownCardCount != null)
            message.unknownCardCount = object.unknownCardCount >>> 0;
        return message;
    };

    /**
     * Creates a plain object from a skill_cheng_fu_toc message. Also converts values to other types if specified.
     * @function toObject
     * @memberof skill_cheng_fu_toc
     * @static
     * @param {skill_cheng_fu_toc} message skill_cheng_fu_toc
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    skill_cheng_fu_toc.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults) {
            object.playerId = 0;
            object.fromPlayerId = 0;
            object.card = null;
            object.unknownCardCount = 0;
        }
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            object.playerId = message.playerId;
        if (message.fromPlayerId != null && message.hasOwnProperty("fromPlayerId"))
            object.fromPlayerId = message.fromPlayerId;
        if (message.card != null && message.hasOwnProperty("card"))
            object.card = $root.card.toObject(message.card, options);
        if (message.unknownCardCount != null && message.hasOwnProperty("unknownCardCount"))
            object.unknownCardCount = message.unknownCardCount;
        return object;
    };

    /**
     * Converts this skill_cheng_fu_toc to JSON.
     * @function toJSON
     * @memberof skill_cheng_fu_toc
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    skill_cheng_fu_toc.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for skill_cheng_fu_toc
     * @function getTypeUrl
     * @memberof skill_cheng_fu_toc
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    skill_cheng_fu_toc.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/skill_cheng_fu_toc";
    };

    return skill_cheng_fu_toc;
})();

$root.skill_jiu_ji_b_toc = (function() {

    /**
     * Properties of a skill_jiu_ji_b_toc.
     * @exports Iskill_jiu_ji_b_toc
     * @interface Iskill_jiu_ji_b_toc
     * @property {number|null} [playerId] skill_jiu_ji_b_toc playerId
     * @property {Icard|null} [card] skill_jiu_ji_b_toc card
     * @property {number|null} [unknownCardCount] skill_jiu_ji_b_toc unknownCardCount
     */

    /**
     * Constructs a new skill_jiu_ji_b_toc.
     * @exports skill_jiu_ji_b_toc
     * @classdesc Represents a skill_jiu_ji_b_toc.
     * @implements Iskill_jiu_ji_b_toc
     * @constructor
     * @param {Iskill_jiu_ji_b_toc=} [properties] Properties to set
     */
    function skill_jiu_ji_b_toc(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * skill_jiu_ji_b_toc playerId.
     * @member {number} playerId
     * @memberof skill_jiu_ji_b_toc
     * @instance
     */
    skill_jiu_ji_b_toc.prototype.playerId = 0;

    /**
     * skill_jiu_ji_b_toc card.
     * @member {Icard|null|undefined} card
     * @memberof skill_jiu_ji_b_toc
     * @instance
     */
    skill_jiu_ji_b_toc.prototype.card = null;

    /**
     * skill_jiu_ji_b_toc unknownCardCount.
     * @member {number} unknownCardCount
     * @memberof skill_jiu_ji_b_toc
     * @instance
     */
    skill_jiu_ji_b_toc.prototype.unknownCardCount = 0;

    /**
     * Creates a new skill_jiu_ji_b_toc instance using the specified properties.
     * @function create
     * @memberof skill_jiu_ji_b_toc
     * @static
     * @param {Iskill_jiu_ji_b_toc=} [properties] Properties to set
     * @returns {skill_jiu_ji_b_toc} skill_jiu_ji_b_toc instance
     */
    skill_jiu_ji_b_toc.create = function create(properties) {
        return new skill_jiu_ji_b_toc(properties);
    };

    /**
     * Encodes the specified skill_jiu_ji_b_toc message. Does not implicitly {@link skill_jiu_ji_b_toc.verify|verify} messages.
     * @function encode
     * @memberof skill_jiu_ji_b_toc
     * @static
     * @param {Iskill_jiu_ji_b_toc} message skill_jiu_ji_b_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_jiu_ji_b_toc.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.playerId != null && Object.hasOwnProperty.call(message, "playerId"))
            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.playerId);
        if (message.card != null && Object.hasOwnProperty.call(message, "card"))
            $root.card.encode(message.card, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
        if (message.unknownCardCount != null && Object.hasOwnProperty.call(message, "unknownCardCount"))
            writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.unknownCardCount);
        return writer;
    };

    /**
     * Encodes the specified skill_jiu_ji_b_toc message, length delimited. Does not implicitly {@link skill_jiu_ji_b_toc.verify|verify} messages.
     * @function encodeDelimited
     * @memberof skill_jiu_ji_b_toc
     * @static
     * @param {Iskill_jiu_ji_b_toc} message skill_jiu_ji_b_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_jiu_ji_b_toc.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a skill_jiu_ji_b_toc message from the specified reader or buffer.
     * @function decode
     * @memberof skill_jiu_ji_b_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {skill_jiu_ji_b_toc} skill_jiu_ji_b_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_jiu_ji_b_toc.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.skill_jiu_ji_b_toc();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.playerId = reader.uint32();
                    break;
                }
            case 2: {
                    message.card = $root.card.decode(reader, reader.uint32());
                    break;
                }
            case 3: {
                    message.unknownCardCount = reader.uint32();
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a skill_jiu_ji_b_toc message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof skill_jiu_ji_b_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {skill_jiu_ji_b_toc} skill_jiu_ji_b_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_jiu_ji_b_toc.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a skill_jiu_ji_b_toc message.
     * @function verify
     * @memberof skill_jiu_ji_b_toc
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    skill_jiu_ji_b_toc.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            if (!$util.isInteger(message.playerId))
                return "playerId: integer expected";
        if (message.card != null && message.hasOwnProperty("card")) {
            var error = $root.card.verify(message.card);
            if (error)
                return "card." + error;
        }
        if (message.unknownCardCount != null && message.hasOwnProperty("unknownCardCount"))
            if (!$util.isInteger(message.unknownCardCount))
                return "unknownCardCount: integer expected";
        return null;
    };

    /**
     * Creates a skill_jiu_ji_b_toc message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof skill_jiu_ji_b_toc
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {skill_jiu_ji_b_toc} skill_jiu_ji_b_toc
     */
    skill_jiu_ji_b_toc.fromObject = function fromObject(object) {
        if (object instanceof $root.skill_jiu_ji_b_toc)
            return object;
        var message = new $root.skill_jiu_ji_b_toc();
        if (object.playerId != null)
            message.playerId = object.playerId >>> 0;
        if (object.card != null) {
            if (typeof object.card !== "object")
                throw TypeError(".skill_jiu_ji_b_toc.card: object expected");
            message.card = $root.card.fromObject(object.card);
        }
        if (object.unknownCardCount != null)
            message.unknownCardCount = object.unknownCardCount >>> 0;
        return message;
    };

    /**
     * Creates a plain object from a skill_jiu_ji_b_toc message. Also converts values to other types if specified.
     * @function toObject
     * @memberof skill_jiu_ji_b_toc
     * @static
     * @param {skill_jiu_ji_b_toc} message skill_jiu_ji_b_toc
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    skill_jiu_ji_b_toc.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults) {
            object.playerId = 0;
            object.card = null;
            object.unknownCardCount = 0;
        }
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            object.playerId = message.playerId;
        if (message.card != null && message.hasOwnProperty("card"))
            object.card = $root.card.toObject(message.card, options);
        if (message.unknownCardCount != null && message.hasOwnProperty("unknownCardCount"))
            object.unknownCardCount = message.unknownCardCount;
        return object;
    };

    /**
     * Converts this skill_jiu_ji_b_toc to JSON.
     * @function toJSON
     * @memberof skill_jiu_ji_b_toc
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    skill_jiu_ji_b_toc.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for skill_jiu_ji_b_toc
     * @function getTypeUrl
     * @memberof skill_jiu_ji_b_toc
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    skill_jiu_ji_b_toc.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/skill_jiu_ji_b_toc";
    };

    return skill_jiu_ji_b_toc;
})();

$root.skill_wait_for_yi_xin_toc = (function() {

    /**
     * Properties of a skill_wait_for_yi_xin_toc.
     * @exports Iskill_wait_for_yi_xin_toc
     * @interface Iskill_wait_for_yi_xin_toc
     * @property {number|null} [playerId] skill_wait_for_yi_xin_toc playerId
     * @property {number|null} [waitingSecond] skill_wait_for_yi_xin_toc waitingSecond
     * @property {number|null} [seq] skill_wait_for_yi_xin_toc seq
     */

    /**
     * Constructs a new skill_wait_for_yi_xin_toc.
     * @exports skill_wait_for_yi_xin_toc
     * @classdesc Represents a skill_wait_for_yi_xin_toc.
     * @implements Iskill_wait_for_yi_xin_toc
     * @constructor
     * @param {Iskill_wait_for_yi_xin_toc=} [properties] Properties to set
     */
    function skill_wait_for_yi_xin_toc(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * skill_wait_for_yi_xin_toc playerId.
     * @member {number} playerId
     * @memberof skill_wait_for_yi_xin_toc
     * @instance
     */
    skill_wait_for_yi_xin_toc.prototype.playerId = 0;

    /**
     * skill_wait_for_yi_xin_toc waitingSecond.
     * @member {number} waitingSecond
     * @memberof skill_wait_for_yi_xin_toc
     * @instance
     */
    skill_wait_for_yi_xin_toc.prototype.waitingSecond = 0;

    /**
     * skill_wait_for_yi_xin_toc seq.
     * @member {number} seq
     * @memberof skill_wait_for_yi_xin_toc
     * @instance
     */
    skill_wait_for_yi_xin_toc.prototype.seq = 0;

    /**
     * Creates a new skill_wait_for_yi_xin_toc instance using the specified properties.
     * @function create
     * @memberof skill_wait_for_yi_xin_toc
     * @static
     * @param {Iskill_wait_for_yi_xin_toc=} [properties] Properties to set
     * @returns {skill_wait_for_yi_xin_toc} skill_wait_for_yi_xin_toc instance
     */
    skill_wait_for_yi_xin_toc.create = function create(properties) {
        return new skill_wait_for_yi_xin_toc(properties);
    };

    /**
     * Encodes the specified skill_wait_for_yi_xin_toc message. Does not implicitly {@link skill_wait_for_yi_xin_toc.verify|verify} messages.
     * @function encode
     * @memberof skill_wait_for_yi_xin_toc
     * @static
     * @param {Iskill_wait_for_yi_xin_toc} message skill_wait_for_yi_xin_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_wait_for_yi_xin_toc.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.playerId != null && Object.hasOwnProperty.call(message, "playerId"))
            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.playerId);
        if (message.waitingSecond != null && Object.hasOwnProperty.call(message, "waitingSecond"))
            writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.waitingSecond);
        if (message.seq != null && Object.hasOwnProperty.call(message, "seq"))
            writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.seq);
        return writer;
    };

    /**
     * Encodes the specified skill_wait_for_yi_xin_toc message, length delimited. Does not implicitly {@link skill_wait_for_yi_xin_toc.verify|verify} messages.
     * @function encodeDelimited
     * @memberof skill_wait_for_yi_xin_toc
     * @static
     * @param {Iskill_wait_for_yi_xin_toc} message skill_wait_for_yi_xin_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_wait_for_yi_xin_toc.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a skill_wait_for_yi_xin_toc message from the specified reader or buffer.
     * @function decode
     * @memberof skill_wait_for_yi_xin_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {skill_wait_for_yi_xin_toc} skill_wait_for_yi_xin_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_wait_for_yi_xin_toc.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.skill_wait_for_yi_xin_toc();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.playerId = reader.uint32();
                    break;
                }
            case 2: {
                    message.waitingSecond = reader.uint32();
                    break;
                }
            case 3: {
                    message.seq = reader.uint32();
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a skill_wait_for_yi_xin_toc message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof skill_wait_for_yi_xin_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {skill_wait_for_yi_xin_toc} skill_wait_for_yi_xin_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_wait_for_yi_xin_toc.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a skill_wait_for_yi_xin_toc message.
     * @function verify
     * @memberof skill_wait_for_yi_xin_toc
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    skill_wait_for_yi_xin_toc.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            if (!$util.isInteger(message.playerId))
                return "playerId: integer expected";
        if (message.waitingSecond != null && message.hasOwnProperty("waitingSecond"))
            if (!$util.isInteger(message.waitingSecond))
                return "waitingSecond: integer expected";
        if (message.seq != null && message.hasOwnProperty("seq"))
            if (!$util.isInteger(message.seq))
                return "seq: integer expected";
        return null;
    };

    /**
     * Creates a skill_wait_for_yi_xin_toc message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof skill_wait_for_yi_xin_toc
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {skill_wait_for_yi_xin_toc} skill_wait_for_yi_xin_toc
     */
    skill_wait_for_yi_xin_toc.fromObject = function fromObject(object) {
        if (object instanceof $root.skill_wait_for_yi_xin_toc)
            return object;
        var message = new $root.skill_wait_for_yi_xin_toc();
        if (object.playerId != null)
            message.playerId = object.playerId >>> 0;
        if (object.waitingSecond != null)
            message.waitingSecond = object.waitingSecond >>> 0;
        if (object.seq != null)
            message.seq = object.seq >>> 0;
        return message;
    };

    /**
     * Creates a plain object from a skill_wait_for_yi_xin_toc message. Also converts values to other types if specified.
     * @function toObject
     * @memberof skill_wait_for_yi_xin_toc
     * @static
     * @param {skill_wait_for_yi_xin_toc} message skill_wait_for_yi_xin_toc
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    skill_wait_for_yi_xin_toc.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults) {
            object.playerId = 0;
            object.waitingSecond = 0;
            object.seq = 0;
        }
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            object.playerId = message.playerId;
        if (message.waitingSecond != null && message.hasOwnProperty("waitingSecond"))
            object.waitingSecond = message.waitingSecond;
        if (message.seq != null && message.hasOwnProperty("seq"))
            object.seq = message.seq;
        return object;
    };

    /**
     * Converts this skill_wait_for_yi_xin_toc to JSON.
     * @function toJSON
     * @memberof skill_wait_for_yi_xin_toc
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    skill_wait_for_yi_xin_toc.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for skill_wait_for_yi_xin_toc
     * @function getTypeUrl
     * @memberof skill_wait_for_yi_xin_toc
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    skill_wait_for_yi_xin_toc.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/skill_wait_for_yi_xin_toc";
    };

    return skill_wait_for_yi_xin_toc;
})();

$root.skill_yi_xin_tos = (function() {

    /**
     * Properties of a skill_yi_xin_tos.
     * @exports Iskill_yi_xin_tos
     * @interface Iskill_yi_xin_tos
     * @property {boolean|null} [enable] skill_yi_xin_tos enable
     * @property {number|null} [targetPlayerId] skill_yi_xin_tos targetPlayerId
     * @property {number|null} [cardId] skill_yi_xin_tos cardId
     * @property {number|null} [seq] skill_yi_xin_tos seq
     */

    /**
     * Constructs a new skill_yi_xin_tos.
     * @exports skill_yi_xin_tos
     * @classdesc Represents a skill_yi_xin_tos.
     * @implements Iskill_yi_xin_tos
     * @constructor
     * @param {Iskill_yi_xin_tos=} [properties] Properties to set
     */
    function skill_yi_xin_tos(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * skill_yi_xin_tos enable.
     * @member {boolean} enable
     * @memberof skill_yi_xin_tos
     * @instance
     */
    skill_yi_xin_tos.prototype.enable = false;

    /**
     * skill_yi_xin_tos targetPlayerId.
     * @member {number} targetPlayerId
     * @memberof skill_yi_xin_tos
     * @instance
     */
    skill_yi_xin_tos.prototype.targetPlayerId = 0;

    /**
     * skill_yi_xin_tos cardId.
     * @member {number} cardId
     * @memberof skill_yi_xin_tos
     * @instance
     */
    skill_yi_xin_tos.prototype.cardId = 0;

    /**
     * skill_yi_xin_tos seq.
     * @member {number} seq
     * @memberof skill_yi_xin_tos
     * @instance
     */
    skill_yi_xin_tos.prototype.seq = 0;

    /**
     * Creates a new skill_yi_xin_tos instance using the specified properties.
     * @function create
     * @memberof skill_yi_xin_tos
     * @static
     * @param {Iskill_yi_xin_tos=} [properties] Properties to set
     * @returns {skill_yi_xin_tos} skill_yi_xin_tos instance
     */
    skill_yi_xin_tos.create = function create(properties) {
        return new skill_yi_xin_tos(properties);
    };

    /**
     * Encodes the specified skill_yi_xin_tos message. Does not implicitly {@link skill_yi_xin_tos.verify|verify} messages.
     * @function encode
     * @memberof skill_yi_xin_tos
     * @static
     * @param {Iskill_yi_xin_tos} message skill_yi_xin_tos message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_yi_xin_tos.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.enable != null && Object.hasOwnProperty.call(message, "enable"))
            writer.uint32(/* id 1, wireType 0 =*/8).bool(message.enable);
        if (message.targetPlayerId != null && Object.hasOwnProperty.call(message, "targetPlayerId"))
            writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.targetPlayerId);
        if (message.cardId != null && Object.hasOwnProperty.call(message, "cardId"))
            writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.cardId);
        if (message.seq != null && Object.hasOwnProperty.call(message, "seq"))
            writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.seq);
        return writer;
    };

    /**
     * Encodes the specified skill_yi_xin_tos message, length delimited. Does not implicitly {@link skill_yi_xin_tos.verify|verify} messages.
     * @function encodeDelimited
     * @memberof skill_yi_xin_tos
     * @static
     * @param {Iskill_yi_xin_tos} message skill_yi_xin_tos message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_yi_xin_tos.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a skill_yi_xin_tos message from the specified reader or buffer.
     * @function decode
     * @memberof skill_yi_xin_tos
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {skill_yi_xin_tos} skill_yi_xin_tos
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_yi_xin_tos.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.skill_yi_xin_tos();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.enable = reader.bool();
                    break;
                }
            case 2: {
                    message.targetPlayerId = reader.uint32();
                    break;
                }
            case 3: {
                    message.cardId = reader.uint32();
                    break;
                }
            case 4: {
                    message.seq = reader.uint32();
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a skill_yi_xin_tos message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof skill_yi_xin_tos
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {skill_yi_xin_tos} skill_yi_xin_tos
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_yi_xin_tos.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a skill_yi_xin_tos message.
     * @function verify
     * @memberof skill_yi_xin_tos
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    skill_yi_xin_tos.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.enable != null && message.hasOwnProperty("enable"))
            if (typeof message.enable !== "boolean")
                return "enable: boolean expected";
        if (message.targetPlayerId != null && message.hasOwnProperty("targetPlayerId"))
            if (!$util.isInteger(message.targetPlayerId))
                return "targetPlayerId: integer expected";
        if (message.cardId != null && message.hasOwnProperty("cardId"))
            if (!$util.isInteger(message.cardId))
                return "cardId: integer expected";
        if (message.seq != null && message.hasOwnProperty("seq"))
            if (!$util.isInteger(message.seq))
                return "seq: integer expected";
        return null;
    };

    /**
     * Creates a skill_yi_xin_tos message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof skill_yi_xin_tos
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {skill_yi_xin_tos} skill_yi_xin_tos
     */
    skill_yi_xin_tos.fromObject = function fromObject(object) {
        if (object instanceof $root.skill_yi_xin_tos)
            return object;
        var message = new $root.skill_yi_xin_tos();
        if (object.enable != null)
            message.enable = Boolean(object.enable);
        if (object.targetPlayerId != null)
            message.targetPlayerId = object.targetPlayerId >>> 0;
        if (object.cardId != null)
            message.cardId = object.cardId >>> 0;
        if (object.seq != null)
            message.seq = object.seq >>> 0;
        return message;
    };

    /**
     * Creates a plain object from a skill_yi_xin_tos message. Also converts values to other types if specified.
     * @function toObject
     * @memberof skill_yi_xin_tos
     * @static
     * @param {skill_yi_xin_tos} message skill_yi_xin_tos
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    skill_yi_xin_tos.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults) {
            object.enable = false;
            object.targetPlayerId = 0;
            object.cardId = 0;
            object.seq = 0;
        }
        if (message.enable != null && message.hasOwnProperty("enable"))
            object.enable = message.enable;
        if (message.targetPlayerId != null && message.hasOwnProperty("targetPlayerId"))
            object.targetPlayerId = message.targetPlayerId;
        if (message.cardId != null && message.hasOwnProperty("cardId"))
            object.cardId = message.cardId;
        if (message.seq != null && message.hasOwnProperty("seq"))
            object.seq = message.seq;
        return object;
    };

    /**
     * Converts this skill_yi_xin_tos to JSON.
     * @function toJSON
     * @memberof skill_yi_xin_tos
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    skill_yi_xin_tos.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for skill_yi_xin_tos
     * @function getTypeUrl
     * @memberof skill_yi_xin_tos
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    skill_yi_xin_tos.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/skill_yi_xin_tos";
    };

    return skill_yi_xin_tos;
})();

$root.skill_yi_xin_toc = (function() {

    /**
     * Properties of a skill_yi_xin_toc.
     * @exports Iskill_yi_xin_toc
     * @interface Iskill_yi_xin_toc
     * @property {number|null} [playerId] skill_yi_xin_toc playerId
     * @property {number|null} [targetPlayerId] skill_yi_xin_toc targetPlayerId
     * @property {Icard|null} [card] skill_yi_xin_toc card
     * @property {boolean|null} [enable] skill_yi_xin_toc enable
     */

    /**
     * Constructs a new skill_yi_xin_toc.
     * @exports skill_yi_xin_toc
     * @classdesc Represents a skill_yi_xin_toc.
     * @implements Iskill_yi_xin_toc
     * @constructor
     * @param {Iskill_yi_xin_toc=} [properties] Properties to set
     */
    function skill_yi_xin_toc(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * skill_yi_xin_toc playerId.
     * @member {number} playerId
     * @memberof skill_yi_xin_toc
     * @instance
     */
    skill_yi_xin_toc.prototype.playerId = 0;

    /**
     * skill_yi_xin_toc targetPlayerId.
     * @member {number} targetPlayerId
     * @memberof skill_yi_xin_toc
     * @instance
     */
    skill_yi_xin_toc.prototype.targetPlayerId = 0;

    /**
     * skill_yi_xin_toc card.
     * @member {Icard|null|undefined} card
     * @memberof skill_yi_xin_toc
     * @instance
     */
    skill_yi_xin_toc.prototype.card = null;

    /**
     * skill_yi_xin_toc enable.
     * @member {boolean} enable
     * @memberof skill_yi_xin_toc
     * @instance
     */
    skill_yi_xin_toc.prototype.enable = false;

    /**
     * Creates a new skill_yi_xin_toc instance using the specified properties.
     * @function create
     * @memberof skill_yi_xin_toc
     * @static
     * @param {Iskill_yi_xin_toc=} [properties] Properties to set
     * @returns {skill_yi_xin_toc} skill_yi_xin_toc instance
     */
    skill_yi_xin_toc.create = function create(properties) {
        return new skill_yi_xin_toc(properties);
    };

    /**
     * Encodes the specified skill_yi_xin_toc message. Does not implicitly {@link skill_yi_xin_toc.verify|verify} messages.
     * @function encode
     * @memberof skill_yi_xin_toc
     * @static
     * @param {Iskill_yi_xin_toc} message skill_yi_xin_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_yi_xin_toc.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.playerId != null && Object.hasOwnProperty.call(message, "playerId"))
            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.playerId);
        if (message.targetPlayerId != null && Object.hasOwnProperty.call(message, "targetPlayerId"))
            writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.targetPlayerId);
        if (message.card != null && Object.hasOwnProperty.call(message, "card"))
            $root.card.encode(message.card, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
        if (message.enable != null && Object.hasOwnProperty.call(message, "enable"))
            writer.uint32(/* id 4, wireType 0 =*/32).bool(message.enable);
        return writer;
    };

    /**
     * Encodes the specified skill_yi_xin_toc message, length delimited. Does not implicitly {@link skill_yi_xin_toc.verify|verify} messages.
     * @function encodeDelimited
     * @memberof skill_yi_xin_toc
     * @static
     * @param {Iskill_yi_xin_toc} message skill_yi_xin_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_yi_xin_toc.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a skill_yi_xin_toc message from the specified reader or buffer.
     * @function decode
     * @memberof skill_yi_xin_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {skill_yi_xin_toc} skill_yi_xin_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_yi_xin_toc.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.skill_yi_xin_toc();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.playerId = reader.uint32();
                    break;
                }
            case 2: {
                    message.targetPlayerId = reader.uint32();
                    break;
                }
            case 3: {
                    message.card = $root.card.decode(reader, reader.uint32());
                    break;
                }
            case 4: {
                    message.enable = reader.bool();
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a skill_yi_xin_toc message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof skill_yi_xin_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {skill_yi_xin_toc} skill_yi_xin_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_yi_xin_toc.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a skill_yi_xin_toc message.
     * @function verify
     * @memberof skill_yi_xin_toc
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    skill_yi_xin_toc.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            if (!$util.isInteger(message.playerId))
                return "playerId: integer expected";
        if (message.targetPlayerId != null && message.hasOwnProperty("targetPlayerId"))
            if (!$util.isInteger(message.targetPlayerId))
                return "targetPlayerId: integer expected";
        if (message.card != null && message.hasOwnProperty("card")) {
            var error = $root.card.verify(message.card);
            if (error)
                return "card." + error;
        }
        if (message.enable != null && message.hasOwnProperty("enable"))
            if (typeof message.enable !== "boolean")
                return "enable: boolean expected";
        return null;
    };

    /**
     * Creates a skill_yi_xin_toc message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof skill_yi_xin_toc
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {skill_yi_xin_toc} skill_yi_xin_toc
     */
    skill_yi_xin_toc.fromObject = function fromObject(object) {
        if (object instanceof $root.skill_yi_xin_toc)
            return object;
        var message = new $root.skill_yi_xin_toc();
        if (object.playerId != null)
            message.playerId = object.playerId >>> 0;
        if (object.targetPlayerId != null)
            message.targetPlayerId = object.targetPlayerId >>> 0;
        if (object.card != null) {
            if (typeof object.card !== "object")
                throw TypeError(".skill_yi_xin_toc.card: object expected");
            message.card = $root.card.fromObject(object.card);
        }
        if (object.enable != null)
            message.enable = Boolean(object.enable);
        return message;
    };

    /**
     * Creates a plain object from a skill_yi_xin_toc message. Also converts values to other types if specified.
     * @function toObject
     * @memberof skill_yi_xin_toc
     * @static
     * @param {skill_yi_xin_toc} message skill_yi_xin_toc
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    skill_yi_xin_toc.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults) {
            object.playerId = 0;
            object.targetPlayerId = 0;
            object.card = null;
            object.enable = false;
        }
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            object.playerId = message.playerId;
        if (message.targetPlayerId != null && message.hasOwnProperty("targetPlayerId"))
            object.targetPlayerId = message.targetPlayerId;
        if (message.card != null && message.hasOwnProperty("card"))
            object.card = $root.card.toObject(message.card, options);
        if (message.enable != null && message.hasOwnProperty("enable"))
            object.enable = message.enable;
        return object;
    };

    /**
     * Converts this skill_yi_xin_toc to JSON.
     * @function toJSON
     * @memberof skill_yi_xin_toc
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    skill_yi_xin_toc.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for skill_yi_xin_toc
     * @function getTypeUrl
     * @memberof skill_yi_xin_toc
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    skill_yi_xin_toc.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/skill_yi_xin_toc";
    };

    return skill_yi_xin_toc;
})();

$root.skill_zhi_yin_toc = (function() {

    /**
     * Properties of a skill_zhi_yin_toc.
     * @exports Iskill_zhi_yin_toc
     * @interface Iskill_zhi_yin_toc
     * @property {number|null} [playerId] skill_zhi_yin_toc playerId
     */

    /**
     * Constructs a new skill_zhi_yin_toc.
     * @exports skill_zhi_yin_toc
     * @classdesc Represents a skill_zhi_yin_toc.
     * @implements Iskill_zhi_yin_toc
     * @constructor
     * @param {Iskill_zhi_yin_toc=} [properties] Properties to set
     */
    function skill_zhi_yin_toc(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * skill_zhi_yin_toc playerId.
     * @member {number} playerId
     * @memberof skill_zhi_yin_toc
     * @instance
     */
    skill_zhi_yin_toc.prototype.playerId = 0;

    /**
     * Creates a new skill_zhi_yin_toc instance using the specified properties.
     * @function create
     * @memberof skill_zhi_yin_toc
     * @static
     * @param {Iskill_zhi_yin_toc=} [properties] Properties to set
     * @returns {skill_zhi_yin_toc} skill_zhi_yin_toc instance
     */
    skill_zhi_yin_toc.create = function create(properties) {
        return new skill_zhi_yin_toc(properties);
    };

    /**
     * Encodes the specified skill_zhi_yin_toc message. Does not implicitly {@link skill_zhi_yin_toc.verify|verify} messages.
     * @function encode
     * @memberof skill_zhi_yin_toc
     * @static
     * @param {Iskill_zhi_yin_toc} message skill_zhi_yin_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_zhi_yin_toc.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.playerId != null && Object.hasOwnProperty.call(message, "playerId"))
            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.playerId);
        return writer;
    };

    /**
     * Encodes the specified skill_zhi_yin_toc message, length delimited. Does not implicitly {@link skill_zhi_yin_toc.verify|verify} messages.
     * @function encodeDelimited
     * @memberof skill_zhi_yin_toc
     * @static
     * @param {Iskill_zhi_yin_toc} message skill_zhi_yin_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_zhi_yin_toc.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a skill_zhi_yin_toc message from the specified reader or buffer.
     * @function decode
     * @memberof skill_zhi_yin_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {skill_zhi_yin_toc} skill_zhi_yin_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_zhi_yin_toc.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.skill_zhi_yin_toc();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.playerId = reader.uint32();
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a skill_zhi_yin_toc message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof skill_zhi_yin_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {skill_zhi_yin_toc} skill_zhi_yin_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_zhi_yin_toc.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a skill_zhi_yin_toc message.
     * @function verify
     * @memberof skill_zhi_yin_toc
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    skill_zhi_yin_toc.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            if (!$util.isInteger(message.playerId))
                return "playerId: integer expected";
        return null;
    };

    /**
     * Creates a skill_zhi_yin_toc message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof skill_zhi_yin_toc
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {skill_zhi_yin_toc} skill_zhi_yin_toc
     */
    skill_zhi_yin_toc.fromObject = function fromObject(object) {
        if (object instanceof $root.skill_zhi_yin_toc)
            return object;
        var message = new $root.skill_zhi_yin_toc();
        if (object.playerId != null)
            message.playerId = object.playerId >>> 0;
        return message;
    };

    /**
     * Creates a plain object from a skill_zhi_yin_toc message. Also converts values to other types if specified.
     * @function toObject
     * @memberof skill_zhi_yin_toc
     * @static
     * @param {skill_zhi_yin_toc} message skill_zhi_yin_toc
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    skill_zhi_yin_toc.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults)
            object.playerId = 0;
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            object.playerId = message.playerId;
        return object;
    };

    /**
     * Converts this skill_zhi_yin_toc to JSON.
     * @function toJSON
     * @memberof skill_zhi_yin_toc
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    skill_zhi_yin_toc.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for skill_zhi_yin_toc
     * @function getTypeUrl
     * @memberof skill_zhi_yin_toc
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    skill_zhi_yin_toc.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/skill_zhi_yin_toc";
    };

    return skill_zhi_yin_toc;
})();

$root.skill_jing_meng_a_tos = (function() {

    /**
     * Properties of a skill_jing_meng_a_tos.
     * @exports Iskill_jing_meng_a_tos
     * @interface Iskill_jing_meng_a_tos
     * @property {number|null} [targetPlayerId] skill_jing_meng_a_tos targetPlayerId
     * @property {number|null} [seq] skill_jing_meng_a_tos seq
     */

    /**
     * Constructs a new skill_jing_meng_a_tos.
     * @exports skill_jing_meng_a_tos
     * @classdesc Represents a skill_jing_meng_a_tos.
     * @implements Iskill_jing_meng_a_tos
     * @constructor
     * @param {Iskill_jing_meng_a_tos=} [properties] Properties to set
     */
    function skill_jing_meng_a_tos(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * skill_jing_meng_a_tos targetPlayerId.
     * @member {number} targetPlayerId
     * @memberof skill_jing_meng_a_tos
     * @instance
     */
    skill_jing_meng_a_tos.prototype.targetPlayerId = 0;

    /**
     * skill_jing_meng_a_tos seq.
     * @member {number} seq
     * @memberof skill_jing_meng_a_tos
     * @instance
     */
    skill_jing_meng_a_tos.prototype.seq = 0;

    /**
     * Creates a new skill_jing_meng_a_tos instance using the specified properties.
     * @function create
     * @memberof skill_jing_meng_a_tos
     * @static
     * @param {Iskill_jing_meng_a_tos=} [properties] Properties to set
     * @returns {skill_jing_meng_a_tos} skill_jing_meng_a_tos instance
     */
    skill_jing_meng_a_tos.create = function create(properties) {
        return new skill_jing_meng_a_tos(properties);
    };

    /**
     * Encodes the specified skill_jing_meng_a_tos message. Does not implicitly {@link skill_jing_meng_a_tos.verify|verify} messages.
     * @function encode
     * @memberof skill_jing_meng_a_tos
     * @static
     * @param {Iskill_jing_meng_a_tos} message skill_jing_meng_a_tos message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_jing_meng_a_tos.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.targetPlayerId != null && Object.hasOwnProperty.call(message, "targetPlayerId"))
            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.targetPlayerId);
        if (message.seq != null && Object.hasOwnProperty.call(message, "seq"))
            writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.seq);
        return writer;
    };

    /**
     * Encodes the specified skill_jing_meng_a_tos message, length delimited. Does not implicitly {@link skill_jing_meng_a_tos.verify|verify} messages.
     * @function encodeDelimited
     * @memberof skill_jing_meng_a_tos
     * @static
     * @param {Iskill_jing_meng_a_tos} message skill_jing_meng_a_tos message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_jing_meng_a_tos.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a skill_jing_meng_a_tos message from the specified reader or buffer.
     * @function decode
     * @memberof skill_jing_meng_a_tos
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {skill_jing_meng_a_tos} skill_jing_meng_a_tos
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_jing_meng_a_tos.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.skill_jing_meng_a_tos();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.targetPlayerId = reader.uint32();
                    break;
                }
            case 2: {
                    message.seq = reader.uint32();
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a skill_jing_meng_a_tos message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof skill_jing_meng_a_tos
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {skill_jing_meng_a_tos} skill_jing_meng_a_tos
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_jing_meng_a_tos.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a skill_jing_meng_a_tos message.
     * @function verify
     * @memberof skill_jing_meng_a_tos
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    skill_jing_meng_a_tos.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.targetPlayerId != null && message.hasOwnProperty("targetPlayerId"))
            if (!$util.isInteger(message.targetPlayerId))
                return "targetPlayerId: integer expected";
        if (message.seq != null && message.hasOwnProperty("seq"))
            if (!$util.isInteger(message.seq))
                return "seq: integer expected";
        return null;
    };

    /**
     * Creates a skill_jing_meng_a_tos message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof skill_jing_meng_a_tos
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {skill_jing_meng_a_tos} skill_jing_meng_a_tos
     */
    skill_jing_meng_a_tos.fromObject = function fromObject(object) {
        if (object instanceof $root.skill_jing_meng_a_tos)
            return object;
        var message = new $root.skill_jing_meng_a_tos();
        if (object.targetPlayerId != null)
            message.targetPlayerId = object.targetPlayerId >>> 0;
        if (object.seq != null)
            message.seq = object.seq >>> 0;
        return message;
    };

    /**
     * Creates a plain object from a skill_jing_meng_a_tos message. Also converts values to other types if specified.
     * @function toObject
     * @memberof skill_jing_meng_a_tos
     * @static
     * @param {skill_jing_meng_a_tos} message skill_jing_meng_a_tos
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    skill_jing_meng_a_tos.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults) {
            object.targetPlayerId = 0;
            object.seq = 0;
        }
        if (message.targetPlayerId != null && message.hasOwnProperty("targetPlayerId"))
            object.targetPlayerId = message.targetPlayerId;
        if (message.seq != null && message.hasOwnProperty("seq"))
            object.seq = message.seq;
        return object;
    };

    /**
     * Converts this skill_jing_meng_a_tos to JSON.
     * @function toJSON
     * @memberof skill_jing_meng_a_tos
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    skill_jing_meng_a_tos.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for skill_jing_meng_a_tos
     * @function getTypeUrl
     * @memberof skill_jing_meng_a_tos
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    skill_jing_meng_a_tos.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/skill_jing_meng_a_tos";
    };

    return skill_jing_meng_a_tos;
})();

$root.skill_jing_meng_a_toc = (function() {

    /**
     * Properties of a skill_jing_meng_a_toc.
     * @exports Iskill_jing_meng_a_toc
     * @interface Iskill_jing_meng_a_toc
     * @property {number|null} [playerId] skill_jing_meng_a_toc playerId
     * @property {number|null} [targetPlayerId] skill_jing_meng_a_toc targetPlayerId
     * @property {Array.<Icard>|null} [cards] skill_jing_meng_a_toc cards
     * @property {number|null} [waitingSecond] skill_jing_meng_a_toc waitingSecond
     * @property {number|null} [seq] skill_jing_meng_a_toc seq
     */

    /**
     * Constructs a new skill_jing_meng_a_toc.
     * @exports skill_jing_meng_a_toc
     * @classdesc Represents a skill_jing_meng_a_toc.
     * @implements Iskill_jing_meng_a_toc
     * @constructor
     * @param {Iskill_jing_meng_a_toc=} [properties] Properties to set
     */
    function skill_jing_meng_a_toc(properties) {
        this.cards = [];
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * skill_jing_meng_a_toc playerId.
     * @member {number} playerId
     * @memberof skill_jing_meng_a_toc
     * @instance
     */
    skill_jing_meng_a_toc.prototype.playerId = 0;

    /**
     * skill_jing_meng_a_toc targetPlayerId.
     * @member {number} targetPlayerId
     * @memberof skill_jing_meng_a_toc
     * @instance
     */
    skill_jing_meng_a_toc.prototype.targetPlayerId = 0;

    /**
     * skill_jing_meng_a_toc cards.
     * @member {Array.<Icard>} cards
     * @memberof skill_jing_meng_a_toc
     * @instance
     */
    skill_jing_meng_a_toc.prototype.cards = $util.emptyArray;

    /**
     * skill_jing_meng_a_toc waitingSecond.
     * @member {number} waitingSecond
     * @memberof skill_jing_meng_a_toc
     * @instance
     */
    skill_jing_meng_a_toc.prototype.waitingSecond = 0;

    /**
     * skill_jing_meng_a_toc seq.
     * @member {number} seq
     * @memberof skill_jing_meng_a_toc
     * @instance
     */
    skill_jing_meng_a_toc.prototype.seq = 0;

    /**
     * Creates a new skill_jing_meng_a_toc instance using the specified properties.
     * @function create
     * @memberof skill_jing_meng_a_toc
     * @static
     * @param {Iskill_jing_meng_a_toc=} [properties] Properties to set
     * @returns {skill_jing_meng_a_toc} skill_jing_meng_a_toc instance
     */
    skill_jing_meng_a_toc.create = function create(properties) {
        return new skill_jing_meng_a_toc(properties);
    };

    /**
     * Encodes the specified skill_jing_meng_a_toc message. Does not implicitly {@link skill_jing_meng_a_toc.verify|verify} messages.
     * @function encode
     * @memberof skill_jing_meng_a_toc
     * @static
     * @param {Iskill_jing_meng_a_toc} message skill_jing_meng_a_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_jing_meng_a_toc.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.playerId != null && Object.hasOwnProperty.call(message, "playerId"))
            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.playerId);
        if (message.targetPlayerId != null && Object.hasOwnProperty.call(message, "targetPlayerId"))
            writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.targetPlayerId);
        if (message.cards != null && message.cards.length)
            for (var i = 0; i < message.cards.length; ++i)
                $root.card.encode(message.cards[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
        if (message.waitingSecond != null && Object.hasOwnProperty.call(message, "waitingSecond"))
            writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.waitingSecond);
        if (message.seq != null && Object.hasOwnProperty.call(message, "seq"))
            writer.uint32(/* id 5, wireType 0 =*/40).uint32(message.seq);
        return writer;
    };

    /**
     * Encodes the specified skill_jing_meng_a_toc message, length delimited. Does not implicitly {@link skill_jing_meng_a_toc.verify|verify} messages.
     * @function encodeDelimited
     * @memberof skill_jing_meng_a_toc
     * @static
     * @param {Iskill_jing_meng_a_toc} message skill_jing_meng_a_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_jing_meng_a_toc.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a skill_jing_meng_a_toc message from the specified reader or buffer.
     * @function decode
     * @memberof skill_jing_meng_a_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {skill_jing_meng_a_toc} skill_jing_meng_a_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_jing_meng_a_toc.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.skill_jing_meng_a_toc();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.playerId = reader.uint32();
                    break;
                }
            case 2: {
                    message.targetPlayerId = reader.uint32();
                    break;
                }
            case 3: {
                    if (!(message.cards && message.cards.length))
                        message.cards = [];
                    message.cards.push($root.card.decode(reader, reader.uint32()));
                    break;
                }
            case 4: {
                    message.waitingSecond = reader.uint32();
                    break;
                }
            case 5: {
                    message.seq = reader.uint32();
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a skill_jing_meng_a_toc message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof skill_jing_meng_a_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {skill_jing_meng_a_toc} skill_jing_meng_a_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_jing_meng_a_toc.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a skill_jing_meng_a_toc message.
     * @function verify
     * @memberof skill_jing_meng_a_toc
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    skill_jing_meng_a_toc.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            if (!$util.isInteger(message.playerId))
                return "playerId: integer expected";
        if (message.targetPlayerId != null && message.hasOwnProperty("targetPlayerId"))
            if (!$util.isInteger(message.targetPlayerId))
                return "targetPlayerId: integer expected";
        if (message.cards != null && message.hasOwnProperty("cards")) {
            if (!Array.isArray(message.cards))
                return "cards: array expected";
            for (var i = 0; i < message.cards.length; ++i) {
                var error = $root.card.verify(message.cards[i]);
                if (error)
                    return "cards." + error;
            }
        }
        if (message.waitingSecond != null && message.hasOwnProperty("waitingSecond"))
            if (!$util.isInteger(message.waitingSecond))
                return "waitingSecond: integer expected";
        if (message.seq != null && message.hasOwnProperty("seq"))
            if (!$util.isInteger(message.seq))
                return "seq: integer expected";
        return null;
    };

    /**
     * Creates a skill_jing_meng_a_toc message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof skill_jing_meng_a_toc
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {skill_jing_meng_a_toc} skill_jing_meng_a_toc
     */
    skill_jing_meng_a_toc.fromObject = function fromObject(object) {
        if (object instanceof $root.skill_jing_meng_a_toc)
            return object;
        var message = new $root.skill_jing_meng_a_toc();
        if (object.playerId != null)
            message.playerId = object.playerId >>> 0;
        if (object.targetPlayerId != null)
            message.targetPlayerId = object.targetPlayerId >>> 0;
        if (object.cards) {
            if (!Array.isArray(object.cards))
                throw TypeError(".skill_jing_meng_a_toc.cards: array expected");
            message.cards = [];
            for (var i = 0; i < object.cards.length; ++i) {
                if (typeof object.cards[i] !== "object")
                    throw TypeError(".skill_jing_meng_a_toc.cards: object expected");
                message.cards[i] = $root.card.fromObject(object.cards[i]);
            }
        }
        if (object.waitingSecond != null)
            message.waitingSecond = object.waitingSecond >>> 0;
        if (object.seq != null)
            message.seq = object.seq >>> 0;
        return message;
    };

    /**
     * Creates a plain object from a skill_jing_meng_a_toc message. Also converts values to other types if specified.
     * @function toObject
     * @memberof skill_jing_meng_a_toc
     * @static
     * @param {skill_jing_meng_a_toc} message skill_jing_meng_a_toc
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    skill_jing_meng_a_toc.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.arrays || options.defaults)
            object.cards = [];
        if (options.defaults) {
            object.playerId = 0;
            object.targetPlayerId = 0;
            object.waitingSecond = 0;
            object.seq = 0;
        }
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            object.playerId = message.playerId;
        if (message.targetPlayerId != null && message.hasOwnProperty("targetPlayerId"))
            object.targetPlayerId = message.targetPlayerId;
        if (message.cards && message.cards.length) {
            object.cards = [];
            for (var j = 0; j < message.cards.length; ++j)
                object.cards[j] = $root.card.toObject(message.cards[j], options);
        }
        if (message.waitingSecond != null && message.hasOwnProperty("waitingSecond"))
            object.waitingSecond = message.waitingSecond;
        if (message.seq != null && message.hasOwnProperty("seq"))
            object.seq = message.seq;
        return object;
    };

    /**
     * Converts this skill_jing_meng_a_toc to JSON.
     * @function toJSON
     * @memberof skill_jing_meng_a_toc
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    skill_jing_meng_a_toc.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for skill_jing_meng_a_toc
     * @function getTypeUrl
     * @memberof skill_jing_meng_a_toc
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    skill_jing_meng_a_toc.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/skill_jing_meng_a_toc";
    };

    return skill_jing_meng_a_toc;
})();

$root.skill_jing_meng_b_tos = (function() {

    /**
     * Properties of a skill_jing_meng_b_tos.
     * @exports Iskill_jing_meng_b_tos
     * @interface Iskill_jing_meng_b_tos
     * @property {number|null} [cardId] skill_jing_meng_b_tos cardId
     * @property {number|null} [seq] skill_jing_meng_b_tos seq
     */

    /**
     * Constructs a new skill_jing_meng_b_tos.
     * @exports skill_jing_meng_b_tos
     * @classdesc Represents a skill_jing_meng_b_tos.
     * @implements Iskill_jing_meng_b_tos
     * @constructor
     * @param {Iskill_jing_meng_b_tos=} [properties] Properties to set
     */
    function skill_jing_meng_b_tos(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * skill_jing_meng_b_tos cardId.
     * @member {number} cardId
     * @memberof skill_jing_meng_b_tos
     * @instance
     */
    skill_jing_meng_b_tos.prototype.cardId = 0;

    /**
     * skill_jing_meng_b_tos seq.
     * @member {number} seq
     * @memberof skill_jing_meng_b_tos
     * @instance
     */
    skill_jing_meng_b_tos.prototype.seq = 0;

    /**
     * Creates a new skill_jing_meng_b_tos instance using the specified properties.
     * @function create
     * @memberof skill_jing_meng_b_tos
     * @static
     * @param {Iskill_jing_meng_b_tos=} [properties] Properties to set
     * @returns {skill_jing_meng_b_tos} skill_jing_meng_b_tos instance
     */
    skill_jing_meng_b_tos.create = function create(properties) {
        return new skill_jing_meng_b_tos(properties);
    };

    /**
     * Encodes the specified skill_jing_meng_b_tos message. Does not implicitly {@link skill_jing_meng_b_tos.verify|verify} messages.
     * @function encode
     * @memberof skill_jing_meng_b_tos
     * @static
     * @param {Iskill_jing_meng_b_tos} message skill_jing_meng_b_tos message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_jing_meng_b_tos.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.cardId != null && Object.hasOwnProperty.call(message, "cardId"))
            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.cardId);
        if (message.seq != null && Object.hasOwnProperty.call(message, "seq"))
            writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.seq);
        return writer;
    };

    /**
     * Encodes the specified skill_jing_meng_b_tos message, length delimited. Does not implicitly {@link skill_jing_meng_b_tos.verify|verify} messages.
     * @function encodeDelimited
     * @memberof skill_jing_meng_b_tos
     * @static
     * @param {Iskill_jing_meng_b_tos} message skill_jing_meng_b_tos message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_jing_meng_b_tos.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a skill_jing_meng_b_tos message from the specified reader or buffer.
     * @function decode
     * @memberof skill_jing_meng_b_tos
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {skill_jing_meng_b_tos} skill_jing_meng_b_tos
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_jing_meng_b_tos.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.skill_jing_meng_b_tos();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.cardId = reader.uint32();
                    break;
                }
            case 2: {
                    message.seq = reader.uint32();
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a skill_jing_meng_b_tos message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof skill_jing_meng_b_tos
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {skill_jing_meng_b_tos} skill_jing_meng_b_tos
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_jing_meng_b_tos.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a skill_jing_meng_b_tos message.
     * @function verify
     * @memberof skill_jing_meng_b_tos
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    skill_jing_meng_b_tos.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.cardId != null && message.hasOwnProperty("cardId"))
            if (!$util.isInteger(message.cardId))
                return "cardId: integer expected";
        if (message.seq != null && message.hasOwnProperty("seq"))
            if (!$util.isInteger(message.seq))
                return "seq: integer expected";
        return null;
    };

    /**
     * Creates a skill_jing_meng_b_tos message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof skill_jing_meng_b_tos
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {skill_jing_meng_b_tos} skill_jing_meng_b_tos
     */
    skill_jing_meng_b_tos.fromObject = function fromObject(object) {
        if (object instanceof $root.skill_jing_meng_b_tos)
            return object;
        var message = new $root.skill_jing_meng_b_tos();
        if (object.cardId != null)
            message.cardId = object.cardId >>> 0;
        if (object.seq != null)
            message.seq = object.seq >>> 0;
        return message;
    };

    /**
     * Creates a plain object from a skill_jing_meng_b_tos message. Also converts values to other types if specified.
     * @function toObject
     * @memberof skill_jing_meng_b_tos
     * @static
     * @param {skill_jing_meng_b_tos} message skill_jing_meng_b_tos
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    skill_jing_meng_b_tos.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults) {
            object.cardId = 0;
            object.seq = 0;
        }
        if (message.cardId != null && message.hasOwnProperty("cardId"))
            object.cardId = message.cardId;
        if (message.seq != null && message.hasOwnProperty("seq"))
            object.seq = message.seq;
        return object;
    };

    /**
     * Converts this skill_jing_meng_b_tos to JSON.
     * @function toJSON
     * @memberof skill_jing_meng_b_tos
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    skill_jing_meng_b_tos.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for skill_jing_meng_b_tos
     * @function getTypeUrl
     * @memberof skill_jing_meng_b_tos
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    skill_jing_meng_b_tos.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/skill_jing_meng_b_tos";
    };

    return skill_jing_meng_b_tos;
})();

$root.skill_jing_meng_b_toc = (function() {

    /**
     * Properties of a skill_jing_meng_b_toc.
     * @exports Iskill_jing_meng_b_toc
     * @interface Iskill_jing_meng_b_toc
     * @property {number|null} [playerId] skill_jing_meng_b_toc playerId
     * @property {number|null} [targetPlayerId] skill_jing_meng_b_toc targetPlayerId
     * @property {Icard|null} [card] skill_jing_meng_b_toc card
     */

    /**
     * Constructs a new skill_jing_meng_b_toc.
     * @exports skill_jing_meng_b_toc
     * @classdesc Represents a skill_jing_meng_b_toc.
     * @implements Iskill_jing_meng_b_toc
     * @constructor
     * @param {Iskill_jing_meng_b_toc=} [properties] Properties to set
     */
    function skill_jing_meng_b_toc(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * skill_jing_meng_b_toc playerId.
     * @member {number} playerId
     * @memberof skill_jing_meng_b_toc
     * @instance
     */
    skill_jing_meng_b_toc.prototype.playerId = 0;

    /**
     * skill_jing_meng_b_toc targetPlayerId.
     * @member {number} targetPlayerId
     * @memberof skill_jing_meng_b_toc
     * @instance
     */
    skill_jing_meng_b_toc.prototype.targetPlayerId = 0;

    /**
     * skill_jing_meng_b_toc card.
     * @member {Icard|null|undefined} card
     * @memberof skill_jing_meng_b_toc
     * @instance
     */
    skill_jing_meng_b_toc.prototype.card = null;

    /**
     * Creates a new skill_jing_meng_b_toc instance using the specified properties.
     * @function create
     * @memberof skill_jing_meng_b_toc
     * @static
     * @param {Iskill_jing_meng_b_toc=} [properties] Properties to set
     * @returns {skill_jing_meng_b_toc} skill_jing_meng_b_toc instance
     */
    skill_jing_meng_b_toc.create = function create(properties) {
        return new skill_jing_meng_b_toc(properties);
    };

    /**
     * Encodes the specified skill_jing_meng_b_toc message. Does not implicitly {@link skill_jing_meng_b_toc.verify|verify} messages.
     * @function encode
     * @memberof skill_jing_meng_b_toc
     * @static
     * @param {Iskill_jing_meng_b_toc} message skill_jing_meng_b_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_jing_meng_b_toc.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.playerId != null && Object.hasOwnProperty.call(message, "playerId"))
            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.playerId);
        if (message.targetPlayerId != null && Object.hasOwnProperty.call(message, "targetPlayerId"))
            writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.targetPlayerId);
        if (message.card != null && Object.hasOwnProperty.call(message, "card"))
            $root.card.encode(message.card, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
        return writer;
    };

    /**
     * Encodes the specified skill_jing_meng_b_toc message, length delimited. Does not implicitly {@link skill_jing_meng_b_toc.verify|verify} messages.
     * @function encodeDelimited
     * @memberof skill_jing_meng_b_toc
     * @static
     * @param {Iskill_jing_meng_b_toc} message skill_jing_meng_b_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_jing_meng_b_toc.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a skill_jing_meng_b_toc message from the specified reader or buffer.
     * @function decode
     * @memberof skill_jing_meng_b_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {skill_jing_meng_b_toc} skill_jing_meng_b_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_jing_meng_b_toc.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.skill_jing_meng_b_toc();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.playerId = reader.uint32();
                    break;
                }
            case 2: {
                    message.targetPlayerId = reader.uint32();
                    break;
                }
            case 3: {
                    message.card = $root.card.decode(reader, reader.uint32());
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a skill_jing_meng_b_toc message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof skill_jing_meng_b_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {skill_jing_meng_b_toc} skill_jing_meng_b_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_jing_meng_b_toc.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a skill_jing_meng_b_toc message.
     * @function verify
     * @memberof skill_jing_meng_b_toc
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    skill_jing_meng_b_toc.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            if (!$util.isInteger(message.playerId))
                return "playerId: integer expected";
        if (message.targetPlayerId != null && message.hasOwnProperty("targetPlayerId"))
            if (!$util.isInteger(message.targetPlayerId))
                return "targetPlayerId: integer expected";
        if (message.card != null && message.hasOwnProperty("card")) {
            var error = $root.card.verify(message.card);
            if (error)
                return "card." + error;
        }
        return null;
    };

    /**
     * Creates a skill_jing_meng_b_toc message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof skill_jing_meng_b_toc
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {skill_jing_meng_b_toc} skill_jing_meng_b_toc
     */
    skill_jing_meng_b_toc.fromObject = function fromObject(object) {
        if (object instanceof $root.skill_jing_meng_b_toc)
            return object;
        var message = new $root.skill_jing_meng_b_toc();
        if (object.playerId != null)
            message.playerId = object.playerId >>> 0;
        if (object.targetPlayerId != null)
            message.targetPlayerId = object.targetPlayerId >>> 0;
        if (object.card != null) {
            if (typeof object.card !== "object")
                throw TypeError(".skill_jing_meng_b_toc.card: object expected");
            message.card = $root.card.fromObject(object.card);
        }
        return message;
    };

    /**
     * Creates a plain object from a skill_jing_meng_b_toc message. Also converts values to other types if specified.
     * @function toObject
     * @memberof skill_jing_meng_b_toc
     * @static
     * @param {skill_jing_meng_b_toc} message skill_jing_meng_b_toc
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    skill_jing_meng_b_toc.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults) {
            object.playerId = 0;
            object.targetPlayerId = 0;
            object.card = null;
        }
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            object.playerId = message.playerId;
        if (message.targetPlayerId != null && message.hasOwnProperty("targetPlayerId"))
            object.targetPlayerId = message.targetPlayerId;
        if (message.card != null && message.hasOwnProperty("card"))
            object.card = $root.card.toObject(message.card, options);
        return object;
    };

    /**
     * Converts this skill_jing_meng_b_toc to JSON.
     * @function toJSON
     * @memberof skill_jing_meng_b_toc
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    skill_jing_meng_b_toc.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for skill_jing_meng_b_toc
     * @function getTypeUrl
     * @memberof skill_jing_meng_b_toc
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    skill_jing_meng_b_toc.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/skill_jing_meng_b_toc";
    };

    return skill_jing_meng_b_toc;
})();

$root.skill_jie_dao_sha_ren_a_tos = (function() {

    /**
     * Properties of a skill_jie_dao_sha_ren_a_tos.
     * @exports Iskill_jie_dao_sha_ren_a_tos
     * @interface Iskill_jie_dao_sha_ren_a_tos
     * @property {number|null} [targetPlayerId] skill_jie_dao_sha_ren_a_tos targetPlayerId
     * @property {number|null} [seq] skill_jie_dao_sha_ren_a_tos seq
     */

    /**
     * Constructs a new skill_jie_dao_sha_ren_a_tos.
     * @exports skill_jie_dao_sha_ren_a_tos
     * @classdesc Represents a skill_jie_dao_sha_ren_a_tos.
     * @implements Iskill_jie_dao_sha_ren_a_tos
     * @constructor
     * @param {Iskill_jie_dao_sha_ren_a_tos=} [properties] Properties to set
     */
    function skill_jie_dao_sha_ren_a_tos(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * skill_jie_dao_sha_ren_a_tos targetPlayerId.
     * @member {number} targetPlayerId
     * @memberof skill_jie_dao_sha_ren_a_tos
     * @instance
     */
    skill_jie_dao_sha_ren_a_tos.prototype.targetPlayerId = 0;

    /**
     * skill_jie_dao_sha_ren_a_tos seq.
     * @member {number} seq
     * @memberof skill_jie_dao_sha_ren_a_tos
     * @instance
     */
    skill_jie_dao_sha_ren_a_tos.prototype.seq = 0;

    /**
     * Creates a new skill_jie_dao_sha_ren_a_tos instance using the specified properties.
     * @function create
     * @memberof skill_jie_dao_sha_ren_a_tos
     * @static
     * @param {Iskill_jie_dao_sha_ren_a_tos=} [properties] Properties to set
     * @returns {skill_jie_dao_sha_ren_a_tos} skill_jie_dao_sha_ren_a_tos instance
     */
    skill_jie_dao_sha_ren_a_tos.create = function create(properties) {
        return new skill_jie_dao_sha_ren_a_tos(properties);
    };

    /**
     * Encodes the specified skill_jie_dao_sha_ren_a_tos message. Does not implicitly {@link skill_jie_dao_sha_ren_a_tos.verify|verify} messages.
     * @function encode
     * @memberof skill_jie_dao_sha_ren_a_tos
     * @static
     * @param {Iskill_jie_dao_sha_ren_a_tos} message skill_jie_dao_sha_ren_a_tos message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_jie_dao_sha_ren_a_tos.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.targetPlayerId != null && Object.hasOwnProperty.call(message, "targetPlayerId"))
            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.targetPlayerId);
        if (message.seq != null && Object.hasOwnProperty.call(message, "seq"))
            writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.seq);
        return writer;
    };

    /**
     * Encodes the specified skill_jie_dao_sha_ren_a_tos message, length delimited. Does not implicitly {@link skill_jie_dao_sha_ren_a_tos.verify|verify} messages.
     * @function encodeDelimited
     * @memberof skill_jie_dao_sha_ren_a_tos
     * @static
     * @param {Iskill_jie_dao_sha_ren_a_tos} message skill_jie_dao_sha_ren_a_tos message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_jie_dao_sha_ren_a_tos.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a skill_jie_dao_sha_ren_a_tos message from the specified reader or buffer.
     * @function decode
     * @memberof skill_jie_dao_sha_ren_a_tos
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {skill_jie_dao_sha_ren_a_tos} skill_jie_dao_sha_ren_a_tos
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_jie_dao_sha_ren_a_tos.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.skill_jie_dao_sha_ren_a_tos();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.targetPlayerId = reader.uint32();
                    break;
                }
            case 2: {
                    message.seq = reader.uint32();
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a skill_jie_dao_sha_ren_a_tos message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof skill_jie_dao_sha_ren_a_tos
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {skill_jie_dao_sha_ren_a_tos} skill_jie_dao_sha_ren_a_tos
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_jie_dao_sha_ren_a_tos.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a skill_jie_dao_sha_ren_a_tos message.
     * @function verify
     * @memberof skill_jie_dao_sha_ren_a_tos
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    skill_jie_dao_sha_ren_a_tos.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.targetPlayerId != null && message.hasOwnProperty("targetPlayerId"))
            if (!$util.isInteger(message.targetPlayerId))
                return "targetPlayerId: integer expected";
        if (message.seq != null && message.hasOwnProperty("seq"))
            if (!$util.isInteger(message.seq))
                return "seq: integer expected";
        return null;
    };

    /**
     * Creates a skill_jie_dao_sha_ren_a_tos message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof skill_jie_dao_sha_ren_a_tos
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {skill_jie_dao_sha_ren_a_tos} skill_jie_dao_sha_ren_a_tos
     */
    skill_jie_dao_sha_ren_a_tos.fromObject = function fromObject(object) {
        if (object instanceof $root.skill_jie_dao_sha_ren_a_tos)
            return object;
        var message = new $root.skill_jie_dao_sha_ren_a_tos();
        if (object.targetPlayerId != null)
            message.targetPlayerId = object.targetPlayerId >>> 0;
        if (object.seq != null)
            message.seq = object.seq >>> 0;
        return message;
    };

    /**
     * Creates a plain object from a skill_jie_dao_sha_ren_a_tos message. Also converts values to other types if specified.
     * @function toObject
     * @memberof skill_jie_dao_sha_ren_a_tos
     * @static
     * @param {skill_jie_dao_sha_ren_a_tos} message skill_jie_dao_sha_ren_a_tos
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    skill_jie_dao_sha_ren_a_tos.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults) {
            object.targetPlayerId = 0;
            object.seq = 0;
        }
        if (message.targetPlayerId != null && message.hasOwnProperty("targetPlayerId"))
            object.targetPlayerId = message.targetPlayerId;
        if (message.seq != null && message.hasOwnProperty("seq"))
            object.seq = message.seq;
        return object;
    };

    /**
     * Converts this skill_jie_dao_sha_ren_a_tos to JSON.
     * @function toJSON
     * @memberof skill_jie_dao_sha_ren_a_tos
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    skill_jie_dao_sha_ren_a_tos.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for skill_jie_dao_sha_ren_a_tos
     * @function getTypeUrl
     * @memberof skill_jie_dao_sha_ren_a_tos
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    skill_jie_dao_sha_ren_a_tos.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/skill_jie_dao_sha_ren_a_tos";
    };

    return skill_jie_dao_sha_ren_a_tos;
})();

$root.skill_jie_dao_sha_ren_a_toc = (function() {

    /**
     * Properties of a skill_jie_dao_sha_ren_a_toc.
     * @exports Iskill_jie_dao_sha_ren_a_toc
     * @interface Iskill_jie_dao_sha_ren_a_toc
     * @property {number|null} [playerId] skill_jie_dao_sha_ren_a_toc playerId
     * @property {number|null} [targetPlayerId] skill_jie_dao_sha_ren_a_toc targetPlayerId
     * @property {Icard|null} [card] skill_jie_dao_sha_ren_a_toc card
     * @property {number|null} [waitingSecond] skill_jie_dao_sha_ren_a_toc waitingSecond
     * @property {number|null} [seq] skill_jie_dao_sha_ren_a_toc seq
     */

    /**
     * Constructs a new skill_jie_dao_sha_ren_a_toc.
     * @exports skill_jie_dao_sha_ren_a_toc
     * @classdesc Represents a skill_jie_dao_sha_ren_a_toc.
     * @implements Iskill_jie_dao_sha_ren_a_toc
     * @constructor
     * @param {Iskill_jie_dao_sha_ren_a_toc=} [properties] Properties to set
     */
    function skill_jie_dao_sha_ren_a_toc(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * skill_jie_dao_sha_ren_a_toc playerId.
     * @member {number} playerId
     * @memberof skill_jie_dao_sha_ren_a_toc
     * @instance
     */
    skill_jie_dao_sha_ren_a_toc.prototype.playerId = 0;

    /**
     * skill_jie_dao_sha_ren_a_toc targetPlayerId.
     * @member {number} targetPlayerId
     * @memberof skill_jie_dao_sha_ren_a_toc
     * @instance
     */
    skill_jie_dao_sha_ren_a_toc.prototype.targetPlayerId = 0;

    /**
     * skill_jie_dao_sha_ren_a_toc card.
     * @member {Icard|null|undefined} card
     * @memberof skill_jie_dao_sha_ren_a_toc
     * @instance
     */
    skill_jie_dao_sha_ren_a_toc.prototype.card = null;

    /**
     * skill_jie_dao_sha_ren_a_toc waitingSecond.
     * @member {number} waitingSecond
     * @memberof skill_jie_dao_sha_ren_a_toc
     * @instance
     */
    skill_jie_dao_sha_ren_a_toc.prototype.waitingSecond = 0;

    /**
     * skill_jie_dao_sha_ren_a_toc seq.
     * @member {number} seq
     * @memberof skill_jie_dao_sha_ren_a_toc
     * @instance
     */
    skill_jie_dao_sha_ren_a_toc.prototype.seq = 0;

    /**
     * Creates a new skill_jie_dao_sha_ren_a_toc instance using the specified properties.
     * @function create
     * @memberof skill_jie_dao_sha_ren_a_toc
     * @static
     * @param {Iskill_jie_dao_sha_ren_a_toc=} [properties] Properties to set
     * @returns {skill_jie_dao_sha_ren_a_toc} skill_jie_dao_sha_ren_a_toc instance
     */
    skill_jie_dao_sha_ren_a_toc.create = function create(properties) {
        return new skill_jie_dao_sha_ren_a_toc(properties);
    };

    /**
     * Encodes the specified skill_jie_dao_sha_ren_a_toc message. Does not implicitly {@link skill_jie_dao_sha_ren_a_toc.verify|verify} messages.
     * @function encode
     * @memberof skill_jie_dao_sha_ren_a_toc
     * @static
     * @param {Iskill_jie_dao_sha_ren_a_toc} message skill_jie_dao_sha_ren_a_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_jie_dao_sha_ren_a_toc.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.playerId != null && Object.hasOwnProperty.call(message, "playerId"))
            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.playerId);
        if (message.targetPlayerId != null && Object.hasOwnProperty.call(message, "targetPlayerId"))
            writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.targetPlayerId);
        if (message.card != null && Object.hasOwnProperty.call(message, "card"))
            $root.card.encode(message.card, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
        if (message.waitingSecond != null && Object.hasOwnProperty.call(message, "waitingSecond"))
            writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.waitingSecond);
        if (message.seq != null && Object.hasOwnProperty.call(message, "seq"))
            writer.uint32(/* id 5, wireType 0 =*/40).uint32(message.seq);
        return writer;
    };

    /**
     * Encodes the specified skill_jie_dao_sha_ren_a_toc message, length delimited. Does not implicitly {@link skill_jie_dao_sha_ren_a_toc.verify|verify} messages.
     * @function encodeDelimited
     * @memberof skill_jie_dao_sha_ren_a_toc
     * @static
     * @param {Iskill_jie_dao_sha_ren_a_toc} message skill_jie_dao_sha_ren_a_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_jie_dao_sha_ren_a_toc.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a skill_jie_dao_sha_ren_a_toc message from the specified reader or buffer.
     * @function decode
     * @memberof skill_jie_dao_sha_ren_a_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {skill_jie_dao_sha_ren_a_toc} skill_jie_dao_sha_ren_a_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_jie_dao_sha_ren_a_toc.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.skill_jie_dao_sha_ren_a_toc();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.playerId = reader.uint32();
                    break;
                }
            case 2: {
                    message.targetPlayerId = reader.uint32();
                    break;
                }
            case 3: {
                    message.card = $root.card.decode(reader, reader.uint32());
                    break;
                }
            case 4: {
                    message.waitingSecond = reader.uint32();
                    break;
                }
            case 5: {
                    message.seq = reader.uint32();
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a skill_jie_dao_sha_ren_a_toc message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof skill_jie_dao_sha_ren_a_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {skill_jie_dao_sha_ren_a_toc} skill_jie_dao_sha_ren_a_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_jie_dao_sha_ren_a_toc.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a skill_jie_dao_sha_ren_a_toc message.
     * @function verify
     * @memberof skill_jie_dao_sha_ren_a_toc
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    skill_jie_dao_sha_ren_a_toc.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            if (!$util.isInteger(message.playerId))
                return "playerId: integer expected";
        if (message.targetPlayerId != null && message.hasOwnProperty("targetPlayerId"))
            if (!$util.isInteger(message.targetPlayerId))
                return "targetPlayerId: integer expected";
        if (message.card != null && message.hasOwnProperty("card")) {
            var error = $root.card.verify(message.card);
            if (error)
                return "card." + error;
        }
        if (message.waitingSecond != null && message.hasOwnProperty("waitingSecond"))
            if (!$util.isInteger(message.waitingSecond))
                return "waitingSecond: integer expected";
        if (message.seq != null && message.hasOwnProperty("seq"))
            if (!$util.isInteger(message.seq))
                return "seq: integer expected";
        return null;
    };

    /**
     * Creates a skill_jie_dao_sha_ren_a_toc message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof skill_jie_dao_sha_ren_a_toc
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {skill_jie_dao_sha_ren_a_toc} skill_jie_dao_sha_ren_a_toc
     */
    skill_jie_dao_sha_ren_a_toc.fromObject = function fromObject(object) {
        if (object instanceof $root.skill_jie_dao_sha_ren_a_toc)
            return object;
        var message = new $root.skill_jie_dao_sha_ren_a_toc();
        if (object.playerId != null)
            message.playerId = object.playerId >>> 0;
        if (object.targetPlayerId != null)
            message.targetPlayerId = object.targetPlayerId >>> 0;
        if (object.card != null) {
            if (typeof object.card !== "object")
                throw TypeError(".skill_jie_dao_sha_ren_a_toc.card: object expected");
            message.card = $root.card.fromObject(object.card);
        }
        if (object.waitingSecond != null)
            message.waitingSecond = object.waitingSecond >>> 0;
        if (object.seq != null)
            message.seq = object.seq >>> 0;
        return message;
    };

    /**
     * Creates a plain object from a skill_jie_dao_sha_ren_a_toc message. Also converts values to other types if specified.
     * @function toObject
     * @memberof skill_jie_dao_sha_ren_a_toc
     * @static
     * @param {skill_jie_dao_sha_ren_a_toc} message skill_jie_dao_sha_ren_a_toc
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    skill_jie_dao_sha_ren_a_toc.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults) {
            object.playerId = 0;
            object.targetPlayerId = 0;
            object.card = null;
            object.waitingSecond = 0;
            object.seq = 0;
        }
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            object.playerId = message.playerId;
        if (message.targetPlayerId != null && message.hasOwnProperty("targetPlayerId"))
            object.targetPlayerId = message.targetPlayerId;
        if (message.card != null && message.hasOwnProperty("card"))
            object.card = $root.card.toObject(message.card, options);
        if (message.waitingSecond != null && message.hasOwnProperty("waitingSecond"))
            object.waitingSecond = message.waitingSecond;
        if (message.seq != null && message.hasOwnProperty("seq"))
            object.seq = message.seq;
        return object;
    };

    /**
     * Converts this skill_jie_dao_sha_ren_a_toc to JSON.
     * @function toJSON
     * @memberof skill_jie_dao_sha_ren_a_toc
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    skill_jie_dao_sha_ren_a_toc.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for skill_jie_dao_sha_ren_a_toc
     * @function getTypeUrl
     * @memberof skill_jie_dao_sha_ren_a_toc
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    skill_jie_dao_sha_ren_a_toc.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/skill_jie_dao_sha_ren_a_toc";
    };

    return skill_jie_dao_sha_ren_a_toc;
})();

$root.skill_jie_dao_sha_ren_b_tos = (function() {

    /**
     * Properties of a skill_jie_dao_sha_ren_b_tos.
     * @exports Iskill_jie_dao_sha_ren_b_tos
     * @interface Iskill_jie_dao_sha_ren_b_tos
     * @property {boolean|null} [enable] skill_jie_dao_sha_ren_b_tos enable
     * @property {number|null} [targetPlayerId] skill_jie_dao_sha_ren_b_tos targetPlayerId
     * @property {number|null} [seq] skill_jie_dao_sha_ren_b_tos seq
     */

    /**
     * Constructs a new skill_jie_dao_sha_ren_b_tos.
     * @exports skill_jie_dao_sha_ren_b_tos
     * @classdesc Represents a skill_jie_dao_sha_ren_b_tos.
     * @implements Iskill_jie_dao_sha_ren_b_tos
     * @constructor
     * @param {Iskill_jie_dao_sha_ren_b_tos=} [properties] Properties to set
     */
    function skill_jie_dao_sha_ren_b_tos(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * skill_jie_dao_sha_ren_b_tos enable.
     * @member {boolean} enable
     * @memberof skill_jie_dao_sha_ren_b_tos
     * @instance
     */
    skill_jie_dao_sha_ren_b_tos.prototype.enable = false;

    /**
     * skill_jie_dao_sha_ren_b_tos targetPlayerId.
     * @member {number} targetPlayerId
     * @memberof skill_jie_dao_sha_ren_b_tos
     * @instance
     */
    skill_jie_dao_sha_ren_b_tos.prototype.targetPlayerId = 0;

    /**
     * skill_jie_dao_sha_ren_b_tos seq.
     * @member {number} seq
     * @memberof skill_jie_dao_sha_ren_b_tos
     * @instance
     */
    skill_jie_dao_sha_ren_b_tos.prototype.seq = 0;

    /**
     * Creates a new skill_jie_dao_sha_ren_b_tos instance using the specified properties.
     * @function create
     * @memberof skill_jie_dao_sha_ren_b_tos
     * @static
     * @param {Iskill_jie_dao_sha_ren_b_tos=} [properties] Properties to set
     * @returns {skill_jie_dao_sha_ren_b_tos} skill_jie_dao_sha_ren_b_tos instance
     */
    skill_jie_dao_sha_ren_b_tos.create = function create(properties) {
        return new skill_jie_dao_sha_ren_b_tos(properties);
    };

    /**
     * Encodes the specified skill_jie_dao_sha_ren_b_tos message. Does not implicitly {@link skill_jie_dao_sha_ren_b_tos.verify|verify} messages.
     * @function encode
     * @memberof skill_jie_dao_sha_ren_b_tos
     * @static
     * @param {Iskill_jie_dao_sha_ren_b_tos} message skill_jie_dao_sha_ren_b_tos message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_jie_dao_sha_ren_b_tos.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.enable != null && Object.hasOwnProperty.call(message, "enable"))
            writer.uint32(/* id 1, wireType 0 =*/8).bool(message.enable);
        if (message.targetPlayerId != null && Object.hasOwnProperty.call(message, "targetPlayerId"))
            writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.targetPlayerId);
        if (message.seq != null && Object.hasOwnProperty.call(message, "seq"))
            writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.seq);
        return writer;
    };

    /**
     * Encodes the specified skill_jie_dao_sha_ren_b_tos message, length delimited. Does not implicitly {@link skill_jie_dao_sha_ren_b_tos.verify|verify} messages.
     * @function encodeDelimited
     * @memberof skill_jie_dao_sha_ren_b_tos
     * @static
     * @param {Iskill_jie_dao_sha_ren_b_tos} message skill_jie_dao_sha_ren_b_tos message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_jie_dao_sha_ren_b_tos.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a skill_jie_dao_sha_ren_b_tos message from the specified reader or buffer.
     * @function decode
     * @memberof skill_jie_dao_sha_ren_b_tos
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {skill_jie_dao_sha_ren_b_tos} skill_jie_dao_sha_ren_b_tos
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_jie_dao_sha_ren_b_tos.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.skill_jie_dao_sha_ren_b_tos();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.enable = reader.bool();
                    break;
                }
            case 2: {
                    message.targetPlayerId = reader.uint32();
                    break;
                }
            case 3: {
                    message.seq = reader.uint32();
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a skill_jie_dao_sha_ren_b_tos message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof skill_jie_dao_sha_ren_b_tos
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {skill_jie_dao_sha_ren_b_tos} skill_jie_dao_sha_ren_b_tos
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_jie_dao_sha_ren_b_tos.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a skill_jie_dao_sha_ren_b_tos message.
     * @function verify
     * @memberof skill_jie_dao_sha_ren_b_tos
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    skill_jie_dao_sha_ren_b_tos.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.enable != null && message.hasOwnProperty("enable"))
            if (typeof message.enable !== "boolean")
                return "enable: boolean expected";
        if (message.targetPlayerId != null && message.hasOwnProperty("targetPlayerId"))
            if (!$util.isInteger(message.targetPlayerId))
                return "targetPlayerId: integer expected";
        if (message.seq != null && message.hasOwnProperty("seq"))
            if (!$util.isInteger(message.seq))
                return "seq: integer expected";
        return null;
    };

    /**
     * Creates a skill_jie_dao_sha_ren_b_tos message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof skill_jie_dao_sha_ren_b_tos
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {skill_jie_dao_sha_ren_b_tos} skill_jie_dao_sha_ren_b_tos
     */
    skill_jie_dao_sha_ren_b_tos.fromObject = function fromObject(object) {
        if (object instanceof $root.skill_jie_dao_sha_ren_b_tos)
            return object;
        var message = new $root.skill_jie_dao_sha_ren_b_tos();
        if (object.enable != null)
            message.enable = Boolean(object.enable);
        if (object.targetPlayerId != null)
            message.targetPlayerId = object.targetPlayerId >>> 0;
        if (object.seq != null)
            message.seq = object.seq >>> 0;
        return message;
    };

    /**
     * Creates a plain object from a skill_jie_dao_sha_ren_b_tos message. Also converts values to other types if specified.
     * @function toObject
     * @memberof skill_jie_dao_sha_ren_b_tos
     * @static
     * @param {skill_jie_dao_sha_ren_b_tos} message skill_jie_dao_sha_ren_b_tos
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    skill_jie_dao_sha_ren_b_tos.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults) {
            object.enable = false;
            object.targetPlayerId = 0;
            object.seq = 0;
        }
        if (message.enable != null && message.hasOwnProperty("enable"))
            object.enable = message.enable;
        if (message.targetPlayerId != null && message.hasOwnProperty("targetPlayerId"))
            object.targetPlayerId = message.targetPlayerId;
        if (message.seq != null && message.hasOwnProperty("seq"))
            object.seq = message.seq;
        return object;
    };

    /**
     * Converts this skill_jie_dao_sha_ren_b_tos to JSON.
     * @function toJSON
     * @memberof skill_jie_dao_sha_ren_b_tos
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    skill_jie_dao_sha_ren_b_tos.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for skill_jie_dao_sha_ren_b_tos
     * @function getTypeUrl
     * @memberof skill_jie_dao_sha_ren_b_tos
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    skill_jie_dao_sha_ren_b_tos.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/skill_jie_dao_sha_ren_b_tos";
    };

    return skill_jie_dao_sha_ren_b_tos;
})();

$root.skill_jie_dao_sha_ren_b_toc = (function() {

    /**
     * Properties of a skill_jie_dao_sha_ren_b_toc.
     * @exports Iskill_jie_dao_sha_ren_b_toc
     * @interface Iskill_jie_dao_sha_ren_b_toc
     * @property {number|null} [playerId] skill_jie_dao_sha_ren_b_toc playerId
     * @property {number|null} [targetPlayerId] skill_jie_dao_sha_ren_b_toc targetPlayerId
     * @property {Icard|null} [card] skill_jie_dao_sha_ren_b_toc card
     */

    /**
     * Constructs a new skill_jie_dao_sha_ren_b_toc.
     * @exports skill_jie_dao_sha_ren_b_toc
     * @classdesc Represents a skill_jie_dao_sha_ren_b_toc.
     * @implements Iskill_jie_dao_sha_ren_b_toc
     * @constructor
     * @param {Iskill_jie_dao_sha_ren_b_toc=} [properties] Properties to set
     */
    function skill_jie_dao_sha_ren_b_toc(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * skill_jie_dao_sha_ren_b_toc playerId.
     * @member {number} playerId
     * @memberof skill_jie_dao_sha_ren_b_toc
     * @instance
     */
    skill_jie_dao_sha_ren_b_toc.prototype.playerId = 0;

    /**
     * skill_jie_dao_sha_ren_b_toc targetPlayerId.
     * @member {number} targetPlayerId
     * @memberof skill_jie_dao_sha_ren_b_toc
     * @instance
     */
    skill_jie_dao_sha_ren_b_toc.prototype.targetPlayerId = 0;

    /**
     * skill_jie_dao_sha_ren_b_toc card.
     * @member {Icard|null|undefined} card
     * @memberof skill_jie_dao_sha_ren_b_toc
     * @instance
     */
    skill_jie_dao_sha_ren_b_toc.prototype.card = null;

    /**
     * Creates a new skill_jie_dao_sha_ren_b_toc instance using the specified properties.
     * @function create
     * @memberof skill_jie_dao_sha_ren_b_toc
     * @static
     * @param {Iskill_jie_dao_sha_ren_b_toc=} [properties] Properties to set
     * @returns {skill_jie_dao_sha_ren_b_toc} skill_jie_dao_sha_ren_b_toc instance
     */
    skill_jie_dao_sha_ren_b_toc.create = function create(properties) {
        return new skill_jie_dao_sha_ren_b_toc(properties);
    };

    /**
     * Encodes the specified skill_jie_dao_sha_ren_b_toc message. Does not implicitly {@link skill_jie_dao_sha_ren_b_toc.verify|verify} messages.
     * @function encode
     * @memberof skill_jie_dao_sha_ren_b_toc
     * @static
     * @param {Iskill_jie_dao_sha_ren_b_toc} message skill_jie_dao_sha_ren_b_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_jie_dao_sha_ren_b_toc.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.playerId != null && Object.hasOwnProperty.call(message, "playerId"))
            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.playerId);
        if (message.targetPlayerId != null && Object.hasOwnProperty.call(message, "targetPlayerId"))
            writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.targetPlayerId);
        if (message.card != null && Object.hasOwnProperty.call(message, "card"))
            $root.card.encode(message.card, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
        return writer;
    };

    /**
     * Encodes the specified skill_jie_dao_sha_ren_b_toc message, length delimited. Does not implicitly {@link skill_jie_dao_sha_ren_b_toc.verify|verify} messages.
     * @function encodeDelimited
     * @memberof skill_jie_dao_sha_ren_b_toc
     * @static
     * @param {Iskill_jie_dao_sha_ren_b_toc} message skill_jie_dao_sha_ren_b_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_jie_dao_sha_ren_b_toc.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a skill_jie_dao_sha_ren_b_toc message from the specified reader or buffer.
     * @function decode
     * @memberof skill_jie_dao_sha_ren_b_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {skill_jie_dao_sha_ren_b_toc} skill_jie_dao_sha_ren_b_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_jie_dao_sha_ren_b_toc.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.skill_jie_dao_sha_ren_b_toc();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.playerId = reader.uint32();
                    break;
                }
            case 2: {
                    message.targetPlayerId = reader.uint32();
                    break;
                }
            case 3: {
                    message.card = $root.card.decode(reader, reader.uint32());
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a skill_jie_dao_sha_ren_b_toc message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof skill_jie_dao_sha_ren_b_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {skill_jie_dao_sha_ren_b_toc} skill_jie_dao_sha_ren_b_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_jie_dao_sha_ren_b_toc.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a skill_jie_dao_sha_ren_b_toc message.
     * @function verify
     * @memberof skill_jie_dao_sha_ren_b_toc
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    skill_jie_dao_sha_ren_b_toc.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            if (!$util.isInteger(message.playerId))
                return "playerId: integer expected";
        if (message.targetPlayerId != null && message.hasOwnProperty("targetPlayerId"))
            if (!$util.isInteger(message.targetPlayerId))
                return "targetPlayerId: integer expected";
        if (message.card != null && message.hasOwnProperty("card")) {
            var error = $root.card.verify(message.card);
            if (error)
                return "card." + error;
        }
        return null;
    };

    /**
     * Creates a skill_jie_dao_sha_ren_b_toc message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof skill_jie_dao_sha_ren_b_toc
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {skill_jie_dao_sha_ren_b_toc} skill_jie_dao_sha_ren_b_toc
     */
    skill_jie_dao_sha_ren_b_toc.fromObject = function fromObject(object) {
        if (object instanceof $root.skill_jie_dao_sha_ren_b_toc)
            return object;
        var message = new $root.skill_jie_dao_sha_ren_b_toc();
        if (object.playerId != null)
            message.playerId = object.playerId >>> 0;
        if (object.targetPlayerId != null)
            message.targetPlayerId = object.targetPlayerId >>> 0;
        if (object.card != null) {
            if (typeof object.card !== "object")
                throw TypeError(".skill_jie_dao_sha_ren_b_toc.card: object expected");
            message.card = $root.card.fromObject(object.card);
        }
        return message;
    };

    /**
     * Creates a plain object from a skill_jie_dao_sha_ren_b_toc message. Also converts values to other types if specified.
     * @function toObject
     * @memberof skill_jie_dao_sha_ren_b_toc
     * @static
     * @param {skill_jie_dao_sha_ren_b_toc} message skill_jie_dao_sha_ren_b_toc
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    skill_jie_dao_sha_ren_b_toc.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults) {
            object.playerId = 0;
            object.targetPlayerId = 0;
            object.card = null;
        }
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            object.playerId = message.playerId;
        if (message.targetPlayerId != null && message.hasOwnProperty("targetPlayerId"))
            object.targetPlayerId = message.targetPlayerId;
        if (message.card != null && message.hasOwnProperty("card"))
            object.card = $root.card.toObject(message.card, options);
        return object;
    };

    /**
     * Converts this skill_jie_dao_sha_ren_b_toc to JSON.
     * @function toJSON
     * @memberof skill_jie_dao_sha_ren_b_toc
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    skill_jie_dao_sha_ren_b_toc.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for skill_jie_dao_sha_ren_b_toc
     * @function getTypeUrl
     * @memberof skill_jie_dao_sha_ren_b_toc
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    skill_jie_dao_sha_ren_b_toc.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/skill_jie_dao_sha_ren_b_toc";
    };

    return skill_jie_dao_sha_ren_b_toc;
})();

$root.skill_jiao_ji_a_tos = (function() {

    /**
     * Properties of a skill_jiao_ji_a_tos.
     * @exports Iskill_jiao_ji_a_tos
     * @interface Iskill_jiao_ji_a_tos
     * @property {number|null} [targetPlayerId] skill_jiao_ji_a_tos targetPlayerId
     * @property {number|null} [seq] skill_jiao_ji_a_tos seq
     */

    /**
     * Constructs a new skill_jiao_ji_a_tos.
     * @exports skill_jiao_ji_a_tos
     * @classdesc Represents a skill_jiao_ji_a_tos.
     * @implements Iskill_jiao_ji_a_tos
     * @constructor
     * @param {Iskill_jiao_ji_a_tos=} [properties] Properties to set
     */
    function skill_jiao_ji_a_tos(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * skill_jiao_ji_a_tos targetPlayerId.
     * @member {number} targetPlayerId
     * @memberof skill_jiao_ji_a_tos
     * @instance
     */
    skill_jiao_ji_a_tos.prototype.targetPlayerId = 0;

    /**
     * skill_jiao_ji_a_tos seq.
     * @member {number} seq
     * @memberof skill_jiao_ji_a_tos
     * @instance
     */
    skill_jiao_ji_a_tos.prototype.seq = 0;

    /**
     * Creates a new skill_jiao_ji_a_tos instance using the specified properties.
     * @function create
     * @memberof skill_jiao_ji_a_tos
     * @static
     * @param {Iskill_jiao_ji_a_tos=} [properties] Properties to set
     * @returns {skill_jiao_ji_a_tos} skill_jiao_ji_a_tos instance
     */
    skill_jiao_ji_a_tos.create = function create(properties) {
        return new skill_jiao_ji_a_tos(properties);
    };

    /**
     * Encodes the specified skill_jiao_ji_a_tos message. Does not implicitly {@link skill_jiao_ji_a_tos.verify|verify} messages.
     * @function encode
     * @memberof skill_jiao_ji_a_tos
     * @static
     * @param {Iskill_jiao_ji_a_tos} message skill_jiao_ji_a_tos message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_jiao_ji_a_tos.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.targetPlayerId != null && Object.hasOwnProperty.call(message, "targetPlayerId"))
            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.targetPlayerId);
        if (message.seq != null && Object.hasOwnProperty.call(message, "seq"))
            writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.seq);
        return writer;
    };

    /**
     * Encodes the specified skill_jiao_ji_a_tos message, length delimited. Does not implicitly {@link skill_jiao_ji_a_tos.verify|verify} messages.
     * @function encodeDelimited
     * @memberof skill_jiao_ji_a_tos
     * @static
     * @param {Iskill_jiao_ji_a_tos} message skill_jiao_ji_a_tos message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_jiao_ji_a_tos.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a skill_jiao_ji_a_tos message from the specified reader or buffer.
     * @function decode
     * @memberof skill_jiao_ji_a_tos
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {skill_jiao_ji_a_tos} skill_jiao_ji_a_tos
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_jiao_ji_a_tos.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.skill_jiao_ji_a_tos();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.targetPlayerId = reader.uint32();
                    break;
                }
            case 2: {
                    message.seq = reader.uint32();
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a skill_jiao_ji_a_tos message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof skill_jiao_ji_a_tos
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {skill_jiao_ji_a_tos} skill_jiao_ji_a_tos
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_jiao_ji_a_tos.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a skill_jiao_ji_a_tos message.
     * @function verify
     * @memberof skill_jiao_ji_a_tos
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    skill_jiao_ji_a_tos.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.targetPlayerId != null && message.hasOwnProperty("targetPlayerId"))
            if (!$util.isInteger(message.targetPlayerId))
                return "targetPlayerId: integer expected";
        if (message.seq != null && message.hasOwnProperty("seq"))
            if (!$util.isInteger(message.seq))
                return "seq: integer expected";
        return null;
    };

    /**
     * Creates a skill_jiao_ji_a_tos message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof skill_jiao_ji_a_tos
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {skill_jiao_ji_a_tos} skill_jiao_ji_a_tos
     */
    skill_jiao_ji_a_tos.fromObject = function fromObject(object) {
        if (object instanceof $root.skill_jiao_ji_a_tos)
            return object;
        var message = new $root.skill_jiao_ji_a_tos();
        if (object.targetPlayerId != null)
            message.targetPlayerId = object.targetPlayerId >>> 0;
        if (object.seq != null)
            message.seq = object.seq >>> 0;
        return message;
    };

    /**
     * Creates a plain object from a skill_jiao_ji_a_tos message. Also converts values to other types if specified.
     * @function toObject
     * @memberof skill_jiao_ji_a_tos
     * @static
     * @param {skill_jiao_ji_a_tos} message skill_jiao_ji_a_tos
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    skill_jiao_ji_a_tos.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults) {
            object.targetPlayerId = 0;
            object.seq = 0;
        }
        if (message.targetPlayerId != null && message.hasOwnProperty("targetPlayerId"))
            object.targetPlayerId = message.targetPlayerId;
        if (message.seq != null && message.hasOwnProperty("seq"))
            object.seq = message.seq;
        return object;
    };

    /**
     * Converts this skill_jiao_ji_a_tos to JSON.
     * @function toJSON
     * @memberof skill_jiao_ji_a_tos
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    skill_jiao_ji_a_tos.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for skill_jiao_ji_a_tos
     * @function getTypeUrl
     * @memberof skill_jiao_ji_a_tos
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    skill_jiao_ji_a_tos.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/skill_jiao_ji_a_tos";
    };

    return skill_jiao_ji_a_tos;
})();

$root.skill_jiao_ji_a_toc = (function() {

    /**
     * Properties of a skill_jiao_ji_a_toc.
     * @exports Iskill_jiao_ji_a_toc
     * @interface Iskill_jiao_ji_a_toc
     * @property {number|null} [playerId] skill_jiao_ji_a_toc playerId
     * @property {number|null} [targetPlayerId] skill_jiao_ji_a_toc targetPlayerId
     * @property {Array.<Icard>|null} [cards] skill_jiao_ji_a_toc cards
     * @property {number|null} [unknownCardCount] skill_jiao_ji_a_toc unknownCardCount
     * @property {number|null} [waitingSecond] skill_jiao_ji_a_toc waitingSecond
     * @property {number|null} [seq] skill_jiao_ji_a_toc seq
     */

    /**
     * Constructs a new skill_jiao_ji_a_toc.
     * @exports skill_jiao_ji_a_toc
     * @classdesc Represents a skill_jiao_ji_a_toc.
     * @implements Iskill_jiao_ji_a_toc
     * @constructor
     * @param {Iskill_jiao_ji_a_toc=} [properties] Properties to set
     */
    function skill_jiao_ji_a_toc(properties) {
        this.cards = [];
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * skill_jiao_ji_a_toc playerId.
     * @member {number} playerId
     * @memberof skill_jiao_ji_a_toc
     * @instance
     */
    skill_jiao_ji_a_toc.prototype.playerId = 0;

    /**
     * skill_jiao_ji_a_toc targetPlayerId.
     * @member {number} targetPlayerId
     * @memberof skill_jiao_ji_a_toc
     * @instance
     */
    skill_jiao_ji_a_toc.prototype.targetPlayerId = 0;

    /**
     * skill_jiao_ji_a_toc cards.
     * @member {Array.<Icard>} cards
     * @memberof skill_jiao_ji_a_toc
     * @instance
     */
    skill_jiao_ji_a_toc.prototype.cards = $util.emptyArray;

    /**
     * skill_jiao_ji_a_toc unknownCardCount.
     * @member {number} unknownCardCount
     * @memberof skill_jiao_ji_a_toc
     * @instance
     */
    skill_jiao_ji_a_toc.prototype.unknownCardCount = 0;

    /**
     * skill_jiao_ji_a_toc waitingSecond.
     * @member {number} waitingSecond
     * @memberof skill_jiao_ji_a_toc
     * @instance
     */
    skill_jiao_ji_a_toc.prototype.waitingSecond = 0;

    /**
     * skill_jiao_ji_a_toc seq.
     * @member {number} seq
     * @memberof skill_jiao_ji_a_toc
     * @instance
     */
    skill_jiao_ji_a_toc.prototype.seq = 0;

    /**
     * Creates a new skill_jiao_ji_a_toc instance using the specified properties.
     * @function create
     * @memberof skill_jiao_ji_a_toc
     * @static
     * @param {Iskill_jiao_ji_a_toc=} [properties] Properties to set
     * @returns {skill_jiao_ji_a_toc} skill_jiao_ji_a_toc instance
     */
    skill_jiao_ji_a_toc.create = function create(properties) {
        return new skill_jiao_ji_a_toc(properties);
    };

    /**
     * Encodes the specified skill_jiao_ji_a_toc message. Does not implicitly {@link skill_jiao_ji_a_toc.verify|verify} messages.
     * @function encode
     * @memberof skill_jiao_ji_a_toc
     * @static
     * @param {Iskill_jiao_ji_a_toc} message skill_jiao_ji_a_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_jiao_ji_a_toc.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.playerId != null && Object.hasOwnProperty.call(message, "playerId"))
            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.playerId);
        if (message.targetPlayerId != null && Object.hasOwnProperty.call(message, "targetPlayerId"))
            writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.targetPlayerId);
        if (message.cards != null && message.cards.length)
            for (var i = 0; i < message.cards.length; ++i)
                $root.card.encode(message.cards[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
        if (message.unknownCardCount != null && Object.hasOwnProperty.call(message, "unknownCardCount"))
            writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.unknownCardCount);
        if (message.waitingSecond != null && Object.hasOwnProperty.call(message, "waitingSecond"))
            writer.uint32(/* id 5, wireType 0 =*/40).uint32(message.waitingSecond);
        if (message.seq != null && Object.hasOwnProperty.call(message, "seq"))
            writer.uint32(/* id 6, wireType 0 =*/48).uint32(message.seq);
        return writer;
    };

    /**
     * Encodes the specified skill_jiao_ji_a_toc message, length delimited. Does not implicitly {@link skill_jiao_ji_a_toc.verify|verify} messages.
     * @function encodeDelimited
     * @memberof skill_jiao_ji_a_toc
     * @static
     * @param {Iskill_jiao_ji_a_toc} message skill_jiao_ji_a_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_jiao_ji_a_toc.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a skill_jiao_ji_a_toc message from the specified reader or buffer.
     * @function decode
     * @memberof skill_jiao_ji_a_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {skill_jiao_ji_a_toc} skill_jiao_ji_a_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_jiao_ji_a_toc.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.skill_jiao_ji_a_toc();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.playerId = reader.uint32();
                    break;
                }
            case 2: {
                    message.targetPlayerId = reader.uint32();
                    break;
                }
            case 3: {
                    if (!(message.cards && message.cards.length))
                        message.cards = [];
                    message.cards.push($root.card.decode(reader, reader.uint32()));
                    break;
                }
            case 4: {
                    message.unknownCardCount = reader.uint32();
                    break;
                }
            case 5: {
                    message.waitingSecond = reader.uint32();
                    break;
                }
            case 6: {
                    message.seq = reader.uint32();
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a skill_jiao_ji_a_toc message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof skill_jiao_ji_a_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {skill_jiao_ji_a_toc} skill_jiao_ji_a_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_jiao_ji_a_toc.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a skill_jiao_ji_a_toc message.
     * @function verify
     * @memberof skill_jiao_ji_a_toc
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    skill_jiao_ji_a_toc.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            if (!$util.isInteger(message.playerId))
                return "playerId: integer expected";
        if (message.targetPlayerId != null && message.hasOwnProperty("targetPlayerId"))
            if (!$util.isInteger(message.targetPlayerId))
                return "targetPlayerId: integer expected";
        if (message.cards != null && message.hasOwnProperty("cards")) {
            if (!Array.isArray(message.cards))
                return "cards: array expected";
            for (var i = 0; i < message.cards.length; ++i) {
                var error = $root.card.verify(message.cards[i]);
                if (error)
                    return "cards." + error;
            }
        }
        if (message.unknownCardCount != null && message.hasOwnProperty("unknownCardCount"))
            if (!$util.isInteger(message.unknownCardCount))
                return "unknownCardCount: integer expected";
        if (message.waitingSecond != null && message.hasOwnProperty("waitingSecond"))
            if (!$util.isInteger(message.waitingSecond))
                return "waitingSecond: integer expected";
        if (message.seq != null && message.hasOwnProperty("seq"))
            if (!$util.isInteger(message.seq))
                return "seq: integer expected";
        return null;
    };

    /**
     * Creates a skill_jiao_ji_a_toc message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof skill_jiao_ji_a_toc
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {skill_jiao_ji_a_toc} skill_jiao_ji_a_toc
     */
    skill_jiao_ji_a_toc.fromObject = function fromObject(object) {
        if (object instanceof $root.skill_jiao_ji_a_toc)
            return object;
        var message = new $root.skill_jiao_ji_a_toc();
        if (object.playerId != null)
            message.playerId = object.playerId >>> 0;
        if (object.targetPlayerId != null)
            message.targetPlayerId = object.targetPlayerId >>> 0;
        if (object.cards) {
            if (!Array.isArray(object.cards))
                throw TypeError(".skill_jiao_ji_a_toc.cards: array expected");
            message.cards = [];
            for (var i = 0; i < object.cards.length; ++i) {
                if (typeof object.cards[i] !== "object")
                    throw TypeError(".skill_jiao_ji_a_toc.cards: object expected");
                message.cards[i] = $root.card.fromObject(object.cards[i]);
            }
        }
        if (object.unknownCardCount != null)
            message.unknownCardCount = object.unknownCardCount >>> 0;
        if (object.waitingSecond != null)
            message.waitingSecond = object.waitingSecond >>> 0;
        if (object.seq != null)
            message.seq = object.seq >>> 0;
        return message;
    };

    /**
     * Creates a plain object from a skill_jiao_ji_a_toc message. Also converts values to other types if specified.
     * @function toObject
     * @memberof skill_jiao_ji_a_toc
     * @static
     * @param {skill_jiao_ji_a_toc} message skill_jiao_ji_a_toc
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    skill_jiao_ji_a_toc.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.arrays || options.defaults)
            object.cards = [];
        if (options.defaults) {
            object.playerId = 0;
            object.targetPlayerId = 0;
            object.unknownCardCount = 0;
            object.waitingSecond = 0;
            object.seq = 0;
        }
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            object.playerId = message.playerId;
        if (message.targetPlayerId != null && message.hasOwnProperty("targetPlayerId"))
            object.targetPlayerId = message.targetPlayerId;
        if (message.cards && message.cards.length) {
            object.cards = [];
            for (var j = 0; j < message.cards.length; ++j)
                object.cards[j] = $root.card.toObject(message.cards[j], options);
        }
        if (message.unknownCardCount != null && message.hasOwnProperty("unknownCardCount"))
            object.unknownCardCount = message.unknownCardCount;
        if (message.waitingSecond != null && message.hasOwnProperty("waitingSecond"))
            object.waitingSecond = message.waitingSecond;
        if (message.seq != null && message.hasOwnProperty("seq"))
            object.seq = message.seq;
        return object;
    };

    /**
     * Converts this skill_jiao_ji_a_toc to JSON.
     * @function toJSON
     * @memberof skill_jiao_ji_a_toc
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    skill_jiao_ji_a_toc.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for skill_jiao_ji_a_toc
     * @function getTypeUrl
     * @memberof skill_jiao_ji_a_toc
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    skill_jiao_ji_a_toc.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/skill_jiao_ji_a_toc";
    };

    return skill_jiao_ji_a_toc;
})();

$root.skill_jiao_ji_b_tos = (function() {

    /**
     * Properties of a skill_jiao_ji_b_tos.
     * @exports Iskill_jiao_ji_b_tos
     * @interface Iskill_jiao_ji_b_tos
     * @property {Array.<number>|null} [cardIds] skill_jiao_ji_b_tos cardIds
     * @property {number|null} [seq] skill_jiao_ji_b_tos seq
     */

    /**
     * Constructs a new skill_jiao_ji_b_tos.
     * @exports skill_jiao_ji_b_tos
     * @classdesc Represents a skill_jiao_ji_b_tos.
     * @implements Iskill_jiao_ji_b_tos
     * @constructor
     * @param {Iskill_jiao_ji_b_tos=} [properties] Properties to set
     */
    function skill_jiao_ji_b_tos(properties) {
        this.cardIds = [];
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * skill_jiao_ji_b_tos cardIds.
     * @member {Array.<number>} cardIds
     * @memberof skill_jiao_ji_b_tos
     * @instance
     */
    skill_jiao_ji_b_tos.prototype.cardIds = $util.emptyArray;

    /**
     * skill_jiao_ji_b_tos seq.
     * @member {number} seq
     * @memberof skill_jiao_ji_b_tos
     * @instance
     */
    skill_jiao_ji_b_tos.prototype.seq = 0;

    /**
     * Creates a new skill_jiao_ji_b_tos instance using the specified properties.
     * @function create
     * @memberof skill_jiao_ji_b_tos
     * @static
     * @param {Iskill_jiao_ji_b_tos=} [properties] Properties to set
     * @returns {skill_jiao_ji_b_tos} skill_jiao_ji_b_tos instance
     */
    skill_jiao_ji_b_tos.create = function create(properties) {
        return new skill_jiao_ji_b_tos(properties);
    };

    /**
     * Encodes the specified skill_jiao_ji_b_tos message. Does not implicitly {@link skill_jiao_ji_b_tos.verify|verify} messages.
     * @function encode
     * @memberof skill_jiao_ji_b_tos
     * @static
     * @param {Iskill_jiao_ji_b_tos} message skill_jiao_ji_b_tos message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_jiao_ji_b_tos.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.cardIds != null && message.cardIds.length) {
            writer.uint32(/* id 1, wireType 2 =*/10).fork();
            for (var i = 0; i < message.cardIds.length; ++i)
                writer.uint32(message.cardIds[i]);
            writer.ldelim();
        }
        if (message.seq != null && Object.hasOwnProperty.call(message, "seq"))
            writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.seq);
        return writer;
    };

    /**
     * Encodes the specified skill_jiao_ji_b_tos message, length delimited. Does not implicitly {@link skill_jiao_ji_b_tos.verify|verify} messages.
     * @function encodeDelimited
     * @memberof skill_jiao_ji_b_tos
     * @static
     * @param {Iskill_jiao_ji_b_tos} message skill_jiao_ji_b_tos message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_jiao_ji_b_tos.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a skill_jiao_ji_b_tos message from the specified reader or buffer.
     * @function decode
     * @memberof skill_jiao_ji_b_tos
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {skill_jiao_ji_b_tos} skill_jiao_ji_b_tos
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_jiao_ji_b_tos.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.skill_jiao_ji_b_tos();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    if (!(message.cardIds && message.cardIds.length))
                        message.cardIds = [];
                    if ((tag & 7) === 2) {
                        var end2 = reader.uint32() + reader.pos;
                        while (reader.pos < end2)
                            message.cardIds.push(reader.uint32());
                    } else
                        message.cardIds.push(reader.uint32());
                    break;
                }
            case 2: {
                    message.seq = reader.uint32();
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a skill_jiao_ji_b_tos message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof skill_jiao_ji_b_tos
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {skill_jiao_ji_b_tos} skill_jiao_ji_b_tos
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_jiao_ji_b_tos.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a skill_jiao_ji_b_tos message.
     * @function verify
     * @memberof skill_jiao_ji_b_tos
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    skill_jiao_ji_b_tos.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.cardIds != null && message.hasOwnProperty("cardIds")) {
            if (!Array.isArray(message.cardIds))
                return "cardIds: array expected";
            for (var i = 0; i < message.cardIds.length; ++i)
                if (!$util.isInteger(message.cardIds[i]))
                    return "cardIds: integer[] expected";
        }
        if (message.seq != null && message.hasOwnProperty("seq"))
            if (!$util.isInteger(message.seq))
                return "seq: integer expected";
        return null;
    };

    /**
     * Creates a skill_jiao_ji_b_tos message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof skill_jiao_ji_b_tos
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {skill_jiao_ji_b_tos} skill_jiao_ji_b_tos
     */
    skill_jiao_ji_b_tos.fromObject = function fromObject(object) {
        if (object instanceof $root.skill_jiao_ji_b_tos)
            return object;
        var message = new $root.skill_jiao_ji_b_tos();
        if (object.cardIds) {
            if (!Array.isArray(object.cardIds))
                throw TypeError(".skill_jiao_ji_b_tos.cardIds: array expected");
            message.cardIds = [];
            for (var i = 0; i < object.cardIds.length; ++i)
                message.cardIds[i] = object.cardIds[i] >>> 0;
        }
        if (object.seq != null)
            message.seq = object.seq >>> 0;
        return message;
    };

    /**
     * Creates a plain object from a skill_jiao_ji_b_tos message. Also converts values to other types if specified.
     * @function toObject
     * @memberof skill_jiao_ji_b_tos
     * @static
     * @param {skill_jiao_ji_b_tos} message skill_jiao_ji_b_tos
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    skill_jiao_ji_b_tos.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.arrays || options.defaults)
            object.cardIds = [];
        if (options.defaults)
            object.seq = 0;
        if (message.cardIds && message.cardIds.length) {
            object.cardIds = [];
            for (var j = 0; j < message.cardIds.length; ++j)
                object.cardIds[j] = message.cardIds[j];
        }
        if (message.seq != null && message.hasOwnProperty("seq"))
            object.seq = message.seq;
        return object;
    };

    /**
     * Converts this skill_jiao_ji_b_tos to JSON.
     * @function toJSON
     * @memberof skill_jiao_ji_b_tos
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    skill_jiao_ji_b_tos.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for skill_jiao_ji_b_tos
     * @function getTypeUrl
     * @memberof skill_jiao_ji_b_tos
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    skill_jiao_ji_b_tos.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/skill_jiao_ji_b_tos";
    };

    return skill_jiao_ji_b_tos;
})();

$root.skill_jiao_ji_b_toc = (function() {

    /**
     * Properties of a skill_jiao_ji_b_toc.
     * @exports Iskill_jiao_ji_b_toc
     * @interface Iskill_jiao_ji_b_toc
     * @property {number|null} [playerId] skill_jiao_ji_b_toc playerId
     * @property {number|null} [targetPlayerId] skill_jiao_ji_b_toc targetPlayerId
     * @property {Array.<Icard>|null} [cards] skill_jiao_ji_b_toc cards
     * @property {number|null} [unknownCardCount] skill_jiao_ji_b_toc unknownCardCount
     */

    /**
     * Constructs a new skill_jiao_ji_b_toc.
     * @exports skill_jiao_ji_b_toc
     * @classdesc Represents a skill_jiao_ji_b_toc.
     * @implements Iskill_jiao_ji_b_toc
     * @constructor
     * @param {Iskill_jiao_ji_b_toc=} [properties] Properties to set
     */
    function skill_jiao_ji_b_toc(properties) {
        this.cards = [];
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * skill_jiao_ji_b_toc playerId.
     * @member {number} playerId
     * @memberof skill_jiao_ji_b_toc
     * @instance
     */
    skill_jiao_ji_b_toc.prototype.playerId = 0;

    /**
     * skill_jiao_ji_b_toc targetPlayerId.
     * @member {number} targetPlayerId
     * @memberof skill_jiao_ji_b_toc
     * @instance
     */
    skill_jiao_ji_b_toc.prototype.targetPlayerId = 0;

    /**
     * skill_jiao_ji_b_toc cards.
     * @member {Array.<Icard>} cards
     * @memberof skill_jiao_ji_b_toc
     * @instance
     */
    skill_jiao_ji_b_toc.prototype.cards = $util.emptyArray;

    /**
     * skill_jiao_ji_b_toc unknownCardCount.
     * @member {number} unknownCardCount
     * @memberof skill_jiao_ji_b_toc
     * @instance
     */
    skill_jiao_ji_b_toc.prototype.unknownCardCount = 0;

    /**
     * Creates a new skill_jiao_ji_b_toc instance using the specified properties.
     * @function create
     * @memberof skill_jiao_ji_b_toc
     * @static
     * @param {Iskill_jiao_ji_b_toc=} [properties] Properties to set
     * @returns {skill_jiao_ji_b_toc} skill_jiao_ji_b_toc instance
     */
    skill_jiao_ji_b_toc.create = function create(properties) {
        return new skill_jiao_ji_b_toc(properties);
    };

    /**
     * Encodes the specified skill_jiao_ji_b_toc message. Does not implicitly {@link skill_jiao_ji_b_toc.verify|verify} messages.
     * @function encode
     * @memberof skill_jiao_ji_b_toc
     * @static
     * @param {Iskill_jiao_ji_b_toc} message skill_jiao_ji_b_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_jiao_ji_b_toc.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.playerId != null && Object.hasOwnProperty.call(message, "playerId"))
            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.playerId);
        if (message.targetPlayerId != null && Object.hasOwnProperty.call(message, "targetPlayerId"))
            writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.targetPlayerId);
        if (message.cards != null && message.cards.length)
            for (var i = 0; i < message.cards.length; ++i)
                $root.card.encode(message.cards[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
        if (message.unknownCardCount != null && Object.hasOwnProperty.call(message, "unknownCardCount"))
            writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.unknownCardCount);
        return writer;
    };

    /**
     * Encodes the specified skill_jiao_ji_b_toc message, length delimited. Does not implicitly {@link skill_jiao_ji_b_toc.verify|verify} messages.
     * @function encodeDelimited
     * @memberof skill_jiao_ji_b_toc
     * @static
     * @param {Iskill_jiao_ji_b_toc} message skill_jiao_ji_b_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_jiao_ji_b_toc.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a skill_jiao_ji_b_toc message from the specified reader or buffer.
     * @function decode
     * @memberof skill_jiao_ji_b_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {skill_jiao_ji_b_toc} skill_jiao_ji_b_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_jiao_ji_b_toc.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.skill_jiao_ji_b_toc();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.playerId = reader.uint32();
                    break;
                }
            case 2: {
                    message.targetPlayerId = reader.uint32();
                    break;
                }
            case 3: {
                    if (!(message.cards && message.cards.length))
                        message.cards = [];
                    message.cards.push($root.card.decode(reader, reader.uint32()));
                    break;
                }
            case 4: {
                    message.unknownCardCount = reader.uint32();
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a skill_jiao_ji_b_toc message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof skill_jiao_ji_b_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {skill_jiao_ji_b_toc} skill_jiao_ji_b_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_jiao_ji_b_toc.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a skill_jiao_ji_b_toc message.
     * @function verify
     * @memberof skill_jiao_ji_b_toc
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    skill_jiao_ji_b_toc.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            if (!$util.isInteger(message.playerId))
                return "playerId: integer expected";
        if (message.targetPlayerId != null && message.hasOwnProperty("targetPlayerId"))
            if (!$util.isInteger(message.targetPlayerId))
                return "targetPlayerId: integer expected";
        if (message.cards != null && message.hasOwnProperty("cards")) {
            if (!Array.isArray(message.cards))
                return "cards: array expected";
            for (var i = 0; i < message.cards.length; ++i) {
                var error = $root.card.verify(message.cards[i]);
                if (error)
                    return "cards." + error;
            }
        }
        if (message.unknownCardCount != null && message.hasOwnProperty("unknownCardCount"))
            if (!$util.isInteger(message.unknownCardCount))
                return "unknownCardCount: integer expected";
        return null;
    };

    /**
     * Creates a skill_jiao_ji_b_toc message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof skill_jiao_ji_b_toc
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {skill_jiao_ji_b_toc} skill_jiao_ji_b_toc
     */
    skill_jiao_ji_b_toc.fromObject = function fromObject(object) {
        if (object instanceof $root.skill_jiao_ji_b_toc)
            return object;
        var message = new $root.skill_jiao_ji_b_toc();
        if (object.playerId != null)
            message.playerId = object.playerId >>> 0;
        if (object.targetPlayerId != null)
            message.targetPlayerId = object.targetPlayerId >>> 0;
        if (object.cards) {
            if (!Array.isArray(object.cards))
                throw TypeError(".skill_jiao_ji_b_toc.cards: array expected");
            message.cards = [];
            for (var i = 0; i < object.cards.length; ++i) {
                if (typeof object.cards[i] !== "object")
                    throw TypeError(".skill_jiao_ji_b_toc.cards: object expected");
                message.cards[i] = $root.card.fromObject(object.cards[i]);
            }
        }
        if (object.unknownCardCount != null)
            message.unknownCardCount = object.unknownCardCount >>> 0;
        return message;
    };

    /**
     * Creates a plain object from a skill_jiao_ji_b_toc message. Also converts values to other types if specified.
     * @function toObject
     * @memberof skill_jiao_ji_b_toc
     * @static
     * @param {skill_jiao_ji_b_toc} message skill_jiao_ji_b_toc
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    skill_jiao_ji_b_toc.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.arrays || options.defaults)
            object.cards = [];
        if (options.defaults) {
            object.playerId = 0;
            object.targetPlayerId = 0;
            object.unknownCardCount = 0;
        }
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            object.playerId = message.playerId;
        if (message.targetPlayerId != null && message.hasOwnProperty("targetPlayerId"))
            object.targetPlayerId = message.targetPlayerId;
        if (message.cards && message.cards.length) {
            object.cards = [];
            for (var j = 0; j < message.cards.length; ++j)
                object.cards[j] = $root.card.toObject(message.cards[j], options);
        }
        if (message.unknownCardCount != null && message.hasOwnProperty("unknownCardCount"))
            object.unknownCardCount = message.unknownCardCount;
        return object;
    };

    /**
     * Converts this skill_jiao_ji_b_toc to JSON.
     * @function toJSON
     * @memberof skill_jiao_ji_b_toc
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    skill_jiao_ji_b_toc.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for skill_jiao_ji_b_toc
     * @function getTypeUrl
     * @memberof skill_jiao_ji_b_toc
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    skill_jiao_ji_b_toc.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/skill_jiao_ji_b_toc";
    };

    return skill_jiao_ji_b_toc;
})();

$root.skill_miao_bi_qiao_bian_a_tos = (function() {

    /**
     * Properties of a skill_miao_bi_qiao_bian_a_tos.
     * @exports Iskill_miao_bi_qiao_bian_a_tos
     * @interface Iskill_miao_bi_qiao_bian_a_tos
     * @property {number|null} [targetPlayerId] skill_miao_bi_qiao_bian_a_tos targetPlayerId
     * @property {number|null} [cardId] skill_miao_bi_qiao_bian_a_tos cardId
     * @property {number|null} [seq] skill_miao_bi_qiao_bian_a_tos seq
     */

    /**
     * Constructs a new skill_miao_bi_qiao_bian_a_tos.
     * @exports skill_miao_bi_qiao_bian_a_tos
     * @classdesc Represents a skill_miao_bi_qiao_bian_a_tos.
     * @implements Iskill_miao_bi_qiao_bian_a_tos
     * @constructor
     * @param {Iskill_miao_bi_qiao_bian_a_tos=} [properties] Properties to set
     */
    function skill_miao_bi_qiao_bian_a_tos(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * skill_miao_bi_qiao_bian_a_tos targetPlayerId.
     * @member {number} targetPlayerId
     * @memberof skill_miao_bi_qiao_bian_a_tos
     * @instance
     */
    skill_miao_bi_qiao_bian_a_tos.prototype.targetPlayerId = 0;

    /**
     * skill_miao_bi_qiao_bian_a_tos cardId.
     * @member {number} cardId
     * @memberof skill_miao_bi_qiao_bian_a_tos
     * @instance
     */
    skill_miao_bi_qiao_bian_a_tos.prototype.cardId = 0;

    /**
     * skill_miao_bi_qiao_bian_a_tos seq.
     * @member {number} seq
     * @memberof skill_miao_bi_qiao_bian_a_tos
     * @instance
     */
    skill_miao_bi_qiao_bian_a_tos.prototype.seq = 0;

    /**
     * Creates a new skill_miao_bi_qiao_bian_a_tos instance using the specified properties.
     * @function create
     * @memberof skill_miao_bi_qiao_bian_a_tos
     * @static
     * @param {Iskill_miao_bi_qiao_bian_a_tos=} [properties] Properties to set
     * @returns {skill_miao_bi_qiao_bian_a_tos} skill_miao_bi_qiao_bian_a_tos instance
     */
    skill_miao_bi_qiao_bian_a_tos.create = function create(properties) {
        return new skill_miao_bi_qiao_bian_a_tos(properties);
    };

    /**
     * Encodes the specified skill_miao_bi_qiao_bian_a_tos message. Does not implicitly {@link skill_miao_bi_qiao_bian_a_tos.verify|verify} messages.
     * @function encode
     * @memberof skill_miao_bi_qiao_bian_a_tos
     * @static
     * @param {Iskill_miao_bi_qiao_bian_a_tos} message skill_miao_bi_qiao_bian_a_tos message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_miao_bi_qiao_bian_a_tos.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.targetPlayerId != null && Object.hasOwnProperty.call(message, "targetPlayerId"))
            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.targetPlayerId);
        if (message.cardId != null && Object.hasOwnProperty.call(message, "cardId"))
            writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.cardId);
        if (message.seq != null && Object.hasOwnProperty.call(message, "seq"))
            writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.seq);
        return writer;
    };

    /**
     * Encodes the specified skill_miao_bi_qiao_bian_a_tos message, length delimited. Does not implicitly {@link skill_miao_bi_qiao_bian_a_tos.verify|verify} messages.
     * @function encodeDelimited
     * @memberof skill_miao_bi_qiao_bian_a_tos
     * @static
     * @param {Iskill_miao_bi_qiao_bian_a_tos} message skill_miao_bi_qiao_bian_a_tos message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_miao_bi_qiao_bian_a_tos.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a skill_miao_bi_qiao_bian_a_tos message from the specified reader or buffer.
     * @function decode
     * @memberof skill_miao_bi_qiao_bian_a_tos
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {skill_miao_bi_qiao_bian_a_tos} skill_miao_bi_qiao_bian_a_tos
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_miao_bi_qiao_bian_a_tos.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.skill_miao_bi_qiao_bian_a_tos();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.targetPlayerId = reader.uint32();
                    break;
                }
            case 2: {
                    message.cardId = reader.uint32();
                    break;
                }
            case 3: {
                    message.seq = reader.uint32();
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a skill_miao_bi_qiao_bian_a_tos message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof skill_miao_bi_qiao_bian_a_tos
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {skill_miao_bi_qiao_bian_a_tos} skill_miao_bi_qiao_bian_a_tos
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_miao_bi_qiao_bian_a_tos.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a skill_miao_bi_qiao_bian_a_tos message.
     * @function verify
     * @memberof skill_miao_bi_qiao_bian_a_tos
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    skill_miao_bi_qiao_bian_a_tos.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.targetPlayerId != null && message.hasOwnProperty("targetPlayerId"))
            if (!$util.isInteger(message.targetPlayerId))
                return "targetPlayerId: integer expected";
        if (message.cardId != null && message.hasOwnProperty("cardId"))
            if (!$util.isInteger(message.cardId))
                return "cardId: integer expected";
        if (message.seq != null && message.hasOwnProperty("seq"))
            if (!$util.isInteger(message.seq))
                return "seq: integer expected";
        return null;
    };

    /**
     * Creates a skill_miao_bi_qiao_bian_a_tos message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof skill_miao_bi_qiao_bian_a_tos
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {skill_miao_bi_qiao_bian_a_tos} skill_miao_bi_qiao_bian_a_tos
     */
    skill_miao_bi_qiao_bian_a_tos.fromObject = function fromObject(object) {
        if (object instanceof $root.skill_miao_bi_qiao_bian_a_tos)
            return object;
        var message = new $root.skill_miao_bi_qiao_bian_a_tos();
        if (object.targetPlayerId != null)
            message.targetPlayerId = object.targetPlayerId >>> 0;
        if (object.cardId != null)
            message.cardId = object.cardId >>> 0;
        if (object.seq != null)
            message.seq = object.seq >>> 0;
        return message;
    };

    /**
     * Creates a plain object from a skill_miao_bi_qiao_bian_a_tos message. Also converts values to other types if specified.
     * @function toObject
     * @memberof skill_miao_bi_qiao_bian_a_tos
     * @static
     * @param {skill_miao_bi_qiao_bian_a_tos} message skill_miao_bi_qiao_bian_a_tos
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    skill_miao_bi_qiao_bian_a_tos.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults) {
            object.targetPlayerId = 0;
            object.cardId = 0;
            object.seq = 0;
        }
        if (message.targetPlayerId != null && message.hasOwnProperty("targetPlayerId"))
            object.targetPlayerId = message.targetPlayerId;
        if (message.cardId != null && message.hasOwnProperty("cardId"))
            object.cardId = message.cardId;
        if (message.seq != null && message.hasOwnProperty("seq"))
            object.seq = message.seq;
        return object;
    };

    /**
     * Converts this skill_miao_bi_qiao_bian_a_tos to JSON.
     * @function toJSON
     * @memberof skill_miao_bi_qiao_bian_a_tos
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    skill_miao_bi_qiao_bian_a_tos.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for skill_miao_bi_qiao_bian_a_tos
     * @function getTypeUrl
     * @memberof skill_miao_bi_qiao_bian_a_tos
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    skill_miao_bi_qiao_bian_a_tos.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/skill_miao_bi_qiao_bian_a_tos";
    };

    return skill_miao_bi_qiao_bian_a_tos;
})();

$root.skill_miao_bi_qiao_bian_a_toc = (function() {

    /**
     * Properties of a skill_miao_bi_qiao_bian_a_toc.
     * @exports Iskill_miao_bi_qiao_bian_a_toc
     * @interface Iskill_miao_bi_qiao_bian_a_toc
     * @property {number|null} [playerId] skill_miao_bi_qiao_bian_a_toc playerId
     * @property {number|null} [targetPlayerId] skill_miao_bi_qiao_bian_a_toc targetPlayerId
     * @property {number|null} [cardId] skill_miao_bi_qiao_bian_a_toc cardId
     * @property {number|null} [waitingSecond] skill_miao_bi_qiao_bian_a_toc waitingSecond
     * @property {number|null} [seq] skill_miao_bi_qiao_bian_a_toc seq
     */

    /**
     * Constructs a new skill_miao_bi_qiao_bian_a_toc.
     * @exports skill_miao_bi_qiao_bian_a_toc
     * @classdesc Represents a skill_miao_bi_qiao_bian_a_toc.
     * @implements Iskill_miao_bi_qiao_bian_a_toc
     * @constructor
     * @param {Iskill_miao_bi_qiao_bian_a_toc=} [properties] Properties to set
     */
    function skill_miao_bi_qiao_bian_a_toc(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * skill_miao_bi_qiao_bian_a_toc playerId.
     * @member {number} playerId
     * @memberof skill_miao_bi_qiao_bian_a_toc
     * @instance
     */
    skill_miao_bi_qiao_bian_a_toc.prototype.playerId = 0;

    /**
     * skill_miao_bi_qiao_bian_a_toc targetPlayerId.
     * @member {number} targetPlayerId
     * @memberof skill_miao_bi_qiao_bian_a_toc
     * @instance
     */
    skill_miao_bi_qiao_bian_a_toc.prototype.targetPlayerId = 0;

    /**
     * skill_miao_bi_qiao_bian_a_toc cardId.
     * @member {number} cardId
     * @memberof skill_miao_bi_qiao_bian_a_toc
     * @instance
     */
    skill_miao_bi_qiao_bian_a_toc.prototype.cardId = 0;

    /**
     * skill_miao_bi_qiao_bian_a_toc waitingSecond.
     * @member {number} waitingSecond
     * @memberof skill_miao_bi_qiao_bian_a_toc
     * @instance
     */
    skill_miao_bi_qiao_bian_a_toc.prototype.waitingSecond = 0;

    /**
     * skill_miao_bi_qiao_bian_a_toc seq.
     * @member {number} seq
     * @memberof skill_miao_bi_qiao_bian_a_toc
     * @instance
     */
    skill_miao_bi_qiao_bian_a_toc.prototype.seq = 0;

    /**
     * Creates a new skill_miao_bi_qiao_bian_a_toc instance using the specified properties.
     * @function create
     * @memberof skill_miao_bi_qiao_bian_a_toc
     * @static
     * @param {Iskill_miao_bi_qiao_bian_a_toc=} [properties] Properties to set
     * @returns {skill_miao_bi_qiao_bian_a_toc} skill_miao_bi_qiao_bian_a_toc instance
     */
    skill_miao_bi_qiao_bian_a_toc.create = function create(properties) {
        return new skill_miao_bi_qiao_bian_a_toc(properties);
    };

    /**
     * Encodes the specified skill_miao_bi_qiao_bian_a_toc message. Does not implicitly {@link skill_miao_bi_qiao_bian_a_toc.verify|verify} messages.
     * @function encode
     * @memberof skill_miao_bi_qiao_bian_a_toc
     * @static
     * @param {Iskill_miao_bi_qiao_bian_a_toc} message skill_miao_bi_qiao_bian_a_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_miao_bi_qiao_bian_a_toc.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.playerId != null && Object.hasOwnProperty.call(message, "playerId"))
            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.playerId);
        if (message.targetPlayerId != null && Object.hasOwnProperty.call(message, "targetPlayerId"))
            writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.targetPlayerId);
        if (message.cardId != null && Object.hasOwnProperty.call(message, "cardId"))
            writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.cardId);
        if (message.waitingSecond != null && Object.hasOwnProperty.call(message, "waitingSecond"))
            writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.waitingSecond);
        if (message.seq != null && Object.hasOwnProperty.call(message, "seq"))
            writer.uint32(/* id 5, wireType 0 =*/40).uint32(message.seq);
        return writer;
    };

    /**
     * Encodes the specified skill_miao_bi_qiao_bian_a_toc message, length delimited. Does not implicitly {@link skill_miao_bi_qiao_bian_a_toc.verify|verify} messages.
     * @function encodeDelimited
     * @memberof skill_miao_bi_qiao_bian_a_toc
     * @static
     * @param {Iskill_miao_bi_qiao_bian_a_toc} message skill_miao_bi_qiao_bian_a_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_miao_bi_qiao_bian_a_toc.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a skill_miao_bi_qiao_bian_a_toc message from the specified reader or buffer.
     * @function decode
     * @memberof skill_miao_bi_qiao_bian_a_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {skill_miao_bi_qiao_bian_a_toc} skill_miao_bi_qiao_bian_a_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_miao_bi_qiao_bian_a_toc.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.skill_miao_bi_qiao_bian_a_toc();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.playerId = reader.uint32();
                    break;
                }
            case 2: {
                    message.targetPlayerId = reader.uint32();
                    break;
                }
            case 3: {
                    message.cardId = reader.uint32();
                    break;
                }
            case 4: {
                    message.waitingSecond = reader.uint32();
                    break;
                }
            case 5: {
                    message.seq = reader.uint32();
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a skill_miao_bi_qiao_bian_a_toc message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof skill_miao_bi_qiao_bian_a_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {skill_miao_bi_qiao_bian_a_toc} skill_miao_bi_qiao_bian_a_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_miao_bi_qiao_bian_a_toc.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a skill_miao_bi_qiao_bian_a_toc message.
     * @function verify
     * @memberof skill_miao_bi_qiao_bian_a_toc
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    skill_miao_bi_qiao_bian_a_toc.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            if (!$util.isInteger(message.playerId))
                return "playerId: integer expected";
        if (message.targetPlayerId != null && message.hasOwnProperty("targetPlayerId"))
            if (!$util.isInteger(message.targetPlayerId))
                return "targetPlayerId: integer expected";
        if (message.cardId != null && message.hasOwnProperty("cardId"))
            if (!$util.isInteger(message.cardId))
                return "cardId: integer expected";
        if (message.waitingSecond != null && message.hasOwnProperty("waitingSecond"))
            if (!$util.isInteger(message.waitingSecond))
                return "waitingSecond: integer expected";
        if (message.seq != null && message.hasOwnProperty("seq"))
            if (!$util.isInteger(message.seq))
                return "seq: integer expected";
        return null;
    };

    /**
     * Creates a skill_miao_bi_qiao_bian_a_toc message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof skill_miao_bi_qiao_bian_a_toc
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {skill_miao_bi_qiao_bian_a_toc} skill_miao_bi_qiao_bian_a_toc
     */
    skill_miao_bi_qiao_bian_a_toc.fromObject = function fromObject(object) {
        if (object instanceof $root.skill_miao_bi_qiao_bian_a_toc)
            return object;
        var message = new $root.skill_miao_bi_qiao_bian_a_toc();
        if (object.playerId != null)
            message.playerId = object.playerId >>> 0;
        if (object.targetPlayerId != null)
            message.targetPlayerId = object.targetPlayerId >>> 0;
        if (object.cardId != null)
            message.cardId = object.cardId >>> 0;
        if (object.waitingSecond != null)
            message.waitingSecond = object.waitingSecond >>> 0;
        if (object.seq != null)
            message.seq = object.seq >>> 0;
        return message;
    };

    /**
     * Creates a plain object from a skill_miao_bi_qiao_bian_a_toc message. Also converts values to other types if specified.
     * @function toObject
     * @memberof skill_miao_bi_qiao_bian_a_toc
     * @static
     * @param {skill_miao_bi_qiao_bian_a_toc} message skill_miao_bi_qiao_bian_a_toc
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    skill_miao_bi_qiao_bian_a_toc.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults) {
            object.playerId = 0;
            object.targetPlayerId = 0;
            object.cardId = 0;
            object.waitingSecond = 0;
            object.seq = 0;
        }
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            object.playerId = message.playerId;
        if (message.targetPlayerId != null && message.hasOwnProperty("targetPlayerId"))
            object.targetPlayerId = message.targetPlayerId;
        if (message.cardId != null && message.hasOwnProperty("cardId"))
            object.cardId = message.cardId;
        if (message.waitingSecond != null && message.hasOwnProperty("waitingSecond"))
            object.waitingSecond = message.waitingSecond;
        if (message.seq != null && message.hasOwnProperty("seq"))
            object.seq = message.seq;
        return object;
    };

    /**
     * Converts this skill_miao_bi_qiao_bian_a_toc to JSON.
     * @function toJSON
     * @memberof skill_miao_bi_qiao_bian_a_toc
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    skill_miao_bi_qiao_bian_a_toc.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for skill_miao_bi_qiao_bian_a_toc
     * @function getTypeUrl
     * @memberof skill_miao_bi_qiao_bian_a_toc
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    skill_miao_bi_qiao_bian_a_toc.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/skill_miao_bi_qiao_bian_a_toc";
    };

    return skill_miao_bi_qiao_bian_a_toc;
})();

$root.skill_miao_bi_qiao_bian_b_tos = (function() {

    /**
     * Properties of a skill_miao_bi_qiao_bian_b_tos.
     * @exports Iskill_miao_bi_qiao_bian_b_tos
     * @interface Iskill_miao_bi_qiao_bian_b_tos
     * @property {boolean|null} [enable] skill_miao_bi_qiao_bian_b_tos enable
     * @property {number|null} [targetPlayerId] skill_miao_bi_qiao_bian_b_tos targetPlayerId
     * @property {number|null} [cardId] skill_miao_bi_qiao_bian_b_tos cardId
     * @property {number|null} [seq] skill_miao_bi_qiao_bian_b_tos seq
     */

    /**
     * Constructs a new skill_miao_bi_qiao_bian_b_tos.
     * @exports skill_miao_bi_qiao_bian_b_tos
     * @classdesc Represents a skill_miao_bi_qiao_bian_b_tos.
     * @implements Iskill_miao_bi_qiao_bian_b_tos
     * @constructor
     * @param {Iskill_miao_bi_qiao_bian_b_tos=} [properties] Properties to set
     */
    function skill_miao_bi_qiao_bian_b_tos(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * skill_miao_bi_qiao_bian_b_tos enable.
     * @member {boolean} enable
     * @memberof skill_miao_bi_qiao_bian_b_tos
     * @instance
     */
    skill_miao_bi_qiao_bian_b_tos.prototype.enable = false;

    /**
     * skill_miao_bi_qiao_bian_b_tos targetPlayerId.
     * @member {number} targetPlayerId
     * @memberof skill_miao_bi_qiao_bian_b_tos
     * @instance
     */
    skill_miao_bi_qiao_bian_b_tos.prototype.targetPlayerId = 0;

    /**
     * skill_miao_bi_qiao_bian_b_tos cardId.
     * @member {number} cardId
     * @memberof skill_miao_bi_qiao_bian_b_tos
     * @instance
     */
    skill_miao_bi_qiao_bian_b_tos.prototype.cardId = 0;

    /**
     * skill_miao_bi_qiao_bian_b_tos seq.
     * @member {number} seq
     * @memberof skill_miao_bi_qiao_bian_b_tos
     * @instance
     */
    skill_miao_bi_qiao_bian_b_tos.prototype.seq = 0;

    /**
     * Creates a new skill_miao_bi_qiao_bian_b_tos instance using the specified properties.
     * @function create
     * @memberof skill_miao_bi_qiao_bian_b_tos
     * @static
     * @param {Iskill_miao_bi_qiao_bian_b_tos=} [properties] Properties to set
     * @returns {skill_miao_bi_qiao_bian_b_tos} skill_miao_bi_qiao_bian_b_tos instance
     */
    skill_miao_bi_qiao_bian_b_tos.create = function create(properties) {
        return new skill_miao_bi_qiao_bian_b_tos(properties);
    };

    /**
     * Encodes the specified skill_miao_bi_qiao_bian_b_tos message. Does not implicitly {@link skill_miao_bi_qiao_bian_b_tos.verify|verify} messages.
     * @function encode
     * @memberof skill_miao_bi_qiao_bian_b_tos
     * @static
     * @param {Iskill_miao_bi_qiao_bian_b_tos} message skill_miao_bi_qiao_bian_b_tos message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_miao_bi_qiao_bian_b_tos.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.enable != null && Object.hasOwnProperty.call(message, "enable"))
            writer.uint32(/* id 1, wireType 0 =*/8).bool(message.enable);
        if (message.targetPlayerId != null && Object.hasOwnProperty.call(message, "targetPlayerId"))
            writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.targetPlayerId);
        if (message.cardId != null && Object.hasOwnProperty.call(message, "cardId"))
            writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.cardId);
        if (message.seq != null && Object.hasOwnProperty.call(message, "seq"))
            writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.seq);
        return writer;
    };

    /**
     * Encodes the specified skill_miao_bi_qiao_bian_b_tos message, length delimited. Does not implicitly {@link skill_miao_bi_qiao_bian_b_tos.verify|verify} messages.
     * @function encodeDelimited
     * @memberof skill_miao_bi_qiao_bian_b_tos
     * @static
     * @param {Iskill_miao_bi_qiao_bian_b_tos} message skill_miao_bi_qiao_bian_b_tos message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_miao_bi_qiao_bian_b_tos.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a skill_miao_bi_qiao_bian_b_tos message from the specified reader or buffer.
     * @function decode
     * @memberof skill_miao_bi_qiao_bian_b_tos
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {skill_miao_bi_qiao_bian_b_tos} skill_miao_bi_qiao_bian_b_tos
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_miao_bi_qiao_bian_b_tos.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.skill_miao_bi_qiao_bian_b_tos();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.enable = reader.bool();
                    break;
                }
            case 2: {
                    message.targetPlayerId = reader.uint32();
                    break;
                }
            case 3: {
                    message.cardId = reader.uint32();
                    break;
                }
            case 4: {
                    message.seq = reader.uint32();
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a skill_miao_bi_qiao_bian_b_tos message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof skill_miao_bi_qiao_bian_b_tos
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {skill_miao_bi_qiao_bian_b_tos} skill_miao_bi_qiao_bian_b_tos
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_miao_bi_qiao_bian_b_tos.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a skill_miao_bi_qiao_bian_b_tos message.
     * @function verify
     * @memberof skill_miao_bi_qiao_bian_b_tos
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    skill_miao_bi_qiao_bian_b_tos.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.enable != null && message.hasOwnProperty("enable"))
            if (typeof message.enable !== "boolean")
                return "enable: boolean expected";
        if (message.targetPlayerId != null && message.hasOwnProperty("targetPlayerId"))
            if (!$util.isInteger(message.targetPlayerId))
                return "targetPlayerId: integer expected";
        if (message.cardId != null && message.hasOwnProperty("cardId"))
            if (!$util.isInteger(message.cardId))
                return "cardId: integer expected";
        if (message.seq != null && message.hasOwnProperty("seq"))
            if (!$util.isInteger(message.seq))
                return "seq: integer expected";
        return null;
    };

    /**
     * Creates a skill_miao_bi_qiao_bian_b_tos message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof skill_miao_bi_qiao_bian_b_tos
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {skill_miao_bi_qiao_bian_b_tos} skill_miao_bi_qiao_bian_b_tos
     */
    skill_miao_bi_qiao_bian_b_tos.fromObject = function fromObject(object) {
        if (object instanceof $root.skill_miao_bi_qiao_bian_b_tos)
            return object;
        var message = new $root.skill_miao_bi_qiao_bian_b_tos();
        if (object.enable != null)
            message.enable = Boolean(object.enable);
        if (object.targetPlayerId != null)
            message.targetPlayerId = object.targetPlayerId >>> 0;
        if (object.cardId != null)
            message.cardId = object.cardId >>> 0;
        if (object.seq != null)
            message.seq = object.seq >>> 0;
        return message;
    };

    /**
     * Creates a plain object from a skill_miao_bi_qiao_bian_b_tos message. Also converts values to other types if specified.
     * @function toObject
     * @memberof skill_miao_bi_qiao_bian_b_tos
     * @static
     * @param {skill_miao_bi_qiao_bian_b_tos} message skill_miao_bi_qiao_bian_b_tos
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    skill_miao_bi_qiao_bian_b_tos.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults) {
            object.enable = false;
            object.targetPlayerId = 0;
            object.cardId = 0;
            object.seq = 0;
        }
        if (message.enable != null && message.hasOwnProperty("enable"))
            object.enable = message.enable;
        if (message.targetPlayerId != null && message.hasOwnProperty("targetPlayerId"))
            object.targetPlayerId = message.targetPlayerId;
        if (message.cardId != null && message.hasOwnProperty("cardId"))
            object.cardId = message.cardId;
        if (message.seq != null && message.hasOwnProperty("seq"))
            object.seq = message.seq;
        return object;
    };

    /**
     * Converts this skill_miao_bi_qiao_bian_b_tos to JSON.
     * @function toJSON
     * @memberof skill_miao_bi_qiao_bian_b_tos
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    skill_miao_bi_qiao_bian_b_tos.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for skill_miao_bi_qiao_bian_b_tos
     * @function getTypeUrl
     * @memberof skill_miao_bi_qiao_bian_b_tos
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    skill_miao_bi_qiao_bian_b_tos.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/skill_miao_bi_qiao_bian_b_tos";
    };

    return skill_miao_bi_qiao_bian_b_tos;
})();

$root.skill_miao_bi_qiao_bian_b_toc = (function() {

    /**
     * Properties of a skill_miao_bi_qiao_bian_b_toc.
     * @exports Iskill_miao_bi_qiao_bian_b_toc
     * @interface Iskill_miao_bi_qiao_bian_b_toc
     * @property {number|null} [playerId] skill_miao_bi_qiao_bian_b_toc playerId
     * @property {number|null} [targetPlayerId] skill_miao_bi_qiao_bian_b_toc targetPlayerId
     * @property {number|null} [cardId] skill_miao_bi_qiao_bian_b_toc cardId
     */

    /**
     * Constructs a new skill_miao_bi_qiao_bian_b_toc.
     * @exports skill_miao_bi_qiao_bian_b_toc
     * @classdesc Represents a skill_miao_bi_qiao_bian_b_toc.
     * @implements Iskill_miao_bi_qiao_bian_b_toc
     * @constructor
     * @param {Iskill_miao_bi_qiao_bian_b_toc=} [properties] Properties to set
     */
    function skill_miao_bi_qiao_bian_b_toc(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * skill_miao_bi_qiao_bian_b_toc playerId.
     * @member {number} playerId
     * @memberof skill_miao_bi_qiao_bian_b_toc
     * @instance
     */
    skill_miao_bi_qiao_bian_b_toc.prototype.playerId = 0;

    /**
     * skill_miao_bi_qiao_bian_b_toc targetPlayerId.
     * @member {number} targetPlayerId
     * @memberof skill_miao_bi_qiao_bian_b_toc
     * @instance
     */
    skill_miao_bi_qiao_bian_b_toc.prototype.targetPlayerId = 0;

    /**
     * skill_miao_bi_qiao_bian_b_toc cardId.
     * @member {number} cardId
     * @memberof skill_miao_bi_qiao_bian_b_toc
     * @instance
     */
    skill_miao_bi_qiao_bian_b_toc.prototype.cardId = 0;

    /**
     * Creates a new skill_miao_bi_qiao_bian_b_toc instance using the specified properties.
     * @function create
     * @memberof skill_miao_bi_qiao_bian_b_toc
     * @static
     * @param {Iskill_miao_bi_qiao_bian_b_toc=} [properties] Properties to set
     * @returns {skill_miao_bi_qiao_bian_b_toc} skill_miao_bi_qiao_bian_b_toc instance
     */
    skill_miao_bi_qiao_bian_b_toc.create = function create(properties) {
        return new skill_miao_bi_qiao_bian_b_toc(properties);
    };

    /**
     * Encodes the specified skill_miao_bi_qiao_bian_b_toc message. Does not implicitly {@link skill_miao_bi_qiao_bian_b_toc.verify|verify} messages.
     * @function encode
     * @memberof skill_miao_bi_qiao_bian_b_toc
     * @static
     * @param {Iskill_miao_bi_qiao_bian_b_toc} message skill_miao_bi_qiao_bian_b_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_miao_bi_qiao_bian_b_toc.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.playerId != null && Object.hasOwnProperty.call(message, "playerId"))
            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.playerId);
        if (message.targetPlayerId != null && Object.hasOwnProperty.call(message, "targetPlayerId"))
            writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.targetPlayerId);
        if (message.cardId != null && Object.hasOwnProperty.call(message, "cardId"))
            writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.cardId);
        return writer;
    };

    /**
     * Encodes the specified skill_miao_bi_qiao_bian_b_toc message, length delimited. Does not implicitly {@link skill_miao_bi_qiao_bian_b_toc.verify|verify} messages.
     * @function encodeDelimited
     * @memberof skill_miao_bi_qiao_bian_b_toc
     * @static
     * @param {Iskill_miao_bi_qiao_bian_b_toc} message skill_miao_bi_qiao_bian_b_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_miao_bi_qiao_bian_b_toc.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a skill_miao_bi_qiao_bian_b_toc message from the specified reader or buffer.
     * @function decode
     * @memberof skill_miao_bi_qiao_bian_b_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {skill_miao_bi_qiao_bian_b_toc} skill_miao_bi_qiao_bian_b_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_miao_bi_qiao_bian_b_toc.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.skill_miao_bi_qiao_bian_b_toc();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.playerId = reader.uint32();
                    break;
                }
            case 2: {
                    message.targetPlayerId = reader.uint32();
                    break;
                }
            case 3: {
                    message.cardId = reader.uint32();
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a skill_miao_bi_qiao_bian_b_toc message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof skill_miao_bi_qiao_bian_b_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {skill_miao_bi_qiao_bian_b_toc} skill_miao_bi_qiao_bian_b_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_miao_bi_qiao_bian_b_toc.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a skill_miao_bi_qiao_bian_b_toc message.
     * @function verify
     * @memberof skill_miao_bi_qiao_bian_b_toc
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    skill_miao_bi_qiao_bian_b_toc.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            if (!$util.isInteger(message.playerId))
                return "playerId: integer expected";
        if (message.targetPlayerId != null && message.hasOwnProperty("targetPlayerId"))
            if (!$util.isInteger(message.targetPlayerId))
                return "targetPlayerId: integer expected";
        if (message.cardId != null && message.hasOwnProperty("cardId"))
            if (!$util.isInteger(message.cardId))
                return "cardId: integer expected";
        return null;
    };

    /**
     * Creates a skill_miao_bi_qiao_bian_b_toc message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof skill_miao_bi_qiao_bian_b_toc
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {skill_miao_bi_qiao_bian_b_toc} skill_miao_bi_qiao_bian_b_toc
     */
    skill_miao_bi_qiao_bian_b_toc.fromObject = function fromObject(object) {
        if (object instanceof $root.skill_miao_bi_qiao_bian_b_toc)
            return object;
        var message = new $root.skill_miao_bi_qiao_bian_b_toc();
        if (object.playerId != null)
            message.playerId = object.playerId >>> 0;
        if (object.targetPlayerId != null)
            message.targetPlayerId = object.targetPlayerId >>> 0;
        if (object.cardId != null)
            message.cardId = object.cardId >>> 0;
        return message;
    };

    /**
     * Creates a plain object from a skill_miao_bi_qiao_bian_b_toc message. Also converts values to other types if specified.
     * @function toObject
     * @memberof skill_miao_bi_qiao_bian_b_toc
     * @static
     * @param {skill_miao_bi_qiao_bian_b_toc} message skill_miao_bi_qiao_bian_b_toc
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    skill_miao_bi_qiao_bian_b_toc.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults) {
            object.playerId = 0;
            object.targetPlayerId = 0;
            object.cardId = 0;
        }
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            object.playerId = message.playerId;
        if (message.targetPlayerId != null && message.hasOwnProperty("targetPlayerId"))
            object.targetPlayerId = message.targetPlayerId;
        if (message.cardId != null && message.hasOwnProperty("cardId"))
            object.cardId = message.cardId;
        return object;
    };

    /**
     * Converts this skill_miao_bi_qiao_bian_b_toc to JSON.
     * @function toJSON
     * @memberof skill_miao_bi_qiao_bian_b_toc
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    skill_miao_bi_qiao_bian_b_toc.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for skill_miao_bi_qiao_bian_b_toc
     * @function getTypeUrl
     * @memberof skill_miao_bi_qiao_bian_b_toc
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    skill_miao_bi_qiao_bian_b_toc.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/skill_miao_bi_qiao_bian_b_toc";
    };

    return skill_miao_bi_qiao_bian_b_toc;
})();

$root.skill_jin_bi_a_tos = (function() {

    /**
     * Properties of a skill_jin_bi_a_tos.
     * @exports Iskill_jin_bi_a_tos
     * @interface Iskill_jin_bi_a_tos
     * @property {number|null} [targetPlayerId] skill_jin_bi_a_tos targetPlayerId
     * @property {number|null} [seq] skill_jin_bi_a_tos seq
     */

    /**
     * Constructs a new skill_jin_bi_a_tos.
     * @exports skill_jin_bi_a_tos
     * @classdesc Represents a skill_jin_bi_a_tos.
     * @implements Iskill_jin_bi_a_tos
     * @constructor
     * @param {Iskill_jin_bi_a_tos=} [properties] Properties to set
     */
    function skill_jin_bi_a_tos(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * skill_jin_bi_a_tos targetPlayerId.
     * @member {number} targetPlayerId
     * @memberof skill_jin_bi_a_tos
     * @instance
     */
    skill_jin_bi_a_tos.prototype.targetPlayerId = 0;

    /**
     * skill_jin_bi_a_tos seq.
     * @member {number} seq
     * @memberof skill_jin_bi_a_tos
     * @instance
     */
    skill_jin_bi_a_tos.prototype.seq = 0;

    /**
     * Creates a new skill_jin_bi_a_tos instance using the specified properties.
     * @function create
     * @memberof skill_jin_bi_a_tos
     * @static
     * @param {Iskill_jin_bi_a_tos=} [properties] Properties to set
     * @returns {skill_jin_bi_a_tos} skill_jin_bi_a_tos instance
     */
    skill_jin_bi_a_tos.create = function create(properties) {
        return new skill_jin_bi_a_tos(properties);
    };

    /**
     * Encodes the specified skill_jin_bi_a_tos message. Does not implicitly {@link skill_jin_bi_a_tos.verify|verify} messages.
     * @function encode
     * @memberof skill_jin_bi_a_tos
     * @static
     * @param {Iskill_jin_bi_a_tos} message skill_jin_bi_a_tos message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_jin_bi_a_tos.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.targetPlayerId != null && Object.hasOwnProperty.call(message, "targetPlayerId"))
            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.targetPlayerId);
        if (message.seq != null && Object.hasOwnProperty.call(message, "seq"))
            writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.seq);
        return writer;
    };

    /**
     * Encodes the specified skill_jin_bi_a_tos message, length delimited. Does not implicitly {@link skill_jin_bi_a_tos.verify|verify} messages.
     * @function encodeDelimited
     * @memberof skill_jin_bi_a_tos
     * @static
     * @param {Iskill_jin_bi_a_tos} message skill_jin_bi_a_tos message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_jin_bi_a_tos.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a skill_jin_bi_a_tos message from the specified reader or buffer.
     * @function decode
     * @memberof skill_jin_bi_a_tos
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {skill_jin_bi_a_tos} skill_jin_bi_a_tos
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_jin_bi_a_tos.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.skill_jin_bi_a_tos();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.targetPlayerId = reader.uint32();
                    break;
                }
            case 2: {
                    message.seq = reader.uint32();
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a skill_jin_bi_a_tos message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof skill_jin_bi_a_tos
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {skill_jin_bi_a_tos} skill_jin_bi_a_tos
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_jin_bi_a_tos.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a skill_jin_bi_a_tos message.
     * @function verify
     * @memberof skill_jin_bi_a_tos
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    skill_jin_bi_a_tos.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.targetPlayerId != null && message.hasOwnProperty("targetPlayerId"))
            if (!$util.isInteger(message.targetPlayerId))
                return "targetPlayerId: integer expected";
        if (message.seq != null && message.hasOwnProperty("seq"))
            if (!$util.isInteger(message.seq))
                return "seq: integer expected";
        return null;
    };

    /**
     * Creates a skill_jin_bi_a_tos message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof skill_jin_bi_a_tos
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {skill_jin_bi_a_tos} skill_jin_bi_a_tos
     */
    skill_jin_bi_a_tos.fromObject = function fromObject(object) {
        if (object instanceof $root.skill_jin_bi_a_tos)
            return object;
        var message = new $root.skill_jin_bi_a_tos();
        if (object.targetPlayerId != null)
            message.targetPlayerId = object.targetPlayerId >>> 0;
        if (object.seq != null)
            message.seq = object.seq >>> 0;
        return message;
    };

    /**
     * Creates a plain object from a skill_jin_bi_a_tos message. Also converts values to other types if specified.
     * @function toObject
     * @memberof skill_jin_bi_a_tos
     * @static
     * @param {skill_jin_bi_a_tos} message skill_jin_bi_a_tos
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    skill_jin_bi_a_tos.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults) {
            object.targetPlayerId = 0;
            object.seq = 0;
        }
        if (message.targetPlayerId != null && message.hasOwnProperty("targetPlayerId"))
            object.targetPlayerId = message.targetPlayerId;
        if (message.seq != null && message.hasOwnProperty("seq"))
            object.seq = message.seq;
        return object;
    };

    /**
     * Converts this skill_jin_bi_a_tos to JSON.
     * @function toJSON
     * @memberof skill_jin_bi_a_tos
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    skill_jin_bi_a_tos.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for skill_jin_bi_a_tos
     * @function getTypeUrl
     * @memberof skill_jin_bi_a_tos
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    skill_jin_bi_a_tos.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/skill_jin_bi_a_tos";
    };

    return skill_jin_bi_a_tos;
})();

$root.skill_jin_bi_a_toc = (function() {

    /**
     * Properties of a skill_jin_bi_a_toc.
     * @exports Iskill_jin_bi_a_toc
     * @interface Iskill_jin_bi_a_toc
     * @property {number|null} [playerId] skill_jin_bi_a_toc playerId
     * @property {number|null} [targetPlayerId] skill_jin_bi_a_toc targetPlayerId
     * @property {number|null} [waitingSecond] skill_jin_bi_a_toc waitingSecond
     * @property {number|null} [seq] skill_jin_bi_a_toc seq
     */

    /**
     * Constructs a new skill_jin_bi_a_toc.
     * @exports skill_jin_bi_a_toc
     * @classdesc Represents a skill_jin_bi_a_toc.
     * @implements Iskill_jin_bi_a_toc
     * @constructor
     * @param {Iskill_jin_bi_a_toc=} [properties] Properties to set
     */
    function skill_jin_bi_a_toc(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * skill_jin_bi_a_toc playerId.
     * @member {number} playerId
     * @memberof skill_jin_bi_a_toc
     * @instance
     */
    skill_jin_bi_a_toc.prototype.playerId = 0;

    /**
     * skill_jin_bi_a_toc targetPlayerId.
     * @member {number} targetPlayerId
     * @memberof skill_jin_bi_a_toc
     * @instance
     */
    skill_jin_bi_a_toc.prototype.targetPlayerId = 0;

    /**
     * skill_jin_bi_a_toc waitingSecond.
     * @member {number} waitingSecond
     * @memberof skill_jin_bi_a_toc
     * @instance
     */
    skill_jin_bi_a_toc.prototype.waitingSecond = 0;

    /**
     * skill_jin_bi_a_toc seq.
     * @member {number} seq
     * @memberof skill_jin_bi_a_toc
     * @instance
     */
    skill_jin_bi_a_toc.prototype.seq = 0;

    /**
     * Creates a new skill_jin_bi_a_toc instance using the specified properties.
     * @function create
     * @memberof skill_jin_bi_a_toc
     * @static
     * @param {Iskill_jin_bi_a_toc=} [properties] Properties to set
     * @returns {skill_jin_bi_a_toc} skill_jin_bi_a_toc instance
     */
    skill_jin_bi_a_toc.create = function create(properties) {
        return new skill_jin_bi_a_toc(properties);
    };

    /**
     * Encodes the specified skill_jin_bi_a_toc message. Does not implicitly {@link skill_jin_bi_a_toc.verify|verify} messages.
     * @function encode
     * @memberof skill_jin_bi_a_toc
     * @static
     * @param {Iskill_jin_bi_a_toc} message skill_jin_bi_a_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_jin_bi_a_toc.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.playerId != null && Object.hasOwnProperty.call(message, "playerId"))
            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.playerId);
        if (message.targetPlayerId != null && Object.hasOwnProperty.call(message, "targetPlayerId"))
            writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.targetPlayerId);
        if (message.waitingSecond != null && Object.hasOwnProperty.call(message, "waitingSecond"))
            writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.waitingSecond);
        if (message.seq != null && Object.hasOwnProperty.call(message, "seq"))
            writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.seq);
        return writer;
    };

    /**
     * Encodes the specified skill_jin_bi_a_toc message, length delimited. Does not implicitly {@link skill_jin_bi_a_toc.verify|verify} messages.
     * @function encodeDelimited
     * @memberof skill_jin_bi_a_toc
     * @static
     * @param {Iskill_jin_bi_a_toc} message skill_jin_bi_a_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_jin_bi_a_toc.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a skill_jin_bi_a_toc message from the specified reader or buffer.
     * @function decode
     * @memberof skill_jin_bi_a_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {skill_jin_bi_a_toc} skill_jin_bi_a_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_jin_bi_a_toc.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.skill_jin_bi_a_toc();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.playerId = reader.uint32();
                    break;
                }
            case 2: {
                    message.targetPlayerId = reader.uint32();
                    break;
                }
            case 3: {
                    message.waitingSecond = reader.uint32();
                    break;
                }
            case 4: {
                    message.seq = reader.uint32();
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a skill_jin_bi_a_toc message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof skill_jin_bi_a_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {skill_jin_bi_a_toc} skill_jin_bi_a_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_jin_bi_a_toc.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a skill_jin_bi_a_toc message.
     * @function verify
     * @memberof skill_jin_bi_a_toc
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    skill_jin_bi_a_toc.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            if (!$util.isInteger(message.playerId))
                return "playerId: integer expected";
        if (message.targetPlayerId != null && message.hasOwnProperty("targetPlayerId"))
            if (!$util.isInteger(message.targetPlayerId))
                return "targetPlayerId: integer expected";
        if (message.waitingSecond != null && message.hasOwnProperty("waitingSecond"))
            if (!$util.isInteger(message.waitingSecond))
                return "waitingSecond: integer expected";
        if (message.seq != null && message.hasOwnProperty("seq"))
            if (!$util.isInteger(message.seq))
                return "seq: integer expected";
        return null;
    };

    /**
     * Creates a skill_jin_bi_a_toc message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof skill_jin_bi_a_toc
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {skill_jin_bi_a_toc} skill_jin_bi_a_toc
     */
    skill_jin_bi_a_toc.fromObject = function fromObject(object) {
        if (object instanceof $root.skill_jin_bi_a_toc)
            return object;
        var message = new $root.skill_jin_bi_a_toc();
        if (object.playerId != null)
            message.playerId = object.playerId >>> 0;
        if (object.targetPlayerId != null)
            message.targetPlayerId = object.targetPlayerId >>> 0;
        if (object.waitingSecond != null)
            message.waitingSecond = object.waitingSecond >>> 0;
        if (object.seq != null)
            message.seq = object.seq >>> 0;
        return message;
    };

    /**
     * Creates a plain object from a skill_jin_bi_a_toc message. Also converts values to other types if specified.
     * @function toObject
     * @memberof skill_jin_bi_a_toc
     * @static
     * @param {skill_jin_bi_a_toc} message skill_jin_bi_a_toc
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    skill_jin_bi_a_toc.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults) {
            object.playerId = 0;
            object.targetPlayerId = 0;
            object.waitingSecond = 0;
            object.seq = 0;
        }
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            object.playerId = message.playerId;
        if (message.targetPlayerId != null && message.hasOwnProperty("targetPlayerId"))
            object.targetPlayerId = message.targetPlayerId;
        if (message.waitingSecond != null && message.hasOwnProperty("waitingSecond"))
            object.waitingSecond = message.waitingSecond;
        if (message.seq != null && message.hasOwnProperty("seq"))
            object.seq = message.seq;
        return object;
    };

    /**
     * Converts this skill_jin_bi_a_toc to JSON.
     * @function toJSON
     * @memberof skill_jin_bi_a_toc
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    skill_jin_bi_a_toc.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for skill_jin_bi_a_toc
     * @function getTypeUrl
     * @memberof skill_jin_bi_a_toc
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    skill_jin_bi_a_toc.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/skill_jin_bi_a_toc";
    };

    return skill_jin_bi_a_toc;
})();

$root.skill_jin_bi_b_tos = (function() {

    /**
     * Properties of a skill_jin_bi_b_tos.
     * @exports Iskill_jin_bi_b_tos
     * @interface Iskill_jin_bi_b_tos
     * @property {Array.<number>|null} [cardIds] skill_jin_bi_b_tos cardIds
     * @property {number|null} [seq] skill_jin_bi_b_tos seq
     */

    /**
     * Constructs a new skill_jin_bi_b_tos.
     * @exports skill_jin_bi_b_tos
     * @classdesc Represents a skill_jin_bi_b_tos.
     * @implements Iskill_jin_bi_b_tos
     * @constructor
     * @param {Iskill_jin_bi_b_tos=} [properties] Properties to set
     */
    function skill_jin_bi_b_tos(properties) {
        this.cardIds = [];
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * skill_jin_bi_b_tos cardIds.
     * @member {Array.<number>} cardIds
     * @memberof skill_jin_bi_b_tos
     * @instance
     */
    skill_jin_bi_b_tos.prototype.cardIds = $util.emptyArray;

    /**
     * skill_jin_bi_b_tos seq.
     * @member {number} seq
     * @memberof skill_jin_bi_b_tos
     * @instance
     */
    skill_jin_bi_b_tos.prototype.seq = 0;

    /**
     * Creates a new skill_jin_bi_b_tos instance using the specified properties.
     * @function create
     * @memberof skill_jin_bi_b_tos
     * @static
     * @param {Iskill_jin_bi_b_tos=} [properties] Properties to set
     * @returns {skill_jin_bi_b_tos} skill_jin_bi_b_tos instance
     */
    skill_jin_bi_b_tos.create = function create(properties) {
        return new skill_jin_bi_b_tos(properties);
    };

    /**
     * Encodes the specified skill_jin_bi_b_tos message. Does not implicitly {@link skill_jin_bi_b_tos.verify|verify} messages.
     * @function encode
     * @memberof skill_jin_bi_b_tos
     * @static
     * @param {Iskill_jin_bi_b_tos} message skill_jin_bi_b_tos message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_jin_bi_b_tos.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.cardIds != null && message.cardIds.length) {
            writer.uint32(/* id 1, wireType 2 =*/10).fork();
            for (var i = 0; i < message.cardIds.length; ++i)
                writer.uint32(message.cardIds[i]);
            writer.ldelim();
        }
        if (message.seq != null && Object.hasOwnProperty.call(message, "seq"))
            writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.seq);
        return writer;
    };

    /**
     * Encodes the specified skill_jin_bi_b_tos message, length delimited. Does not implicitly {@link skill_jin_bi_b_tos.verify|verify} messages.
     * @function encodeDelimited
     * @memberof skill_jin_bi_b_tos
     * @static
     * @param {Iskill_jin_bi_b_tos} message skill_jin_bi_b_tos message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_jin_bi_b_tos.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a skill_jin_bi_b_tos message from the specified reader or buffer.
     * @function decode
     * @memberof skill_jin_bi_b_tos
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {skill_jin_bi_b_tos} skill_jin_bi_b_tos
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_jin_bi_b_tos.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.skill_jin_bi_b_tos();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    if (!(message.cardIds && message.cardIds.length))
                        message.cardIds = [];
                    if ((tag & 7) === 2) {
                        var end2 = reader.uint32() + reader.pos;
                        while (reader.pos < end2)
                            message.cardIds.push(reader.uint32());
                    } else
                        message.cardIds.push(reader.uint32());
                    break;
                }
            case 2: {
                    message.seq = reader.uint32();
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a skill_jin_bi_b_tos message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof skill_jin_bi_b_tos
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {skill_jin_bi_b_tos} skill_jin_bi_b_tos
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_jin_bi_b_tos.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a skill_jin_bi_b_tos message.
     * @function verify
     * @memberof skill_jin_bi_b_tos
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    skill_jin_bi_b_tos.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.cardIds != null && message.hasOwnProperty("cardIds")) {
            if (!Array.isArray(message.cardIds))
                return "cardIds: array expected";
            for (var i = 0; i < message.cardIds.length; ++i)
                if (!$util.isInteger(message.cardIds[i]))
                    return "cardIds: integer[] expected";
        }
        if (message.seq != null && message.hasOwnProperty("seq"))
            if (!$util.isInteger(message.seq))
                return "seq: integer expected";
        return null;
    };

    /**
     * Creates a skill_jin_bi_b_tos message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof skill_jin_bi_b_tos
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {skill_jin_bi_b_tos} skill_jin_bi_b_tos
     */
    skill_jin_bi_b_tos.fromObject = function fromObject(object) {
        if (object instanceof $root.skill_jin_bi_b_tos)
            return object;
        var message = new $root.skill_jin_bi_b_tos();
        if (object.cardIds) {
            if (!Array.isArray(object.cardIds))
                throw TypeError(".skill_jin_bi_b_tos.cardIds: array expected");
            message.cardIds = [];
            for (var i = 0; i < object.cardIds.length; ++i)
                message.cardIds[i] = object.cardIds[i] >>> 0;
        }
        if (object.seq != null)
            message.seq = object.seq >>> 0;
        return message;
    };

    /**
     * Creates a plain object from a skill_jin_bi_b_tos message. Also converts values to other types if specified.
     * @function toObject
     * @memberof skill_jin_bi_b_tos
     * @static
     * @param {skill_jin_bi_b_tos} message skill_jin_bi_b_tos
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    skill_jin_bi_b_tos.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.arrays || options.defaults)
            object.cardIds = [];
        if (options.defaults)
            object.seq = 0;
        if (message.cardIds && message.cardIds.length) {
            object.cardIds = [];
            for (var j = 0; j < message.cardIds.length; ++j)
                object.cardIds[j] = message.cardIds[j];
        }
        if (message.seq != null && message.hasOwnProperty("seq"))
            object.seq = message.seq;
        return object;
    };

    /**
     * Converts this skill_jin_bi_b_tos to JSON.
     * @function toJSON
     * @memberof skill_jin_bi_b_tos
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    skill_jin_bi_b_tos.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for skill_jin_bi_b_tos
     * @function getTypeUrl
     * @memberof skill_jin_bi_b_tos
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    skill_jin_bi_b_tos.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/skill_jin_bi_b_tos";
    };

    return skill_jin_bi_b_tos;
})();

$root.skill_jin_bi_b_toc = (function() {

    /**
     * Properties of a skill_jin_bi_b_toc.
     * @exports Iskill_jin_bi_b_toc
     * @interface Iskill_jin_bi_b_toc
     * @property {number|null} [playerId] skill_jin_bi_b_toc playerId
     * @property {number|null} [targetPlayerId] skill_jin_bi_b_toc targetPlayerId
     * @property {Array.<Icard>|null} [cards] skill_jin_bi_b_toc cards
     * @property {number|null} [unknownCardCount] skill_jin_bi_b_toc unknownCardCount
     */

    /**
     * Constructs a new skill_jin_bi_b_toc.
     * @exports skill_jin_bi_b_toc
     * @classdesc Represents a skill_jin_bi_b_toc.
     * @implements Iskill_jin_bi_b_toc
     * @constructor
     * @param {Iskill_jin_bi_b_toc=} [properties] Properties to set
     */
    function skill_jin_bi_b_toc(properties) {
        this.cards = [];
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * skill_jin_bi_b_toc playerId.
     * @member {number} playerId
     * @memberof skill_jin_bi_b_toc
     * @instance
     */
    skill_jin_bi_b_toc.prototype.playerId = 0;

    /**
     * skill_jin_bi_b_toc targetPlayerId.
     * @member {number} targetPlayerId
     * @memberof skill_jin_bi_b_toc
     * @instance
     */
    skill_jin_bi_b_toc.prototype.targetPlayerId = 0;

    /**
     * skill_jin_bi_b_toc cards.
     * @member {Array.<Icard>} cards
     * @memberof skill_jin_bi_b_toc
     * @instance
     */
    skill_jin_bi_b_toc.prototype.cards = $util.emptyArray;

    /**
     * skill_jin_bi_b_toc unknownCardCount.
     * @member {number} unknownCardCount
     * @memberof skill_jin_bi_b_toc
     * @instance
     */
    skill_jin_bi_b_toc.prototype.unknownCardCount = 0;

    /**
     * Creates a new skill_jin_bi_b_toc instance using the specified properties.
     * @function create
     * @memberof skill_jin_bi_b_toc
     * @static
     * @param {Iskill_jin_bi_b_toc=} [properties] Properties to set
     * @returns {skill_jin_bi_b_toc} skill_jin_bi_b_toc instance
     */
    skill_jin_bi_b_toc.create = function create(properties) {
        return new skill_jin_bi_b_toc(properties);
    };

    /**
     * Encodes the specified skill_jin_bi_b_toc message. Does not implicitly {@link skill_jin_bi_b_toc.verify|verify} messages.
     * @function encode
     * @memberof skill_jin_bi_b_toc
     * @static
     * @param {Iskill_jin_bi_b_toc} message skill_jin_bi_b_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_jin_bi_b_toc.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.playerId != null && Object.hasOwnProperty.call(message, "playerId"))
            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.playerId);
        if (message.targetPlayerId != null && Object.hasOwnProperty.call(message, "targetPlayerId"))
            writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.targetPlayerId);
        if (message.cards != null && message.cards.length)
            for (var i = 0; i < message.cards.length; ++i)
                $root.card.encode(message.cards[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
        if (message.unknownCardCount != null && Object.hasOwnProperty.call(message, "unknownCardCount"))
            writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.unknownCardCount);
        return writer;
    };

    /**
     * Encodes the specified skill_jin_bi_b_toc message, length delimited. Does not implicitly {@link skill_jin_bi_b_toc.verify|verify} messages.
     * @function encodeDelimited
     * @memberof skill_jin_bi_b_toc
     * @static
     * @param {Iskill_jin_bi_b_toc} message skill_jin_bi_b_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_jin_bi_b_toc.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a skill_jin_bi_b_toc message from the specified reader or buffer.
     * @function decode
     * @memberof skill_jin_bi_b_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {skill_jin_bi_b_toc} skill_jin_bi_b_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_jin_bi_b_toc.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.skill_jin_bi_b_toc();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.playerId = reader.uint32();
                    break;
                }
            case 2: {
                    message.targetPlayerId = reader.uint32();
                    break;
                }
            case 3: {
                    if (!(message.cards && message.cards.length))
                        message.cards = [];
                    message.cards.push($root.card.decode(reader, reader.uint32()));
                    break;
                }
            case 4: {
                    message.unknownCardCount = reader.uint32();
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a skill_jin_bi_b_toc message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof skill_jin_bi_b_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {skill_jin_bi_b_toc} skill_jin_bi_b_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_jin_bi_b_toc.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a skill_jin_bi_b_toc message.
     * @function verify
     * @memberof skill_jin_bi_b_toc
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    skill_jin_bi_b_toc.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            if (!$util.isInteger(message.playerId))
                return "playerId: integer expected";
        if (message.targetPlayerId != null && message.hasOwnProperty("targetPlayerId"))
            if (!$util.isInteger(message.targetPlayerId))
                return "targetPlayerId: integer expected";
        if (message.cards != null && message.hasOwnProperty("cards")) {
            if (!Array.isArray(message.cards))
                return "cards: array expected";
            for (var i = 0; i < message.cards.length; ++i) {
                var error = $root.card.verify(message.cards[i]);
                if (error)
                    return "cards." + error;
            }
        }
        if (message.unknownCardCount != null && message.hasOwnProperty("unknownCardCount"))
            if (!$util.isInteger(message.unknownCardCount))
                return "unknownCardCount: integer expected";
        return null;
    };

    /**
     * Creates a skill_jin_bi_b_toc message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof skill_jin_bi_b_toc
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {skill_jin_bi_b_toc} skill_jin_bi_b_toc
     */
    skill_jin_bi_b_toc.fromObject = function fromObject(object) {
        if (object instanceof $root.skill_jin_bi_b_toc)
            return object;
        var message = new $root.skill_jin_bi_b_toc();
        if (object.playerId != null)
            message.playerId = object.playerId >>> 0;
        if (object.targetPlayerId != null)
            message.targetPlayerId = object.targetPlayerId >>> 0;
        if (object.cards) {
            if (!Array.isArray(object.cards))
                throw TypeError(".skill_jin_bi_b_toc.cards: array expected");
            message.cards = [];
            for (var i = 0; i < object.cards.length; ++i) {
                if (typeof object.cards[i] !== "object")
                    throw TypeError(".skill_jin_bi_b_toc.cards: object expected");
                message.cards[i] = $root.card.fromObject(object.cards[i]);
            }
        }
        if (object.unknownCardCount != null)
            message.unknownCardCount = object.unknownCardCount >>> 0;
        return message;
    };

    /**
     * Creates a plain object from a skill_jin_bi_b_toc message. Also converts values to other types if specified.
     * @function toObject
     * @memberof skill_jin_bi_b_toc
     * @static
     * @param {skill_jin_bi_b_toc} message skill_jin_bi_b_toc
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    skill_jin_bi_b_toc.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.arrays || options.defaults)
            object.cards = [];
        if (options.defaults) {
            object.playerId = 0;
            object.targetPlayerId = 0;
            object.unknownCardCount = 0;
        }
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            object.playerId = message.playerId;
        if (message.targetPlayerId != null && message.hasOwnProperty("targetPlayerId"))
            object.targetPlayerId = message.targetPlayerId;
        if (message.cards && message.cards.length) {
            object.cards = [];
            for (var j = 0; j < message.cards.length; ++j)
                object.cards[j] = $root.card.toObject(message.cards[j], options);
        }
        if (message.unknownCardCount != null && message.hasOwnProperty("unknownCardCount"))
            object.unknownCardCount = message.unknownCardCount;
        return object;
    };

    /**
     * Converts this skill_jin_bi_b_toc to JSON.
     * @function toJSON
     * @memberof skill_jin_bi_b_toc
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    skill_jin_bi_b_toc.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for skill_jin_bi_b_toc
     * @function getTypeUrl
     * @memberof skill_jin_bi_b_toc
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    skill_jin_bi_b_toc.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/skill_jin_bi_b_toc";
    };

    return skill_jin_bi_b_toc;
})();

$root.skill_miao_shou_a_tos = (function() {

    /**
     * Properties of a skill_miao_shou_a_tos.
     * @exports Iskill_miao_shou_a_tos
     * @interface Iskill_miao_shou_a_tos
     * @property {number|null} [targetPlayerId] skill_miao_shou_a_tos targetPlayerId
     * @property {number|null} [seq] skill_miao_shou_a_tos seq
     */

    /**
     * Constructs a new skill_miao_shou_a_tos.
     * @exports skill_miao_shou_a_tos
     * @classdesc Represents a skill_miao_shou_a_tos.
     * @implements Iskill_miao_shou_a_tos
     * @constructor
     * @param {Iskill_miao_shou_a_tos=} [properties] Properties to set
     */
    function skill_miao_shou_a_tos(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * skill_miao_shou_a_tos targetPlayerId.
     * @member {number} targetPlayerId
     * @memberof skill_miao_shou_a_tos
     * @instance
     */
    skill_miao_shou_a_tos.prototype.targetPlayerId = 0;

    /**
     * skill_miao_shou_a_tos seq.
     * @member {number} seq
     * @memberof skill_miao_shou_a_tos
     * @instance
     */
    skill_miao_shou_a_tos.prototype.seq = 0;

    /**
     * Creates a new skill_miao_shou_a_tos instance using the specified properties.
     * @function create
     * @memberof skill_miao_shou_a_tos
     * @static
     * @param {Iskill_miao_shou_a_tos=} [properties] Properties to set
     * @returns {skill_miao_shou_a_tos} skill_miao_shou_a_tos instance
     */
    skill_miao_shou_a_tos.create = function create(properties) {
        return new skill_miao_shou_a_tos(properties);
    };

    /**
     * Encodes the specified skill_miao_shou_a_tos message. Does not implicitly {@link skill_miao_shou_a_tos.verify|verify} messages.
     * @function encode
     * @memberof skill_miao_shou_a_tos
     * @static
     * @param {Iskill_miao_shou_a_tos} message skill_miao_shou_a_tos message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_miao_shou_a_tos.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.targetPlayerId != null && Object.hasOwnProperty.call(message, "targetPlayerId"))
            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.targetPlayerId);
        if (message.seq != null && Object.hasOwnProperty.call(message, "seq"))
            writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.seq);
        return writer;
    };

    /**
     * Encodes the specified skill_miao_shou_a_tos message, length delimited. Does not implicitly {@link skill_miao_shou_a_tos.verify|verify} messages.
     * @function encodeDelimited
     * @memberof skill_miao_shou_a_tos
     * @static
     * @param {Iskill_miao_shou_a_tos} message skill_miao_shou_a_tos message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_miao_shou_a_tos.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a skill_miao_shou_a_tos message from the specified reader or buffer.
     * @function decode
     * @memberof skill_miao_shou_a_tos
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {skill_miao_shou_a_tos} skill_miao_shou_a_tos
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_miao_shou_a_tos.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.skill_miao_shou_a_tos();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.targetPlayerId = reader.uint32();
                    break;
                }
            case 2: {
                    message.seq = reader.uint32();
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a skill_miao_shou_a_tos message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof skill_miao_shou_a_tos
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {skill_miao_shou_a_tos} skill_miao_shou_a_tos
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_miao_shou_a_tos.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a skill_miao_shou_a_tos message.
     * @function verify
     * @memberof skill_miao_shou_a_tos
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    skill_miao_shou_a_tos.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.targetPlayerId != null && message.hasOwnProperty("targetPlayerId"))
            if (!$util.isInteger(message.targetPlayerId))
                return "targetPlayerId: integer expected";
        if (message.seq != null && message.hasOwnProperty("seq"))
            if (!$util.isInteger(message.seq))
                return "seq: integer expected";
        return null;
    };

    /**
     * Creates a skill_miao_shou_a_tos message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof skill_miao_shou_a_tos
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {skill_miao_shou_a_tos} skill_miao_shou_a_tos
     */
    skill_miao_shou_a_tos.fromObject = function fromObject(object) {
        if (object instanceof $root.skill_miao_shou_a_tos)
            return object;
        var message = new $root.skill_miao_shou_a_tos();
        if (object.targetPlayerId != null)
            message.targetPlayerId = object.targetPlayerId >>> 0;
        if (object.seq != null)
            message.seq = object.seq >>> 0;
        return message;
    };

    /**
     * Creates a plain object from a skill_miao_shou_a_tos message. Also converts values to other types if specified.
     * @function toObject
     * @memberof skill_miao_shou_a_tos
     * @static
     * @param {skill_miao_shou_a_tos} message skill_miao_shou_a_tos
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    skill_miao_shou_a_tos.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults) {
            object.targetPlayerId = 0;
            object.seq = 0;
        }
        if (message.targetPlayerId != null && message.hasOwnProperty("targetPlayerId"))
            object.targetPlayerId = message.targetPlayerId;
        if (message.seq != null && message.hasOwnProperty("seq"))
            object.seq = message.seq;
        return object;
    };

    /**
     * Converts this skill_miao_shou_a_tos to JSON.
     * @function toJSON
     * @memberof skill_miao_shou_a_tos
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    skill_miao_shou_a_tos.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for skill_miao_shou_a_tos
     * @function getTypeUrl
     * @memberof skill_miao_shou_a_tos
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    skill_miao_shou_a_tos.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/skill_miao_shou_a_tos";
    };

    return skill_miao_shou_a_tos;
})();

$root.skill_miao_shou_a_toc = (function() {

    /**
     * Properties of a skill_miao_shou_a_toc.
     * @exports Iskill_miao_shou_a_toc
     * @interface Iskill_miao_shou_a_toc
     * @property {number|null} [playerId] skill_miao_shou_a_toc playerId
     * @property {number|null} [targetPlayerId] skill_miao_shou_a_toc targetPlayerId
     * @property {Array.<Icard>|null} [cards] skill_miao_shou_a_toc cards
     * @property {number|null} [waitingSecond] skill_miao_shou_a_toc waitingSecond
     * @property {number|null} [seq] skill_miao_shou_a_toc seq
     * @property {Icard|null} [messageCard] skill_miao_shou_a_toc messageCard
     */

    /**
     * Constructs a new skill_miao_shou_a_toc.
     * @exports skill_miao_shou_a_toc
     * @classdesc Represents a skill_miao_shou_a_toc.
     * @implements Iskill_miao_shou_a_toc
     * @constructor
     * @param {Iskill_miao_shou_a_toc=} [properties] Properties to set
     */
    function skill_miao_shou_a_toc(properties) {
        this.cards = [];
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * skill_miao_shou_a_toc playerId.
     * @member {number} playerId
     * @memberof skill_miao_shou_a_toc
     * @instance
     */
    skill_miao_shou_a_toc.prototype.playerId = 0;

    /**
     * skill_miao_shou_a_toc targetPlayerId.
     * @member {number} targetPlayerId
     * @memberof skill_miao_shou_a_toc
     * @instance
     */
    skill_miao_shou_a_toc.prototype.targetPlayerId = 0;

    /**
     * skill_miao_shou_a_toc cards.
     * @member {Array.<Icard>} cards
     * @memberof skill_miao_shou_a_toc
     * @instance
     */
    skill_miao_shou_a_toc.prototype.cards = $util.emptyArray;

    /**
     * skill_miao_shou_a_toc waitingSecond.
     * @member {number} waitingSecond
     * @memberof skill_miao_shou_a_toc
     * @instance
     */
    skill_miao_shou_a_toc.prototype.waitingSecond = 0;

    /**
     * skill_miao_shou_a_toc seq.
     * @member {number} seq
     * @memberof skill_miao_shou_a_toc
     * @instance
     */
    skill_miao_shou_a_toc.prototype.seq = 0;

    /**
     * skill_miao_shou_a_toc messageCard.
     * @member {Icard|null|undefined} messageCard
     * @memberof skill_miao_shou_a_toc
     * @instance
     */
    skill_miao_shou_a_toc.prototype.messageCard = null;

    /**
     * Creates a new skill_miao_shou_a_toc instance using the specified properties.
     * @function create
     * @memberof skill_miao_shou_a_toc
     * @static
     * @param {Iskill_miao_shou_a_toc=} [properties] Properties to set
     * @returns {skill_miao_shou_a_toc} skill_miao_shou_a_toc instance
     */
    skill_miao_shou_a_toc.create = function create(properties) {
        return new skill_miao_shou_a_toc(properties);
    };

    /**
     * Encodes the specified skill_miao_shou_a_toc message. Does not implicitly {@link skill_miao_shou_a_toc.verify|verify} messages.
     * @function encode
     * @memberof skill_miao_shou_a_toc
     * @static
     * @param {Iskill_miao_shou_a_toc} message skill_miao_shou_a_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_miao_shou_a_toc.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.playerId != null && Object.hasOwnProperty.call(message, "playerId"))
            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.playerId);
        if (message.targetPlayerId != null && Object.hasOwnProperty.call(message, "targetPlayerId"))
            writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.targetPlayerId);
        if (message.cards != null && message.cards.length)
            for (var i = 0; i < message.cards.length; ++i)
                $root.card.encode(message.cards[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
        if (message.waitingSecond != null && Object.hasOwnProperty.call(message, "waitingSecond"))
            writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.waitingSecond);
        if (message.seq != null && Object.hasOwnProperty.call(message, "seq"))
            writer.uint32(/* id 5, wireType 0 =*/40).uint32(message.seq);
        if (message.messageCard != null && Object.hasOwnProperty.call(message, "messageCard"))
            $root.card.encode(message.messageCard, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
        return writer;
    };

    /**
     * Encodes the specified skill_miao_shou_a_toc message, length delimited. Does not implicitly {@link skill_miao_shou_a_toc.verify|verify} messages.
     * @function encodeDelimited
     * @memberof skill_miao_shou_a_toc
     * @static
     * @param {Iskill_miao_shou_a_toc} message skill_miao_shou_a_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_miao_shou_a_toc.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a skill_miao_shou_a_toc message from the specified reader or buffer.
     * @function decode
     * @memberof skill_miao_shou_a_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {skill_miao_shou_a_toc} skill_miao_shou_a_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_miao_shou_a_toc.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.skill_miao_shou_a_toc();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.playerId = reader.uint32();
                    break;
                }
            case 2: {
                    message.targetPlayerId = reader.uint32();
                    break;
                }
            case 3: {
                    if (!(message.cards && message.cards.length))
                        message.cards = [];
                    message.cards.push($root.card.decode(reader, reader.uint32()));
                    break;
                }
            case 4: {
                    message.waitingSecond = reader.uint32();
                    break;
                }
            case 5: {
                    message.seq = reader.uint32();
                    break;
                }
            case 6: {
                    message.messageCard = $root.card.decode(reader, reader.uint32());
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a skill_miao_shou_a_toc message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof skill_miao_shou_a_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {skill_miao_shou_a_toc} skill_miao_shou_a_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_miao_shou_a_toc.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a skill_miao_shou_a_toc message.
     * @function verify
     * @memberof skill_miao_shou_a_toc
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    skill_miao_shou_a_toc.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            if (!$util.isInteger(message.playerId))
                return "playerId: integer expected";
        if (message.targetPlayerId != null && message.hasOwnProperty("targetPlayerId"))
            if (!$util.isInteger(message.targetPlayerId))
                return "targetPlayerId: integer expected";
        if (message.cards != null && message.hasOwnProperty("cards")) {
            if (!Array.isArray(message.cards))
                return "cards: array expected";
            for (var i = 0; i < message.cards.length; ++i) {
                var error = $root.card.verify(message.cards[i]);
                if (error)
                    return "cards." + error;
            }
        }
        if (message.waitingSecond != null && message.hasOwnProperty("waitingSecond"))
            if (!$util.isInteger(message.waitingSecond))
                return "waitingSecond: integer expected";
        if (message.seq != null && message.hasOwnProperty("seq"))
            if (!$util.isInteger(message.seq))
                return "seq: integer expected";
        if (message.messageCard != null && message.hasOwnProperty("messageCard")) {
            var error = $root.card.verify(message.messageCard);
            if (error)
                return "messageCard." + error;
        }
        return null;
    };

    /**
     * Creates a skill_miao_shou_a_toc message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof skill_miao_shou_a_toc
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {skill_miao_shou_a_toc} skill_miao_shou_a_toc
     */
    skill_miao_shou_a_toc.fromObject = function fromObject(object) {
        if (object instanceof $root.skill_miao_shou_a_toc)
            return object;
        var message = new $root.skill_miao_shou_a_toc();
        if (object.playerId != null)
            message.playerId = object.playerId >>> 0;
        if (object.targetPlayerId != null)
            message.targetPlayerId = object.targetPlayerId >>> 0;
        if (object.cards) {
            if (!Array.isArray(object.cards))
                throw TypeError(".skill_miao_shou_a_toc.cards: array expected");
            message.cards = [];
            for (var i = 0; i < object.cards.length; ++i) {
                if (typeof object.cards[i] !== "object")
                    throw TypeError(".skill_miao_shou_a_toc.cards: object expected");
                message.cards[i] = $root.card.fromObject(object.cards[i]);
            }
        }
        if (object.waitingSecond != null)
            message.waitingSecond = object.waitingSecond >>> 0;
        if (object.seq != null)
            message.seq = object.seq >>> 0;
        if (object.messageCard != null) {
            if (typeof object.messageCard !== "object")
                throw TypeError(".skill_miao_shou_a_toc.messageCard: object expected");
            message.messageCard = $root.card.fromObject(object.messageCard);
        }
        return message;
    };

    /**
     * Creates a plain object from a skill_miao_shou_a_toc message. Also converts values to other types if specified.
     * @function toObject
     * @memberof skill_miao_shou_a_toc
     * @static
     * @param {skill_miao_shou_a_toc} message skill_miao_shou_a_toc
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    skill_miao_shou_a_toc.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.arrays || options.defaults)
            object.cards = [];
        if (options.defaults) {
            object.playerId = 0;
            object.targetPlayerId = 0;
            object.waitingSecond = 0;
            object.seq = 0;
            object.messageCard = null;
        }
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            object.playerId = message.playerId;
        if (message.targetPlayerId != null && message.hasOwnProperty("targetPlayerId"))
            object.targetPlayerId = message.targetPlayerId;
        if (message.cards && message.cards.length) {
            object.cards = [];
            for (var j = 0; j < message.cards.length; ++j)
                object.cards[j] = $root.card.toObject(message.cards[j], options);
        }
        if (message.waitingSecond != null && message.hasOwnProperty("waitingSecond"))
            object.waitingSecond = message.waitingSecond;
        if (message.seq != null && message.hasOwnProperty("seq"))
            object.seq = message.seq;
        if (message.messageCard != null && message.hasOwnProperty("messageCard"))
            object.messageCard = $root.card.toObject(message.messageCard, options);
        return object;
    };

    /**
     * Converts this skill_miao_shou_a_toc to JSON.
     * @function toJSON
     * @memberof skill_miao_shou_a_toc
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    skill_miao_shou_a_toc.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for skill_miao_shou_a_toc
     * @function getTypeUrl
     * @memberof skill_miao_shou_a_toc
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    skill_miao_shou_a_toc.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/skill_miao_shou_a_toc";
    };

    return skill_miao_shou_a_toc;
})();

$root.skill_miao_shou_b_tos = (function() {

    /**
     * Properties of a skill_miao_shou_b_tos.
     * @exports Iskill_miao_shou_b_tos
     * @interface Iskill_miao_shou_b_tos
     * @property {number|null} [cardId] skill_miao_shou_b_tos cardId
     * @property {number|null} [messageCardId] skill_miao_shou_b_tos messageCardId
     * @property {number|null} [targetPlayerId] skill_miao_shou_b_tos targetPlayerId
     * @property {number|null} [seq] skill_miao_shou_b_tos seq
     */

    /**
     * Constructs a new skill_miao_shou_b_tos.
     * @exports skill_miao_shou_b_tos
     * @classdesc Represents a skill_miao_shou_b_tos.
     * @implements Iskill_miao_shou_b_tos
     * @constructor
     * @param {Iskill_miao_shou_b_tos=} [properties] Properties to set
     */
    function skill_miao_shou_b_tos(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * skill_miao_shou_b_tos cardId.
     * @member {number} cardId
     * @memberof skill_miao_shou_b_tos
     * @instance
     */
    skill_miao_shou_b_tos.prototype.cardId = 0;

    /**
     * skill_miao_shou_b_tos messageCardId.
     * @member {number} messageCardId
     * @memberof skill_miao_shou_b_tos
     * @instance
     */
    skill_miao_shou_b_tos.prototype.messageCardId = 0;

    /**
     * skill_miao_shou_b_tos targetPlayerId.
     * @member {number} targetPlayerId
     * @memberof skill_miao_shou_b_tos
     * @instance
     */
    skill_miao_shou_b_tos.prototype.targetPlayerId = 0;

    /**
     * skill_miao_shou_b_tos seq.
     * @member {number} seq
     * @memberof skill_miao_shou_b_tos
     * @instance
     */
    skill_miao_shou_b_tos.prototype.seq = 0;

    /**
     * Creates a new skill_miao_shou_b_tos instance using the specified properties.
     * @function create
     * @memberof skill_miao_shou_b_tos
     * @static
     * @param {Iskill_miao_shou_b_tos=} [properties] Properties to set
     * @returns {skill_miao_shou_b_tos} skill_miao_shou_b_tos instance
     */
    skill_miao_shou_b_tos.create = function create(properties) {
        return new skill_miao_shou_b_tos(properties);
    };

    /**
     * Encodes the specified skill_miao_shou_b_tos message. Does not implicitly {@link skill_miao_shou_b_tos.verify|verify} messages.
     * @function encode
     * @memberof skill_miao_shou_b_tos
     * @static
     * @param {Iskill_miao_shou_b_tos} message skill_miao_shou_b_tos message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_miao_shou_b_tos.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.cardId != null && Object.hasOwnProperty.call(message, "cardId"))
            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.cardId);
        if (message.messageCardId != null && Object.hasOwnProperty.call(message, "messageCardId"))
            writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.messageCardId);
        if (message.targetPlayerId != null && Object.hasOwnProperty.call(message, "targetPlayerId"))
            writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.targetPlayerId);
        if (message.seq != null && Object.hasOwnProperty.call(message, "seq"))
            writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.seq);
        return writer;
    };

    /**
     * Encodes the specified skill_miao_shou_b_tos message, length delimited. Does not implicitly {@link skill_miao_shou_b_tos.verify|verify} messages.
     * @function encodeDelimited
     * @memberof skill_miao_shou_b_tos
     * @static
     * @param {Iskill_miao_shou_b_tos} message skill_miao_shou_b_tos message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_miao_shou_b_tos.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a skill_miao_shou_b_tos message from the specified reader or buffer.
     * @function decode
     * @memberof skill_miao_shou_b_tos
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {skill_miao_shou_b_tos} skill_miao_shou_b_tos
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_miao_shou_b_tos.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.skill_miao_shou_b_tos();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.cardId = reader.uint32();
                    break;
                }
            case 2: {
                    message.messageCardId = reader.uint32();
                    break;
                }
            case 3: {
                    message.targetPlayerId = reader.uint32();
                    break;
                }
            case 4: {
                    message.seq = reader.uint32();
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a skill_miao_shou_b_tos message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof skill_miao_shou_b_tos
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {skill_miao_shou_b_tos} skill_miao_shou_b_tos
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_miao_shou_b_tos.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a skill_miao_shou_b_tos message.
     * @function verify
     * @memberof skill_miao_shou_b_tos
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    skill_miao_shou_b_tos.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.cardId != null && message.hasOwnProperty("cardId"))
            if (!$util.isInteger(message.cardId))
                return "cardId: integer expected";
        if (message.messageCardId != null && message.hasOwnProperty("messageCardId"))
            if (!$util.isInteger(message.messageCardId))
                return "messageCardId: integer expected";
        if (message.targetPlayerId != null && message.hasOwnProperty("targetPlayerId"))
            if (!$util.isInteger(message.targetPlayerId))
                return "targetPlayerId: integer expected";
        if (message.seq != null && message.hasOwnProperty("seq"))
            if (!$util.isInteger(message.seq))
                return "seq: integer expected";
        return null;
    };

    /**
     * Creates a skill_miao_shou_b_tos message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof skill_miao_shou_b_tos
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {skill_miao_shou_b_tos} skill_miao_shou_b_tos
     */
    skill_miao_shou_b_tos.fromObject = function fromObject(object) {
        if (object instanceof $root.skill_miao_shou_b_tos)
            return object;
        var message = new $root.skill_miao_shou_b_tos();
        if (object.cardId != null)
            message.cardId = object.cardId >>> 0;
        if (object.messageCardId != null)
            message.messageCardId = object.messageCardId >>> 0;
        if (object.targetPlayerId != null)
            message.targetPlayerId = object.targetPlayerId >>> 0;
        if (object.seq != null)
            message.seq = object.seq >>> 0;
        return message;
    };

    /**
     * Creates a plain object from a skill_miao_shou_b_tos message. Also converts values to other types if specified.
     * @function toObject
     * @memberof skill_miao_shou_b_tos
     * @static
     * @param {skill_miao_shou_b_tos} message skill_miao_shou_b_tos
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    skill_miao_shou_b_tos.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults) {
            object.cardId = 0;
            object.messageCardId = 0;
            object.targetPlayerId = 0;
            object.seq = 0;
        }
        if (message.cardId != null && message.hasOwnProperty("cardId"))
            object.cardId = message.cardId;
        if (message.messageCardId != null && message.hasOwnProperty("messageCardId"))
            object.messageCardId = message.messageCardId;
        if (message.targetPlayerId != null && message.hasOwnProperty("targetPlayerId"))
            object.targetPlayerId = message.targetPlayerId;
        if (message.seq != null && message.hasOwnProperty("seq"))
            object.seq = message.seq;
        return object;
    };

    /**
     * Converts this skill_miao_shou_b_tos to JSON.
     * @function toJSON
     * @memberof skill_miao_shou_b_tos
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    skill_miao_shou_b_tos.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for skill_miao_shou_b_tos
     * @function getTypeUrl
     * @memberof skill_miao_shou_b_tos
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    skill_miao_shou_b_tos.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/skill_miao_shou_b_tos";
    };

    return skill_miao_shou_b_tos;
})();

$root.skill_miao_shou_b_toc = (function() {

    /**
     * Properties of a skill_miao_shou_b_toc.
     * @exports Iskill_miao_shou_b_toc
     * @interface Iskill_miao_shou_b_toc
     * @property {number|null} [playerId] skill_miao_shou_b_toc playerId
     * @property {number|null} [fromPlayerId] skill_miao_shou_b_toc fromPlayerId
     * @property {Icard|null} [card] skill_miao_shou_b_toc card
     * @property {number|null} [messageCardId] skill_miao_shou_b_toc messageCardId
     * @property {number|null} [targetPlayerId] skill_miao_shou_b_toc targetPlayerId
     */

    /**
     * Constructs a new skill_miao_shou_b_toc.
     * @exports skill_miao_shou_b_toc
     * @classdesc Represents a skill_miao_shou_b_toc.
     * @implements Iskill_miao_shou_b_toc
     * @constructor
     * @param {Iskill_miao_shou_b_toc=} [properties] Properties to set
     */
    function skill_miao_shou_b_toc(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * skill_miao_shou_b_toc playerId.
     * @member {number} playerId
     * @memberof skill_miao_shou_b_toc
     * @instance
     */
    skill_miao_shou_b_toc.prototype.playerId = 0;

    /**
     * skill_miao_shou_b_toc fromPlayerId.
     * @member {number} fromPlayerId
     * @memberof skill_miao_shou_b_toc
     * @instance
     */
    skill_miao_shou_b_toc.prototype.fromPlayerId = 0;

    /**
     * skill_miao_shou_b_toc card.
     * @member {Icard|null|undefined} card
     * @memberof skill_miao_shou_b_toc
     * @instance
     */
    skill_miao_shou_b_toc.prototype.card = null;

    /**
     * skill_miao_shou_b_toc messageCardId.
     * @member {number} messageCardId
     * @memberof skill_miao_shou_b_toc
     * @instance
     */
    skill_miao_shou_b_toc.prototype.messageCardId = 0;

    /**
     * skill_miao_shou_b_toc targetPlayerId.
     * @member {number} targetPlayerId
     * @memberof skill_miao_shou_b_toc
     * @instance
     */
    skill_miao_shou_b_toc.prototype.targetPlayerId = 0;

    /**
     * Creates a new skill_miao_shou_b_toc instance using the specified properties.
     * @function create
     * @memberof skill_miao_shou_b_toc
     * @static
     * @param {Iskill_miao_shou_b_toc=} [properties] Properties to set
     * @returns {skill_miao_shou_b_toc} skill_miao_shou_b_toc instance
     */
    skill_miao_shou_b_toc.create = function create(properties) {
        return new skill_miao_shou_b_toc(properties);
    };

    /**
     * Encodes the specified skill_miao_shou_b_toc message. Does not implicitly {@link skill_miao_shou_b_toc.verify|verify} messages.
     * @function encode
     * @memberof skill_miao_shou_b_toc
     * @static
     * @param {Iskill_miao_shou_b_toc} message skill_miao_shou_b_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_miao_shou_b_toc.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.playerId != null && Object.hasOwnProperty.call(message, "playerId"))
            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.playerId);
        if (message.fromPlayerId != null && Object.hasOwnProperty.call(message, "fromPlayerId"))
            writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.fromPlayerId);
        if (message.card != null && Object.hasOwnProperty.call(message, "card"))
            $root.card.encode(message.card, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
        if (message.messageCardId != null && Object.hasOwnProperty.call(message, "messageCardId"))
            writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.messageCardId);
        if (message.targetPlayerId != null && Object.hasOwnProperty.call(message, "targetPlayerId"))
            writer.uint32(/* id 5, wireType 0 =*/40).uint32(message.targetPlayerId);
        return writer;
    };

    /**
     * Encodes the specified skill_miao_shou_b_toc message, length delimited. Does not implicitly {@link skill_miao_shou_b_toc.verify|verify} messages.
     * @function encodeDelimited
     * @memberof skill_miao_shou_b_toc
     * @static
     * @param {Iskill_miao_shou_b_toc} message skill_miao_shou_b_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_miao_shou_b_toc.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a skill_miao_shou_b_toc message from the specified reader or buffer.
     * @function decode
     * @memberof skill_miao_shou_b_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {skill_miao_shou_b_toc} skill_miao_shou_b_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_miao_shou_b_toc.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.skill_miao_shou_b_toc();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.playerId = reader.uint32();
                    break;
                }
            case 2: {
                    message.fromPlayerId = reader.uint32();
                    break;
                }
            case 3: {
                    message.card = $root.card.decode(reader, reader.uint32());
                    break;
                }
            case 4: {
                    message.messageCardId = reader.uint32();
                    break;
                }
            case 5: {
                    message.targetPlayerId = reader.uint32();
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a skill_miao_shou_b_toc message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof skill_miao_shou_b_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {skill_miao_shou_b_toc} skill_miao_shou_b_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_miao_shou_b_toc.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a skill_miao_shou_b_toc message.
     * @function verify
     * @memberof skill_miao_shou_b_toc
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    skill_miao_shou_b_toc.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            if (!$util.isInteger(message.playerId))
                return "playerId: integer expected";
        if (message.fromPlayerId != null && message.hasOwnProperty("fromPlayerId"))
            if (!$util.isInteger(message.fromPlayerId))
                return "fromPlayerId: integer expected";
        if (message.card != null && message.hasOwnProperty("card")) {
            var error = $root.card.verify(message.card);
            if (error)
                return "card." + error;
        }
        if (message.messageCardId != null && message.hasOwnProperty("messageCardId"))
            if (!$util.isInteger(message.messageCardId))
                return "messageCardId: integer expected";
        if (message.targetPlayerId != null && message.hasOwnProperty("targetPlayerId"))
            if (!$util.isInteger(message.targetPlayerId))
                return "targetPlayerId: integer expected";
        return null;
    };

    /**
     * Creates a skill_miao_shou_b_toc message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof skill_miao_shou_b_toc
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {skill_miao_shou_b_toc} skill_miao_shou_b_toc
     */
    skill_miao_shou_b_toc.fromObject = function fromObject(object) {
        if (object instanceof $root.skill_miao_shou_b_toc)
            return object;
        var message = new $root.skill_miao_shou_b_toc();
        if (object.playerId != null)
            message.playerId = object.playerId >>> 0;
        if (object.fromPlayerId != null)
            message.fromPlayerId = object.fromPlayerId >>> 0;
        if (object.card != null) {
            if (typeof object.card !== "object")
                throw TypeError(".skill_miao_shou_b_toc.card: object expected");
            message.card = $root.card.fromObject(object.card);
        }
        if (object.messageCardId != null)
            message.messageCardId = object.messageCardId >>> 0;
        if (object.targetPlayerId != null)
            message.targetPlayerId = object.targetPlayerId >>> 0;
        return message;
    };

    /**
     * Creates a plain object from a skill_miao_shou_b_toc message. Also converts values to other types if specified.
     * @function toObject
     * @memberof skill_miao_shou_b_toc
     * @static
     * @param {skill_miao_shou_b_toc} message skill_miao_shou_b_toc
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    skill_miao_shou_b_toc.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults) {
            object.playerId = 0;
            object.fromPlayerId = 0;
            object.card = null;
            object.messageCardId = 0;
            object.targetPlayerId = 0;
        }
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            object.playerId = message.playerId;
        if (message.fromPlayerId != null && message.hasOwnProperty("fromPlayerId"))
            object.fromPlayerId = message.fromPlayerId;
        if (message.card != null && message.hasOwnProperty("card"))
            object.card = $root.card.toObject(message.card, options);
        if (message.messageCardId != null && message.hasOwnProperty("messageCardId"))
            object.messageCardId = message.messageCardId;
        if (message.targetPlayerId != null && message.hasOwnProperty("targetPlayerId"))
            object.targetPlayerId = message.targetPlayerId;
        return object;
    };

    /**
     * Converts this skill_miao_shou_b_toc to JSON.
     * @function toJSON
     * @memberof skill_miao_shou_b_toc
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    skill_miao_shou_b_toc.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for skill_miao_shou_b_toc
     * @function getTypeUrl
     * @memberof skill_miao_shou_b_toc
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    skill_miao_shou_b_toc.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/skill_miao_shou_b_toc";
    };

    return skill_miao_shou_b_toc;
})();

$root.skill_jin_kou_yi_kai_a_tos = (function() {

    /**
     * Properties of a skill_jin_kou_yi_kai_a_tos.
     * @exports Iskill_jin_kou_yi_kai_a_tos
     * @interface Iskill_jin_kou_yi_kai_a_tos
     * @property {number|null} [seq] skill_jin_kou_yi_kai_a_tos seq
     */

    /**
     * Constructs a new skill_jin_kou_yi_kai_a_tos.
     * @exports skill_jin_kou_yi_kai_a_tos
     * @classdesc Represents a skill_jin_kou_yi_kai_a_tos.
     * @implements Iskill_jin_kou_yi_kai_a_tos
     * @constructor
     * @param {Iskill_jin_kou_yi_kai_a_tos=} [properties] Properties to set
     */
    function skill_jin_kou_yi_kai_a_tos(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * skill_jin_kou_yi_kai_a_tos seq.
     * @member {number} seq
     * @memberof skill_jin_kou_yi_kai_a_tos
     * @instance
     */
    skill_jin_kou_yi_kai_a_tos.prototype.seq = 0;

    /**
     * Creates a new skill_jin_kou_yi_kai_a_tos instance using the specified properties.
     * @function create
     * @memberof skill_jin_kou_yi_kai_a_tos
     * @static
     * @param {Iskill_jin_kou_yi_kai_a_tos=} [properties] Properties to set
     * @returns {skill_jin_kou_yi_kai_a_tos} skill_jin_kou_yi_kai_a_tos instance
     */
    skill_jin_kou_yi_kai_a_tos.create = function create(properties) {
        return new skill_jin_kou_yi_kai_a_tos(properties);
    };

    /**
     * Encodes the specified skill_jin_kou_yi_kai_a_tos message. Does not implicitly {@link skill_jin_kou_yi_kai_a_tos.verify|verify} messages.
     * @function encode
     * @memberof skill_jin_kou_yi_kai_a_tos
     * @static
     * @param {Iskill_jin_kou_yi_kai_a_tos} message skill_jin_kou_yi_kai_a_tos message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_jin_kou_yi_kai_a_tos.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.seq != null && Object.hasOwnProperty.call(message, "seq"))
            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.seq);
        return writer;
    };

    /**
     * Encodes the specified skill_jin_kou_yi_kai_a_tos message, length delimited. Does not implicitly {@link skill_jin_kou_yi_kai_a_tos.verify|verify} messages.
     * @function encodeDelimited
     * @memberof skill_jin_kou_yi_kai_a_tos
     * @static
     * @param {Iskill_jin_kou_yi_kai_a_tos} message skill_jin_kou_yi_kai_a_tos message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_jin_kou_yi_kai_a_tos.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a skill_jin_kou_yi_kai_a_tos message from the specified reader or buffer.
     * @function decode
     * @memberof skill_jin_kou_yi_kai_a_tos
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {skill_jin_kou_yi_kai_a_tos} skill_jin_kou_yi_kai_a_tos
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_jin_kou_yi_kai_a_tos.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.skill_jin_kou_yi_kai_a_tos();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.seq = reader.uint32();
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a skill_jin_kou_yi_kai_a_tos message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof skill_jin_kou_yi_kai_a_tos
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {skill_jin_kou_yi_kai_a_tos} skill_jin_kou_yi_kai_a_tos
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_jin_kou_yi_kai_a_tos.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a skill_jin_kou_yi_kai_a_tos message.
     * @function verify
     * @memberof skill_jin_kou_yi_kai_a_tos
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    skill_jin_kou_yi_kai_a_tos.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.seq != null && message.hasOwnProperty("seq"))
            if (!$util.isInteger(message.seq))
                return "seq: integer expected";
        return null;
    };

    /**
     * Creates a skill_jin_kou_yi_kai_a_tos message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof skill_jin_kou_yi_kai_a_tos
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {skill_jin_kou_yi_kai_a_tos} skill_jin_kou_yi_kai_a_tos
     */
    skill_jin_kou_yi_kai_a_tos.fromObject = function fromObject(object) {
        if (object instanceof $root.skill_jin_kou_yi_kai_a_tos)
            return object;
        var message = new $root.skill_jin_kou_yi_kai_a_tos();
        if (object.seq != null)
            message.seq = object.seq >>> 0;
        return message;
    };

    /**
     * Creates a plain object from a skill_jin_kou_yi_kai_a_tos message. Also converts values to other types if specified.
     * @function toObject
     * @memberof skill_jin_kou_yi_kai_a_tos
     * @static
     * @param {skill_jin_kou_yi_kai_a_tos} message skill_jin_kou_yi_kai_a_tos
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    skill_jin_kou_yi_kai_a_tos.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults)
            object.seq = 0;
        if (message.seq != null && message.hasOwnProperty("seq"))
            object.seq = message.seq;
        return object;
    };

    /**
     * Converts this skill_jin_kou_yi_kai_a_tos to JSON.
     * @function toJSON
     * @memberof skill_jin_kou_yi_kai_a_tos
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    skill_jin_kou_yi_kai_a_tos.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for skill_jin_kou_yi_kai_a_tos
     * @function getTypeUrl
     * @memberof skill_jin_kou_yi_kai_a_tos
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    skill_jin_kou_yi_kai_a_tos.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/skill_jin_kou_yi_kai_a_tos";
    };

    return skill_jin_kou_yi_kai_a_tos;
})();

$root.skill_jin_kou_yi_kai_a_toc = (function() {

    /**
     * Properties of a skill_jin_kou_yi_kai_a_toc.
     * @exports Iskill_jin_kou_yi_kai_a_toc
     * @interface Iskill_jin_kou_yi_kai_a_toc
     * @property {number|null} [playerId] skill_jin_kou_yi_kai_a_toc playerId
     * @property {Icard|null} [card] skill_jin_kou_yi_kai_a_toc card
     * @property {number|null} [waitingSecond] skill_jin_kou_yi_kai_a_toc waitingSecond
     * @property {number|null} [seq] skill_jin_kou_yi_kai_a_toc seq
     */

    /**
     * Constructs a new skill_jin_kou_yi_kai_a_toc.
     * @exports skill_jin_kou_yi_kai_a_toc
     * @classdesc Represents a skill_jin_kou_yi_kai_a_toc.
     * @implements Iskill_jin_kou_yi_kai_a_toc
     * @constructor
     * @param {Iskill_jin_kou_yi_kai_a_toc=} [properties] Properties to set
     */
    function skill_jin_kou_yi_kai_a_toc(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * skill_jin_kou_yi_kai_a_toc playerId.
     * @member {number} playerId
     * @memberof skill_jin_kou_yi_kai_a_toc
     * @instance
     */
    skill_jin_kou_yi_kai_a_toc.prototype.playerId = 0;

    /**
     * skill_jin_kou_yi_kai_a_toc card.
     * @member {Icard|null|undefined} card
     * @memberof skill_jin_kou_yi_kai_a_toc
     * @instance
     */
    skill_jin_kou_yi_kai_a_toc.prototype.card = null;

    /**
     * skill_jin_kou_yi_kai_a_toc waitingSecond.
     * @member {number} waitingSecond
     * @memberof skill_jin_kou_yi_kai_a_toc
     * @instance
     */
    skill_jin_kou_yi_kai_a_toc.prototype.waitingSecond = 0;

    /**
     * skill_jin_kou_yi_kai_a_toc seq.
     * @member {number} seq
     * @memberof skill_jin_kou_yi_kai_a_toc
     * @instance
     */
    skill_jin_kou_yi_kai_a_toc.prototype.seq = 0;

    /**
     * Creates a new skill_jin_kou_yi_kai_a_toc instance using the specified properties.
     * @function create
     * @memberof skill_jin_kou_yi_kai_a_toc
     * @static
     * @param {Iskill_jin_kou_yi_kai_a_toc=} [properties] Properties to set
     * @returns {skill_jin_kou_yi_kai_a_toc} skill_jin_kou_yi_kai_a_toc instance
     */
    skill_jin_kou_yi_kai_a_toc.create = function create(properties) {
        return new skill_jin_kou_yi_kai_a_toc(properties);
    };

    /**
     * Encodes the specified skill_jin_kou_yi_kai_a_toc message. Does not implicitly {@link skill_jin_kou_yi_kai_a_toc.verify|verify} messages.
     * @function encode
     * @memberof skill_jin_kou_yi_kai_a_toc
     * @static
     * @param {Iskill_jin_kou_yi_kai_a_toc} message skill_jin_kou_yi_kai_a_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_jin_kou_yi_kai_a_toc.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.playerId != null && Object.hasOwnProperty.call(message, "playerId"))
            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.playerId);
        if (message.card != null && Object.hasOwnProperty.call(message, "card"))
            $root.card.encode(message.card, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
        if (message.waitingSecond != null && Object.hasOwnProperty.call(message, "waitingSecond"))
            writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.waitingSecond);
        if (message.seq != null && Object.hasOwnProperty.call(message, "seq"))
            writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.seq);
        return writer;
    };

    /**
     * Encodes the specified skill_jin_kou_yi_kai_a_toc message, length delimited. Does not implicitly {@link skill_jin_kou_yi_kai_a_toc.verify|verify} messages.
     * @function encodeDelimited
     * @memberof skill_jin_kou_yi_kai_a_toc
     * @static
     * @param {Iskill_jin_kou_yi_kai_a_toc} message skill_jin_kou_yi_kai_a_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_jin_kou_yi_kai_a_toc.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a skill_jin_kou_yi_kai_a_toc message from the specified reader or buffer.
     * @function decode
     * @memberof skill_jin_kou_yi_kai_a_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {skill_jin_kou_yi_kai_a_toc} skill_jin_kou_yi_kai_a_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_jin_kou_yi_kai_a_toc.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.skill_jin_kou_yi_kai_a_toc();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.playerId = reader.uint32();
                    break;
                }
            case 2: {
                    message.card = $root.card.decode(reader, reader.uint32());
                    break;
                }
            case 3: {
                    message.waitingSecond = reader.uint32();
                    break;
                }
            case 4: {
                    message.seq = reader.uint32();
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a skill_jin_kou_yi_kai_a_toc message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof skill_jin_kou_yi_kai_a_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {skill_jin_kou_yi_kai_a_toc} skill_jin_kou_yi_kai_a_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_jin_kou_yi_kai_a_toc.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a skill_jin_kou_yi_kai_a_toc message.
     * @function verify
     * @memberof skill_jin_kou_yi_kai_a_toc
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    skill_jin_kou_yi_kai_a_toc.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            if (!$util.isInteger(message.playerId))
                return "playerId: integer expected";
        if (message.card != null && message.hasOwnProperty("card")) {
            var error = $root.card.verify(message.card);
            if (error)
                return "card." + error;
        }
        if (message.waitingSecond != null && message.hasOwnProperty("waitingSecond"))
            if (!$util.isInteger(message.waitingSecond))
                return "waitingSecond: integer expected";
        if (message.seq != null && message.hasOwnProperty("seq"))
            if (!$util.isInteger(message.seq))
                return "seq: integer expected";
        return null;
    };

    /**
     * Creates a skill_jin_kou_yi_kai_a_toc message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof skill_jin_kou_yi_kai_a_toc
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {skill_jin_kou_yi_kai_a_toc} skill_jin_kou_yi_kai_a_toc
     */
    skill_jin_kou_yi_kai_a_toc.fromObject = function fromObject(object) {
        if (object instanceof $root.skill_jin_kou_yi_kai_a_toc)
            return object;
        var message = new $root.skill_jin_kou_yi_kai_a_toc();
        if (object.playerId != null)
            message.playerId = object.playerId >>> 0;
        if (object.card != null) {
            if (typeof object.card !== "object")
                throw TypeError(".skill_jin_kou_yi_kai_a_toc.card: object expected");
            message.card = $root.card.fromObject(object.card);
        }
        if (object.waitingSecond != null)
            message.waitingSecond = object.waitingSecond >>> 0;
        if (object.seq != null)
            message.seq = object.seq >>> 0;
        return message;
    };

    /**
     * Creates a plain object from a skill_jin_kou_yi_kai_a_toc message. Also converts values to other types if specified.
     * @function toObject
     * @memberof skill_jin_kou_yi_kai_a_toc
     * @static
     * @param {skill_jin_kou_yi_kai_a_toc} message skill_jin_kou_yi_kai_a_toc
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    skill_jin_kou_yi_kai_a_toc.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults) {
            object.playerId = 0;
            object.card = null;
            object.waitingSecond = 0;
            object.seq = 0;
        }
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            object.playerId = message.playerId;
        if (message.card != null && message.hasOwnProperty("card"))
            object.card = $root.card.toObject(message.card, options);
        if (message.waitingSecond != null && message.hasOwnProperty("waitingSecond"))
            object.waitingSecond = message.waitingSecond;
        if (message.seq != null && message.hasOwnProperty("seq"))
            object.seq = message.seq;
        return object;
    };

    /**
     * Converts this skill_jin_kou_yi_kai_a_toc to JSON.
     * @function toJSON
     * @memberof skill_jin_kou_yi_kai_a_toc
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    skill_jin_kou_yi_kai_a_toc.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for skill_jin_kou_yi_kai_a_toc
     * @function getTypeUrl
     * @memberof skill_jin_kou_yi_kai_a_toc
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    skill_jin_kou_yi_kai_a_toc.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/skill_jin_kou_yi_kai_a_toc";
    };

    return skill_jin_kou_yi_kai_a_toc;
})();

$root.skill_jin_kou_yi_kai_b_tos = (function() {

    /**
     * Properties of a skill_jin_kou_yi_kai_b_tos.
     * @exports Iskill_jin_kou_yi_kai_b_tos
     * @interface Iskill_jin_kou_yi_kai_b_tos
     * @property {boolean|null} [exchange] skill_jin_kou_yi_kai_b_tos exchange
     * @property {number|null} [seq] skill_jin_kou_yi_kai_b_tos seq
     */

    /**
     * Constructs a new skill_jin_kou_yi_kai_b_tos.
     * @exports skill_jin_kou_yi_kai_b_tos
     * @classdesc Represents a skill_jin_kou_yi_kai_b_tos.
     * @implements Iskill_jin_kou_yi_kai_b_tos
     * @constructor
     * @param {Iskill_jin_kou_yi_kai_b_tos=} [properties] Properties to set
     */
    function skill_jin_kou_yi_kai_b_tos(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * skill_jin_kou_yi_kai_b_tos exchange.
     * @member {boolean} exchange
     * @memberof skill_jin_kou_yi_kai_b_tos
     * @instance
     */
    skill_jin_kou_yi_kai_b_tos.prototype.exchange = false;

    /**
     * skill_jin_kou_yi_kai_b_tos seq.
     * @member {number} seq
     * @memberof skill_jin_kou_yi_kai_b_tos
     * @instance
     */
    skill_jin_kou_yi_kai_b_tos.prototype.seq = 0;

    /**
     * Creates a new skill_jin_kou_yi_kai_b_tos instance using the specified properties.
     * @function create
     * @memberof skill_jin_kou_yi_kai_b_tos
     * @static
     * @param {Iskill_jin_kou_yi_kai_b_tos=} [properties] Properties to set
     * @returns {skill_jin_kou_yi_kai_b_tos} skill_jin_kou_yi_kai_b_tos instance
     */
    skill_jin_kou_yi_kai_b_tos.create = function create(properties) {
        return new skill_jin_kou_yi_kai_b_tos(properties);
    };

    /**
     * Encodes the specified skill_jin_kou_yi_kai_b_tos message. Does not implicitly {@link skill_jin_kou_yi_kai_b_tos.verify|verify} messages.
     * @function encode
     * @memberof skill_jin_kou_yi_kai_b_tos
     * @static
     * @param {Iskill_jin_kou_yi_kai_b_tos} message skill_jin_kou_yi_kai_b_tos message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_jin_kou_yi_kai_b_tos.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.exchange != null && Object.hasOwnProperty.call(message, "exchange"))
            writer.uint32(/* id 1, wireType 0 =*/8).bool(message.exchange);
        if (message.seq != null && Object.hasOwnProperty.call(message, "seq"))
            writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.seq);
        return writer;
    };

    /**
     * Encodes the specified skill_jin_kou_yi_kai_b_tos message, length delimited. Does not implicitly {@link skill_jin_kou_yi_kai_b_tos.verify|verify} messages.
     * @function encodeDelimited
     * @memberof skill_jin_kou_yi_kai_b_tos
     * @static
     * @param {Iskill_jin_kou_yi_kai_b_tos} message skill_jin_kou_yi_kai_b_tos message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_jin_kou_yi_kai_b_tos.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a skill_jin_kou_yi_kai_b_tos message from the specified reader or buffer.
     * @function decode
     * @memberof skill_jin_kou_yi_kai_b_tos
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {skill_jin_kou_yi_kai_b_tos} skill_jin_kou_yi_kai_b_tos
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_jin_kou_yi_kai_b_tos.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.skill_jin_kou_yi_kai_b_tos();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.exchange = reader.bool();
                    break;
                }
            case 2: {
                    message.seq = reader.uint32();
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a skill_jin_kou_yi_kai_b_tos message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof skill_jin_kou_yi_kai_b_tos
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {skill_jin_kou_yi_kai_b_tos} skill_jin_kou_yi_kai_b_tos
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_jin_kou_yi_kai_b_tos.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a skill_jin_kou_yi_kai_b_tos message.
     * @function verify
     * @memberof skill_jin_kou_yi_kai_b_tos
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    skill_jin_kou_yi_kai_b_tos.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.exchange != null && message.hasOwnProperty("exchange"))
            if (typeof message.exchange !== "boolean")
                return "exchange: boolean expected";
        if (message.seq != null && message.hasOwnProperty("seq"))
            if (!$util.isInteger(message.seq))
                return "seq: integer expected";
        return null;
    };

    /**
     * Creates a skill_jin_kou_yi_kai_b_tos message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof skill_jin_kou_yi_kai_b_tos
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {skill_jin_kou_yi_kai_b_tos} skill_jin_kou_yi_kai_b_tos
     */
    skill_jin_kou_yi_kai_b_tos.fromObject = function fromObject(object) {
        if (object instanceof $root.skill_jin_kou_yi_kai_b_tos)
            return object;
        var message = new $root.skill_jin_kou_yi_kai_b_tos();
        if (object.exchange != null)
            message.exchange = Boolean(object.exchange);
        if (object.seq != null)
            message.seq = object.seq >>> 0;
        return message;
    };

    /**
     * Creates a plain object from a skill_jin_kou_yi_kai_b_tos message. Also converts values to other types if specified.
     * @function toObject
     * @memberof skill_jin_kou_yi_kai_b_tos
     * @static
     * @param {skill_jin_kou_yi_kai_b_tos} message skill_jin_kou_yi_kai_b_tos
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    skill_jin_kou_yi_kai_b_tos.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults) {
            object.exchange = false;
            object.seq = 0;
        }
        if (message.exchange != null && message.hasOwnProperty("exchange"))
            object.exchange = message.exchange;
        if (message.seq != null && message.hasOwnProperty("seq"))
            object.seq = message.seq;
        return object;
    };

    /**
     * Converts this skill_jin_kou_yi_kai_b_tos to JSON.
     * @function toJSON
     * @memberof skill_jin_kou_yi_kai_b_tos
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    skill_jin_kou_yi_kai_b_tos.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for skill_jin_kou_yi_kai_b_tos
     * @function getTypeUrl
     * @memberof skill_jin_kou_yi_kai_b_tos
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    skill_jin_kou_yi_kai_b_tos.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/skill_jin_kou_yi_kai_b_tos";
    };

    return skill_jin_kou_yi_kai_b_tos;
})();

$root.skill_jin_kou_yi_kai_b_toc = (function() {

    /**
     * Properties of a skill_jin_kou_yi_kai_b_toc.
     * @exports Iskill_jin_kou_yi_kai_b_toc
     * @interface Iskill_jin_kou_yi_kai_b_toc
     * @property {number|null} [playerId] skill_jin_kou_yi_kai_b_toc playerId
     * @property {boolean|null} [exchange] skill_jin_kou_yi_kai_b_toc exchange
     */

    /**
     * Constructs a new skill_jin_kou_yi_kai_b_toc.
     * @exports skill_jin_kou_yi_kai_b_toc
     * @classdesc Represents a skill_jin_kou_yi_kai_b_toc.
     * @implements Iskill_jin_kou_yi_kai_b_toc
     * @constructor
     * @param {Iskill_jin_kou_yi_kai_b_toc=} [properties] Properties to set
     */
    function skill_jin_kou_yi_kai_b_toc(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * skill_jin_kou_yi_kai_b_toc playerId.
     * @member {number} playerId
     * @memberof skill_jin_kou_yi_kai_b_toc
     * @instance
     */
    skill_jin_kou_yi_kai_b_toc.prototype.playerId = 0;

    /**
     * skill_jin_kou_yi_kai_b_toc exchange.
     * @member {boolean} exchange
     * @memberof skill_jin_kou_yi_kai_b_toc
     * @instance
     */
    skill_jin_kou_yi_kai_b_toc.prototype.exchange = false;

    /**
     * Creates a new skill_jin_kou_yi_kai_b_toc instance using the specified properties.
     * @function create
     * @memberof skill_jin_kou_yi_kai_b_toc
     * @static
     * @param {Iskill_jin_kou_yi_kai_b_toc=} [properties] Properties to set
     * @returns {skill_jin_kou_yi_kai_b_toc} skill_jin_kou_yi_kai_b_toc instance
     */
    skill_jin_kou_yi_kai_b_toc.create = function create(properties) {
        return new skill_jin_kou_yi_kai_b_toc(properties);
    };

    /**
     * Encodes the specified skill_jin_kou_yi_kai_b_toc message. Does not implicitly {@link skill_jin_kou_yi_kai_b_toc.verify|verify} messages.
     * @function encode
     * @memberof skill_jin_kou_yi_kai_b_toc
     * @static
     * @param {Iskill_jin_kou_yi_kai_b_toc} message skill_jin_kou_yi_kai_b_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_jin_kou_yi_kai_b_toc.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.playerId != null && Object.hasOwnProperty.call(message, "playerId"))
            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.playerId);
        if (message.exchange != null && Object.hasOwnProperty.call(message, "exchange"))
            writer.uint32(/* id 2, wireType 0 =*/16).bool(message.exchange);
        return writer;
    };

    /**
     * Encodes the specified skill_jin_kou_yi_kai_b_toc message, length delimited. Does not implicitly {@link skill_jin_kou_yi_kai_b_toc.verify|verify} messages.
     * @function encodeDelimited
     * @memberof skill_jin_kou_yi_kai_b_toc
     * @static
     * @param {Iskill_jin_kou_yi_kai_b_toc} message skill_jin_kou_yi_kai_b_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_jin_kou_yi_kai_b_toc.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a skill_jin_kou_yi_kai_b_toc message from the specified reader or buffer.
     * @function decode
     * @memberof skill_jin_kou_yi_kai_b_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {skill_jin_kou_yi_kai_b_toc} skill_jin_kou_yi_kai_b_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_jin_kou_yi_kai_b_toc.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.skill_jin_kou_yi_kai_b_toc();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.playerId = reader.uint32();
                    break;
                }
            case 2: {
                    message.exchange = reader.bool();
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a skill_jin_kou_yi_kai_b_toc message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof skill_jin_kou_yi_kai_b_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {skill_jin_kou_yi_kai_b_toc} skill_jin_kou_yi_kai_b_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_jin_kou_yi_kai_b_toc.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a skill_jin_kou_yi_kai_b_toc message.
     * @function verify
     * @memberof skill_jin_kou_yi_kai_b_toc
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    skill_jin_kou_yi_kai_b_toc.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            if (!$util.isInteger(message.playerId))
                return "playerId: integer expected";
        if (message.exchange != null && message.hasOwnProperty("exchange"))
            if (typeof message.exchange !== "boolean")
                return "exchange: boolean expected";
        return null;
    };

    /**
     * Creates a skill_jin_kou_yi_kai_b_toc message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof skill_jin_kou_yi_kai_b_toc
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {skill_jin_kou_yi_kai_b_toc} skill_jin_kou_yi_kai_b_toc
     */
    skill_jin_kou_yi_kai_b_toc.fromObject = function fromObject(object) {
        if (object instanceof $root.skill_jin_kou_yi_kai_b_toc)
            return object;
        var message = new $root.skill_jin_kou_yi_kai_b_toc();
        if (object.playerId != null)
            message.playerId = object.playerId >>> 0;
        if (object.exchange != null)
            message.exchange = Boolean(object.exchange);
        return message;
    };

    /**
     * Creates a plain object from a skill_jin_kou_yi_kai_b_toc message. Also converts values to other types if specified.
     * @function toObject
     * @memberof skill_jin_kou_yi_kai_b_toc
     * @static
     * @param {skill_jin_kou_yi_kai_b_toc} message skill_jin_kou_yi_kai_b_toc
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    skill_jin_kou_yi_kai_b_toc.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults) {
            object.playerId = 0;
            object.exchange = false;
        }
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            object.playerId = message.playerId;
        if (message.exchange != null && message.hasOwnProperty("exchange"))
            object.exchange = message.exchange;
        return object;
    };

    /**
     * Converts this skill_jin_kou_yi_kai_b_toc to JSON.
     * @function toJSON
     * @memberof skill_jin_kou_yi_kai_b_toc
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    skill_jin_kou_yi_kai_b_toc.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for skill_jin_kou_yi_kai_b_toc
     * @function getTypeUrl
     * @memberof skill_jin_kou_yi_kai_b_toc
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    skill_jin_kou_yi_kai_b_toc.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/skill_jin_kou_yi_kai_b_toc";
    };

    return skill_jin_kou_yi_kai_b_toc;
})();

$root.skill_wait_for_jiang_hu_ling_a_toc = (function() {

    /**
     * Properties of a skill_wait_for_jiang_hu_ling_a_toc.
     * @exports Iskill_wait_for_jiang_hu_ling_a_toc
     * @interface Iskill_wait_for_jiang_hu_ling_a_toc
     * @property {number|null} [playerId] skill_wait_for_jiang_hu_ling_a_toc playerId
     * @property {number|null} [waitingSecond] skill_wait_for_jiang_hu_ling_a_toc waitingSecond
     * @property {number|null} [seq] skill_wait_for_jiang_hu_ling_a_toc seq
     */

    /**
     * Constructs a new skill_wait_for_jiang_hu_ling_a_toc.
     * @exports skill_wait_for_jiang_hu_ling_a_toc
     * @classdesc Represents a skill_wait_for_jiang_hu_ling_a_toc.
     * @implements Iskill_wait_for_jiang_hu_ling_a_toc
     * @constructor
     * @param {Iskill_wait_for_jiang_hu_ling_a_toc=} [properties] Properties to set
     */
    function skill_wait_for_jiang_hu_ling_a_toc(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * skill_wait_for_jiang_hu_ling_a_toc playerId.
     * @member {number} playerId
     * @memberof skill_wait_for_jiang_hu_ling_a_toc
     * @instance
     */
    skill_wait_for_jiang_hu_ling_a_toc.prototype.playerId = 0;

    /**
     * skill_wait_for_jiang_hu_ling_a_toc waitingSecond.
     * @member {number} waitingSecond
     * @memberof skill_wait_for_jiang_hu_ling_a_toc
     * @instance
     */
    skill_wait_for_jiang_hu_ling_a_toc.prototype.waitingSecond = 0;

    /**
     * skill_wait_for_jiang_hu_ling_a_toc seq.
     * @member {number} seq
     * @memberof skill_wait_for_jiang_hu_ling_a_toc
     * @instance
     */
    skill_wait_for_jiang_hu_ling_a_toc.prototype.seq = 0;

    /**
     * Creates a new skill_wait_for_jiang_hu_ling_a_toc instance using the specified properties.
     * @function create
     * @memberof skill_wait_for_jiang_hu_ling_a_toc
     * @static
     * @param {Iskill_wait_for_jiang_hu_ling_a_toc=} [properties] Properties to set
     * @returns {skill_wait_for_jiang_hu_ling_a_toc} skill_wait_for_jiang_hu_ling_a_toc instance
     */
    skill_wait_for_jiang_hu_ling_a_toc.create = function create(properties) {
        return new skill_wait_for_jiang_hu_ling_a_toc(properties);
    };

    /**
     * Encodes the specified skill_wait_for_jiang_hu_ling_a_toc message. Does not implicitly {@link skill_wait_for_jiang_hu_ling_a_toc.verify|verify} messages.
     * @function encode
     * @memberof skill_wait_for_jiang_hu_ling_a_toc
     * @static
     * @param {Iskill_wait_for_jiang_hu_ling_a_toc} message skill_wait_for_jiang_hu_ling_a_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_wait_for_jiang_hu_ling_a_toc.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.playerId != null && Object.hasOwnProperty.call(message, "playerId"))
            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.playerId);
        if (message.waitingSecond != null && Object.hasOwnProperty.call(message, "waitingSecond"))
            writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.waitingSecond);
        if (message.seq != null && Object.hasOwnProperty.call(message, "seq"))
            writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.seq);
        return writer;
    };

    /**
     * Encodes the specified skill_wait_for_jiang_hu_ling_a_toc message, length delimited. Does not implicitly {@link skill_wait_for_jiang_hu_ling_a_toc.verify|verify} messages.
     * @function encodeDelimited
     * @memberof skill_wait_for_jiang_hu_ling_a_toc
     * @static
     * @param {Iskill_wait_for_jiang_hu_ling_a_toc} message skill_wait_for_jiang_hu_ling_a_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_wait_for_jiang_hu_ling_a_toc.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a skill_wait_for_jiang_hu_ling_a_toc message from the specified reader or buffer.
     * @function decode
     * @memberof skill_wait_for_jiang_hu_ling_a_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {skill_wait_for_jiang_hu_ling_a_toc} skill_wait_for_jiang_hu_ling_a_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_wait_for_jiang_hu_ling_a_toc.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.skill_wait_for_jiang_hu_ling_a_toc();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.playerId = reader.uint32();
                    break;
                }
            case 2: {
                    message.waitingSecond = reader.uint32();
                    break;
                }
            case 3: {
                    message.seq = reader.uint32();
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a skill_wait_for_jiang_hu_ling_a_toc message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof skill_wait_for_jiang_hu_ling_a_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {skill_wait_for_jiang_hu_ling_a_toc} skill_wait_for_jiang_hu_ling_a_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_wait_for_jiang_hu_ling_a_toc.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a skill_wait_for_jiang_hu_ling_a_toc message.
     * @function verify
     * @memberof skill_wait_for_jiang_hu_ling_a_toc
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    skill_wait_for_jiang_hu_ling_a_toc.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            if (!$util.isInteger(message.playerId))
                return "playerId: integer expected";
        if (message.waitingSecond != null && message.hasOwnProperty("waitingSecond"))
            if (!$util.isInteger(message.waitingSecond))
                return "waitingSecond: integer expected";
        if (message.seq != null && message.hasOwnProperty("seq"))
            if (!$util.isInteger(message.seq))
                return "seq: integer expected";
        return null;
    };

    /**
     * Creates a skill_wait_for_jiang_hu_ling_a_toc message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof skill_wait_for_jiang_hu_ling_a_toc
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {skill_wait_for_jiang_hu_ling_a_toc} skill_wait_for_jiang_hu_ling_a_toc
     */
    skill_wait_for_jiang_hu_ling_a_toc.fromObject = function fromObject(object) {
        if (object instanceof $root.skill_wait_for_jiang_hu_ling_a_toc)
            return object;
        var message = new $root.skill_wait_for_jiang_hu_ling_a_toc();
        if (object.playerId != null)
            message.playerId = object.playerId >>> 0;
        if (object.waitingSecond != null)
            message.waitingSecond = object.waitingSecond >>> 0;
        if (object.seq != null)
            message.seq = object.seq >>> 0;
        return message;
    };

    /**
     * Creates a plain object from a skill_wait_for_jiang_hu_ling_a_toc message. Also converts values to other types if specified.
     * @function toObject
     * @memberof skill_wait_for_jiang_hu_ling_a_toc
     * @static
     * @param {skill_wait_for_jiang_hu_ling_a_toc} message skill_wait_for_jiang_hu_ling_a_toc
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    skill_wait_for_jiang_hu_ling_a_toc.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults) {
            object.playerId = 0;
            object.waitingSecond = 0;
            object.seq = 0;
        }
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            object.playerId = message.playerId;
        if (message.waitingSecond != null && message.hasOwnProperty("waitingSecond"))
            object.waitingSecond = message.waitingSecond;
        if (message.seq != null && message.hasOwnProperty("seq"))
            object.seq = message.seq;
        return object;
    };

    /**
     * Converts this skill_wait_for_jiang_hu_ling_a_toc to JSON.
     * @function toJSON
     * @memberof skill_wait_for_jiang_hu_ling_a_toc
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    skill_wait_for_jiang_hu_ling_a_toc.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for skill_wait_for_jiang_hu_ling_a_toc
     * @function getTypeUrl
     * @memberof skill_wait_for_jiang_hu_ling_a_toc
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    skill_wait_for_jiang_hu_ling_a_toc.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/skill_wait_for_jiang_hu_ling_a_toc";
    };

    return skill_wait_for_jiang_hu_ling_a_toc;
})();

$root.skill_jiang_hu_ling_a_tos = (function() {

    /**
     * Properties of a skill_jiang_hu_ling_a_tos.
     * @exports Iskill_jiang_hu_ling_a_tos
     * @interface Iskill_jiang_hu_ling_a_tos
     * @property {boolean|null} [enable] skill_jiang_hu_ling_a_tos enable
     * @property {color|null} [color] skill_jiang_hu_ling_a_tos color
     * @property {number|null} [seq] skill_jiang_hu_ling_a_tos seq
     */

    /**
     * Constructs a new skill_jiang_hu_ling_a_tos.
     * @exports skill_jiang_hu_ling_a_tos
     * @classdesc Represents a skill_jiang_hu_ling_a_tos.
     * @implements Iskill_jiang_hu_ling_a_tos
     * @constructor
     * @param {Iskill_jiang_hu_ling_a_tos=} [properties] Properties to set
     */
    function skill_jiang_hu_ling_a_tos(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * skill_jiang_hu_ling_a_tos enable.
     * @member {boolean} enable
     * @memberof skill_jiang_hu_ling_a_tos
     * @instance
     */
    skill_jiang_hu_ling_a_tos.prototype.enable = false;

    /**
     * skill_jiang_hu_ling_a_tos color.
     * @member {color} color
     * @memberof skill_jiang_hu_ling_a_tos
     * @instance
     */
    skill_jiang_hu_ling_a_tos.prototype.color = 0;

    /**
     * skill_jiang_hu_ling_a_tos seq.
     * @member {number} seq
     * @memberof skill_jiang_hu_ling_a_tos
     * @instance
     */
    skill_jiang_hu_ling_a_tos.prototype.seq = 0;

    /**
     * Creates a new skill_jiang_hu_ling_a_tos instance using the specified properties.
     * @function create
     * @memberof skill_jiang_hu_ling_a_tos
     * @static
     * @param {Iskill_jiang_hu_ling_a_tos=} [properties] Properties to set
     * @returns {skill_jiang_hu_ling_a_tos} skill_jiang_hu_ling_a_tos instance
     */
    skill_jiang_hu_ling_a_tos.create = function create(properties) {
        return new skill_jiang_hu_ling_a_tos(properties);
    };

    /**
     * Encodes the specified skill_jiang_hu_ling_a_tos message. Does not implicitly {@link skill_jiang_hu_ling_a_tos.verify|verify} messages.
     * @function encode
     * @memberof skill_jiang_hu_ling_a_tos
     * @static
     * @param {Iskill_jiang_hu_ling_a_tos} message skill_jiang_hu_ling_a_tos message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_jiang_hu_ling_a_tos.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.enable != null && Object.hasOwnProperty.call(message, "enable"))
            writer.uint32(/* id 1, wireType 0 =*/8).bool(message.enable);
        if (message.color != null && Object.hasOwnProperty.call(message, "color"))
            writer.uint32(/* id 2, wireType 0 =*/16).int32(message.color);
        if (message.seq != null && Object.hasOwnProperty.call(message, "seq"))
            writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.seq);
        return writer;
    };

    /**
     * Encodes the specified skill_jiang_hu_ling_a_tos message, length delimited. Does not implicitly {@link skill_jiang_hu_ling_a_tos.verify|verify} messages.
     * @function encodeDelimited
     * @memberof skill_jiang_hu_ling_a_tos
     * @static
     * @param {Iskill_jiang_hu_ling_a_tos} message skill_jiang_hu_ling_a_tos message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_jiang_hu_ling_a_tos.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a skill_jiang_hu_ling_a_tos message from the specified reader or buffer.
     * @function decode
     * @memberof skill_jiang_hu_ling_a_tos
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {skill_jiang_hu_ling_a_tos} skill_jiang_hu_ling_a_tos
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_jiang_hu_ling_a_tos.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.skill_jiang_hu_ling_a_tos();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.enable = reader.bool();
                    break;
                }
            case 2: {
                    message.color = reader.int32();
                    break;
                }
            case 3: {
                    message.seq = reader.uint32();
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a skill_jiang_hu_ling_a_tos message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof skill_jiang_hu_ling_a_tos
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {skill_jiang_hu_ling_a_tos} skill_jiang_hu_ling_a_tos
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_jiang_hu_ling_a_tos.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a skill_jiang_hu_ling_a_tos message.
     * @function verify
     * @memberof skill_jiang_hu_ling_a_tos
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    skill_jiang_hu_ling_a_tos.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.enable != null && message.hasOwnProperty("enable"))
            if (typeof message.enable !== "boolean")
                return "enable: boolean expected";
        if (message.color != null && message.hasOwnProperty("color"))
            switch (message.color) {
            default:
                return "color: enum value expected";
            case 0:
            case 1:
            case 2:
            case 3:
                break;
            }
        if (message.seq != null && message.hasOwnProperty("seq"))
            if (!$util.isInteger(message.seq))
                return "seq: integer expected";
        return null;
    };

    /**
     * Creates a skill_jiang_hu_ling_a_tos message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof skill_jiang_hu_ling_a_tos
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {skill_jiang_hu_ling_a_tos} skill_jiang_hu_ling_a_tos
     */
    skill_jiang_hu_ling_a_tos.fromObject = function fromObject(object) {
        if (object instanceof $root.skill_jiang_hu_ling_a_tos)
            return object;
        var message = new $root.skill_jiang_hu_ling_a_tos();
        if (object.enable != null)
            message.enable = Boolean(object.enable);
        switch (object.color) {
        default:
            if (typeof object.color === "number") {
                message.color = object.color;
                break;
            }
            break;
        case "Black":
        case 0:
            message.color = 0;
            break;
        case "Red":
        case 1:
            message.color = 1;
            break;
        case "Blue":
        case 2:
            message.color = 2;
            break;
        case "Has_No_Identity":
        case 3:
            message.color = 3;
            break;
        }
        if (object.seq != null)
            message.seq = object.seq >>> 0;
        return message;
    };

    /**
     * Creates a plain object from a skill_jiang_hu_ling_a_tos message. Also converts values to other types if specified.
     * @function toObject
     * @memberof skill_jiang_hu_ling_a_tos
     * @static
     * @param {skill_jiang_hu_ling_a_tos} message skill_jiang_hu_ling_a_tos
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    skill_jiang_hu_ling_a_tos.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults) {
            object.enable = false;
            object.color = options.enums === String ? "Black" : 0;
            object.seq = 0;
        }
        if (message.enable != null && message.hasOwnProperty("enable"))
            object.enable = message.enable;
        if (message.color != null && message.hasOwnProperty("color"))
            object.color = options.enums === String ? $root.color[message.color] === undefined ? message.color : $root.color[message.color] : message.color;
        if (message.seq != null && message.hasOwnProperty("seq"))
            object.seq = message.seq;
        return object;
    };

    /**
     * Converts this skill_jiang_hu_ling_a_tos to JSON.
     * @function toJSON
     * @memberof skill_jiang_hu_ling_a_tos
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    skill_jiang_hu_ling_a_tos.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for skill_jiang_hu_ling_a_tos
     * @function getTypeUrl
     * @memberof skill_jiang_hu_ling_a_tos
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    skill_jiang_hu_ling_a_tos.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/skill_jiang_hu_ling_a_tos";
    };

    return skill_jiang_hu_ling_a_tos;
})();

$root.skill_jiang_hu_ling_a_toc = (function() {

    /**
     * Properties of a skill_jiang_hu_ling_a_toc.
     * @exports Iskill_jiang_hu_ling_a_toc
     * @interface Iskill_jiang_hu_ling_a_toc
     * @property {number|null} [playerId] skill_jiang_hu_ling_a_toc playerId
     * @property {color|null} [color] skill_jiang_hu_ling_a_toc color
     */

    /**
     * Constructs a new skill_jiang_hu_ling_a_toc.
     * @exports skill_jiang_hu_ling_a_toc
     * @classdesc Represents a skill_jiang_hu_ling_a_toc.
     * @implements Iskill_jiang_hu_ling_a_toc
     * @constructor
     * @param {Iskill_jiang_hu_ling_a_toc=} [properties] Properties to set
     */
    function skill_jiang_hu_ling_a_toc(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * skill_jiang_hu_ling_a_toc playerId.
     * @member {number} playerId
     * @memberof skill_jiang_hu_ling_a_toc
     * @instance
     */
    skill_jiang_hu_ling_a_toc.prototype.playerId = 0;

    /**
     * skill_jiang_hu_ling_a_toc color.
     * @member {color} color
     * @memberof skill_jiang_hu_ling_a_toc
     * @instance
     */
    skill_jiang_hu_ling_a_toc.prototype.color = 0;

    /**
     * Creates a new skill_jiang_hu_ling_a_toc instance using the specified properties.
     * @function create
     * @memberof skill_jiang_hu_ling_a_toc
     * @static
     * @param {Iskill_jiang_hu_ling_a_toc=} [properties] Properties to set
     * @returns {skill_jiang_hu_ling_a_toc} skill_jiang_hu_ling_a_toc instance
     */
    skill_jiang_hu_ling_a_toc.create = function create(properties) {
        return new skill_jiang_hu_ling_a_toc(properties);
    };

    /**
     * Encodes the specified skill_jiang_hu_ling_a_toc message. Does not implicitly {@link skill_jiang_hu_ling_a_toc.verify|verify} messages.
     * @function encode
     * @memberof skill_jiang_hu_ling_a_toc
     * @static
     * @param {Iskill_jiang_hu_ling_a_toc} message skill_jiang_hu_ling_a_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_jiang_hu_ling_a_toc.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.playerId != null && Object.hasOwnProperty.call(message, "playerId"))
            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.playerId);
        if (message.color != null && Object.hasOwnProperty.call(message, "color"))
            writer.uint32(/* id 2, wireType 0 =*/16).int32(message.color);
        return writer;
    };

    /**
     * Encodes the specified skill_jiang_hu_ling_a_toc message, length delimited. Does not implicitly {@link skill_jiang_hu_ling_a_toc.verify|verify} messages.
     * @function encodeDelimited
     * @memberof skill_jiang_hu_ling_a_toc
     * @static
     * @param {Iskill_jiang_hu_ling_a_toc} message skill_jiang_hu_ling_a_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_jiang_hu_ling_a_toc.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a skill_jiang_hu_ling_a_toc message from the specified reader or buffer.
     * @function decode
     * @memberof skill_jiang_hu_ling_a_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {skill_jiang_hu_ling_a_toc} skill_jiang_hu_ling_a_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_jiang_hu_ling_a_toc.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.skill_jiang_hu_ling_a_toc();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.playerId = reader.uint32();
                    break;
                }
            case 2: {
                    message.color = reader.int32();
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a skill_jiang_hu_ling_a_toc message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof skill_jiang_hu_ling_a_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {skill_jiang_hu_ling_a_toc} skill_jiang_hu_ling_a_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_jiang_hu_ling_a_toc.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a skill_jiang_hu_ling_a_toc message.
     * @function verify
     * @memberof skill_jiang_hu_ling_a_toc
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    skill_jiang_hu_ling_a_toc.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            if (!$util.isInteger(message.playerId))
                return "playerId: integer expected";
        if (message.color != null && message.hasOwnProperty("color"))
            switch (message.color) {
            default:
                return "color: enum value expected";
            case 0:
            case 1:
            case 2:
            case 3:
                break;
            }
        return null;
    };

    /**
     * Creates a skill_jiang_hu_ling_a_toc message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof skill_jiang_hu_ling_a_toc
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {skill_jiang_hu_ling_a_toc} skill_jiang_hu_ling_a_toc
     */
    skill_jiang_hu_ling_a_toc.fromObject = function fromObject(object) {
        if (object instanceof $root.skill_jiang_hu_ling_a_toc)
            return object;
        var message = new $root.skill_jiang_hu_ling_a_toc();
        if (object.playerId != null)
            message.playerId = object.playerId >>> 0;
        switch (object.color) {
        default:
            if (typeof object.color === "number") {
                message.color = object.color;
                break;
            }
            break;
        case "Black":
        case 0:
            message.color = 0;
            break;
        case "Red":
        case 1:
            message.color = 1;
            break;
        case "Blue":
        case 2:
            message.color = 2;
            break;
        case "Has_No_Identity":
        case 3:
            message.color = 3;
            break;
        }
        return message;
    };

    /**
     * Creates a plain object from a skill_jiang_hu_ling_a_toc message. Also converts values to other types if specified.
     * @function toObject
     * @memberof skill_jiang_hu_ling_a_toc
     * @static
     * @param {skill_jiang_hu_ling_a_toc} message skill_jiang_hu_ling_a_toc
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    skill_jiang_hu_ling_a_toc.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults) {
            object.playerId = 0;
            object.color = options.enums === String ? "Black" : 0;
        }
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            object.playerId = message.playerId;
        if (message.color != null && message.hasOwnProperty("color"))
            object.color = options.enums === String ? $root.color[message.color] === undefined ? message.color : $root.color[message.color] : message.color;
        return object;
    };

    /**
     * Converts this skill_jiang_hu_ling_a_toc to JSON.
     * @function toJSON
     * @memberof skill_jiang_hu_ling_a_toc
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    skill_jiang_hu_ling_a_toc.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for skill_jiang_hu_ling_a_toc
     * @function getTypeUrl
     * @memberof skill_jiang_hu_ling_a_toc
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    skill_jiang_hu_ling_a_toc.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/skill_jiang_hu_ling_a_toc";
    };

    return skill_jiang_hu_ling_a_toc;
})();

$root.skill_wait_for_jiang_hu_ling_b_toc = (function() {

    /**
     * Properties of a skill_wait_for_jiang_hu_ling_b_toc.
     * @exports Iskill_wait_for_jiang_hu_ling_b_toc
     * @interface Iskill_wait_for_jiang_hu_ling_b_toc
     * @property {number|null} [playerId] skill_wait_for_jiang_hu_ling_b_toc playerId
     * @property {color|null} [color] skill_wait_for_jiang_hu_ling_b_toc color
     * @property {number|null} [waitingSecond] skill_wait_for_jiang_hu_ling_b_toc waitingSecond
     * @property {number|null} [seq] skill_wait_for_jiang_hu_ling_b_toc seq
     */

    /**
     * Constructs a new skill_wait_for_jiang_hu_ling_b_toc.
     * @exports skill_wait_for_jiang_hu_ling_b_toc
     * @classdesc Represents a skill_wait_for_jiang_hu_ling_b_toc.
     * @implements Iskill_wait_for_jiang_hu_ling_b_toc
     * @constructor
     * @param {Iskill_wait_for_jiang_hu_ling_b_toc=} [properties] Properties to set
     */
    function skill_wait_for_jiang_hu_ling_b_toc(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * skill_wait_for_jiang_hu_ling_b_toc playerId.
     * @member {number} playerId
     * @memberof skill_wait_for_jiang_hu_ling_b_toc
     * @instance
     */
    skill_wait_for_jiang_hu_ling_b_toc.prototype.playerId = 0;

    /**
     * skill_wait_for_jiang_hu_ling_b_toc color.
     * @member {color} color
     * @memberof skill_wait_for_jiang_hu_ling_b_toc
     * @instance
     */
    skill_wait_for_jiang_hu_ling_b_toc.prototype.color = 0;

    /**
     * skill_wait_for_jiang_hu_ling_b_toc waitingSecond.
     * @member {number} waitingSecond
     * @memberof skill_wait_for_jiang_hu_ling_b_toc
     * @instance
     */
    skill_wait_for_jiang_hu_ling_b_toc.prototype.waitingSecond = 0;

    /**
     * skill_wait_for_jiang_hu_ling_b_toc seq.
     * @member {number} seq
     * @memberof skill_wait_for_jiang_hu_ling_b_toc
     * @instance
     */
    skill_wait_for_jiang_hu_ling_b_toc.prototype.seq = 0;

    /**
     * Creates a new skill_wait_for_jiang_hu_ling_b_toc instance using the specified properties.
     * @function create
     * @memberof skill_wait_for_jiang_hu_ling_b_toc
     * @static
     * @param {Iskill_wait_for_jiang_hu_ling_b_toc=} [properties] Properties to set
     * @returns {skill_wait_for_jiang_hu_ling_b_toc} skill_wait_for_jiang_hu_ling_b_toc instance
     */
    skill_wait_for_jiang_hu_ling_b_toc.create = function create(properties) {
        return new skill_wait_for_jiang_hu_ling_b_toc(properties);
    };

    /**
     * Encodes the specified skill_wait_for_jiang_hu_ling_b_toc message. Does not implicitly {@link skill_wait_for_jiang_hu_ling_b_toc.verify|verify} messages.
     * @function encode
     * @memberof skill_wait_for_jiang_hu_ling_b_toc
     * @static
     * @param {Iskill_wait_for_jiang_hu_ling_b_toc} message skill_wait_for_jiang_hu_ling_b_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_wait_for_jiang_hu_ling_b_toc.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.playerId != null && Object.hasOwnProperty.call(message, "playerId"))
            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.playerId);
        if (message.color != null && Object.hasOwnProperty.call(message, "color"))
            writer.uint32(/* id 2, wireType 0 =*/16).int32(message.color);
        if (message.waitingSecond != null && Object.hasOwnProperty.call(message, "waitingSecond"))
            writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.waitingSecond);
        if (message.seq != null && Object.hasOwnProperty.call(message, "seq"))
            writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.seq);
        return writer;
    };

    /**
     * Encodes the specified skill_wait_for_jiang_hu_ling_b_toc message, length delimited. Does not implicitly {@link skill_wait_for_jiang_hu_ling_b_toc.verify|verify} messages.
     * @function encodeDelimited
     * @memberof skill_wait_for_jiang_hu_ling_b_toc
     * @static
     * @param {Iskill_wait_for_jiang_hu_ling_b_toc} message skill_wait_for_jiang_hu_ling_b_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_wait_for_jiang_hu_ling_b_toc.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a skill_wait_for_jiang_hu_ling_b_toc message from the specified reader or buffer.
     * @function decode
     * @memberof skill_wait_for_jiang_hu_ling_b_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {skill_wait_for_jiang_hu_ling_b_toc} skill_wait_for_jiang_hu_ling_b_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_wait_for_jiang_hu_ling_b_toc.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.skill_wait_for_jiang_hu_ling_b_toc();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.playerId = reader.uint32();
                    break;
                }
            case 2: {
                    message.color = reader.int32();
                    break;
                }
            case 3: {
                    message.waitingSecond = reader.uint32();
                    break;
                }
            case 4: {
                    message.seq = reader.uint32();
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a skill_wait_for_jiang_hu_ling_b_toc message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof skill_wait_for_jiang_hu_ling_b_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {skill_wait_for_jiang_hu_ling_b_toc} skill_wait_for_jiang_hu_ling_b_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_wait_for_jiang_hu_ling_b_toc.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a skill_wait_for_jiang_hu_ling_b_toc message.
     * @function verify
     * @memberof skill_wait_for_jiang_hu_ling_b_toc
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    skill_wait_for_jiang_hu_ling_b_toc.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            if (!$util.isInteger(message.playerId))
                return "playerId: integer expected";
        if (message.color != null && message.hasOwnProperty("color"))
            switch (message.color) {
            default:
                return "color: enum value expected";
            case 0:
            case 1:
            case 2:
            case 3:
                break;
            }
        if (message.waitingSecond != null && message.hasOwnProperty("waitingSecond"))
            if (!$util.isInteger(message.waitingSecond))
                return "waitingSecond: integer expected";
        if (message.seq != null && message.hasOwnProperty("seq"))
            if (!$util.isInteger(message.seq))
                return "seq: integer expected";
        return null;
    };

    /**
     * Creates a skill_wait_for_jiang_hu_ling_b_toc message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof skill_wait_for_jiang_hu_ling_b_toc
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {skill_wait_for_jiang_hu_ling_b_toc} skill_wait_for_jiang_hu_ling_b_toc
     */
    skill_wait_for_jiang_hu_ling_b_toc.fromObject = function fromObject(object) {
        if (object instanceof $root.skill_wait_for_jiang_hu_ling_b_toc)
            return object;
        var message = new $root.skill_wait_for_jiang_hu_ling_b_toc();
        if (object.playerId != null)
            message.playerId = object.playerId >>> 0;
        switch (object.color) {
        default:
            if (typeof object.color === "number") {
                message.color = object.color;
                break;
            }
            break;
        case "Black":
        case 0:
            message.color = 0;
            break;
        case "Red":
        case 1:
            message.color = 1;
            break;
        case "Blue":
        case 2:
            message.color = 2;
            break;
        case "Has_No_Identity":
        case 3:
            message.color = 3;
            break;
        }
        if (object.waitingSecond != null)
            message.waitingSecond = object.waitingSecond >>> 0;
        if (object.seq != null)
            message.seq = object.seq >>> 0;
        return message;
    };

    /**
     * Creates a plain object from a skill_wait_for_jiang_hu_ling_b_toc message. Also converts values to other types if specified.
     * @function toObject
     * @memberof skill_wait_for_jiang_hu_ling_b_toc
     * @static
     * @param {skill_wait_for_jiang_hu_ling_b_toc} message skill_wait_for_jiang_hu_ling_b_toc
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    skill_wait_for_jiang_hu_ling_b_toc.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults) {
            object.playerId = 0;
            object.color = options.enums === String ? "Black" : 0;
            object.waitingSecond = 0;
            object.seq = 0;
        }
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            object.playerId = message.playerId;
        if (message.color != null && message.hasOwnProperty("color"))
            object.color = options.enums === String ? $root.color[message.color] === undefined ? message.color : $root.color[message.color] : message.color;
        if (message.waitingSecond != null && message.hasOwnProperty("waitingSecond"))
            object.waitingSecond = message.waitingSecond;
        if (message.seq != null && message.hasOwnProperty("seq"))
            object.seq = message.seq;
        return object;
    };

    /**
     * Converts this skill_wait_for_jiang_hu_ling_b_toc to JSON.
     * @function toJSON
     * @memberof skill_wait_for_jiang_hu_ling_b_toc
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    skill_wait_for_jiang_hu_ling_b_toc.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for skill_wait_for_jiang_hu_ling_b_toc
     * @function getTypeUrl
     * @memberof skill_wait_for_jiang_hu_ling_b_toc
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    skill_wait_for_jiang_hu_ling_b_toc.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/skill_wait_for_jiang_hu_ling_b_toc";
    };

    return skill_wait_for_jiang_hu_ling_b_toc;
})();

$root.skill_jiang_hu_ling_b_tos = (function() {

    /**
     * Properties of a skill_jiang_hu_ling_b_tos.
     * @exports Iskill_jiang_hu_ling_b_tos
     * @interface Iskill_jiang_hu_ling_b_tos
     * @property {number|null} [cardId] skill_jiang_hu_ling_b_tos cardId
     * @property {number|null} [seq] skill_jiang_hu_ling_b_tos seq
     */

    /**
     * Constructs a new skill_jiang_hu_ling_b_tos.
     * @exports skill_jiang_hu_ling_b_tos
     * @classdesc Represents a skill_jiang_hu_ling_b_tos.
     * @implements Iskill_jiang_hu_ling_b_tos
     * @constructor
     * @param {Iskill_jiang_hu_ling_b_tos=} [properties] Properties to set
     */
    function skill_jiang_hu_ling_b_tos(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * skill_jiang_hu_ling_b_tos cardId.
     * @member {number} cardId
     * @memberof skill_jiang_hu_ling_b_tos
     * @instance
     */
    skill_jiang_hu_ling_b_tos.prototype.cardId = 0;

    /**
     * skill_jiang_hu_ling_b_tos seq.
     * @member {number} seq
     * @memberof skill_jiang_hu_ling_b_tos
     * @instance
     */
    skill_jiang_hu_ling_b_tos.prototype.seq = 0;

    /**
     * Creates a new skill_jiang_hu_ling_b_tos instance using the specified properties.
     * @function create
     * @memberof skill_jiang_hu_ling_b_tos
     * @static
     * @param {Iskill_jiang_hu_ling_b_tos=} [properties] Properties to set
     * @returns {skill_jiang_hu_ling_b_tos} skill_jiang_hu_ling_b_tos instance
     */
    skill_jiang_hu_ling_b_tos.create = function create(properties) {
        return new skill_jiang_hu_ling_b_tos(properties);
    };

    /**
     * Encodes the specified skill_jiang_hu_ling_b_tos message. Does not implicitly {@link skill_jiang_hu_ling_b_tos.verify|verify} messages.
     * @function encode
     * @memberof skill_jiang_hu_ling_b_tos
     * @static
     * @param {Iskill_jiang_hu_ling_b_tos} message skill_jiang_hu_ling_b_tos message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_jiang_hu_ling_b_tos.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.cardId != null && Object.hasOwnProperty.call(message, "cardId"))
            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.cardId);
        if (message.seq != null && Object.hasOwnProperty.call(message, "seq"))
            writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.seq);
        return writer;
    };

    /**
     * Encodes the specified skill_jiang_hu_ling_b_tos message, length delimited. Does not implicitly {@link skill_jiang_hu_ling_b_tos.verify|verify} messages.
     * @function encodeDelimited
     * @memberof skill_jiang_hu_ling_b_tos
     * @static
     * @param {Iskill_jiang_hu_ling_b_tos} message skill_jiang_hu_ling_b_tos message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_jiang_hu_ling_b_tos.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a skill_jiang_hu_ling_b_tos message from the specified reader or buffer.
     * @function decode
     * @memberof skill_jiang_hu_ling_b_tos
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {skill_jiang_hu_ling_b_tos} skill_jiang_hu_ling_b_tos
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_jiang_hu_ling_b_tos.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.skill_jiang_hu_ling_b_tos();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.cardId = reader.uint32();
                    break;
                }
            case 2: {
                    message.seq = reader.uint32();
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a skill_jiang_hu_ling_b_tos message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof skill_jiang_hu_ling_b_tos
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {skill_jiang_hu_ling_b_tos} skill_jiang_hu_ling_b_tos
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_jiang_hu_ling_b_tos.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a skill_jiang_hu_ling_b_tos message.
     * @function verify
     * @memberof skill_jiang_hu_ling_b_tos
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    skill_jiang_hu_ling_b_tos.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.cardId != null && message.hasOwnProperty("cardId"))
            if (!$util.isInteger(message.cardId))
                return "cardId: integer expected";
        if (message.seq != null && message.hasOwnProperty("seq"))
            if (!$util.isInteger(message.seq))
                return "seq: integer expected";
        return null;
    };

    /**
     * Creates a skill_jiang_hu_ling_b_tos message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof skill_jiang_hu_ling_b_tos
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {skill_jiang_hu_ling_b_tos} skill_jiang_hu_ling_b_tos
     */
    skill_jiang_hu_ling_b_tos.fromObject = function fromObject(object) {
        if (object instanceof $root.skill_jiang_hu_ling_b_tos)
            return object;
        var message = new $root.skill_jiang_hu_ling_b_tos();
        if (object.cardId != null)
            message.cardId = object.cardId >>> 0;
        if (object.seq != null)
            message.seq = object.seq >>> 0;
        return message;
    };

    /**
     * Creates a plain object from a skill_jiang_hu_ling_b_tos message. Also converts values to other types if specified.
     * @function toObject
     * @memberof skill_jiang_hu_ling_b_tos
     * @static
     * @param {skill_jiang_hu_ling_b_tos} message skill_jiang_hu_ling_b_tos
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    skill_jiang_hu_ling_b_tos.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults) {
            object.cardId = 0;
            object.seq = 0;
        }
        if (message.cardId != null && message.hasOwnProperty("cardId"))
            object.cardId = message.cardId;
        if (message.seq != null && message.hasOwnProperty("seq"))
            object.seq = message.seq;
        return object;
    };

    /**
     * Converts this skill_jiang_hu_ling_b_tos to JSON.
     * @function toJSON
     * @memberof skill_jiang_hu_ling_b_tos
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    skill_jiang_hu_ling_b_tos.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for skill_jiang_hu_ling_b_tos
     * @function getTypeUrl
     * @memberof skill_jiang_hu_ling_b_tos
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    skill_jiang_hu_ling_b_tos.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/skill_jiang_hu_ling_b_tos";
    };

    return skill_jiang_hu_ling_b_tos;
})();

$root.skill_jiang_hu_ling_b_toc = (function() {

    /**
     * Properties of a skill_jiang_hu_ling_b_toc.
     * @exports Iskill_jiang_hu_ling_b_toc
     * @interface Iskill_jiang_hu_ling_b_toc
     * @property {number|null} [playerId] skill_jiang_hu_ling_b_toc playerId
     * @property {number|null} [cardId] skill_jiang_hu_ling_b_toc cardId
     */

    /**
     * Constructs a new skill_jiang_hu_ling_b_toc.
     * @exports skill_jiang_hu_ling_b_toc
     * @classdesc Represents a skill_jiang_hu_ling_b_toc.
     * @implements Iskill_jiang_hu_ling_b_toc
     * @constructor
     * @param {Iskill_jiang_hu_ling_b_toc=} [properties] Properties to set
     */
    function skill_jiang_hu_ling_b_toc(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * skill_jiang_hu_ling_b_toc playerId.
     * @member {number} playerId
     * @memberof skill_jiang_hu_ling_b_toc
     * @instance
     */
    skill_jiang_hu_ling_b_toc.prototype.playerId = 0;

    /**
     * skill_jiang_hu_ling_b_toc cardId.
     * @member {number} cardId
     * @memberof skill_jiang_hu_ling_b_toc
     * @instance
     */
    skill_jiang_hu_ling_b_toc.prototype.cardId = 0;

    /**
     * Creates a new skill_jiang_hu_ling_b_toc instance using the specified properties.
     * @function create
     * @memberof skill_jiang_hu_ling_b_toc
     * @static
     * @param {Iskill_jiang_hu_ling_b_toc=} [properties] Properties to set
     * @returns {skill_jiang_hu_ling_b_toc} skill_jiang_hu_ling_b_toc instance
     */
    skill_jiang_hu_ling_b_toc.create = function create(properties) {
        return new skill_jiang_hu_ling_b_toc(properties);
    };

    /**
     * Encodes the specified skill_jiang_hu_ling_b_toc message. Does not implicitly {@link skill_jiang_hu_ling_b_toc.verify|verify} messages.
     * @function encode
     * @memberof skill_jiang_hu_ling_b_toc
     * @static
     * @param {Iskill_jiang_hu_ling_b_toc} message skill_jiang_hu_ling_b_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_jiang_hu_ling_b_toc.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.playerId != null && Object.hasOwnProperty.call(message, "playerId"))
            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.playerId);
        if (message.cardId != null && Object.hasOwnProperty.call(message, "cardId"))
            writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.cardId);
        return writer;
    };

    /**
     * Encodes the specified skill_jiang_hu_ling_b_toc message, length delimited. Does not implicitly {@link skill_jiang_hu_ling_b_toc.verify|verify} messages.
     * @function encodeDelimited
     * @memberof skill_jiang_hu_ling_b_toc
     * @static
     * @param {Iskill_jiang_hu_ling_b_toc} message skill_jiang_hu_ling_b_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_jiang_hu_ling_b_toc.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a skill_jiang_hu_ling_b_toc message from the specified reader or buffer.
     * @function decode
     * @memberof skill_jiang_hu_ling_b_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {skill_jiang_hu_ling_b_toc} skill_jiang_hu_ling_b_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_jiang_hu_ling_b_toc.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.skill_jiang_hu_ling_b_toc();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.playerId = reader.uint32();
                    break;
                }
            case 2: {
                    message.cardId = reader.uint32();
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a skill_jiang_hu_ling_b_toc message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof skill_jiang_hu_ling_b_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {skill_jiang_hu_ling_b_toc} skill_jiang_hu_ling_b_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_jiang_hu_ling_b_toc.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a skill_jiang_hu_ling_b_toc message.
     * @function verify
     * @memberof skill_jiang_hu_ling_b_toc
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    skill_jiang_hu_ling_b_toc.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            if (!$util.isInteger(message.playerId))
                return "playerId: integer expected";
        if (message.cardId != null && message.hasOwnProperty("cardId"))
            if (!$util.isInteger(message.cardId))
                return "cardId: integer expected";
        return null;
    };

    /**
     * Creates a skill_jiang_hu_ling_b_toc message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof skill_jiang_hu_ling_b_toc
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {skill_jiang_hu_ling_b_toc} skill_jiang_hu_ling_b_toc
     */
    skill_jiang_hu_ling_b_toc.fromObject = function fromObject(object) {
        if (object instanceof $root.skill_jiang_hu_ling_b_toc)
            return object;
        var message = new $root.skill_jiang_hu_ling_b_toc();
        if (object.playerId != null)
            message.playerId = object.playerId >>> 0;
        if (object.cardId != null)
            message.cardId = object.cardId >>> 0;
        return message;
    };

    /**
     * Creates a plain object from a skill_jiang_hu_ling_b_toc message. Also converts values to other types if specified.
     * @function toObject
     * @memberof skill_jiang_hu_ling_b_toc
     * @static
     * @param {skill_jiang_hu_ling_b_toc} message skill_jiang_hu_ling_b_toc
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    skill_jiang_hu_ling_b_toc.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults) {
            object.playerId = 0;
            object.cardId = 0;
        }
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            object.playerId = message.playerId;
        if (message.cardId != null && message.hasOwnProperty("cardId"))
            object.cardId = message.cardId;
        return object;
    };

    /**
     * Converts this skill_jiang_hu_ling_b_toc to JSON.
     * @function toJSON
     * @memberof skill_jiang_hu_ling_b_toc
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    skill_jiang_hu_ling_b_toc.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for skill_jiang_hu_ling_b_toc
     * @function getTypeUrl
     * @memberof skill_jiang_hu_ling_b_toc
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    skill_jiang_hu_ling_b_toc.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/skill_jiang_hu_ling_b_toc";
    };

    return skill_jiang_hu_ling_b_toc;
})();

$root.skill_ji_ban_a_tos = (function() {

    /**
     * Properties of a skill_ji_ban_a_tos.
     * @exports Iskill_ji_ban_a_tos
     * @interface Iskill_ji_ban_a_tos
     * @property {number|null} [seq] skill_ji_ban_a_tos seq
     */

    /**
     * Constructs a new skill_ji_ban_a_tos.
     * @exports skill_ji_ban_a_tos
     * @classdesc Represents a skill_ji_ban_a_tos.
     * @implements Iskill_ji_ban_a_tos
     * @constructor
     * @param {Iskill_ji_ban_a_tos=} [properties] Properties to set
     */
    function skill_ji_ban_a_tos(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * skill_ji_ban_a_tos seq.
     * @member {number} seq
     * @memberof skill_ji_ban_a_tos
     * @instance
     */
    skill_ji_ban_a_tos.prototype.seq = 0;

    /**
     * Creates a new skill_ji_ban_a_tos instance using the specified properties.
     * @function create
     * @memberof skill_ji_ban_a_tos
     * @static
     * @param {Iskill_ji_ban_a_tos=} [properties] Properties to set
     * @returns {skill_ji_ban_a_tos} skill_ji_ban_a_tos instance
     */
    skill_ji_ban_a_tos.create = function create(properties) {
        return new skill_ji_ban_a_tos(properties);
    };

    /**
     * Encodes the specified skill_ji_ban_a_tos message. Does not implicitly {@link skill_ji_ban_a_tos.verify|verify} messages.
     * @function encode
     * @memberof skill_ji_ban_a_tos
     * @static
     * @param {Iskill_ji_ban_a_tos} message skill_ji_ban_a_tos message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_ji_ban_a_tos.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.seq != null && Object.hasOwnProperty.call(message, "seq"))
            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.seq);
        return writer;
    };

    /**
     * Encodes the specified skill_ji_ban_a_tos message, length delimited. Does not implicitly {@link skill_ji_ban_a_tos.verify|verify} messages.
     * @function encodeDelimited
     * @memberof skill_ji_ban_a_tos
     * @static
     * @param {Iskill_ji_ban_a_tos} message skill_ji_ban_a_tos message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_ji_ban_a_tos.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a skill_ji_ban_a_tos message from the specified reader or buffer.
     * @function decode
     * @memberof skill_ji_ban_a_tos
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {skill_ji_ban_a_tos} skill_ji_ban_a_tos
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_ji_ban_a_tos.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.skill_ji_ban_a_tos();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.seq = reader.uint32();
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a skill_ji_ban_a_tos message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof skill_ji_ban_a_tos
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {skill_ji_ban_a_tos} skill_ji_ban_a_tos
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_ji_ban_a_tos.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a skill_ji_ban_a_tos message.
     * @function verify
     * @memberof skill_ji_ban_a_tos
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    skill_ji_ban_a_tos.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.seq != null && message.hasOwnProperty("seq"))
            if (!$util.isInteger(message.seq))
                return "seq: integer expected";
        return null;
    };

    /**
     * Creates a skill_ji_ban_a_tos message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof skill_ji_ban_a_tos
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {skill_ji_ban_a_tos} skill_ji_ban_a_tos
     */
    skill_ji_ban_a_tos.fromObject = function fromObject(object) {
        if (object instanceof $root.skill_ji_ban_a_tos)
            return object;
        var message = new $root.skill_ji_ban_a_tos();
        if (object.seq != null)
            message.seq = object.seq >>> 0;
        return message;
    };

    /**
     * Creates a plain object from a skill_ji_ban_a_tos message. Also converts values to other types if specified.
     * @function toObject
     * @memberof skill_ji_ban_a_tos
     * @static
     * @param {skill_ji_ban_a_tos} message skill_ji_ban_a_tos
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    skill_ji_ban_a_tos.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults)
            object.seq = 0;
        if (message.seq != null && message.hasOwnProperty("seq"))
            object.seq = message.seq;
        return object;
    };

    /**
     * Converts this skill_ji_ban_a_tos to JSON.
     * @function toJSON
     * @memberof skill_ji_ban_a_tos
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    skill_ji_ban_a_tos.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for skill_ji_ban_a_tos
     * @function getTypeUrl
     * @memberof skill_ji_ban_a_tos
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    skill_ji_ban_a_tos.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/skill_ji_ban_a_tos";
    };

    return skill_ji_ban_a_tos;
})();

$root.skill_ji_ban_a_toc = (function() {

    /**
     * Properties of a skill_ji_ban_a_toc.
     * @exports Iskill_ji_ban_a_toc
     * @interface Iskill_ji_ban_a_toc
     * @property {number|null} [playerId] skill_ji_ban_a_toc playerId
     * @property {number|null} [waitingSecond] skill_ji_ban_a_toc waitingSecond
     * @property {number|null} [seq] skill_ji_ban_a_toc seq
     */

    /**
     * Constructs a new skill_ji_ban_a_toc.
     * @exports skill_ji_ban_a_toc
     * @classdesc Represents a skill_ji_ban_a_toc.
     * @implements Iskill_ji_ban_a_toc
     * @constructor
     * @param {Iskill_ji_ban_a_toc=} [properties] Properties to set
     */
    function skill_ji_ban_a_toc(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * skill_ji_ban_a_toc playerId.
     * @member {number} playerId
     * @memberof skill_ji_ban_a_toc
     * @instance
     */
    skill_ji_ban_a_toc.prototype.playerId = 0;

    /**
     * skill_ji_ban_a_toc waitingSecond.
     * @member {number} waitingSecond
     * @memberof skill_ji_ban_a_toc
     * @instance
     */
    skill_ji_ban_a_toc.prototype.waitingSecond = 0;

    /**
     * skill_ji_ban_a_toc seq.
     * @member {number} seq
     * @memberof skill_ji_ban_a_toc
     * @instance
     */
    skill_ji_ban_a_toc.prototype.seq = 0;

    /**
     * Creates a new skill_ji_ban_a_toc instance using the specified properties.
     * @function create
     * @memberof skill_ji_ban_a_toc
     * @static
     * @param {Iskill_ji_ban_a_toc=} [properties] Properties to set
     * @returns {skill_ji_ban_a_toc} skill_ji_ban_a_toc instance
     */
    skill_ji_ban_a_toc.create = function create(properties) {
        return new skill_ji_ban_a_toc(properties);
    };

    /**
     * Encodes the specified skill_ji_ban_a_toc message. Does not implicitly {@link skill_ji_ban_a_toc.verify|verify} messages.
     * @function encode
     * @memberof skill_ji_ban_a_toc
     * @static
     * @param {Iskill_ji_ban_a_toc} message skill_ji_ban_a_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_ji_ban_a_toc.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.playerId != null && Object.hasOwnProperty.call(message, "playerId"))
            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.playerId);
        if (message.waitingSecond != null && Object.hasOwnProperty.call(message, "waitingSecond"))
            writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.waitingSecond);
        if (message.seq != null && Object.hasOwnProperty.call(message, "seq"))
            writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.seq);
        return writer;
    };

    /**
     * Encodes the specified skill_ji_ban_a_toc message, length delimited. Does not implicitly {@link skill_ji_ban_a_toc.verify|verify} messages.
     * @function encodeDelimited
     * @memberof skill_ji_ban_a_toc
     * @static
     * @param {Iskill_ji_ban_a_toc} message skill_ji_ban_a_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_ji_ban_a_toc.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a skill_ji_ban_a_toc message from the specified reader or buffer.
     * @function decode
     * @memberof skill_ji_ban_a_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {skill_ji_ban_a_toc} skill_ji_ban_a_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_ji_ban_a_toc.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.skill_ji_ban_a_toc();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.playerId = reader.uint32();
                    break;
                }
            case 2: {
                    message.waitingSecond = reader.uint32();
                    break;
                }
            case 3: {
                    message.seq = reader.uint32();
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a skill_ji_ban_a_toc message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof skill_ji_ban_a_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {skill_ji_ban_a_toc} skill_ji_ban_a_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_ji_ban_a_toc.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a skill_ji_ban_a_toc message.
     * @function verify
     * @memberof skill_ji_ban_a_toc
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    skill_ji_ban_a_toc.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            if (!$util.isInteger(message.playerId))
                return "playerId: integer expected";
        if (message.waitingSecond != null && message.hasOwnProperty("waitingSecond"))
            if (!$util.isInteger(message.waitingSecond))
                return "waitingSecond: integer expected";
        if (message.seq != null && message.hasOwnProperty("seq"))
            if (!$util.isInteger(message.seq))
                return "seq: integer expected";
        return null;
    };

    /**
     * Creates a skill_ji_ban_a_toc message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof skill_ji_ban_a_toc
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {skill_ji_ban_a_toc} skill_ji_ban_a_toc
     */
    skill_ji_ban_a_toc.fromObject = function fromObject(object) {
        if (object instanceof $root.skill_ji_ban_a_toc)
            return object;
        var message = new $root.skill_ji_ban_a_toc();
        if (object.playerId != null)
            message.playerId = object.playerId >>> 0;
        if (object.waitingSecond != null)
            message.waitingSecond = object.waitingSecond >>> 0;
        if (object.seq != null)
            message.seq = object.seq >>> 0;
        return message;
    };

    /**
     * Creates a plain object from a skill_ji_ban_a_toc message. Also converts values to other types if specified.
     * @function toObject
     * @memberof skill_ji_ban_a_toc
     * @static
     * @param {skill_ji_ban_a_toc} message skill_ji_ban_a_toc
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    skill_ji_ban_a_toc.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults) {
            object.playerId = 0;
            object.waitingSecond = 0;
            object.seq = 0;
        }
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            object.playerId = message.playerId;
        if (message.waitingSecond != null && message.hasOwnProperty("waitingSecond"))
            object.waitingSecond = message.waitingSecond;
        if (message.seq != null && message.hasOwnProperty("seq"))
            object.seq = message.seq;
        return object;
    };

    /**
     * Converts this skill_ji_ban_a_toc to JSON.
     * @function toJSON
     * @memberof skill_ji_ban_a_toc
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    skill_ji_ban_a_toc.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for skill_ji_ban_a_toc
     * @function getTypeUrl
     * @memberof skill_ji_ban_a_toc
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    skill_ji_ban_a_toc.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/skill_ji_ban_a_toc";
    };

    return skill_ji_ban_a_toc;
})();

$root.skill_ji_ban_b_tos = (function() {

    /**
     * Properties of a skill_ji_ban_b_tos.
     * @exports Iskill_ji_ban_b_tos
     * @interface Iskill_ji_ban_b_tos
     * @property {number|null} [targetPlayerId] skill_ji_ban_b_tos targetPlayerId
     * @property {Array.<number>|null} [cardIds] skill_ji_ban_b_tos cardIds
     * @property {number|null} [seq] skill_ji_ban_b_tos seq
     */

    /**
     * Constructs a new skill_ji_ban_b_tos.
     * @exports skill_ji_ban_b_tos
     * @classdesc Represents a skill_ji_ban_b_tos.
     * @implements Iskill_ji_ban_b_tos
     * @constructor
     * @param {Iskill_ji_ban_b_tos=} [properties] Properties to set
     */
    function skill_ji_ban_b_tos(properties) {
        this.cardIds = [];
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * skill_ji_ban_b_tos targetPlayerId.
     * @member {number} targetPlayerId
     * @memberof skill_ji_ban_b_tos
     * @instance
     */
    skill_ji_ban_b_tos.prototype.targetPlayerId = 0;

    /**
     * skill_ji_ban_b_tos cardIds.
     * @member {Array.<number>} cardIds
     * @memberof skill_ji_ban_b_tos
     * @instance
     */
    skill_ji_ban_b_tos.prototype.cardIds = $util.emptyArray;

    /**
     * skill_ji_ban_b_tos seq.
     * @member {number} seq
     * @memberof skill_ji_ban_b_tos
     * @instance
     */
    skill_ji_ban_b_tos.prototype.seq = 0;

    /**
     * Creates a new skill_ji_ban_b_tos instance using the specified properties.
     * @function create
     * @memberof skill_ji_ban_b_tos
     * @static
     * @param {Iskill_ji_ban_b_tos=} [properties] Properties to set
     * @returns {skill_ji_ban_b_tos} skill_ji_ban_b_tos instance
     */
    skill_ji_ban_b_tos.create = function create(properties) {
        return new skill_ji_ban_b_tos(properties);
    };

    /**
     * Encodes the specified skill_ji_ban_b_tos message. Does not implicitly {@link skill_ji_ban_b_tos.verify|verify} messages.
     * @function encode
     * @memberof skill_ji_ban_b_tos
     * @static
     * @param {Iskill_ji_ban_b_tos} message skill_ji_ban_b_tos message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_ji_ban_b_tos.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.targetPlayerId != null && Object.hasOwnProperty.call(message, "targetPlayerId"))
            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.targetPlayerId);
        if (message.cardIds != null && message.cardIds.length) {
            writer.uint32(/* id 2, wireType 2 =*/18).fork();
            for (var i = 0; i < message.cardIds.length; ++i)
                writer.uint32(message.cardIds[i]);
            writer.ldelim();
        }
        if (message.seq != null && Object.hasOwnProperty.call(message, "seq"))
            writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.seq);
        return writer;
    };

    /**
     * Encodes the specified skill_ji_ban_b_tos message, length delimited. Does not implicitly {@link skill_ji_ban_b_tos.verify|verify} messages.
     * @function encodeDelimited
     * @memberof skill_ji_ban_b_tos
     * @static
     * @param {Iskill_ji_ban_b_tos} message skill_ji_ban_b_tos message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_ji_ban_b_tos.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a skill_ji_ban_b_tos message from the specified reader or buffer.
     * @function decode
     * @memberof skill_ji_ban_b_tos
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {skill_ji_ban_b_tos} skill_ji_ban_b_tos
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_ji_ban_b_tos.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.skill_ji_ban_b_tos();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.targetPlayerId = reader.uint32();
                    break;
                }
            case 2: {
                    if (!(message.cardIds && message.cardIds.length))
                        message.cardIds = [];
                    if ((tag & 7) === 2) {
                        var end2 = reader.uint32() + reader.pos;
                        while (reader.pos < end2)
                            message.cardIds.push(reader.uint32());
                    } else
                        message.cardIds.push(reader.uint32());
                    break;
                }
            case 3: {
                    message.seq = reader.uint32();
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a skill_ji_ban_b_tos message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof skill_ji_ban_b_tos
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {skill_ji_ban_b_tos} skill_ji_ban_b_tos
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_ji_ban_b_tos.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a skill_ji_ban_b_tos message.
     * @function verify
     * @memberof skill_ji_ban_b_tos
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    skill_ji_ban_b_tos.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.targetPlayerId != null && message.hasOwnProperty("targetPlayerId"))
            if (!$util.isInteger(message.targetPlayerId))
                return "targetPlayerId: integer expected";
        if (message.cardIds != null && message.hasOwnProperty("cardIds")) {
            if (!Array.isArray(message.cardIds))
                return "cardIds: array expected";
            for (var i = 0; i < message.cardIds.length; ++i)
                if (!$util.isInteger(message.cardIds[i]))
                    return "cardIds: integer[] expected";
        }
        if (message.seq != null && message.hasOwnProperty("seq"))
            if (!$util.isInteger(message.seq))
                return "seq: integer expected";
        return null;
    };

    /**
     * Creates a skill_ji_ban_b_tos message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof skill_ji_ban_b_tos
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {skill_ji_ban_b_tos} skill_ji_ban_b_tos
     */
    skill_ji_ban_b_tos.fromObject = function fromObject(object) {
        if (object instanceof $root.skill_ji_ban_b_tos)
            return object;
        var message = new $root.skill_ji_ban_b_tos();
        if (object.targetPlayerId != null)
            message.targetPlayerId = object.targetPlayerId >>> 0;
        if (object.cardIds) {
            if (!Array.isArray(object.cardIds))
                throw TypeError(".skill_ji_ban_b_tos.cardIds: array expected");
            message.cardIds = [];
            for (var i = 0; i < object.cardIds.length; ++i)
                message.cardIds[i] = object.cardIds[i] >>> 0;
        }
        if (object.seq != null)
            message.seq = object.seq >>> 0;
        return message;
    };

    /**
     * Creates a plain object from a skill_ji_ban_b_tos message. Also converts values to other types if specified.
     * @function toObject
     * @memberof skill_ji_ban_b_tos
     * @static
     * @param {skill_ji_ban_b_tos} message skill_ji_ban_b_tos
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    skill_ji_ban_b_tos.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.arrays || options.defaults)
            object.cardIds = [];
        if (options.defaults) {
            object.targetPlayerId = 0;
            object.seq = 0;
        }
        if (message.targetPlayerId != null && message.hasOwnProperty("targetPlayerId"))
            object.targetPlayerId = message.targetPlayerId;
        if (message.cardIds && message.cardIds.length) {
            object.cardIds = [];
            for (var j = 0; j < message.cardIds.length; ++j)
                object.cardIds[j] = message.cardIds[j];
        }
        if (message.seq != null && message.hasOwnProperty("seq"))
            object.seq = message.seq;
        return object;
    };

    /**
     * Converts this skill_ji_ban_b_tos to JSON.
     * @function toJSON
     * @memberof skill_ji_ban_b_tos
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    skill_ji_ban_b_tos.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for skill_ji_ban_b_tos
     * @function getTypeUrl
     * @memberof skill_ji_ban_b_tos
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    skill_ji_ban_b_tos.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/skill_ji_ban_b_tos";
    };

    return skill_ji_ban_b_tos;
})();

$root.skill_ji_ban_b_toc = (function() {

    /**
     * Properties of a skill_ji_ban_b_toc.
     * @exports Iskill_ji_ban_b_toc
     * @interface Iskill_ji_ban_b_toc
     * @property {number|null} [playerId] skill_ji_ban_b_toc playerId
     * @property {number|null} [targetPlayerId] skill_ji_ban_b_toc targetPlayerId
     * @property {Array.<Icard>|null} [cards] skill_ji_ban_b_toc cards
     * @property {number|null} [unknownCardCount] skill_ji_ban_b_toc unknownCardCount
     */

    /**
     * Constructs a new skill_ji_ban_b_toc.
     * @exports skill_ji_ban_b_toc
     * @classdesc Represents a skill_ji_ban_b_toc.
     * @implements Iskill_ji_ban_b_toc
     * @constructor
     * @param {Iskill_ji_ban_b_toc=} [properties] Properties to set
     */
    function skill_ji_ban_b_toc(properties) {
        this.cards = [];
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * skill_ji_ban_b_toc playerId.
     * @member {number} playerId
     * @memberof skill_ji_ban_b_toc
     * @instance
     */
    skill_ji_ban_b_toc.prototype.playerId = 0;

    /**
     * skill_ji_ban_b_toc targetPlayerId.
     * @member {number} targetPlayerId
     * @memberof skill_ji_ban_b_toc
     * @instance
     */
    skill_ji_ban_b_toc.prototype.targetPlayerId = 0;

    /**
     * skill_ji_ban_b_toc cards.
     * @member {Array.<Icard>} cards
     * @memberof skill_ji_ban_b_toc
     * @instance
     */
    skill_ji_ban_b_toc.prototype.cards = $util.emptyArray;

    /**
     * skill_ji_ban_b_toc unknownCardCount.
     * @member {number} unknownCardCount
     * @memberof skill_ji_ban_b_toc
     * @instance
     */
    skill_ji_ban_b_toc.prototype.unknownCardCount = 0;

    /**
     * Creates a new skill_ji_ban_b_toc instance using the specified properties.
     * @function create
     * @memberof skill_ji_ban_b_toc
     * @static
     * @param {Iskill_ji_ban_b_toc=} [properties] Properties to set
     * @returns {skill_ji_ban_b_toc} skill_ji_ban_b_toc instance
     */
    skill_ji_ban_b_toc.create = function create(properties) {
        return new skill_ji_ban_b_toc(properties);
    };

    /**
     * Encodes the specified skill_ji_ban_b_toc message. Does not implicitly {@link skill_ji_ban_b_toc.verify|verify} messages.
     * @function encode
     * @memberof skill_ji_ban_b_toc
     * @static
     * @param {Iskill_ji_ban_b_toc} message skill_ji_ban_b_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_ji_ban_b_toc.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.playerId != null && Object.hasOwnProperty.call(message, "playerId"))
            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.playerId);
        if (message.targetPlayerId != null && Object.hasOwnProperty.call(message, "targetPlayerId"))
            writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.targetPlayerId);
        if (message.cards != null && message.cards.length)
            for (var i = 0; i < message.cards.length; ++i)
                $root.card.encode(message.cards[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
        if (message.unknownCardCount != null && Object.hasOwnProperty.call(message, "unknownCardCount"))
            writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.unknownCardCount);
        return writer;
    };

    /**
     * Encodes the specified skill_ji_ban_b_toc message, length delimited. Does not implicitly {@link skill_ji_ban_b_toc.verify|verify} messages.
     * @function encodeDelimited
     * @memberof skill_ji_ban_b_toc
     * @static
     * @param {Iskill_ji_ban_b_toc} message skill_ji_ban_b_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_ji_ban_b_toc.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a skill_ji_ban_b_toc message from the specified reader or buffer.
     * @function decode
     * @memberof skill_ji_ban_b_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {skill_ji_ban_b_toc} skill_ji_ban_b_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_ji_ban_b_toc.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.skill_ji_ban_b_toc();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.playerId = reader.uint32();
                    break;
                }
            case 2: {
                    message.targetPlayerId = reader.uint32();
                    break;
                }
            case 3: {
                    if (!(message.cards && message.cards.length))
                        message.cards = [];
                    message.cards.push($root.card.decode(reader, reader.uint32()));
                    break;
                }
            case 4: {
                    message.unknownCardCount = reader.uint32();
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a skill_ji_ban_b_toc message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof skill_ji_ban_b_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {skill_ji_ban_b_toc} skill_ji_ban_b_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_ji_ban_b_toc.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a skill_ji_ban_b_toc message.
     * @function verify
     * @memberof skill_ji_ban_b_toc
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    skill_ji_ban_b_toc.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            if (!$util.isInteger(message.playerId))
                return "playerId: integer expected";
        if (message.targetPlayerId != null && message.hasOwnProperty("targetPlayerId"))
            if (!$util.isInteger(message.targetPlayerId))
                return "targetPlayerId: integer expected";
        if (message.cards != null && message.hasOwnProperty("cards")) {
            if (!Array.isArray(message.cards))
                return "cards: array expected";
            for (var i = 0; i < message.cards.length; ++i) {
                var error = $root.card.verify(message.cards[i]);
                if (error)
                    return "cards." + error;
            }
        }
        if (message.unknownCardCount != null && message.hasOwnProperty("unknownCardCount"))
            if (!$util.isInteger(message.unknownCardCount))
                return "unknownCardCount: integer expected";
        return null;
    };

    /**
     * Creates a skill_ji_ban_b_toc message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof skill_ji_ban_b_toc
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {skill_ji_ban_b_toc} skill_ji_ban_b_toc
     */
    skill_ji_ban_b_toc.fromObject = function fromObject(object) {
        if (object instanceof $root.skill_ji_ban_b_toc)
            return object;
        var message = new $root.skill_ji_ban_b_toc();
        if (object.playerId != null)
            message.playerId = object.playerId >>> 0;
        if (object.targetPlayerId != null)
            message.targetPlayerId = object.targetPlayerId >>> 0;
        if (object.cards) {
            if (!Array.isArray(object.cards))
                throw TypeError(".skill_ji_ban_b_toc.cards: array expected");
            message.cards = [];
            for (var i = 0; i < object.cards.length; ++i) {
                if (typeof object.cards[i] !== "object")
                    throw TypeError(".skill_ji_ban_b_toc.cards: object expected");
                message.cards[i] = $root.card.fromObject(object.cards[i]);
            }
        }
        if (object.unknownCardCount != null)
            message.unknownCardCount = object.unknownCardCount >>> 0;
        return message;
    };

    /**
     * Creates a plain object from a skill_ji_ban_b_toc message. Also converts values to other types if specified.
     * @function toObject
     * @memberof skill_ji_ban_b_toc
     * @static
     * @param {skill_ji_ban_b_toc} message skill_ji_ban_b_toc
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    skill_ji_ban_b_toc.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.arrays || options.defaults)
            object.cards = [];
        if (options.defaults) {
            object.playerId = 0;
            object.targetPlayerId = 0;
            object.unknownCardCount = 0;
        }
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            object.playerId = message.playerId;
        if (message.targetPlayerId != null && message.hasOwnProperty("targetPlayerId"))
            object.targetPlayerId = message.targetPlayerId;
        if (message.cards && message.cards.length) {
            object.cards = [];
            for (var j = 0; j < message.cards.length; ++j)
                object.cards[j] = $root.card.toObject(message.cards[j], options);
        }
        if (message.unknownCardCount != null && message.hasOwnProperty("unknownCardCount"))
            object.unknownCardCount = message.unknownCardCount;
        return object;
    };

    /**
     * Converts this skill_ji_ban_b_toc to JSON.
     * @function toJSON
     * @memberof skill_ji_ban_b_toc
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    skill_ji_ban_b_toc.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for skill_ji_ban_b_toc
     * @function getTypeUrl
     * @memberof skill_ji_ban_b_toc
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    skill_ji_ban_b_toc.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/skill_ji_ban_b_toc";
    };

    return skill_ji_ban_b_toc;
})();

$root.skill_you_dao_toc = (function() {

    /**
     * Properties of a skill_you_dao_toc.
     * @exports Iskill_you_dao_toc
     * @interface Iskill_you_dao_toc
     * @property {number|null} [playerId] skill_you_dao_toc playerId
     */

    /**
     * Constructs a new skill_you_dao_toc.
     * @exports skill_you_dao_toc
     * @classdesc Represents a skill_you_dao_toc.
     * @implements Iskill_you_dao_toc
     * @constructor
     * @param {Iskill_you_dao_toc=} [properties] Properties to set
     */
    function skill_you_dao_toc(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * skill_you_dao_toc playerId.
     * @member {number} playerId
     * @memberof skill_you_dao_toc
     * @instance
     */
    skill_you_dao_toc.prototype.playerId = 0;

    /**
     * Creates a new skill_you_dao_toc instance using the specified properties.
     * @function create
     * @memberof skill_you_dao_toc
     * @static
     * @param {Iskill_you_dao_toc=} [properties] Properties to set
     * @returns {skill_you_dao_toc} skill_you_dao_toc instance
     */
    skill_you_dao_toc.create = function create(properties) {
        return new skill_you_dao_toc(properties);
    };

    /**
     * Encodes the specified skill_you_dao_toc message. Does not implicitly {@link skill_you_dao_toc.verify|verify} messages.
     * @function encode
     * @memberof skill_you_dao_toc
     * @static
     * @param {Iskill_you_dao_toc} message skill_you_dao_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_you_dao_toc.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.playerId != null && Object.hasOwnProperty.call(message, "playerId"))
            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.playerId);
        return writer;
    };

    /**
     * Encodes the specified skill_you_dao_toc message, length delimited. Does not implicitly {@link skill_you_dao_toc.verify|verify} messages.
     * @function encodeDelimited
     * @memberof skill_you_dao_toc
     * @static
     * @param {Iskill_you_dao_toc} message skill_you_dao_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_you_dao_toc.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a skill_you_dao_toc message from the specified reader or buffer.
     * @function decode
     * @memberof skill_you_dao_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {skill_you_dao_toc} skill_you_dao_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_you_dao_toc.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.skill_you_dao_toc();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.playerId = reader.uint32();
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a skill_you_dao_toc message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof skill_you_dao_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {skill_you_dao_toc} skill_you_dao_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_you_dao_toc.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a skill_you_dao_toc message.
     * @function verify
     * @memberof skill_you_dao_toc
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    skill_you_dao_toc.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            if (!$util.isInteger(message.playerId))
                return "playerId: integer expected";
        return null;
    };

    /**
     * Creates a skill_you_dao_toc message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof skill_you_dao_toc
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {skill_you_dao_toc} skill_you_dao_toc
     */
    skill_you_dao_toc.fromObject = function fromObject(object) {
        if (object instanceof $root.skill_you_dao_toc)
            return object;
        var message = new $root.skill_you_dao_toc();
        if (object.playerId != null)
            message.playerId = object.playerId >>> 0;
        return message;
    };

    /**
     * Creates a plain object from a skill_you_dao_toc message. Also converts values to other types if specified.
     * @function toObject
     * @memberof skill_you_dao_toc
     * @static
     * @param {skill_you_dao_toc} message skill_you_dao_toc
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    skill_you_dao_toc.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults)
            object.playerId = 0;
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            object.playerId = message.playerId;
        return object;
    };

    /**
     * Converts this skill_you_dao_toc to JSON.
     * @function toJSON
     * @memberof skill_you_dao_toc
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    skill_you_dao_toc.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for skill_you_dao_toc
     * @function getTypeUrl
     * @memberof skill_you_dao_toc
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    skill_you_dao_toc.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/skill_you_dao_toc";
    };

    return skill_you_dao_toc;
})();

$root.skill_bo_ai_a_tos = (function() {

    /**
     * Properties of a skill_bo_ai_a_tos.
     * @exports Iskill_bo_ai_a_tos
     * @interface Iskill_bo_ai_a_tos
     * @property {number|null} [seq] skill_bo_ai_a_tos seq
     */

    /**
     * Constructs a new skill_bo_ai_a_tos.
     * @exports skill_bo_ai_a_tos
     * @classdesc Represents a skill_bo_ai_a_tos.
     * @implements Iskill_bo_ai_a_tos
     * @constructor
     * @param {Iskill_bo_ai_a_tos=} [properties] Properties to set
     */
    function skill_bo_ai_a_tos(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * skill_bo_ai_a_tos seq.
     * @member {number} seq
     * @memberof skill_bo_ai_a_tos
     * @instance
     */
    skill_bo_ai_a_tos.prototype.seq = 0;

    /**
     * Creates a new skill_bo_ai_a_tos instance using the specified properties.
     * @function create
     * @memberof skill_bo_ai_a_tos
     * @static
     * @param {Iskill_bo_ai_a_tos=} [properties] Properties to set
     * @returns {skill_bo_ai_a_tos} skill_bo_ai_a_tos instance
     */
    skill_bo_ai_a_tos.create = function create(properties) {
        return new skill_bo_ai_a_tos(properties);
    };

    /**
     * Encodes the specified skill_bo_ai_a_tos message. Does not implicitly {@link skill_bo_ai_a_tos.verify|verify} messages.
     * @function encode
     * @memberof skill_bo_ai_a_tos
     * @static
     * @param {Iskill_bo_ai_a_tos} message skill_bo_ai_a_tos message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_bo_ai_a_tos.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.seq != null && Object.hasOwnProperty.call(message, "seq"))
            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.seq);
        return writer;
    };

    /**
     * Encodes the specified skill_bo_ai_a_tos message, length delimited. Does not implicitly {@link skill_bo_ai_a_tos.verify|verify} messages.
     * @function encodeDelimited
     * @memberof skill_bo_ai_a_tos
     * @static
     * @param {Iskill_bo_ai_a_tos} message skill_bo_ai_a_tos message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_bo_ai_a_tos.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a skill_bo_ai_a_tos message from the specified reader or buffer.
     * @function decode
     * @memberof skill_bo_ai_a_tos
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {skill_bo_ai_a_tos} skill_bo_ai_a_tos
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_bo_ai_a_tos.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.skill_bo_ai_a_tos();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.seq = reader.uint32();
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a skill_bo_ai_a_tos message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof skill_bo_ai_a_tos
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {skill_bo_ai_a_tos} skill_bo_ai_a_tos
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_bo_ai_a_tos.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a skill_bo_ai_a_tos message.
     * @function verify
     * @memberof skill_bo_ai_a_tos
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    skill_bo_ai_a_tos.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.seq != null && message.hasOwnProperty("seq"))
            if (!$util.isInteger(message.seq))
                return "seq: integer expected";
        return null;
    };

    /**
     * Creates a skill_bo_ai_a_tos message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof skill_bo_ai_a_tos
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {skill_bo_ai_a_tos} skill_bo_ai_a_tos
     */
    skill_bo_ai_a_tos.fromObject = function fromObject(object) {
        if (object instanceof $root.skill_bo_ai_a_tos)
            return object;
        var message = new $root.skill_bo_ai_a_tos();
        if (object.seq != null)
            message.seq = object.seq >>> 0;
        return message;
    };

    /**
     * Creates a plain object from a skill_bo_ai_a_tos message. Also converts values to other types if specified.
     * @function toObject
     * @memberof skill_bo_ai_a_tos
     * @static
     * @param {skill_bo_ai_a_tos} message skill_bo_ai_a_tos
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    skill_bo_ai_a_tos.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults)
            object.seq = 0;
        if (message.seq != null && message.hasOwnProperty("seq"))
            object.seq = message.seq;
        return object;
    };

    /**
     * Converts this skill_bo_ai_a_tos to JSON.
     * @function toJSON
     * @memberof skill_bo_ai_a_tos
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    skill_bo_ai_a_tos.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for skill_bo_ai_a_tos
     * @function getTypeUrl
     * @memberof skill_bo_ai_a_tos
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    skill_bo_ai_a_tos.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/skill_bo_ai_a_tos";
    };

    return skill_bo_ai_a_tos;
})();

$root.skill_bo_ai_a_toc = (function() {

    /**
     * Properties of a skill_bo_ai_a_toc.
     * @exports Iskill_bo_ai_a_toc
     * @interface Iskill_bo_ai_a_toc
     * @property {number|null} [playerId] skill_bo_ai_a_toc playerId
     * @property {number|null} [waitingSecond] skill_bo_ai_a_toc waitingSecond
     * @property {number|null} [seq] skill_bo_ai_a_toc seq
     */

    /**
     * Constructs a new skill_bo_ai_a_toc.
     * @exports skill_bo_ai_a_toc
     * @classdesc Represents a skill_bo_ai_a_toc.
     * @implements Iskill_bo_ai_a_toc
     * @constructor
     * @param {Iskill_bo_ai_a_toc=} [properties] Properties to set
     */
    function skill_bo_ai_a_toc(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * skill_bo_ai_a_toc playerId.
     * @member {number} playerId
     * @memberof skill_bo_ai_a_toc
     * @instance
     */
    skill_bo_ai_a_toc.prototype.playerId = 0;

    /**
     * skill_bo_ai_a_toc waitingSecond.
     * @member {number} waitingSecond
     * @memberof skill_bo_ai_a_toc
     * @instance
     */
    skill_bo_ai_a_toc.prototype.waitingSecond = 0;

    /**
     * skill_bo_ai_a_toc seq.
     * @member {number} seq
     * @memberof skill_bo_ai_a_toc
     * @instance
     */
    skill_bo_ai_a_toc.prototype.seq = 0;

    /**
     * Creates a new skill_bo_ai_a_toc instance using the specified properties.
     * @function create
     * @memberof skill_bo_ai_a_toc
     * @static
     * @param {Iskill_bo_ai_a_toc=} [properties] Properties to set
     * @returns {skill_bo_ai_a_toc} skill_bo_ai_a_toc instance
     */
    skill_bo_ai_a_toc.create = function create(properties) {
        return new skill_bo_ai_a_toc(properties);
    };

    /**
     * Encodes the specified skill_bo_ai_a_toc message. Does not implicitly {@link skill_bo_ai_a_toc.verify|verify} messages.
     * @function encode
     * @memberof skill_bo_ai_a_toc
     * @static
     * @param {Iskill_bo_ai_a_toc} message skill_bo_ai_a_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_bo_ai_a_toc.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.playerId != null && Object.hasOwnProperty.call(message, "playerId"))
            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.playerId);
        if (message.waitingSecond != null && Object.hasOwnProperty.call(message, "waitingSecond"))
            writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.waitingSecond);
        if (message.seq != null && Object.hasOwnProperty.call(message, "seq"))
            writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.seq);
        return writer;
    };

    /**
     * Encodes the specified skill_bo_ai_a_toc message, length delimited. Does not implicitly {@link skill_bo_ai_a_toc.verify|verify} messages.
     * @function encodeDelimited
     * @memberof skill_bo_ai_a_toc
     * @static
     * @param {Iskill_bo_ai_a_toc} message skill_bo_ai_a_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_bo_ai_a_toc.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a skill_bo_ai_a_toc message from the specified reader or buffer.
     * @function decode
     * @memberof skill_bo_ai_a_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {skill_bo_ai_a_toc} skill_bo_ai_a_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_bo_ai_a_toc.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.skill_bo_ai_a_toc();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.playerId = reader.uint32();
                    break;
                }
            case 2: {
                    message.waitingSecond = reader.uint32();
                    break;
                }
            case 3: {
                    message.seq = reader.uint32();
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a skill_bo_ai_a_toc message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof skill_bo_ai_a_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {skill_bo_ai_a_toc} skill_bo_ai_a_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_bo_ai_a_toc.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a skill_bo_ai_a_toc message.
     * @function verify
     * @memberof skill_bo_ai_a_toc
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    skill_bo_ai_a_toc.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            if (!$util.isInteger(message.playerId))
                return "playerId: integer expected";
        if (message.waitingSecond != null && message.hasOwnProperty("waitingSecond"))
            if (!$util.isInteger(message.waitingSecond))
                return "waitingSecond: integer expected";
        if (message.seq != null && message.hasOwnProperty("seq"))
            if (!$util.isInteger(message.seq))
                return "seq: integer expected";
        return null;
    };

    /**
     * Creates a skill_bo_ai_a_toc message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof skill_bo_ai_a_toc
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {skill_bo_ai_a_toc} skill_bo_ai_a_toc
     */
    skill_bo_ai_a_toc.fromObject = function fromObject(object) {
        if (object instanceof $root.skill_bo_ai_a_toc)
            return object;
        var message = new $root.skill_bo_ai_a_toc();
        if (object.playerId != null)
            message.playerId = object.playerId >>> 0;
        if (object.waitingSecond != null)
            message.waitingSecond = object.waitingSecond >>> 0;
        if (object.seq != null)
            message.seq = object.seq >>> 0;
        return message;
    };

    /**
     * Creates a plain object from a skill_bo_ai_a_toc message. Also converts values to other types if specified.
     * @function toObject
     * @memberof skill_bo_ai_a_toc
     * @static
     * @param {skill_bo_ai_a_toc} message skill_bo_ai_a_toc
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    skill_bo_ai_a_toc.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults) {
            object.playerId = 0;
            object.waitingSecond = 0;
            object.seq = 0;
        }
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            object.playerId = message.playerId;
        if (message.waitingSecond != null && message.hasOwnProperty("waitingSecond"))
            object.waitingSecond = message.waitingSecond;
        if (message.seq != null && message.hasOwnProperty("seq"))
            object.seq = message.seq;
        return object;
    };

    /**
     * Converts this skill_bo_ai_a_toc to JSON.
     * @function toJSON
     * @memberof skill_bo_ai_a_toc
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    skill_bo_ai_a_toc.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for skill_bo_ai_a_toc
     * @function getTypeUrl
     * @memberof skill_bo_ai_a_toc
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    skill_bo_ai_a_toc.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/skill_bo_ai_a_toc";
    };

    return skill_bo_ai_a_toc;
})();

$root.skill_bo_ai_b_tos = (function() {

    /**
     * Properties of a skill_bo_ai_b_tos.
     * @exports Iskill_bo_ai_b_tos
     * @interface Iskill_bo_ai_b_tos
     * @property {number|null} [targetPlayerId] skill_bo_ai_b_tos targetPlayerId
     * @property {number|null} [cardId] skill_bo_ai_b_tos cardId
     * @property {number|null} [seq] skill_bo_ai_b_tos seq
     */

    /**
     * Constructs a new skill_bo_ai_b_tos.
     * @exports skill_bo_ai_b_tos
     * @classdesc Represents a skill_bo_ai_b_tos.
     * @implements Iskill_bo_ai_b_tos
     * @constructor
     * @param {Iskill_bo_ai_b_tos=} [properties] Properties to set
     */
    function skill_bo_ai_b_tos(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * skill_bo_ai_b_tos targetPlayerId.
     * @member {number} targetPlayerId
     * @memberof skill_bo_ai_b_tos
     * @instance
     */
    skill_bo_ai_b_tos.prototype.targetPlayerId = 0;

    /**
     * skill_bo_ai_b_tos cardId.
     * @member {number} cardId
     * @memberof skill_bo_ai_b_tos
     * @instance
     */
    skill_bo_ai_b_tos.prototype.cardId = 0;

    /**
     * skill_bo_ai_b_tos seq.
     * @member {number} seq
     * @memberof skill_bo_ai_b_tos
     * @instance
     */
    skill_bo_ai_b_tos.prototype.seq = 0;

    /**
     * Creates a new skill_bo_ai_b_tos instance using the specified properties.
     * @function create
     * @memberof skill_bo_ai_b_tos
     * @static
     * @param {Iskill_bo_ai_b_tos=} [properties] Properties to set
     * @returns {skill_bo_ai_b_tos} skill_bo_ai_b_tos instance
     */
    skill_bo_ai_b_tos.create = function create(properties) {
        return new skill_bo_ai_b_tos(properties);
    };

    /**
     * Encodes the specified skill_bo_ai_b_tos message. Does not implicitly {@link skill_bo_ai_b_tos.verify|verify} messages.
     * @function encode
     * @memberof skill_bo_ai_b_tos
     * @static
     * @param {Iskill_bo_ai_b_tos} message skill_bo_ai_b_tos message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_bo_ai_b_tos.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.targetPlayerId != null && Object.hasOwnProperty.call(message, "targetPlayerId"))
            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.targetPlayerId);
        if (message.cardId != null && Object.hasOwnProperty.call(message, "cardId"))
            writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.cardId);
        if (message.seq != null && Object.hasOwnProperty.call(message, "seq"))
            writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.seq);
        return writer;
    };

    /**
     * Encodes the specified skill_bo_ai_b_tos message, length delimited. Does not implicitly {@link skill_bo_ai_b_tos.verify|verify} messages.
     * @function encodeDelimited
     * @memberof skill_bo_ai_b_tos
     * @static
     * @param {Iskill_bo_ai_b_tos} message skill_bo_ai_b_tos message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_bo_ai_b_tos.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a skill_bo_ai_b_tos message from the specified reader or buffer.
     * @function decode
     * @memberof skill_bo_ai_b_tos
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {skill_bo_ai_b_tos} skill_bo_ai_b_tos
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_bo_ai_b_tos.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.skill_bo_ai_b_tos();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.targetPlayerId = reader.uint32();
                    break;
                }
            case 2: {
                    message.cardId = reader.uint32();
                    break;
                }
            case 3: {
                    message.seq = reader.uint32();
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a skill_bo_ai_b_tos message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof skill_bo_ai_b_tos
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {skill_bo_ai_b_tos} skill_bo_ai_b_tos
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_bo_ai_b_tos.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a skill_bo_ai_b_tos message.
     * @function verify
     * @memberof skill_bo_ai_b_tos
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    skill_bo_ai_b_tos.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.targetPlayerId != null && message.hasOwnProperty("targetPlayerId"))
            if (!$util.isInteger(message.targetPlayerId))
                return "targetPlayerId: integer expected";
        if (message.cardId != null && message.hasOwnProperty("cardId"))
            if (!$util.isInteger(message.cardId))
                return "cardId: integer expected";
        if (message.seq != null && message.hasOwnProperty("seq"))
            if (!$util.isInteger(message.seq))
                return "seq: integer expected";
        return null;
    };

    /**
     * Creates a skill_bo_ai_b_tos message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof skill_bo_ai_b_tos
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {skill_bo_ai_b_tos} skill_bo_ai_b_tos
     */
    skill_bo_ai_b_tos.fromObject = function fromObject(object) {
        if (object instanceof $root.skill_bo_ai_b_tos)
            return object;
        var message = new $root.skill_bo_ai_b_tos();
        if (object.targetPlayerId != null)
            message.targetPlayerId = object.targetPlayerId >>> 0;
        if (object.cardId != null)
            message.cardId = object.cardId >>> 0;
        if (object.seq != null)
            message.seq = object.seq >>> 0;
        return message;
    };

    /**
     * Creates a plain object from a skill_bo_ai_b_tos message. Also converts values to other types if specified.
     * @function toObject
     * @memberof skill_bo_ai_b_tos
     * @static
     * @param {skill_bo_ai_b_tos} message skill_bo_ai_b_tos
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    skill_bo_ai_b_tos.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults) {
            object.targetPlayerId = 0;
            object.cardId = 0;
            object.seq = 0;
        }
        if (message.targetPlayerId != null && message.hasOwnProperty("targetPlayerId"))
            object.targetPlayerId = message.targetPlayerId;
        if (message.cardId != null && message.hasOwnProperty("cardId"))
            object.cardId = message.cardId;
        if (message.seq != null && message.hasOwnProperty("seq"))
            object.seq = message.seq;
        return object;
    };

    /**
     * Converts this skill_bo_ai_b_tos to JSON.
     * @function toJSON
     * @memberof skill_bo_ai_b_tos
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    skill_bo_ai_b_tos.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for skill_bo_ai_b_tos
     * @function getTypeUrl
     * @memberof skill_bo_ai_b_tos
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    skill_bo_ai_b_tos.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/skill_bo_ai_b_tos";
    };

    return skill_bo_ai_b_tos;
})();

$root.skill_bo_ai_b_toc = (function() {

    /**
     * Properties of a skill_bo_ai_b_toc.
     * @exports Iskill_bo_ai_b_toc
     * @interface Iskill_bo_ai_b_toc
     * @property {number|null} [playerId] skill_bo_ai_b_toc playerId
     * @property {number|null} [targetPlayerId] skill_bo_ai_b_toc targetPlayerId
     * @property {Icard|null} [card] skill_bo_ai_b_toc card
     */

    /**
     * Constructs a new skill_bo_ai_b_toc.
     * @exports skill_bo_ai_b_toc
     * @classdesc Represents a skill_bo_ai_b_toc.
     * @implements Iskill_bo_ai_b_toc
     * @constructor
     * @param {Iskill_bo_ai_b_toc=} [properties] Properties to set
     */
    function skill_bo_ai_b_toc(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * skill_bo_ai_b_toc playerId.
     * @member {number} playerId
     * @memberof skill_bo_ai_b_toc
     * @instance
     */
    skill_bo_ai_b_toc.prototype.playerId = 0;

    /**
     * skill_bo_ai_b_toc targetPlayerId.
     * @member {number} targetPlayerId
     * @memberof skill_bo_ai_b_toc
     * @instance
     */
    skill_bo_ai_b_toc.prototype.targetPlayerId = 0;

    /**
     * skill_bo_ai_b_toc card.
     * @member {Icard|null|undefined} card
     * @memberof skill_bo_ai_b_toc
     * @instance
     */
    skill_bo_ai_b_toc.prototype.card = null;

    /**
     * Creates a new skill_bo_ai_b_toc instance using the specified properties.
     * @function create
     * @memberof skill_bo_ai_b_toc
     * @static
     * @param {Iskill_bo_ai_b_toc=} [properties] Properties to set
     * @returns {skill_bo_ai_b_toc} skill_bo_ai_b_toc instance
     */
    skill_bo_ai_b_toc.create = function create(properties) {
        return new skill_bo_ai_b_toc(properties);
    };

    /**
     * Encodes the specified skill_bo_ai_b_toc message. Does not implicitly {@link skill_bo_ai_b_toc.verify|verify} messages.
     * @function encode
     * @memberof skill_bo_ai_b_toc
     * @static
     * @param {Iskill_bo_ai_b_toc} message skill_bo_ai_b_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_bo_ai_b_toc.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.playerId != null && Object.hasOwnProperty.call(message, "playerId"))
            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.playerId);
        if (message.targetPlayerId != null && Object.hasOwnProperty.call(message, "targetPlayerId"))
            writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.targetPlayerId);
        if (message.card != null && Object.hasOwnProperty.call(message, "card"))
            $root.card.encode(message.card, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
        return writer;
    };

    /**
     * Encodes the specified skill_bo_ai_b_toc message, length delimited. Does not implicitly {@link skill_bo_ai_b_toc.verify|verify} messages.
     * @function encodeDelimited
     * @memberof skill_bo_ai_b_toc
     * @static
     * @param {Iskill_bo_ai_b_toc} message skill_bo_ai_b_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_bo_ai_b_toc.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a skill_bo_ai_b_toc message from the specified reader or buffer.
     * @function decode
     * @memberof skill_bo_ai_b_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {skill_bo_ai_b_toc} skill_bo_ai_b_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_bo_ai_b_toc.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.skill_bo_ai_b_toc();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.playerId = reader.uint32();
                    break;
                }
            case 2: {
                    message.targetPlayerId = reader.uint32();
                    break;
                }
            case 3: {
                    message.card = $root.card.decode(reader, reader.uint32());
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a skill_bo_ai_b_toc message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof skill_bo_ai_b_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {skill_bo_ai_b_toc} skill_bo_ai_b_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_bo_ai_b_toc.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a skill_bo_ai_b_toc message.
     * @function verify
     * @memberof skill_bo_ai_b_toc
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    skill_bo_ai_b_toc.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            if (!$util.isInteger(message.playerId))
                return "playerId: integer expected";
        if (message.targetPlayerId != null && message.hasOwnProperty("targetPlayerId"))
            if (!$util.isInteger(message.targetPlayerId))
                return "targetPlayerId: integer expected";
        if (message.card != null && message.hasOwnProperty("card")) {
            var error = $root.card.verify(message.card);
            if (error)
                return "card." + error;
        }
        return null;
    };

    /**
     * Creates a skill_bo_ai_b_toc message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof skill_bo_ai_b_toc
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {skill_bo_ai_b_toc} skill_bo_ai_b_toc
     */
    skill_bo_ai_b_toc.fromObject = function fromObject(object) {
        if (object instanceof $root.skill_bo_ai_b_toc)
            return object;
        var message = new $root.skill_bo_ai_b_toc();
        if (object.playerId != null)
            message.playerId = object.playerId >>> 0;
        if (object.targetPlayerId != null)
            message.targetPlayerId = object.targetPlayerId >>> 0;
        if (object.card != null) {
            if (typeof object.card !== "object")
                throw TypeError(".skill_bo_ai_b_toc.card: object expected");
            message.card = $root.card.fromObject(object.card);
        }
        return message;
    };

    /**
     * Creates a plain object from a skill_bo_ai_b_toc message. Also converts values to other types if specified.
     * @function toObject
     * @memberof skill_bo_ai_b_toc
     * @static
     * @param {skill_bo_ai_b_toc} message skill_bo_ai_b_toc
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    skill_bo_ai_b_toc.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults) {
            object.playerId = 0;
            object.targetPlayerId = 0;
            object.card = null;
        }
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            object.playerId = message.playerId;
        if (message.targetPlayerId != null && message.hasOwnProperty("targetPlayerId"))
            object.targetPlayerId = message.targetPlayerId;
        if (message.card != null && message.hasOwnProperty("card"))
            object.card = $root.card.toObject(message.card, options);
        return object;
    };

    /**
     * Converts this skill_bo_ai_b_toc to JSON.
     * @function toJSON
     * @memberof skill_bo_ai_b_toc
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    skill_bo_ai_b_toc.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for skill_bo_ai_b_toc
     * @function getTypeUrl
     * @memberof skill_bo_ai_b_toc
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    skill_bo_ai_b_toc.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/skill_bo_ai_b_toc";
    };

    return skill_bo_ai_b_toc;
})();

$root.skill_guang_fa_bao_a_tos = (function() {

    /**
     * Properties of a skill_guang_fa_bao_a_tos.
     * @exports Iskill_guang_fa_bao_a_tos
     * @interface Iskill_guang_fa_bao_a_tos
     * @property {number|null} [seq] skill_guang_fa_bao_a_tos seq
     */

    /**
     * Constructs a new skill_guang_fa_bao_a_tos.
     * @exports skill_guang_fa_bao_a_tos
     * @classdesc Represents a skill_guang_fa_bao_a_tos.
     * @implements Iskill_guang_fa_bao_a_tos
     * @constructor
     * @param {Iskill_guang_fa_bao_a_tos=} [properties] Properties to set
     */
    function skill_guang_fa_bao_a_tos(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * skill_guang_fa_bao_a_tos seq.
     * @member {number} seq
     * @memberof skill_guang_fa_bao_a_tos
     * @instance
     */
    skill_guang_fa_bao_a_tos.prototype.seq = 0;

    /**
     * Creates a new skill_guang_fa_bao_a_tos instance using the specified properties.
     * @function create
     * @memberof skill_guang_fa_bao_a_tos
     * @static
     * @param {Iskill_guang_fa_bao_a_tos=} [properties] Properties to set
     * @returns {skill_guang_fa_bao_a_tos} skill_guang_fa_bao_a_tos instance
     */
    skill_guang_fa_bao_a_tos.create = function create(properties) {
        return new skill_guang_fa_bao_a_tos(properties);
    };

    /**
     * Encodes the specified skill_guang_fa_bao_a_tos message. Does not implicitly {@link skill_guang_fa_bao_a_tos.verify|verify} messages.
     * @function encode
     * @memberof skill_guang_fa_bao_a_tos
     * @static
     * @param {Iskill_guang_fa_bao_a_tos} message skill_guang_fa_bao_a_tos message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_guang_fa_bao_a_tos.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.seq != null && Object.hasOwnProperty.call(message, "seq"))
            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.seq);
        return writer;
    };

    /**
     * Encodes the specified skill_guang_fa_bao_a_tos message, length delimited. Does not implicitly {@link skill_guang_fa_bao_a_tos.verify|verify} messages.
     * @function encodeDelimited
     * @memberof skill_guang_fa_bao_a_tos
     * @static
     * @param {Iskill_guang_fa_bao_a_tos} message skill_guang_fa_bao_a_tos message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_guang_fa_bao_a_tos.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a skill_guang_fa_bao_a_tos message from the specified reader or buffer.
     * @function decode
     * @memberof skill_guang_fa_bao_a_tos
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {skill_guang_fa_bao_a_tos} skill_guang_fa_bao_a_tos
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_guang_fa_bao_a_tos.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.skill_guang_fa_bao_a_tos();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.seq = reader.uint32();
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a skill_guang_fa_bao_a_tos message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof skill_guang_fa_bao_a_tos
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {skill_guang_fa_bao_a_tos} skill_guang_fa_bao_a_tos
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_guang_fa_bao_a_tos.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a skill_guang_fa_bao_a_tos message.
     * @function verify
     * @memberof skill_guang_fa_bao_a_tos
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    skill_guang_fa_bao_a_tos.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.seq != null && message.hasOwnProperty("seq"))
            if (!$util.isInteger(message.seq))
                return "seq: integer expected";
        return null;
    };

    /**
     * Creates a skill_guang_fa_bao_a_tos message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof skill_guang_fa_bao_a_tos
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {skill_guang_fa_bao_a_tos} skill_guang_fa_bao_a_tos
     */
    skill_guang_fa_bao_a_tos.fromObject = function fromObject(object) {
        if (object instanceof $root.skill_guang_fa_bao_a_tos)
            return object;
        var message = new $root.skill_guang_fa_bao_a_tos();
        if (object.seq != null)
            message.seq = object.seq >>> 0;
        return message;
    };

    /**
     * Creates a plain object from a skill_guang_fa_bao_a_tos message. Also converts values to other types if specified.
     * @function toObject
     * @memberof skill_guang_fa_bao_a_tos
     * @static
     * @param {skill_guang_fa_bao_a_tos} message skill_guang_fa_bao_a_tos
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    skill_guang_fa_bao_a_tos.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults)
            object.seq = 0;
        if (message.seq != null && message.hasOwnProperty("seq"))
            object.seq = message.seq;
        return object;
    };

    /**
     * Converts this skill_guang_fa_bao_a_tos to JSON.
     * @function toJSON
     * @memberof skill_guang_fa_bao_a_tos
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    skill_guang_fa_bao_a_tos.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for skill_guang_fa_bao_a_tos
     * @function getTypeUrl
     * @memberof skill_guang_fa_bao_a_tos
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    skill_guang_fa_bao_a_tos.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/skill_guang_fa_bao_a_tos";
    };

    return skill_guang_fa_bao_a_tos;
})();

$root.skill_guang_fa_bao_a_toc = (function() {

    /**
     * Properties of a skill_guang_fa_bao_a_toc.
     * @exports Iskill_guang_fa_bao_a_toc
     * @interface Iskill_guang_fa_bao_a_toc
     * @property {number|null} [playerId] skill_guang_fa_bao_a_toc playerId
     */

    /**
     * Constructs a new skill_guang_fa_bao_a_toc.
     * @exports skill_guang_fa_bao_a_toc
     * @classdesc Represents a skill_guang_fa_bao_a_toc.
     * @implements Iskill_guang_fa_bao_a_toc
     * @constructor
     * @param {Iskill_guang_fa_bao_a_toc=} [properties] Properties to set
     */
    function skill_guang_fa_bao_a_toc(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * skill_guang_fa_bao_a_toc playerId.
     * @member {number} playerId
     * @memberof skill_guang_fa_bao_a_toc
     * @instance
     */
    skill_guang_fa_bao_a_toc.prototype.playerId = 0;

    /**
     * Creates a new skill_guang_fa_bao_a_toc instance using the specified properties.
     * @function create
     * @memberof skill_guang_fa_bao_a_toc
     * @static
     * @param {Iskill_guang_fa_bao_a_toc=} [properties] Properties to set
     * @returns {skill_guang_fa_bao_a_toc} skill_guang_fa_bao_a_toc instance
     */
    skill_guang_fa_bao_a_toc.create = function create(properties) {
        return new skill_guang_fa_bao_a_toc(properties);
    };

    /**
     * Encodes the specified skill_guang_fa_bao_a_toc message. Does not implicitly {@link skill_guang_fa_bao_a_toc.verify|verify} messages.
     * @function encode
     * @memberof skill_guang_fa_bao_a_toc
     * @static
     * @param {Iskill_guang_fa_bao_a_toc} message skill_guang_fa_bao_a_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_guang_fa_bao_a_toc.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.playerId != null && Object.hasOwnProperty.call(message, "playerId"))
            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.playerId);
        return writer;
    };

    /**
     * Encodes the specified skill_guang_fa_bao_a_toc message, length delimited. Does not implicitly {@link skill_guang_fa_bao_a_toc.verify|verify} messages.
     * @function encodeDelimited
     * @memberof skill_guang_fa_bao_a_toc
     * @static
     * @param {Iskill_guang_fa_bao_a_toc} message skill_guang_fa_bao_a_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_guang_fa_bao_a_toc.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a skill_guang_fa_bao_a_toc message from the specified reader or buffer.
     * @function decode
     * @memberof skill_guang_fa_bao_a_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {skill_guang_fa_bao_a_toc} skill_guang_fa_bao_a_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_guang_fa_bao_a_toc.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.skill_guang_fa_bao_a_toc();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.playerId = reader.uint32();
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a skill_guang_fa_bao_a_toc message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof skill_guang_fa_bao_a_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {skill_guang_fa_bao_a_toc} skill_guang_fa_bao_a_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_guang_fa_bao_a_toc.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a skill_guang_fa_bao_a_toc message.
     * @function verify
     * @memberof skill_guang_fa_bao_a_toc
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    skill_guang_fa_bao_a_toc.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            if (!$util.isInteger(message.playerId))
                return "playerId: integer expected";
        return null;
    };

    /**
     * Creates a skill_guang_fa_bao_a_toc message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof skill_guang_fa_bao_a_toc
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {skill_guang_fa_bao_a_toc} skill_guang_fa_bao_a_toc
     */
    skill_guang_fa_bao_a_toc.fromObject = function fromObject(object) {
        if (object instanceof $root.skill_guang_fa_bao_a_toc)
            return object;
        var message = new $root.skill_guang_fa_bao_a_toc();
        if (object.playerId != null)
            message.playerId = object.playerId >>> 0;
        return message;
    };

    /**
     * Creates a plain object from a skill_guang_fa_bao_a_toc message. Also converts values to other types if specified.
     * @function toObject
     * @memberof skill_guang_fa_bao_a_toc
     * @static
     * @param {skill_guang_fa_bao_a_toc} message skill_guang_fa_bao_a_toc
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    skill_guang_fa_bao_a_toc.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults)
            object.playerId = 0;
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            object.playerId = message.playerId;
        return object;
    };

    /**
     * Converts this skill_guang_fa_bao_a_toc to JSON.
     * @function toJSON
     * @memberof skill_guang_fa_bao_a_toc
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    skill_guang_fa_bao_a_toc.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for skill_guang_fa_bao_a_toc
     * @function getTypeUrl
     * @memberof skill_guang_fa_bao_a_toc
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    skill_guang_fa_bao_a_toc.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/skill_guang_fa_bao_a_toc";
    };

    return skill_guang_fa_bao_a_toc;
})();

$root.skill_wait_for_guang_fa_bao_b_toc = (function() {

    /**
     * Properties of a skill_wait_for_guang_fa_bao_b_toc.
     * @exports Iskill_wait_for_guang_fa_bao_b_toc
     * @interface Iskill_wait_for_guang_fa_bao_b_toc
     * @property {number|null} [playerId] skill_wait_for_guang_fa_bao_b_toc playerId
     * @property {number|null} [waitingSecond] skill_wait_for_guang_fa_bao_b_toc waitingSecond
     * @property {number|null} [seq] skill_wait_for_guang_fa_bao_b_toc seq
     */

    /**
     * Constructs a new skill_wait_for_guang_fa_bao_b_toc.
     * @exports skill_wait_for_guang_fa_bao_b_toc
     * @classdesc Represents a skill_wait_for_guang_fa_bao_b_toc.
     * @implements Iskill_wait_for_guang_fa_bao_b_toc
     * @constructor
     * @param {Iskill_wait_for_guang_fa_bao_b_toc=} [properties] Properties to set
     */
    function skill_wait_for_guang_fa_bao_b_toc(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * skill_wait_for_guang_fa_bao_b_toc playerId.
     * @member {number} playerId
     * @memberof skill_wait_for_guang_fa_bao_b_toc
     * @instance
     */
    skill_wait_for_guang_fa_bao_b_toc.prototype.playerId = 0;

    /**
     * skill_wait_for_guang_fa_bao_b_toc waitingSecond.
     * @member {number} waitingSecond
     * @memberof skill_wait_for_guang_fa_bao_b_toc
     * @instance
     */
    skill_wait_for_guang_fa_bao_b_toc.prototype.waitingSecond = 0;

    /**
     * skill_wait_for_guang_fa_bao_b_toc seq.
     * @member {number} seq
     * @memberof skill_wait_for_guang_fa_bao_b_toc
     * @instance
     */
    skill_wait_for_guang_fa_bao_b_toc.prototype.seq = 0;

    /**
     * Creates a new skill_wait_for_guang_fa_bao_b_toc instance using the specified properties.
     * @function create
     * @memberof skill_wait_for_guang_fa_bao_b_toc
     * @static
     * @param {Iskill_wait_for_guang_fa_bao_b_toc=} [properties] Properties to set
     * @returns {skill_wait_for_guang_fa_bao_b_toc} skill_wait_for_guang_fa_bao_b_toc instance
     */
    skill_wait_for_guang_fa_bao_b_toc.create = function create(properties) {
        return new skill_wait_for_guang_fa_bao_b_toc(properties);
    };

    /**
     * Encodes the specified skill_wait_for_guang_fa_bao_b_toc message. Does not implicitly {@link skill_wait_for_guang_fa_bao_b_toc.verify|verify} messages.
     * @function encode
     * @memberof skill_wait_for_guang_fa_bao_b_toc
     * @static
     * @param {Iskill_wait_for_guang_fa_bao_b_toc} message skill_wait_for_guang_fa_bao_b_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_wait_for_guang_fa_bao_b_toc.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.playerId != null && Object.hasOwnProperty.call(message, "playerId"))
            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.playerId);
        if (message.waitingSecond != null && Object.hasOwnProperty.call(message, "waitingSecond"))
            writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.waitingSecond);
        if (message.seq != null && Object.hasOwnProperty.call(message, "seq"))
            writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.seq);
        return writer;
    };

    /**
     * Encodes the specified skill_wait_for_guang_fa_bao_b_toc message, length delimited. Does not implicitly {@link skill_wait_for_guang_fa_bao_b_toc.verify|verify} messages.
     * @function encodeDelimited
     * @memberof skill_wait_for_guang_fa_bao_b_toc
     * @static
     * @param {Iskill_wait_for_guang_fa_bao_b_toc} message skill_wait_for_guang_fa_bao_b_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_wait_for_guang_fa_bao_b_toc.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a skill_wait_for_guang_fa_bao_b_toc message from the specified reader or buffer.
     * @function decode
     * @memberof skill_wait_for_guang_fa_bao_b_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {skill_wait_for_guang_fa_bao_b_toc} skill_wait_for_guang_fa_bao_b_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_wait_for_guang_fa_bao_b_toc.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.skill_wait_for_guang_fa_bao_b_toc();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.playerId = reader.uint32();
                    break;
                }
            case 2: {
                    message.waitingSecond = reader.uint32();
                    break;
                }
            case 3: {
                    message.seq = reader.uint32();
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a skill_wait_for_guang_fa_bao_b_toc message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof skill_wait_for_guang_fa_bao_b_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {skill_wait_for_guang_fa_bao_b_toc} skill_wait_for_guang_fa_bao_b_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_wait_for_guang_fa_bao_b_toc.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a skill_wait_for_guang_fa_bao_b_toc message.
     * @function verify
     * @memberof skill_wait_for_guang_fa_bao_b_toc
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    skill_wait_for_guang_fa_bao_b_toc.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            if (!$util.isInteger(message.playerId))
                return "playerId: integer expected";
        if (message.waitingSecond != null && message.hasOwnProperty("waitingSecond"))
            if (!$util.isInteger(message.waitingSecond))
                return "waitingSecond: integer expected";
        if (message.seq != null && message.hasOwnProperty("seq"))
            if (!$util.isInteger(message.seq))
                return "seq: integer expected";
        return null;
    };

    /**
     * Creates a skill_wait_for_guang_fa_bao_b_toc message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof skill_wait_for_guang_fa_bao_b_toc
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {skill_wait_for_guang_fa_bao_b_toc} skill_wait_for_guang_fa_bao_b_toc
     */
    skill_wait_for_guang_fa_bao_b_toc.fromObject = function fromObject(object) {
        if (object instanceof $root.skill_wait_for_guang_fa_bao_b_toc)
            return object;
        var message = new $root.skill_wait_for_guang_fa_bao_b_toc();
        if (object.playerId != null)
            message.playerId = object.playerId >>> 0;
        if (object.waitingSecond != null)
            message.waitingSecond = object.waitingSecond >>> 0;
        if (object.seq != null)
            message.seq = object.seq >>> 0;
        return message;
    };

    /**
     * Creates a plain object from a skill_wait_for_guang_fa_bao_b_toc message. Also converts values to other types if specified.
     * @function toObject
     * @memberof skill_wait_for_guang_fa_bao_b_toc
     * @static
     * @param {skill_wait_for_guang_fa_bao_b_toc} message skill_wait_for_guang_fa_bao_b_toc
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    skill_wait_for_guang_fa_bao_b_toc.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults) {
            object.playerId = 0;
            object.waitingSecond = 0;
            object.seq = 0;
        }
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            object.playerId = message.playerId;
        if (message.waitingSecond != null && message.hasOwnProperty("waitingSecond"))
            object.waitingSecond = message.waitingSecond;
        if (message.seq != null && message.hasOwnProperty("seq"))
            object.seq = message.seq;
        return object;
    };

    /**
     * Converts this skill_wait_for_guang_fa_bao_b_toc to JSON.
     * @function toJSON
     * @memberof skill_wait_for_guang_fa_bao_b_toc
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    skill_wait_for_guang_fa_bao_b_toc.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for skill_wait_for_guang_fa_bao_b_toc
     * @function getTypeUrl
     * @memberof skill_wait_for_guang_fa_bao_b_toc
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    skill_wait_for_guang_fa_bao_b_toc.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/skill_wait_for_guang_fa_bao_b_toc";
    };

    return skill_wait_for_guang_fa_bao_b_toc;
})();

$root.skill_guang_fa_bao_b_tos = (function() {

    /**
     * Properties of a skill_guang_fa_bao_b_tos.
     * @exports Iskill_guang_fa_bao_b_tos
     * @interface Iskill_guang_fa_bao_b_tos
     * @property {boolean|null} [enable] skill_guang_fa_bao_b_tos enable
     * @property {number|null} [targetPlayerId] skill_guang_fa_bao_b_tos targetPlayerId
     * @property {Array.<number>|null} [cardIds] skill_guang_fa_bao_b_tos cardIds
     * @property {number|null} [seq] skill_guang_fa_bao_b_tos seq
     */

    /**
     * Constructs a new skill_guang_fa_bao_b_tos.
     * @exports skill_guang_fa_bao_b_tos
     * @classdesc Represents a skill_guang_fa_bao_b_tos.
     * @implements Iskill_guang_fa_bao_b_tos
     * @constructor
     * @param {Iskill_guang_fa_bao_b_tos=} [properties] Properties to set
     */
    function skill_guang_fa_bao_b_tos(properties) {
        this.cardIds = [];
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * skill_guang_fa_bao_b_tos enable.
     * @member {boolean} enable
     * @memberof skill_guang_fa_bao_b_tos
     * @instance
     */
    skill_guang_fa_bao_b_tos.prototype.enable = false;

    /**
     * skill_guang_fa_bao_b_tos targetPlayerId.
     * @member {number} targetPlayerId
     * @memberof skill_guang_fa_bao_b_tos
     * @instance
     */
    skill_guang_fa_bao_b_tos.prototype.targetPlayerId = 0;

    /**
     * skill_guang_fa_bao_b_tos cardIds.
     * @member {Array.<number>} cardIds
     * @memberof skill_guang_fa_bao_b_tos
     * @instance
     */
    skill_guang_fa_bao_b_tos.prototype.cardIds = $util.emptyArray;

    /**
     * skill_guang_fa_bao_b_tos seq.
     * @member {number} seq
     * @memberof skill_guang_fa_bao_b_tos
     * @instance
     */
    skill_guang_fa_bao_b_tos.prototype.seq = 0;

    /**
     * Creates a new skill_guang_fa_bao_b_tos instance using the specified properties.
     * @function create
     * @memberof skill_guang_fa_bao_b_tos
     * @static
     * @param {Iskill_guang_fa_bao_b_tos=} [properties] Properties to set
     * @returns {skill_guang_fa_bao_b_tos} skill_guang_fa_bao_b_tos instance
     */
    skill_guang_fa_bao_b_tos.create = function create(properties) {
        return new skill_guang_fa_bao_b_tos(properties);
    };

    /**
     * Encodes the specified skill_guang_fa_bao_b_tos message. Does not implicitly {@link skill_guang_fa_bao_b_tos.verify|verify} messages.
     * @function encode
     * @memberof skill_guang_fa_bao_b_tos
     * @static
     * @param {Iskill_guang_fa_bao_b_tos} message skill_guang_fa_bao_b_tos message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_guang_fa_bao_b_tos.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.enable != null && Object.hasOwnProperty.call(message, "enable"))
            writer.uint32(/* id 1, wireType 0 =*/8).bool(message.enable);
        if (message.targetPlayerId != null && Object.hasOwnProperty.call(message, "targetPlayerId"))
            writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.targetPlayerId);
        if (message.cardIds != null && message.cardIds.length) {
            writer.uint32(/* id 3, wireType 2 =*/26).fork();
            for (var i = 0; i < message.cardIds.length; ++i)
                writer.uint32(message.cardIds[i]);
            writer.ldelim();
        }
        if (message.seq != null && Object.hasOwnProperty.call(message, "seq"))
            writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.seq);
        return writer;
    };

    /**
     * Encodes the specified skill_guang_fa_bao_b_tos message, length delimited. Does not implicitly {@link skill_guang_fa_bao_b_tos.verify|verify} messages.
     * @function encodeDelimited
     * @memberof skill_guang_fa_bao_b_tos
     * @static
     * @param {Iskill_guang_fa_bao_b_tos} message skill_guang_fa_bao_b_tos message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_guang_fa_bao_b_tos.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a skill_guang_fa_bao_b_tos message from the specified reader or buffer.
     * @function decode
     * @memberof skill_guang_fa_bao_b_tos
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {skill_guang_fa_bao_b_tos} skill_guang_fa_bao_b_tos
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_guang_fa_bao_b_tos.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.skill_guang_fa_bao_b_tos();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.enable = reader.bool();
                    break;
                }
            case 2: {
                    message.targetPlayerId = reader.uint32();
                    break;
                }
            case 3: {
                    if (!(message.cardIds && message.cardIds.length))
                        message.cardIds = [];
                    if ((tag & 7) === 2) {
                        var end2 = reader.uint32() + reader.pos;
                        while (reader.pos < end2)
                            message.cardIds.push(reader.uint32());
                    } else
                        message.cardIds.push(reader.uint32());
                    break;
                }
            case 4: {
                    message.seq = reader.uint32();
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a skill_guang_fa_bao_b_tos message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof skill_guang_fa_bao_b_tos
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {skill_guang_fa_bao_b_tos} skill_guang_fa_bao_b_tos
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_guang_fa_bao_b_tos.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a skill_guang_fa_bao_b_tos message.
     * @function verify
     * @memberof skill_guang_fa_bao_b_tos
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    skill_guang_fa_bao_b_tos.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.enable != null && message.hasOwnProperty("enable"))
            if (typeof message.enable !== "boolean")
                return "enable: boolean expected";
        if (message.targetPlayerId != null && message.hasOwnProperty("targetPlayerId"))
            if (!$util.isInteger(message.targetPlayerId))
                return "targetPlayerId: integer expected";
        if (message.cardIds != null && message.hasOwnProperty("cardIds")) {
            if (!Array.isArray(message.cardIds))
                return "cardIds: array expected";
            for (var i = 0; i < message.cardIds.length; ++i)
                if (!$util.isInteger(message.cardIds[i]))
                    return "cardIds: integer[] expected";
        }
        if (message.seq != null && message.hasOwnProperty("seq"))
            if (!$util.isInteger(message.seq))
                return "seq: integer expected";
        return null;
    };

    /**
     * Creates a skill_guang_fa_bao_b_tos message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof skill_guang_fa_bao_b_tos
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {skill_guang_fa_bao_b_tos} skill_guang_fa_bao_b_tos
     */
    skill_guang_fa_bao_b_tos.fromObject = function fromObject(object) {
        if (object instanceof $root.skill_guang_fa_bao_b_tos)
            return object;
        var message = new $root.skill_guang_fa_bao_b_tos();
        if (object.enable != null)
            message.enable = Boolean(object.enable);
        if (object.targetPlayerId != null)
            message.targetPlayerId = object.targetPlayerId >>> 0;
        if (object.cardIds) {
            if (!Array.isArray(object.cardIds))
                throw TypeError(".skill_guang_fa_bao_b_tos.cardIds: array expected");
            message.cardIds = [];
            for (var i = 0; i < object.cardIds.length; ++i)
                message.cardIds[i] = object.cardIds[i] >>> 0;
        }
        if (object.seq != null)
            message.seq = object.seq >>> 0;
        return message;
    };

    /**
     * Creates a plain object from a skill_guang_fa_bao_b_tos message. Also converts values to other types if specified.
     * @function toObject
     * @memberof skill_guang_fa_bao_b_tos
     * @static
     * @param {skill_guang_fa_bao_b_tos} message skill_guang_fa_bao_b_tos
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    skill_guang_fa_bao_b_tos.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.arrays || options.defaults)
            object.cardIds = [];
        if (options.defaults) {
            object.enable = false;
            object.targetPlayerId = 0;
            object.seq = 0;
        }
        if (message.enable != null && message.hasOwnProperty("enable"))
            object.enable = message.enable;
        if (message.targetPlayerId != null && message.hasOwnProperty("targetPlayerId"))
            object.targetPlayerId = message.targetPlayerId;
        if (message.cardIds && message.cardIds.length) {
            object.cardIds = [];
            for (var j = 0; j < message.cardIds.length; ++j)
                object.cardIds[j] = message.cardIds[j];
        }
        if (message.seq != null && message.hasOwnProperty("seq"))
            object.seq = message.seq;
        return object;
    };

    /**
     * Converts this skill_guang_fa_bao_b_tos to JSON.
     * @function toJSON
     * @memberof skill_guang_fa_bao_b_tos
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    skill_guang_fa_bao_b_tos.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for skill_guang_fa_bao_b_tos
     * @function getTypeUrl
     * @memberof skill_guang_fa_bao_b_tos
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    skill_guang_fa_bao_b_tos.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/skill_guang_fa_bao_b_tos";
    };

    return skill_guang_fa_bao_b_tos;
})();

$root.skill_guang_fa_bao_b_toc = (function() {

    /**
     * Properties of a skill_guang_fa_bao_b_toc.
     * @exports Iskill_guang_fa_bao_b_toc
     * @interface Iskill_guang_fa_bao_b_toc
     * @property {number|null} [playerId] skill_guang_fa_bao_b_toc playerId
     * @property {boolean|null} [enable] skill_guang_fa_bao_b_toc enable
     * @property {number|null} [targetPlayerId] skill_guang_fa_bao_b_toc targetPlayerId
     * @property {Array.<Icard>|null} [cards] skill_guang_fa_bao_b_toc cards
     */

    /**
     * Constructs a new skill_guang_fa_bao_b_toc.
     * @exports skill_guang_fa_bao_b_toc
     * @classdesc Represents a skill_guang_fa_bao_b_toc.
     * @implements Iskill_guang_fa_bao_b_toc
     * @constructor
     * @param {Iskill_guang_fa_bao_b_toc=} [properties] Properties to set
     */
    function skill_guang_fa_bao_b_toc(properties) {
        this.cards = [];
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * skill_guang_fa_bao_b_toc playerId.
     * @member {number} playerId
     * @memberof skill_guang_fa_bao_b_toc
     * @instance
     */
    skill_guang_fa_bao_b_toc.prototype.playerId = 0;

    /**
     * skill_guang_fa_bao_b_toc enable.
     * @member {boolean} enable
     * @memberof skill_guang_fa_bao_b_toc
     * @instance
     */
    skill_guang_fa_bao_b_toc.prototype.enable = false;

    /**
     * skill_guang_fa_bao_b_toc targetPlayerId.
     * @member {number} targetPlayerId
     * @memberof skill_guang_fa_bao_b_toc
     * @instance
     */
    skill_guang_fa_bao_b_toc.prototype.targetPlayerId = 0;

    /**
     * skill_guang_fa_bao_b_toc cards.
     * @member {Array.<Icard>} cards
     * @memberof skill_guang_fa_bao_b_toc
     * @instance
     */
    skill_guang_fa_bao_b_toc.prototype.cards = $util.emptyArray;

    /**
     * Creates a new skill_guang_fa_bao_b_toc instance using the specified properties.
     * @function create
     * @memberof skill_guang_fa_bao_b_toc
     * @static
     * @param {Iskill_guang_fa_bao_b_toc=} [properties] Properties to set
     * @returns {skill_guang_fa_bao_b_toc} skill_guang_fa_bao_b_toc instance
     */
    skill_guang_fa_bao_b_toc.create = function create(properties) {
        return new skill_guang_fa_bao_b_toc(properties);
    };

    /**
     * Encodes the specified skill_guang_fa_bao_b_toc message. Does not implicitly {@link skill_guang_fa_bao_b_toc.verify|verify} messages.
     * @function encode
     * @memberof skill_guang_fa_bao_b_toc
     * @static
     * @param {Iskill_guang_fa_bao_b_toc} message skill_guang_fa_bao_b_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_guang_fa_bao_b_toc.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.playerId != null && Object.hasOwnProperty.call(message, "playerId"))
            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.playerId);
        if (message.enable != null && Object.hasOwnProperty.call(message, "enable"))
            writer.uint32(/* id 2, wireType 0 =*/16).bool(message.enable);
        if (message.targetPlayerId != null && Object.hasOwnProperty.call(message, "targetPlayerId"))
            writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.targetPlayerId);
        if (message.cards != null && message.cards.length)
            for (var i = 0; i < message.cards.length; ++i)
                $root.card.encode(message.cards[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
        return writer;
    };

    /**
     * Encodes the specified skill_guang_fa_bao_b_toc message, length delimited. Does not implicitly {@link skill_guang_fa_bao_b_toc.verify|verify} messages.
     * @function encodeDelimited
     * @memberof skill_guang_fa_bao_b_toc
     * @static
     * @param {Iskill_guang_fa_bao_b_toc} message skill_guang_fa_bao_b_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_guang_fa_bao_b_toc.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a skill_guang_fa_bao_b_toc message from the specified reader or buffer.
     * @function decode
     * @memberof skill_guang_fa_bao_b_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {skill_guang_fa_bao_b_toc} skill_guang_fa_bao_b_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_guang_fa_bao_b_toc.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.skill_guang_fa_bao_b_toc();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.playerId = reader.uint32();
                    break;
                }
            case 2: {
                    message.enable = reader.bool();
                    break;
                }
            case 3: {
                    message.targetPlayerId = reader.uint32();
                    break;
                }
            case 4: {
                    if (!(message.cards && message.cards.length))
                        message.cards = [];
                    message.cards.push($root.card.decode(reader, reader.uint32()));
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a skill_guang_fa_bao_b_toc message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof skill_guang_fa_bao_b_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {skill_guang_fa_bao_b_toc} skill_guang_fa_bao_b_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_guang_fa_bao_b_toc.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a skill_guang_fa_bao_b_toc message.
     * @function verify
     * @memberof skill_guang_fa_bao_b_toc
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    skill_guang_fa_bao_b_toc.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            if (!$util.isInteger(message.playerId))
                return "playerId: integer expected";
        if (message.enable != null && message.hasOwnProperty("enable"))
            if (typeof message.enable !== "boolean")
                return "enable: boolean expected";
        if (message.targetPlayerId != null && message.hasOwnProperty("targetPlayerId"))
            if (!$util.isInteger(message.targetPlayerId))
                return "targetPlayerId: integer expected";
        if (message.cards != null && message.hasOwnProperty("cards")) {
            if (!Array.isArray(message.cards))
                return "cards: array expected";
            for (var i = 0; i < message.cards.length; ++i) {
                var error = $root.card.verify(message.cards[i]);
                if (error)
                    return "cards." + error;
            }
        }
        return null;
    };

    /**
     * Creates a skill_guang_fa_bao_b_toc message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof skill_guang_fa_bao_b_toc
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {skill_guang_fa_bao_b_toc} skill_guang_fa_bao_b_toc
     */
    skill_guang_fa_bao_b_toc.fromObject = function fromObject(object) {
        if (object instanceof $root.skill_guang_fa_bao_b_toc)
            return object;
        var message = new $root.skill_guang_fa_bao_b_toc();
        if (object.playerId != null)
            message.playerId = object.playerId >>> 0;
        if (object.enable != null)
            message.enable = Boolean(object.enable);
        if (object.targetPlayerId != null)
            message.targetPlayerId = object.targetPlayerId >>> 0;
        if (object.cards) {
            if (!Array.isArray(object.cards))
                throw TypeError(".skill_guang_fa_bao_b_toc.cards: array expected");
            message.cards = [];
            for (var i = 0; i < object.cards.length; ++i) {
                if (typeof object.cards[i] !== "object")
                    throw TypeError(".skill_guang_fa_bao_b_toc.cards: object expected");
                message.cards[i] = $root.card.fromObject(object.cards[i]);
            }
        }
        return message;
    };

    /**
     * Creates a plain object from a skill_guang_fa_bao_b_toc message. Also converts values to other types if specified.
     * @function toObject
     * @memberof skill_guang_fa_bao_b_toc
     * @static
     * @param {skill_guang_fa_bao_b_toc} message skill_guang_fa_bao_b_toc
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    skill_guang_fa_bao_b_toc.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.arrays || options.defaults)
            object.cards = [];
        if (options.defaults) {
            object.playerId = 0;
            object.enable = false;
            object.targetPlayerId = 0;
        }
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            object.playerId = message.playerId;
        if (message.enable != null && message.hasOwnProperty("enable"))
            object.enable = message.enable;
        if (message.targetPlayerId != null && message.hasOwnProperty("targetPlayerId"))
            object.targetPlayerId = message.targetPlayerId;
        if (message.cards && message.cards.length) {
            object.cards = [];
            for (var j = 0; j < message.cards.length; ++j)
                object.cards[j] = $root.card.toObject(message.cards[j], options);
        }
        return object;
    };

    /**
     * Converts this skill_guang_fa_bao_b_toc to JSON.
     * @function toJSON
     * @memberof skill_guang_fa_bao_b_toc
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    skill_guang_fa_bao_b_toc.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for skill_guang_fa_bao_b_toc
     * @function getTypeUrl
     * @memberof skill_guang_fa_bao_b_toc
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    skill_guang_fa_bao_b_toc.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/skill_guang_fa_bao_b_toc";
    };

    return skill_guang_fa_bao_b_toc;
})();

$root.skill_wait_for_qiang_ling_toc = (function() {

    /**
     * Properties of a skill_wait_for_qiang_ling_toc.
     * @exports Iskill_wait_for_qiang_ling_toc
     * @interface Iskill_wait_for_qiang_ling_toc
     * @property {number|null} [playerId] skill_wait_for_qiang_ling_toc playerId
     * @property {number|null} [waitingSecond] skill_wait_for_qiang_ling_toc waitingSecond
     * @property {number|null} [seq] skill_wait_for_qiang_ling_toc seq
     */

    /**
     * Constructs a new skill_wait_for_qiang_ling_toc.
     * @exports skill_wait_for_qiang_ling_toc
     * @classdesc Represents a skill_wait_for_qiang_ling_toc.
     * @implements Iskill_wait_for_qiang_ling_toc
     * @constructor
     * @param {Iskill_wait_for_qiang_ling_toc=} [properties] Properties to set
     */
    function skill_wait_for_qiang_ling_toc(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * skill_wait_for_qiang_ling_toc playerId.
     * @member {number} playerId
     * @memberof skill_wait_for_qiang_ling_toc
     * @instance
     */
    skill_wait_for_qiang_ling_toc.prototype.playerId = 0;

    /**
     * skill_wait_for_qiang_ling_toc waitingSecond.
     * @member {number} waitingSecond
     * @memberof skill_wait_for_qiang_ling_toc
     * @instance
     */
    skill_wait_for_qiang_ling_toc.prototype.waitingSecond = 0;

    /**
     * skill_wait_for_qiang_ling_toc seq.
     * @member {number} seq
     * @memberof skill_wait_for_qiang_ling_toc
     * @instance
     */
    skill_wait_for_qiang_ling_toc.prototype.seq = 0;

    /**
     * Creates a new skill_wait_for_qiang_ling_toc instance using the specified properties.
     * @function create
     * @memberof skill_wait_for_qiang_ling_toc
     * @static
     * @param {Iskill_wait_for_qiang_ling_toc=} [properties] Properties to set
     * @returns {skill_wait_for_qiang_ling_toc} skill_wait_for_qiang_ling_toc instance
     */
    skill_wait_for_qiang_ling_toc.create = function create(properties) {
        return new skill_wait_for_qiang_ling_toc(properties);
    };

    /**
     * Encodes the specified skill_wait_for_qiang_ling_toc message. Does not implicitly {@link skill_wait_for_qiang_ling_toc.verify|verify} messages.
     * @function encode
     * @memberof skill_wait_for_qiang_ling_toc
     * @static
     * @param {Iskill_wait_for_qiang_ling_toc} message skill_wait_for_qiang_ling_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_wait_for_qiang_ling_toc.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.playerId != null && Object.hasOwnProperty.call(message, "playerId"))
            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.playerId);
        if (message.waitingSecond != null && Object.hasOwnProperty.call(message, "waitingSecond"))
            writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.waitingSecond);
        if (message.seq != null && Object.hasOwnProperty.call(message, "seq"))
            writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.seq);
        return writer;
    };

    /**
     * Encodes the specified skill_wait_for_qiang_ling_toc message, length delimited. Does not implicitly {@link skill_wait_for_qiang_ling_toc.verify|verify} messages.
     * @function encodeDelimited
     * @memberof skill_wait_for_qiang_ling_toc
     * @static
     * @param {Iskill_wait_for_qiang_ling_toc} message skill_wait_for_qiang_ling_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_wait_for_qiang_ling_toc.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a skill_wait_for_qiang_ling_toc message from the specified reader or buffer.
     * @function decode
     * @memberof skill_wait_for_qiang_ling_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {skill_wait_for_qiang_ling_toc} skill_wait_for_qiang_ling_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_wait_for_qiang_ling_toc.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.skill_wait_for_qiang_ling_toc();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.playerId = reader.uint32();
                    break;
                }
            case 2: {
                    message.waitingSecond = reader.uint32();
                    break;
                }
            case 3: {
                    message.seq = reader.uint32();
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a skill_wait_for_qiang_ling_toc message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof skill_wait_for_qiang_ling_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {skill_wait_for_qiang_ling_toc} skill_wait_for_qiang_ling_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_wait_for_qiang_ling_toc.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a skill_wait_for_qiang_ling_toc message.
     * @function verify
     * @memberof skill_wait_for_qiang_ling_toc
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    skill_wait_for_qiang_ling_toc.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            if (!$util.isInteger(message.playerId))
                return "playerId: integer expected";
        if (message.waitingSecond != null && message.hasOwnProperty("waitingSecond"))
            if (!$util.isInteger(message.waitingSecond))
                return "waitingSecond: integer expected";
        if (message.seq != null && message.hasOwnProperty("seq"))
            if (!$util.isInteger(message.seq))
                return "seq: integer expected";
        return null;
    };

    /**
     * Creates a skill_wait_for_qiang_ling_toc message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof skill_wait_for_qiang_ling_toc
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {skill_wait_for_qiang_ling_toc} skill_wait_for_qiang_ling_toc
     */
    skill_wait_for_qiang_ling_toc.fromObject = function fromObject(object) {
        if (object instanceof $root.skill_wait_for_qiang_ling_toc)
            return object;
        var message = new $root.skill_wait_for_qiang_ling_toc();
        if (object.playerId != null)
            message.playerId = object.playerId >>> 0;
        if (object.waitingSecond != null)
            message.waitingSecond = object.waitingSecond >>> 0;
        if (object.seq != null)
            message.seq = object.seq >>> 0;
        return message;
    };

    /**
     * Creates a plain object from a skill_wait_for_qiang_ling_toc message. Also converts values to other types if specified.
     * @function toObject
     * @memberof skill_wait_for_qiang_ling_toc
     * @static
     * @param {skill_wait_for_qiang_ling_toc} message skill_wait_for_qiang_ling_toc
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    skill_wait_for_qiang_ling_toc.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults) {
            object.playerId = 0;
            object.waitingSecond = 0;
            object.seq = 0;
        }
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            object.playerId = message.playerId;
        if (message.waitingSecond != null && message.hasOwnProperty("waitingSecond"))
            object.waitingSecond = message.waitingSecond;
        if (message.seq != null && message.hasOwnProperty("seq"))
            object.seq = message.seq;
        return object;
    };

    /**
     * Converts this skill_wait_for_qiang_ling_toc to JSON.
     * @function toJSON
     * @memberof skill_wait_for_qiang_ling_toc
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    skill_wait_for_qiang_ling_toc.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for skill_wait_for_qiang_ling_toc
     * @function getTypeUrl
     * @memberof skill_wait_for_qiang_ling_toc
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    skill_wait_for_qiang_ling_toc.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/skill_wait_for_qiang_ling_toc";
    };

    return skill_wait_for_qiang_ling_toc;
})();

$root.skill_qiang_ling_tos = (function() {

    /**
     * Properties of a skill_qiang_ling_tos.
     * @exports Iskill_qiang_ling_tos
     * @interface Iskill_qiang_ling_tos
     * @property {boolean|null} [enable] skill_qiang_ling_tos enable
     * @property {Array.<card_type>|null} [types] skill_qiang_ling_tos types
     * @property {number|null} [seq] skill_qiang_ling_tos seq
     */

    /**
     * Constructs a new skill_qiang_ling_tos.
     * @exports skill_qiang_ling_tos
     * @classdesc Represents a skill_qiang_ling_tos.
     * @implements Iskill_qiang_ling_tos
     * @constructor
     * @param {Iskill_qiang_ling_tos=} [properties] Properties to set
     */
    function skill_qiang_ling_tos(properties) {
        this.types = [];
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * skill_qiang_ling_tos enable.
     * @member {boolean} enable
     * @memberof skill_qiang_ling_tos
     * @instance
     */
    skill_qiang_ling_tos.prototype.enable = false;

    /**
     * skill_qiang_ling_tos types.
     * @member {Array.<card_type>} types
     * @memberof skill_qiang_ling_tos
     * @instance
     */
    skill_qiang_ling_tos.prototype.types = $util.emptyArray;

    /**
     * skill_qiang_ling_tos seq.
     * @member {number} seq
     * @memberof skill_qiang_ling_tos
     * @instance
     */
    skill_qiang_ling_tos.prototype.seq = 0;

    /**
     * Creates a new skill_qiang_ling_tos instance using the specified properties.
     * @function create
     * @memberof skill_qiang_ling_tos
     * @static
     * @param {Iskill_qiang_ling_tos=} [properties] Properties to set
     * @returns {skill_qiang_ling_tos} skill_qiang_ling_tos instance
     */
    skill_qiang_ling_tos.create = function create(properties) {
        return new skill_qiang_ling_tos(properties);
    };

    /**
     * Encodes the specified skill_qiang_ling_tos message. Does not implicitly {@link skill_qiang_ling_tos.verify|verify} messages.
     * @function encode
     * @memberof skill_qiang_ling_tos
     * @static
     * @param {Iskill_qiang_ling_tos} message skill_qiang_ling_tos message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_qiang_ling_tos.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.enable != null && Object.hasOwnProperty.call(message, "enable"))
            writer.uint32(/* id 1, wireType 0 =*/8).bool(message.enable);
        if (message.types != null && message.types.length) {
            writer.uint32(/* id 2, wireType 2 =*/18).fork();
            for (var i = 0; i < message.types.length; ++i)
                writer.int32(message.types[i]);
            writer.ldelim();
        }
        if (message.seq != null && Object.hasOwnProperty.call(message, "seq"))
            writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.seq);
        return writer;
    };

    /**
     * Encodes the specified skill_qiang_ling_tos message, length delimited. Does not implicitly {@link skill_qiang_ling_tos.verify|verify} messages.
     * @function encodeDelimited
     * @memberof skill_qiang_ling_tos
     * @static
     * @param {Iskill_qiang_ling_tos} message skill_qiang_ling_tos message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_qiang_ling_tos.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a skill_qiang_ling_tos message from the specified reader or buffer.
     * @function decode
     * @memberof skill_qiang_ling_tos
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {skill_qiang_ling_tos} skill_qiang_ling_tos
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_qiang_ling_tos.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.skill_qiang_ling_tos();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.enable = reader.bool();
                    break;
                }
            case 2: {
                    if (!(message.types && message.types.length))
                        message.types = [];
                    if ((tag & 7) === 2) {
                        var end2 = reader.uint32() + reader.pos;
                        while (reader.pos < end2)
                            message.types.push(reader.int32());
                    } else
                        message.types.push(reader.int32());
                    break;
                }
            case 3: {
                    message.seq = reader.uint32();
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a skill_qiang_ling_tos message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof skill_qiang_ling_tos
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {skill_qiang_ling_tos} skill_qiang_ling_tos
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_qiang_ling_tos.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a skill_qiang_ling_tos message.
     * @function verify
     * @memberof skill_qiang_ling_tos
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    skill_qiang_ling_tos.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.enable != null && message.hasOwnProperty("enable"))
            if (typeof message.enable !== "boolean")
                return "enable: boolean expected";
        if (message.types != null && message.hasOwnProperty("types")) {
            if (!Array.isArray(message.types))
                return "types: array expected";
            for (var i = 0; i < message.types.length; ++i)
                switch (message.types[i]) {
                default:
                    return "types: enum value[] expected";
                case 0:
                case 1:
                case 2:
                case 3:
                case 4:
                case 5:
                case 6:
                case 7:
                case 8:
                case 9:
                    break;
                }
        }
        if (message.seq != null && message.hasOwnProperty("seq"))
            if (!$util.isInteger(message.seq))
                return "seq: integer expected";
        return null;
    };

    /**
     * Creates a skill_qiang_ling_tos message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof skill_qiang_ling_tos
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {skill_qiang_ling_tos} skill_qiang_ling_tos
     */
    skill_qiang_ling_tos.fromObject = function fromObject(object) {
        if (object instanceof $root.skill_qiang_ling_tos)
            return object;
        var message = new $root.skill_qiang_ling_tos();
        if (object.enable != null)
            message.enable = Boolean(object.enable);
        if (object.types) {
            if (!Array.isArray(object.types))
                throw TypeError(".skill_qiang_ling_tos.types: array expected");
            message.types = [];
            for (var i = 0; i < object.types.length; ++i)
                switch (object.types[i]) {
                default:
                    if (typeof object.types[i] === "number") {
                        message.types[i] = object.types[i];
                        break;
                    }
                case "Cheng_Qing":
                case 0:
                    message.types[i] = 0;
                    break;
                case "Shi_Tan":
                case 1:
                    message.types[i] = 1;
                    break;
                case "Wei_Bi":
                case 2:
                    message.types[i] = 2;
                    break;
                case "Li_You":
                case 3:
                    message.types[i] = 3;
                    break;
                case "Ping_Heng":
                case 4:
                    message.types[i] = 4;
                    break;
                case "Po_Yi":
                case 5:
                    message.types[i] = 5;
                    break;
                case "Jie_Huo":
                case 6:
                    message.types[i] = 6;
                    break;
                case "Diao_Bao":
                case 7:
                    message.types[i] = 7;
                    break;
                case "Wu_Dao":
                case 8:
                    message.types[i] = 8;
                    break;
                case "Feng_Yun_Bian_Huan":
                case 9:
                    message.types[i] = 9;
                    break;
                }
        }
        if (object.seq != null)
            message.seq = object.seq >>> 0;
        return message;
    };

    /**
     * Creates a plain object from a skill_qiang_ling_tos message. Also converts values to other types if specified.
     * @function toObject
     * @memberof skill_qiang_ling_tos
     * @static
     * @param {skill_qiang_ling_tos} message skill_qiang_ling_tos
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    skill_qiang_ling_tos.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.arrays || options.defaults)
            object.types = [];
        if (options.defaults) {
            object.enable = false;
            object.seq = 0;
        }
        if (message.enable != null && message.hasOwnProperty("enable"))
            object.enable = message.enable;
        if (message.types && message.types.length) {
            object.types = [];
            for (var j = 0; j < message.types.length; ++j)
                object.types[j] = options.enums === String ? $root.card_type[message.types[j]] === undefined ? message.types[j] : $root.card_type[message.types[j]] : message.types[j];
        }
        if (message.seq != null && message.hasOwnProperty("seq"))
            object.seq = message.seq;
        return object;
    };

    /**
     * Converts this skill_qiang_ling_tos to JSON.
     * @function toJSON
     * @memberof skill_qiang_ling_tos
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    skill_qiang_ling_tos.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for skill_qiang_ling_tos
     * @function getTypeUrl
     * @memberof skill_qiang_ling_tos
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    skill_qiang_ling_tos.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/skill_qiang_ling_tos";
    };

    return skill_qiang_ling_tos;
})();

$root.skill_qiang_ling_toc = (function() {

    /**
     * Properties of a skill_qiang_ling_toc.
     * @exports Iskill_qiang_ling_toc
     * @interface Iskill_qiang_ling_toc
     * @property {number|null} [playerId] skill_qiang_ling_toc playerId
     * @property {Array.<card_type>|null} [types] skill_qiang_ling_toc types
     */

    /**
     * Constructs a new skill_qiang_ling_toc.
     * @exports skill_qiang_ling_toc
     * @classdesc Represents a skill_qiang_ling_toc.
     * @implements Iskill_qiang_ling_toc
     * @constructor
     * @param {Iskill_qiang_ling_toc=} [properties] Properties to set
     */
    function skill_qiang_ling_toc(properties) {
        this.types = [];
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * skill_qiang_ling_toc playerId.
     * @member {number} playerId
     * @memberof skill_qiang_ling_toc
     * @instance
     */
    skill_qiang_ling_toc.prototype.playerId = 0;

    /**
     * skill_qiang_ling_toc types.
     * @member {Array.<card_type>} types
     * @memberof skill_qiang_ling_toc
     * @instance
     */
    skill_qiang_ling_toc.prototype.types = $util.emptyArray;

    /**
     * Creates a new skill_qiang_ling_toc instance using the specified properties.
     * @function create
     * @memberof skill_qiang_ling_toc
     * @static
     * @param {Iskill_qiang_ling_toc=} [properties] Properties to set
     * @returns {skill_qiang_ling_toc} skill_qiang_ling_toc instance
     */
    skill_qiang_ling_toc.create = function create(properties) {
        return new skill_qiang_ling_toc(properties);
    };

    /**
     * Encodes the specified skill_qiang_ling_toc message. Does not implicitly {@link skill_qiang_ling_toc.verify|verify} messages.
     * @function encode
     * @memberof skill_qiang_ling_toc
     * @static
     * @param {Iskill_qiang_ling_toc} message skill_qiang_ling_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_qiang_ling_toc.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.playerId != null && Object.hasOwnProperty.call(message, "playerId"))
            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.playerId);
        if (message.types != null && message.types.length) {
            writer.uint32(/* id 2, wireType 2 =*/18).fork();
            for (var i = 0; i < message.types.length; ++i)
                writer.int32(message.types[i]);
            writer.ldelim();
        }
        return writer;
    };

    /**
     * Encodes the specified skill_qiang_ling_toc message, length delimited. Does not implicitly {@link skill_qiang_ling_toc.verify|verify} messages.
     * @function encodeDelimited
     * @memberof skill_qiang_ling_toc
     * @static
     * @param {Iskill_qiang_ling_toc} message skill_qiang_ling_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_qiang_ling_toc.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a skill_qiang_ling_toc message from the specified reader or buffer.
     * @function decode
     * @memberof skill_qiang_ling_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {skill_qiang_ling_toc} skill_qiang_ling_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_qiang_ling_toc.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.skill_qiang_ling_toc();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.playerId = reader.uint32();
                    break;
                }
            case 2: {
                    if (!(message.types && message.types.length))
                        message.types = [];
                    if ((tag & 7) === 2) {
                        var end2 = reader.uint32() + reader.pos;
                        while (reader.pos < end2)
                            message.types.push(reader.int32());
                    } else
                        message.types.push(reader.int32());
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a skill_qiang_ling_toc message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof skill_qiang_ling_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {skill_qiang_ling_toc} skill_qiang_ling_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_qiang_ling_toc.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a skill_qiang_ling_toc message.
     * @function verify
     * @memberof skill_qiang_ling_toc
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    skill_qiang_ling_toc.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            if (!$util.isInteger(message.playerId))
                return "playerId: integer expected";
        if (message.types != null && message.hasOwnProperty("types")) {
            if (!Array.isArray(message.types))
                return "types: array expected";
            for (var i = 0; i < message.types.length; ++i)
                switch (message.types[i]) {
                default:
                    return "types: enum value[] expected";
                case 0:
                case 1:
                case 2:
                case 3:
                case 4:
                case 5:
                case 6:
                case 7:
                case 8:
                case 9:
                    break;
                }
        }
        return null;
    };

    /**
     * Creates a skill_qiang_ling_toc message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof skill_qiang_ling_toc
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {skill_qiang_ling_toc} skill_qiang_ling_toc
     */
    skill_qiang_ling_toc.fromObject = function fromObject(object) {
        if (object instanceof $root.skill_qiang_ling_toc)
            return object;
        var message = new $root.skill_qiang_ling_toc();
        if (object.playerId != null)
            message.playerId = object.playerId >>> 0;
        if (object.types) {
            if (!Array.isArray(object.types))
                throw TypeError(".skill_qiang_ling_toc.types: array expected");
            message.types = [];
            for (var i = 0; i < object.types.length; ++i)
                switch (object.types[i]) {
                default:
                    if (typeof object.types[i] === "number") {
                        message.types[i] = object.types[i];
                        break;
                    }
                case "Cheng_Qing":
                case 0:
                    message.types[i] = 0;
                    break;
                case "Shi_Tan":
                case 1:
                    message.types[i] = 1;
                    break;
                case "Wei_Bi":
                case 2:
                    message.types[i] = 2;
                    break;
                case "Li_You":
                case 3:
                    message.types[i] = 3;
                    break;
                case "Ping_Heng":
                case 4:
                    message.types[i] = 4;
                    break;
                case "Po_Yi":
                case 5:
                    message.types[i] = 5;
                    break;
                case "Jie_Huo":
                case 6:
                    message.types[i] = 6;
                    break;
                case "Diao_Bao":
                case 7:
                    message.types[i] = 7;
                    break;
                case "Wu_Dao":
                case 8:
                    message.types[i] = 8;
                    break;
                case "Feng_Yun_Bian_Huan":
                case 9:
                    message.types[i] = 9;
                    break;
                }
        }
        return message;
    };

    /**
     * Creates a plain object from a skill_qiang_ling_toc message. Also converts values to other types if specified.
     * @function toObject
     * @memberof skill_qiang_ling_toc
     * @static
     * @param {skill_qiang_ling_toc} message skill_qiang_ling_toc
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    skill_qiang_ling_toc.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.arrays || options.defaults)
            object.types = [];
        if (options.defaults)
            object.playerId = 0;
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            object.playerId = message.playerId;
        if (message.types && message.types.length) {
            object.types = [];
            for (var j = 0; j < message.types.length; ++j)
                object.types[j] = options.enums === String ? $root.card_type[message.types[j]] === undefined ? message.types[j] : $root.card_type[message.types[j]] : message.types[j];
        }
        return object;
    };

    /**
     * Converts this skill_qiang_ling_toc to JSON.
     * @function toJSON
     * @memberof skill_qiang_ling_toc
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    skill_qiang_ling_toc.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for skill_qiang_ling_toc
     * @function getTypeUrl
     * @memberof skill_qiang_ling_toc
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    skill_qiang_ling_toc.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/skill_qiang_ling_toc";
    };

    return skill_qiang_ling_toc;
})();

$root.skill_jian_ren_a_tos = (function() {

    /**
     * Properties of a skill_jian_ren_a_tos.
     * @exports Iskill_jian_ren_a_tos
     * @interface Iskill_jian_ren_a_tos
     * @property {number|null} [seq] skill_jian_ren_a_tos seq
     */

    /**
     * Constructs a new skill_jian_ren_a_tos.
     * @exports skill_jian_ren_a_tos
     * @classdesc Represents a skill_jian_ren_a_tos.
     * @implements Iskill_jian_ren_a_tos
     * @constructor
     * @param {Iskill_jian_ren_a_tos=} [properties] Properties to set
     */
    function skill_jian_ren_a_tos(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * skill_jian_ren_a_tos seq.
     * @member {number} seq
     * @memberof skill_jian_ren_a_tos
     * @instance
     */
    skill_jian_ren_a_tos.prototype.seq = 0;

    /**
     * Creates a new skill_jian_ren_a_tos instance using the specified properties.
     * @function create
     * @memberof skill_jian_ren_a_tos
     * @static
     * @param {Iskill_jian_ren_a_tos=} [properties] Properties to set
     * @returns {skill_jian_ren_a_tos} skill_jian_ren_a_tos instance
     */
    skill_jian_ren_a_tos.create = function create(properties) {
        return new skill_jian_ren_a_tos(properties);
    };

    /**
     * Encodes the specified skill_jian_ren_a_tos message. Does not implicitly {@link skill_jian_ren_a_tos.verify|verify} messages.
     * @function encode
     * @memberof skill_jian_ren_a_tos
     * @static
     * @param {Iskill_jian_ren_a_tos} message skill_jian_ren_a_tos message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_jian_ren_a_tos.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.seq != null && Object.hasOwnProperty.call(message, "seq"))
            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.seq);
        return writer;
    };

    /**
     * Encodes the specified skill_jian_ren_a_tos message, length delimited. Does not implicitly {@link skill_jian_ren_a_tos.verify|verify} messages.
     * @function encodeDelimited
     * @memberof skill_jian_ren_a_tos
     * @static
     * @param {Iskill_jian_ren_a_tos} message skill_jian_ren_a_tos message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_jian_ren_a_tos.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a skill_jian_ren_a_tos message from the specified reader or buffer.
     * @function decode
     * @memberof skill_jian_ren_a_tos
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {skill_jian_ren_a_tos} skill_jian_ren_a_tos
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_jian_ren_a_tos.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.skill_jian_ren_a_tos();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.seq = reader.uint32();
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a skill_jian_ren_a_tos message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof skill_jian_ren_a_tos
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {skill_jian_ren_a_tos} skill_jian_ren_a_tos
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_jian_ren_a_tos.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a skill_jian_ren_a_tos message.
     * @function verify
     * @memberof skill_jian_ren_a_tos
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    skill_jian_ren_a_tos.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.seq != null && message.hasOwnProperty("seq"))
            if (!$util.isInteger(message.seq))
                return "seq: integer expected";
        return null;
    };

    /**
     * Creates a skill_jian_ren_a_tos message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof skill_jian_ren_a_tos
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {skill_jian_ren_a_tos} skill_jian_ren_a_tos
     */
    skill_jian_ren_a_tos.fromObject = function fromObject(object) {
        if (object instanceof $root.skill_jian_ren_a_tos)
            return object;
        var message = new $root.skill_jian_ren_a_tos();
        if (object.seq != null)
            message.seq = object.seq >>> 0;
        return message;
    };

    /**
     * Creates a plain object from a skill_jian_ren_a_tos message. Also converts values to other types if specified.
     * @function toObject
     * @memberof skill_jian_ren_a_tos
     * @static
     * @param {skill_jian_ren_a_tos} message skill_jian_ren_a_tos
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    skill_jian_ren_a_tos.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults)
            object.seq = 0;
        if (message.seq != null && message.hasOwnProperty("seq"))
            object.seq = message.seq;
        return object;
    };

    /**
     * Converts this skill_jian_ren_a_tos to JSON.
     * @function toJSON
     * @memberof skill_jian_ren_a_tos
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    skill_jian_ren_a_tos.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for skill_jian_ren_a_tos
     * @function getTypeUrl
     * @memberof skill_jian_ren_a_tos
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    skill_jian_ren_a_tos.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/skill_jian_ren_a_tos";
    };

    return skill_jian_ren_a_tos;
})();

$root.skill_jian_ren_a_toc = (function() {

    /**
     * Properties of a skill_jian_ren_a_toc.
     * @exports Iskill_jian_ren_a_toc
     * @interface Iskill_jian_ren_a_toc
     * @property {number|null} [playerId] skill_jian_ren_a_toc playerId
     * @property {Icard|null} [card] skill_jian_ren_a_toc card
     * @property {number|null} [waitingSecond] skill_jian_ren_a_toc waitingSecond
     * @property {number|null} [seq] skill_jian_ren_a_toc seq
     */

    /**
     * Constructs a new skill_jian_ren_a_toc.
     * @exports skill_jian_ren_a_toc
     * @classdesc Represents a skill_jian_ren_a_toc.
     * @implements Iskill_jian_ren_a_toc
     * @constructor
     * @param {Iskill_jian_ren_a_toc=} [properties] Properties to set
     */
    function skill_jian_ren_a_toc(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * skill_jian_ren_a_toc playerId.
     * @member {number} playerId
     * @memberof skill_jian_ren_a_toc
     * @instance
     */
    skill_jian_ren_a_toc.prototype.playerId = 0;

    /**
     * skill_jian_ren_a_toc card.
     * @member {Icard|null|undefined} card
     * @memberof skill_jian_ren_a_toc
     * @instance
     */
    skill_jian_ren_a_toc.prototype.card = null;

    /**
     * skill_jian_ren_a_toc waitingSecond.
     * @member {number} waitingSecond
     * @memberof skill_jian_ren_a_toc
     * @instance
     */
    skill_jian_ren_a_toc.prototype.waitingSecond = 0;

    /**
     * skill_jian_ren_a_toc seq.
     * @member {number} seq
     * @memberof skill_jian_ren_a_toc
     * @instance
     */
    skill_jian_ren_a_toc.prototype.seq = 0;

    /**
     * Creates a new skill_jian_ren_a_toc instance using the specified properties.
     * @function create
     * @memberof skill_jian_ren_a_toc
     * @static
     * @param {Iskill_jian_ren_a_toc=} [properties] Properties to set
     * @returns {skill_jian_ren_a_toc} skill_jian_ren_a_toc instance
     */
    skill_jian_ren_a_toc.create = function create(properties) {
        return new skill_jian_ren_a_toc(properties);
    };

    /**
     * Encodes the specified skill_jian_ren_a_toc message. Does not implicitly {@link skill_jian_ren_a_toc.verify|verify} messages.
     * @function encode
     * @memberof skill_jian_ren_a_toc
     * @static
     * @param {Iskill_jian_ren_a_toc} message skill_jian_ren_a_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_jian_ren_a_toc.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.playerId != null && Object.hasOwnProperty.call(message, "playerId"))
            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.playerId);
        if (message.card != null && Object.hasOwnProperty.call(message, "card"))
            $root.card.encode(message.card, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
        if (message.waitingSecond != null && Object.hasOwnProperty.call(message, "waitingSecond"))
            writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.waitingSecond);
        if (message.seq != null && Object.hasOwnProperty.call(message, "seq"))
            writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.seq);
        return writer;
    };

    /**
     * Encodes the specified skill_jian_ren_a_toc message, length delimited. Does not implicitly {@link skill_jian_ren_a_toc.verify|verify} messages.
     * @function encodeDelimited
     * @memberof skill_jian_ren_a_toc
     * @static
     * @param {Iskill_jian_ren_a_toc} message skill_jian_ren_a_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_jian_ren_a_toc.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a skill_jian_ren_a_toc message from the specified reader or buffer.
     * @function decode
     * @memberof skill_jian_ren_a_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {skill_jian_ren_a_toc} skill_jian_ren_a_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_jian_ren_a_toc.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.skill_jian_ren_a_toc();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.playerId = reader.uint32();
                    break;
                }
            case 2: {
                    message.card = $root.card.decode(reader, reader.uint32());
                    break;
                }
            case 3: {
                    message.waitingSecond = reader.uint32();
                    break;
                }
            case 4: {
                    message.seq = reader.uint32();
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a skill_jian_ren_a_toc message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof skill_jian_ren_a_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {skill_jian_ren_a_toc} skill_jian_ren_a_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_jian_ren_a_toc.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a skill_jian_ren_a_toc message.
     * @function verify
     * @memberof skill_jian_ren_a_toc
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    skill_jian_ren_a_toc.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            if (!$util.isInteger(message.playerId))
                return "playerId: integer expected";
        if (message.card != null && message.hasOwnProperty("card")) {
            var error = $root.card.verify(message.card);
            if (error)
                return "card." + error;
        }
        if (message.waitingSecond != null && message.hasOwnProperty("waitingSecond"))
            if (!$util.isInteger(message.waitingSecond))
                return "waitingSecond: integer expected";
        if (message.seq != null && message.hasOwnProperty("seq"))
            if (!$util.isInteger(message.seq))
                return "seq: integer expected";
        return null;
    };

    /**
     * Creates a skill_jian_ren_a_toc message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof skill_jian_ren_a_toc
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {skill_jian_ren_a_toc} skill_jian_ren_a_toc
     */
    skill_jian_ren_a_toc.fromObject = function fromObject(object) {
        if (object instanceof $root.skill_jian_ren_a_toc)
            return object;
        var message = new $root.skill_jian_ren_a_toc();
        if (object.playerId != null)
            message.playerId = object.playerId >>> 0;
        if (object.card != null) {
            if (typeof object.card !== "object")
                throw TypeError(".skill_jian_ren_a_toc.card: object expected");
            message.card = $root.card.fromObject(object.card);
        }
        if (object.waitingSecond != null)
            message.waitingSecond = object.waitingSecond >>> 0;
        if (object.seq != null)
            message.seq = object.seq >>> 0;
        return message;
    };

    /**
     * Creates a plain object from a skill_jian_ren_a_toc message. Also converts values to other types if specified.
     * @function toObject
     * @memberof skill_jian_ren_a_toc
     * @static
     * @param {skill_jian_ren_a_toc} message skill_jian_ren_a_toc
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    skill_jian_ren_a_toc.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults) {
            object.playerId = 0;
            object.card = null;
            object.waitingSecond = 0;
            object.seq = 0;
        }
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            object.playerId = message.playerId;
        if (message.card != null && message.hasOwnProperty("card"))
            object.card = $root.card.toObject(message.card, options);
        if (message.waitingSecond != null && message.hasOwnProperty("waitingSecond"))
            object.waitingSecond = message.waitingSecond;
        if (message.seq != null && message.hasOwnProperty("seq"))
            object.seq = message.seq;
        return object;
    };

    /**
     * Converts this skill_jian_ren_a_toc to JSON.
     * @function toJSON
     * @memberof skill_jian_ren_a_toc
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    skill_jian_ren_a_toc.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for skill_jian_ren_a_toc
     * @function getTypeUrl
     * @memberof skill_jian_ren_a_toc
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    skill_jian_ren_a_toc.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/skill_jian_ren_a_toc";
    };

    return skill_jian_ren_a_toc;
})();

$root.skill_jian_ren_b_tos = (function() {

    /**
     * Properties of a skill_jian_ren_b_tos.
     * @exports Iskill_jian_ren_b_tos
     * @interface Iskill_jian_ren_b_tos
     * @property {number|null} [targetPlayerId] skill_jian_ren_b_tos targetPlayerId
     * @property {number|null} [cardId] skill_jian_ren_b_tos cardId
     * @property {number|null} [seq] skill_jian_ren_b_tos seq
     */

    /**
     * Constructs a new skill_jian_ren_b_tos.
     * @exports skill_jian_ren_b_tos
     * @classdesc Represents a skill_jian_ren_b_tos.
     * @implements Iskill_jian_ren_b_tos
     * @constructor
     * @param {Iskill_jian_ren_b_tos=} [properties] Properties to set
     */
    function skill_jian_ren_b_tos(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * skill_jian_ren_b_tos targetPlayerId.
     * @member {number} targetPlayerId
     * @memberof skill_jian_ren_b_tos
     * @instance
     */
    skill_jian_ren_b_tos.prototype.targetPlayerId = 0;

    /**
     * skill_jian_ren_b_tos cardId.
     * @member {number} cardId
     * @memberof skill_jian_ren_b_tos
     * @instance
     */
    skill_jian_ren_b_tos.prototype.cardId = 0;

    /**
     * skill_jian_ren_b_tos seq.
     * @member {number} seq
     * @memberof skill_jian_ren_b_tos
     * @instance
     */
    skill_jian_ren_b_tos.prototype.seq = 0;

    /**
     * Creates a new skill_jian_ren_b_tos instance using the specified properties.
     * @function create
     * @memberof skill_jian_ren_b_tos
     * @static
     * @param {Iskill_jian_ren_b_tos=} [properties] Properties to set
     * @returns {skill_jian_ren_b_tos} skill_jian_ren_b_tos instance
     */
    skill_jian_ren_b_tos.create = function create(properties) {
        return new skill_jian_ren_b_tos(properties);
    };

    /**
     * Encodes the specified skill_jian_ren_b_tos message. Does not implicitly {@link skill_jian_ren_b_tos.verify|verify} messages.
     * @function encode
     * @memberof skill_jian_ren_b_tos
     * @static
     * @param {Iskill_jian_ren_b_tos} message skill_jian_ren_b_tos message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_jian_ren_b_tos.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.targetPlayerId != null && Object.hasOwnProperty.call(message, "targetPlayerId"))
            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.targetPlayerId);
        if (message.cardId != null && Object.hasOwnProperty.call(message, "cardId"))
            writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.cardId);
        if (message.seq != null && Object.hasOwnProperty.call(message, "seq"))
            writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.seq);
        return writer;
    };

    /**
     * Encodes the specified skill_jian_ren_b_tos message, length delimited. Does not implicitly {@link skill_jian_ren_b_tos.verify|verify} messages.
     * @function encodeDelimited
     * @memberof skill_jian_ren_b_tos
     * @static
     * @param {Iskill_jian_ren_b_tos} message skill_jian_ren_b_tos message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_jian_ren_b_tos.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a skill_jian_ren_b_tos message from the specified reader or buffer.
     * @function decode
     * @memberof skill_jian_ren_b_tos
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {skill_jian_ren_b_tos} skill_jian_ren_b_tos
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_jian_ren_b_tos.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.skill_jian_ren_b_tos();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.targetPlayerId = reader.uint32();
                    break;
                }
            case 2: {
                    message.cardId = reader.uint32();
                    break;
                }
            case 3: {
                    message.seq = reader.uint32();
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a skill_jian_ren_b_tos message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof skill_jian_ren_b_tos
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {skill_jian_ren_b_tos} skill_jian_ren_b_tos
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_jian_ren_b_tos.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a skill_jian_ren_b_tos message.
     * @function verify
     * @memberof skill_jian_ren_b_tos
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    skill_jian_ren_b_tos.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.targetPlayerId != null && message.hasOwnProperty("targetPlayerId"))
            if (!$util.isInteger(message.targetPlayerId))
                return "targetPlayerId: integer expected";
        if (message.cardId != null && message.hasOwnProperty("cardId"))
            if (!$util.isInteger(message.cardId))
                return "cardId: integer expected";
        if (message.seq != null && message.hasOwnProperty("seq"))
            if (!$util.isInteger(message.seq))
                return "seq: integer expected";
        return null;
    };

    /**
     * Creates a skill_jian_ren_b_tos message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof skill_jian_ren_b_tos
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {skill_jian_ren_b_tos} skill_jian_ren_b_tos
     */
    skill_jian_ren_b_tos.fromObject = function fromObject(object) {
        if (object instanceof $root.skill_jian_ren_b_tos)
            return object;
        var message = new $root.skill_jian_ren_b_tos();
        if (object.targetPlayerId != null)
            message.targetPlayerId = object.targetPlayerId >>> 0;
        if (object.cardId != null)
            message.cardId = object.cardId >>> 0;
        if (object.seq != null)
            message.seq = object.seq >>> 0;
        return message;
    };

    /**
     * Creates a plain object from a skill_jian_ren_b_tos message. Also converts values to other types if specified.
     * @function toObject
     * @memberof skill_jian_ren_b_tos
     * @static
     * @param {skill_jian_ren_b_tos} message skill_jian_ren_b_tos
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    skill_jian_ren_b_tos.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults) {
            object.targetPlayerId = 0;
            object.cardId = 0;
            object.seq = 0;
        }
        if (message.targetPlayerId != null && message.hasOwnProperty("targetPlayerId"))
            object.targetPlayerId = message.targetPlayerId;
        if (message.cardId != null && message.hasOwnProperty("cardId"))
            object.cardId = message.cardId;
        if (message.seq != null && message.hasOwnProperty("seq"))
            object.seq = message.seq;
        return object;
    };

    /**
     * Converts this skill_jian_ren_b_tos to JSON.
     * @function toJSON
     * @memberof skill_jian_ren_b_tos
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    skill_jian_ren_b_tos.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for skill_jian_ren_b_tos
     * @function getTypeUrl
     * @memberof skill_jian_ren_b_tos
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    skill_jian_ren_b_tos.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/skill_jian_ren_b_tos";
    };

    return skill_jian_ren_b_tos;
})();

$root.skill_jian_ren_b_toc = (function() {

    /**
     * Properties of a skill_jian_ren_b_toc.
     * @exports Iskill_jian_ren_b_toc
     * @interface Iskill_jian_ren_b_toc
     * @property {number|null} [playerId] skill_jian_ren_b_toc playerId
     * @property {number|null} [targetPlayerId] skill_jian_ren_b_toc targetPlayerId
     * @property {number|null} [cardId] skill_jian_ren_b_toc cardId
     */

    /**
     * Constructs a new skill_jian_ren_b_toc.
     * @exports skill_jian_ren_b_toc
     * @classdesc Represents a skill_jian_ren_b_toc.
     * @implements Iskill_jian_ren_b_toc
     * @constructor
     * @param {Iskill_jian_ren_b_toc=} [properties] Properties to set
     */
    function skill_jian_ren_b_toc(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * skill_jian_ren_b_toc playerId.
     * @member {number} playerId
     * @memberof skill_jian_ren_b_toc
     * @instance
     */
    skill_jian_ren_b_toc.prototype.playerId = 0;

    /**
     * skill_jian_ren_b_toc targetPlayerId.
     * @member {number} targetPlayerId
     * @memberof skill_jian_ren_b_toc
     * @instance
     */
    skill_jian_ren_b_toc.prototype.targetPlayerId = 0;

    /**
     * skill_jian_ren_b_toc cardId.
     * @member {number} cardId
     * @memberof skill_jian_ren_b_toc
     * @instance
     */
    skill_jian_ren_b_toc.prototype.cardId = 0;

    /**
     * Creates a new skill_jian_ren_b_toc instance using the specified properties.
     * @function create
     * @memberof skill_jian_ren_b_toc
     * @static
     * @param {Iskill_jian_ren_b_toc=} [properties] Properties to set
     * @returns {skill_jian_ren_b_toc} skill_jian_ren_b_toc instance
     */
    skill_jian_ren_b_toc.create = function create(properties) {
        return new skill_jian_ren_b_toc(properties);
    };

    /**
     * Encodes the specified skill_jian_ren_b_toc message. Does not implicitly {@link skill_jian_ren_b_toc.verify|verify} messages.
     * @function encode
     * @memberof skill_jian_ren_b_toc
     * @static
     * @param {Iskill_jian_ren_b_toc} message skill_jian_ren_b_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_jian_ren_b_toc.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.playerId != null && Object.hasOwnProperty.call(message, "playerId"))
            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.playerId);
        if (message.targetPlayerId != null && Object.hasOwnProperty.call(message, "targetPlayerId"))
            writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.targetPlayerId);
        if (message.cardId != null && Object.hasOwnProperty.call(message, "cardId"))
            writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.cardId);
        return writer;
    };

    /**
     * Encodes the specified skill_jian_ren_b_toc message, length delimited. Does not implicitly {@link skill_jian_ren_b_toc.verify|verify} messages.
     * @function encodeDelimited
     * @memberof skill_jian_ren_b_toc
     * @static
     * @param {Iskill_jian_ren_b_toc} message skill_jian_ren_b_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_jian_ren_b_toc.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a skill_jian_ren_b_toc message from the specified reader or buffer.
     * @function decode
     * @memberof skill_jian_ren_b_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {skill_jian_ren_b_toc} skill_jian_ren_b_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_jian_ren_b_toc.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.skill_jian_ren_b_toc();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.playerId = reader.uint32();
                    break;
                }
            case 2: {
                    message.targetPlayerId = reader.uint32();
                    break;
                }
            case 3: {
                    message.cardId = reader.uint32();
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a skill_jian_ren_b_toc message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof skill_jian_ren_b_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {skill_jian_ren_b_toc} skill_jian_ren_b_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_jian_ren_b_toc.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a skill_jian_ren_b_toc message.
     * @function verify
     * @memberof skill_jian_ren_b_toc
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    skill_jian_ren_b_toc.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            if (!$util.isInteger(message.playerId))
                return "playerId: integer expected";
        if (message.targetPlayerId != null && message.hasOwnProperty("targetPlayerId"))
            if (!$util.isInteger(message.targetPlayerId))
                return "targetPlayerId: integer expected";
        if (message.cardId != null && message.hasOwnProperty("cardId"))
            if (!$util.isInteger(message.cardId))
                return "cardId: integer expected";
        return null;
    };

    /**
     * Creates a skill_jian_ren_b_toc message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof skill_jian_ren_b_toc
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {skill_jian_ren_b_toc} skill_jian_ren_b_toc
     */
    skill_jian_ren_b_toc.fromObject = function fromObject(object) {
        if (object instanceof $root.skill_jian_ren_b_toc)
            return object;
        var message = new $root.skill_jian_ren_b_toc();
        if (object.playerId != null)
            message.playerId = object.playerId >>> 0;
        if (object.targetPlayerId != null)
            message.targetPlayerId = object.targetPlayerId >>> 0;
        if (object.cardId != null)
            message.cardId = object.cardId >>> 0;
        return message;
    };

    /**
     * Creates a plain object from a skill_jian_ren_b_toc message. Also converts values to other types if specified.
     * @function toObject
     * @memberof skill_jian_ren_b_toc
     * @static
     * @param {skill_jian_ren_b_toc} message skill_jian_ren_b_toc
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    skill_jian_ren_b_toc.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults) {
            object.playerId = 0;
            object.targetPlayerId = 0;
            object.cardId = 0;
        }
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            object.playerId = message.playerId;
        if (message.targetPlayerId != null && message.hasOwnProperty("targetPlayerId"))
            object.targetPlayerId = message.targetPlayerId;
        if (message.cardId != null && message.hasOwnProperty("cardId"))
            object.cardId = message.cardId;
        return object;
    };

    /**
     * Converts this skill_jian_ren_b_toc to JSON.
     * @function toJSON
     * @memberof skill_jian_ren_b_toc
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    skill_jian_ren_b_toc.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for skill_jian_ren_b_toc
     * @function getTypeUrl
     * @memberof skill_jian_ren_b_toc
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    skill_jian_ren_b_toc.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/skill_jian_ren_b_toc";
    };

    return skill_jian_ren_b_toc;
})();

$root.skill_sou_ji_a_tos = (function() {

    /**
     * Properties of a skill_sou_ji_a_tos.
     * @exports Iskill_sou_ji_a_tos
     * @interface Iskill_sou_ji_a_tos
     * @property {number|null} [targetPlayerId] skill_sou_ji_a_tos targetPlayerId
     * @property {number|null} [seq] skill_sou_ji_a_tos seq
     */

    /**
     * Constructs a new skill_sou_ji_a_tos.
     * @exports skill_sou_ji_a_tos
     * @classdesc Represents a skill_sou_ji_a_tos.
     * @implements Iskill_sou_ji_a_tos
     * @constructor
     * @param {Iskill_sou_ji_a_tos=} [properties] Properties to set
     */
    function skill_sou_ji_a_tos(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * skill_sou_ji_a_tos targetPlayerId.
     * @member {number} targetPlayerId
     * @memberof skill_sou_ji_a_tos
     * @instance
     */
    skill_sou_ji_a_tos.prototype.targetPlayerId = 0;

    /**
     * skill_sou_ji_a_tos seq.
     * @member {number} seq
     * @memberof skill_sou_ji_a_tos
     * @instance
     */
    skill_sou_ji_a_tos.prototype.seq = 0;

    /**
     * Creates a new skill_sou_ji_a_tos instance using the specified properties.
     * @function create
     * @memberof skill_sou_ji_a_tos
     * @static
     * @param {Iskill_sou_ji_a_tos=} [properties] Properties to set
     * @returns {skill_sou_ji_a_tos} skill_sou_ji_a_tos instance
     */
    skill_sou_ji_a_tos.create = function create(properties) {
        return new skill_sou_ji_a_tos(properties);
    };

    /**
     * Encodes the specified skill_sou_ji_a_tos message. Does not implicitly {@link skill_sou_ji_a_tos.verify|verify} messages.
     * @function encode
     * @memberof skill_sou_ji_a_tos
     * @static
     * @param {Iskill_sou_ji_a_tos} message skill_sou_ji_a_tos message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_sou_ji_a_tos.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.targetPlayerId != null && Object.hasOwnProperty.call(message, "targetPlayerId"))
            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.targetPlayerId);
        if (message.seq != null && Object.hasOwnProperty.call(message, "seq"))
            writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.seq);
        return writer;
    };

    /**
     * Encodes the specified skill_sou_ji_a_tos message, length delimited. Does not implicitly {@link skill_sou_ji_a_tos.verify|verify} messages.
     * @function encodeDelimited
     * @memberof skill_sou_ji_a_tos
     * @static
     * @param {Iskill_sou_ji_a_tos} message skill_sou_ji_a_tos message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_sou_ji_a_tos.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a skill_sou_ji_a_tos message from the specified reader or buffer.
     * @function decode
     * @memberof skill_sou_ji_a_tos
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {skill_sou_ji_a_tos} skill_sou_ji_a_tos
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_sou_ji_a_tos.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.skill_sou_ji_a_tos();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.targetPlayerId = reader.uint32();
                    break;
                }
            case 2: {
                    message.seq = reader.uint32();
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a skill_sou_ji_a_tos message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof skill_sou_ji_a_tos
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {skill_sou_ji_a_tos} skill_sou_ji_a_tos
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_sou_ji_a_tos.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a skill_sou_ji_a_tos message.
     * @function verify
     * @memberof skill_sou_ji_a_tos
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    skill_sou_ji_a_tos.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.targetPlayerId != null && message.hasOwnProperty("targetPlayerId"))
            if (!$util.isInteger(message.targetPlayerId))
                return "targetPlayerId: integer expected";
        if (message.seq != null && message.hasOwnProperty("seq"))
            if (!$util.isInteger(message.seq))
                return "seq: integer expected";
        return null;
    };

    /**
     * Creates a skill_sou_ji_a_tos message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof skill_sou_ji_a_tos
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {skill_sou_ji_a_tos} skill_sou_ji_a_tos
     */
    skill_sou_ji_a_tos.fromObject = function fromObject(object) {
        if (object instanceof $root.skill_sou_ji_a_tos)
            return object;
        var message = new $root.skill_sou_ji_a_tos();
        if (object.targetPlayerId != null)
            message.targetPlayerId = object.targetPlayerId >>> 0;
        if (object.seq != null)
            message.seq = object.seq >>> 0;
        return message;
    };

    /**
     * Creates a plain object from a skill_sou_ji_a_tos message. Also converts values to other types if specified.
     * @function toObject
     * @memberof skill_sou_ji_a_tos
     * @static
     * @param {skill_sou_ji_a_tos} message skill_sou_ji_a_tos
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    skill_sou_ji_a_tos.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults) {
            object.targetPlayerId = 0;
            object.seq = 0;
        }
        if (message.targetPlayerId != null && message.hasOwnProperty("targetPlayerId"))
            object.targetPlayerId = message.targetPlayerId;
        if (message.seq != null && message.hasOwnProperty("seq"))
            object.seq = message.seq;
        return object;
    };

    /**
     * Converts this skill_sou_ji_a_tos to JSON.
     * @function toJSON
     * @memberof skill_sou_ji_a_tos
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    skill_sou_ji_a_tos.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for skill_sou_ji_a_tos
     * @function getTypeUrl
     * @memberof skill_sou_ji_a_tos
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    skill_sou_ji_a_tos.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/skill_sou_ji_a_tos";
    };

    return skill_sou_ji_a_tos;
})();

$root.skill_sou_ji_a_toc = (function() {

    /**
     * Properties of a skill_sou_ji_a_toc.
     * @exports Iskill_sou_ji_a_toc
     * @interface Iskill_sou_ji_a_toc
     * @property {number|null} [playerId] skill_sou_ji_a_toc playerId
     * @property {number|null} [targetPlayerId] skill_sou_ji_a_toc targetPlayerId
     * @property {Array.<Icard>|null} [cards] skill_sou_ji_a_toc cards
     * @property {Icard|null} [messageCard] skill_sou_ji_a_toc messageCard
     * @property {number|null} [waitingSecond] skill_sou_ji_a_toc waitingSecond
     * @property {number|null} [seq] skill_sou_ji_a_toc seq
     */

    /**
     * Constructs a new skill_sou_ji_a_toc.
     * @exports skill_sou_ji_a_toc
     * @classdesc Represents a skill_sou_ji_a_toc.
     * @implements Iskill_sou_ji_a_toc
     * @constructor
     * @param {Iskill_sou_ji_a_toc=} [properties] Properties to set
     */
    function skill_sou_ji_a_toc(properties) {
        this.cards = [];
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * skill_sou_ji_a_toc playerId.
     * @member {number} playerId
     * @memberof skill_sou_ji_a_toc
     * @instance
     */
    skill_sou_ji_a_toc.prototype.playerId = 0;

    /**
     * skill_sou_ji_a_toc targetPlayerId.
     * @member {number} targetPlayerId
     * @memberof skill_sou_ji_a_toc
     * @instance
     */
    skill_sou_ji_a_toc.prototype.targetPlayerId = 0;

    /**
     * skill_sou_ji_a_toc cards.
     * @member {Array.<Icard>} cards
     * @memberof skill_sou_ji_a_toc
     * @instance
     */
    skill_sou_ji_a_toc.prototype.cards = $util.emptyArray;

    /**
     * skill_sou_ji_a_toc messageCard.
     * @member {Icard|null|undefined} messageCard
     * @memberof skill_sou_ji_a_toc
     * @instance
     */
    skill_sou_ji_a_toc.prototype.messageCard = null;

    /**
     * skill_sou_ji_a_toc waitingSecond.
     * @member {number} waitingSecond
     * @memberof skill_sou_ji_a_toc
     * @instance
     */
    skill_sou_ji_a_toc.prototype.waitingSecond = 0;

    /**
     * skill_sou_ji_a_toc seq.
     * @member {number} seq
     * @memberof skill_sou_ji_a_toc
     * @instance
     */
    skill_sou_ji_a_toc.prototype.seq = 0;

    /**
     * Creates a new skill_sou_ji_a_toc instance using the specified properties.
     * @function create
     * @memberof skill_sou_ji_a_toc
     * @static
     * @param {Iskill_sou_ji_a_toc=} [properties] Properties to set
     * @returns {skill_sou_ji_a_toc} skill_sou_ji_a_toc instance
     */
    skill_sou_ji_a_toc.create = function create(properties) {
        return new skill_sou_ji_a_toc(properties);
    };

    /**
     * Encodes the specified skill_sou_ji_a_toc message. Does not implicitly {@link skill_sou_ji_a_toc.verify|verify} messages.
     * @function encode
     * @memberof skill_sou_ji_a_toc
     * @static
     * @param {Iskill_sou_ji_a_toc} message skill_sou_ji_a_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_sou_ji_a_toc.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.playerId != null && Object.hasOwnProperty.call(message, "playerId"))
            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.playerId);
        if (message.targetPlayerId != null && Object.hasOwnProperty.call(message, "targetPlayerId"))
            writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.targetPlayerId);
        if (message.cards != null && message.cards.length)
            for (var i = 0; i < message.cards.length; ++i)
                $root.card.encode(message.cards[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
        if (message.messageCard != null && Object.hasOwnProperty.call(message, "messageCard"))
            $root.card.encode(message.messageCard, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
        if (message.waitingSecond != null && Object.hasOwnProperty.call(message, "waitingSecond"))
            writer.uint32(/* id 5, wireType 0 =*/40).uint32(message.waitingSecond);
        if (message.seq != null && Object.hasOwnProperty.call(message, "seq"))
            writer.uint32(/* id 6, wireType 0 =*/48).uint32(message.seq);
        return writer;
    };

    /**
     * Encodes the specified skill_sou_ji_a_toc message, length delimited. Does not implicitly {@link skill_sou_ji_a_toc.verify|verify} messages.
     * @function encodeDelimited
     * @memberof skill_sou_ji_a_toc
     * @static
     * @param {Iskill_sou_ji_a_toc} message skill_sou_ji_a_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_sou_ji_a_toc.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a skill_sou_ji_a_toc message from the specified reader or buffer.
     * @function decode
     * @memberof skill_sou_ji_a_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {skill_sou_ji_a_toc} skill_sou_ji_a_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_sou_ji_a_toc.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.skill_sou_ji_a_toc();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.playerId = reader.uint32();
                    break;
                }
            case 2: {
                    message.targetPlayerId = reader.uint32();
                    break;
                }
            case 3: {
                    if (!(message.cards && message.cards.length))
                        message.cards = [];
                    message.cards.push($root.card.decode(reader, reader.uint32()));
                    break;
                }
            case 4: {
                    message.messageCard = $root.card.decode(reader, reader.uint32());
                    break;
                }
            case 5: {
                    message.waitingSecond = reader.uint32();
                    break;
                }
            case 6: {
                    message.seq = reader.uint32();
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a skill_sou_ji_a_toc message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof skill_sou_ji_a_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {skill_sou_ji_a_toc} skill_sou_ji_a_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_sou_ji_a_toc.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a skill_sou_ji_a_toc message.
     * @function verify
     * @memberof skill_sou_ji_a_toc
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    skill_sou_ji_a_toc.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            if (!$util.isInteger(message.playerId))
                return "playerId: integer expected";
        if (message.targetPlayerId != null && message.hasOwnProperty("targetPlayerId"))
            if (!$util.isInteger(message.targetPlayerId))
                return "targetPlayerId: integer expected";
        if (message.cards != null && message.hasOwnProperty("cards")) {
            if (!Array.isArray(message.cards))
                return "cards: array expected";
            for (var i = 0; i < message.cards.length; ++i) {
                var error = $root.card.verify(message.cards[i]);
                if (error)
                    return "cards." + error;
            }
        }
        if (message.messageCard != null && message.hasOwnProperty("messageCard")) {
            var error = $root.card.verify(message.messageCard);
            if (error)
                return "messageCard." + error;
        }
        if (message.waitingSecond != null && message.hasOwnProperty("waitingSecond"))
            if (!$util.isInteger(message.waitingSecond))
                return "waitingSecond: integer expected";
        if (message.seq != null && message.hasOwnProperty("seq"))
            if (!$util.isInteger(message.seq))
                return "seq: integer expected";
        return null;
    };

    /**
     * Creates a skill_sou_ji_a_toc message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof skill_sou_ji_a_toc
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {skill_sou_ji_a_toc} skill_sou_ji_a_toc
     */
    skill_sou_ji_a_toc.fromObject = function fromObject(object) {
        if (object instanceof $root.skill_sou_ji_a_toc)
            return object;
        var message = new $root.skill_sou_ji_a_toc();
        if (object.playerId != null)
            message.playerId = object.playerId >>> 0;
        if (object.targetPlayerId != null)
            message.targetPlayerId = object.targetPlayerId >>> 0;
        if (object.cards) {
            if (!Array.isArray(object.cards))
                throw TypeError(".skill_sou_ji_a_toc.cards: array expected");
            message.cards = [];
            for (var i = 0; i < object.cards.length; ++i) {
                if (typeof object.cards[i] !== "object")
                    throw TypeError(".skill_sou_ji_a_toc.cards: object expected");
                message.cards[i] = $root.card.fromObject(object.cards[i]);
            }
        }
        if (object.messageCard != null) {
            if (typeof object.messageCard !== "object")
                throw TypeError(".skill_sou_ji_a_toc.messageCard: object expected");
            message.messageCard = $root.card.fromObject(object.messageCard);
        }
        if (object.waitingSecond != null)
            message.waitingSecond = object.waitingSecond >>> 0;
        if (object.seq != null)
            message.seq = object.seq >>> 0;
        return message;
    };

    /**
     * Creates a plain object from a skill_sou_ji_a_toc message. Also converts values to other types if specified.
     * @function toObject
     * @memberof skill_sou_ji_a_toc
     * @static
     * @param {skill_sou_ji_a_toc} message skill_sou_ji_a_toc
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    skill_sou_ji_a_toc.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.arrays || options.defaults)
            object.cards = [];
        if (options.defaults) {
            object.playerId = 0;
            object.targetPlayerId = 0;
            object.messageCard = null;
            object.waitingSecond = 0;
            object.seq = 0;
        }
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            object.playerId = message.playerId;
        if (message.targetPlayerId != null && message.hasOwnProperty("targetPlayerId"))
            object.targetPlayerId = message.targetPlayerId;
        if (message.cards && message.cards.length) {
            object.cards = [];
            for (var j = 0; j < message.cards.length; ++j)
                object.cards[j] = $root.card.toObject(message.cards[j], options);
        }
        if (message.messageCard != null && message.hasOwnProperty("messageCard"))
            object.messageCard = $root.card.toObject(message.messageCard, options);
        if (message.waitingSecond != null && message.hasOwnProperty("waitingSecond"))
            object.waitingSecond = message.waitingSecond;
        if (message.seq != null && message.hasOwnProperty("seq"))
            object.seq = message.seq;
        return object;
    };

    /**
     * Converts this skill_sou_ji_a_toc to JSON.
     * @function toJSON
     * @memberof skill_sou_ji_a_toc
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    skill_sou_ji_a_toc.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for skill_sou_ji_a_toc
     * @function getTypeUrl
     * @memberof skill_sou_ji_a_toc
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    skill_sou_ji_a_toc.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/skill_sou_ji_a_toc";
    };

    return skill_sou_ji_a_toc;
})();

$root.skill_sou_ji_b_tos = (function() {

    /**
     * Properties of a skill_sou_ji_b_tos.
     * @exports Iskill_sou_ji_b_tos
     * @interface Iskill_sou_ji_b_tos
     * @property {Array.<number>|null} [cardIds] skill_sou_ji_b_tos cardIds
     * @property {boolean|null} [messageCard] skill_sou_ji_b_tos messageCard
     * @property {number|null} [seq] skill_sou_ji_b_tos seq
     */

    /**
     * Constructs a new skill_sou_ji_b_tos.
     * @exports skill_sou_ji_b_tos
     * @classdesc Represents a skill_sou_ji_b_tos.
     * @implements Iskill_sou_ji_b_tos
     * @constructor
     * @param {Iskill_sou_ji_b_tos=} [properties] Properties to set
     */
    function skill_sou_ji_b_tos(properties) {
        this.cardIds = [];
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * skill_sou_ji_b_tos cardIds.
     * @member {Array.<number>} cardIds
     * @memberof skill_sou_ji_b_tos
     * @instance
     */
    skill_sou_ji_b_tos.prototype.cardIds = $util.emptyArray;

    /**
     * skill_sou_ji_b_tos messageCard.
     * @member {boolean} messageCard
     * @memberof skill_sou_ji_b_tos
     * @instance
     */
    skill_sou_ji_b_tos.prototype.messageCard = false;

    /**
     * skill_sou_ji_b_tos seq.
     * @member {number} seq
     * @memberof skill_sou_ji_b_tos
     * @instance
     */
    skill_sou_ji_b_tos.prototype.seq = 0;

    /**
     * Creates a new skill_sou_ji_b_tos instance using the specified properties.
     * @function create
     * @memberof skill_sou_ji_b_tos
     * @static
     * @param {Iskill_sou_ji_b_tos=} [properties] Properties to set
     * @returns {skill_sou_ji_b_tos} skill_sou_ji_b_tos instance
     */
    skill_sou_ji_b_tos.create = function create(properties) {
        return new skill_sou_ji_b_tos(properties);
    };

    /**
     * Encodes the specified skill_sou_ji_b_tos message. Does not implicitly {@link skill_sou_ji_b_tos.verify|verify} messages.
     * @function encode
     * @memberof skill_sou_ji_b_tos
     * @static
     * @param {Iskill_sou_ji_b_tos} message skill_sou_ji_b_tos message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_sou_ji_b_tos.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.cardIds != null && message.cardIds.length) {
            writer.uint32(/* id 1, wireType 2 =*/10).fork();
            for (var i = 0; i < message.cardIds.length; ++i)
                writer.uint32(message.cardIds[i]);
            writer.ldelim();
        }
        if (message.messageCard != null && Object.hasOwnProperty.call(message, "messageCard"))
            writer.uint32(/* id 2, wireType 0 =*/16).bool(message.messageCard);
        if (message.seq != null && Object.hasOwnProperty.call(message, "seq"))
            writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.seq);
        return writer;
    };

    /**
     * Encodes the specified skill_sou_ji_b_tos message, length delimited. Does not implicitly {@link skill_sou_ji_b_tos.verify|verify} messages.
     * @function encodeDelimited
     * @memberof skill_sou_ji_b_tos
     * @static
     * @param {Iskill_sou_ji_b_tos} message skill_sou_ji_b_tos message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_sou_ji_b_tos.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a skill_sou_ji_b_tos message from the specified reader or buffer.
     * @function decode
     * @memberof skill_sou_ji_b_tos
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {skill_sou_ji_b_tos} skill_sou_ji_b_tos
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_sou_ji_b_tos.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.skill_sou_ji_b_tos();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    if (!(message.cardIds && message.cardIds.length))
                        message.cardIds = [];
                    if ((tag & 7) === 2) {
                        var end2 = reader.uint32() + reader.pos;
                        while (reader.pos < end2)
                            message.cardIds.push(reader.uint32());
                    } else
                        message.cardIds.push(reader.uint32());
                    break;
                }
            case 2: {
                    message.messageCard = reader.bool();
                    break;
                }
            case 3: {
                    message.seq = reader.uint32();
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a skill_sou_ji_b_tos message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof skill_sou_ji_b_tos
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {skill_sou_ji_b_tos} skill_sou_ji_b_tos
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_sou_ji_b_tos.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a skill_sou_ji_b_tos message.
     * @function verify
     * @memberof skill_sou_ji_b_tos
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    skill_sou_ji_b_tos.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.cardIds != null && message.hasOwnProperty("cardIds")) {
            if (!Array.isArray(message.cardIds))
                return "cardIds: array expected";
            for (var i = 0; i < message.cardIds.length; ++i)
                if (!$util.isInteger(message.cardIds[i]))
                    return "cardIds: integer[] expected";
        }
        if (message.messageCard != null && message.hasOwnProperty("messageCard"))
            if (typeof message.messageCard !== "boolean")
                return "messageCard: boolean expected";
        if (message.seq != null && message.hasOwnProperty("seq"))
            if (!$util.isInteger(message.seq))
                return "seq: integer expected";
        return null;
    };

    /**
     * Creates a skill_sou_ji_b_tos message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof skill_sou_ji_b_tos
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {skill_sou_ji_b_tos} skill_sou_ji_b_tos
     */
    skill_sou_ji_b_tos.fromObject = function fromObject(object) {
        if (object instanceof $root.skill_sou_ji_b_tos)
            return object;
        var message = new $root.skill_sou_ji_b_tos();
        if (object.cardIds) {
            if (!Array.isArray(object.cardIds))
                throw TypeError(".skill_sou_ji_b_tos.cardIds: array expected");
            message.cardIds = [];
            for (var i = 0; i < object.cardIds.length; ++i)
                message.cardIds[i] = object.cardIds[i] >>> 0;
        }
        if (object.messageCard != null)
            message.messageCard = Boolean(object.messageCard);
        if (object.seq != null)
            message.seq = object.seq >>> 0;
        return message;
    };

    /**
     * Creates a plain object from a skill_sou_ji_b_tos message. Also converts values to other types if specified.
     * @function toObject
     * @memberof skill_sou_ji_b_tos
     * @static
     * @param {skill_sou_ji_b_tos} message skill_sou_ji_b_tos
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    skill_sou_ji_b_tos.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.arrays || options.defaults)
            object.cardIds = [];
        if (options.defaults) {
            object.messageCard = false;
            object.seq = 0;
        }
        if (message.cardIds && message.cardIds.length) {
            object.cardIds = [];
            for (var j = 0; j < message.cardIds.length; ++j)
                object.cardIds[j] = message.cardIds[j];
        }
        if (message.messageCard != null && message.hasOwnProperty("messageCard"))
            object.messageCard = message.messageCard;
        if (message.seq != null && message.hasOwnProperty("seq"))
            object.seq = message.seq;
        return object;
    };

    /**
     * Converts this skill_sou_ji_b_tos to JSON.
     * @function toJSON
     * @memberof skill_sou_ji_b_tos
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    skill_sou_ji_b_tos.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for skill_sou_ji_b_tos
     * @function getTypeUrl
     * @memberof skill_sou_ji_b_tos
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    skill_sou_ji_b_tos.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/skill_sou_ji_b_tos";
    };

    return skill_sou_ji_b_tos;
})();

$root.skill_sou_ji_b_toc = (function() {

    /**
     * Properties of a skill_sou_ji_b_toc.
     * @exports Iskill_sou_ji_b_toc
     * @interface Iskill_sou_ji_b_toc
     * @property {number|null} [playerId] skill_sou_ji_b_toc playerId
     * @property {number|null} [targetPlayerId] skill_sou_ji_b_toc targetPlayerId
     * @property {Array.<Icard>|null} [cards] skill_sou_ji_b_toc cards
     * @property {Icard|null} [messageCard] skill_sou_ji_b_toc messageCard
     */

    /**
     * Constructs a new skill_sou_ji_b_toc.
     * @exports skill_sou_ji_b_toc
     * @classdesc Represents a skill_sou_ji_b_toc.
     * @implements Iskill_sou_ji_b_toc
     * @constructor
     * @param {Iskill_sou_ji_b_toc=} [properties] Properties to set
     */
    function skill_sou_ji_b_toc(properties) {
        this.cards = [];
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * skill_sou_ji_b_toc playerId.
     * @member {number} playerId
     * @memberof skill_sou_ji_b_toc
     * @instance
     */
    skill_sou_ji_b_toc.prototype.playerId = 0;

    /**
     * skill_sou_ji_b_toc targetPlayerId.
     * @member {number} targetPlayerId
     * @memberof skill_sou_ji_b_toc
     * @instance
     */
    skill_sou_ji_b_toc.prototype.targetPlayerId = 0;

    /**
     * skill_sou_ji_b_toc cards.
     * @member {Array.<Icard>} cards
     * @memberof skill_sou_ji_b_toc
     * @instance
     */
    skill_sou_ji_b_toc.prototype.cards = $util.emptyArray;

    /**
     * skill_sou_ji_b_toc messageCard.
     * @member {Icard|null|undefined} messageCard
     * @memberof skill_sou_ji_b_toc
     * @instance
     */
    skill_sou_ji_b_toc.prototype.messageCard = null;

    /**
     * Creates a new skill_sou_ji_b_toc instance using the specified properties.
     * @function create
     * @memberof skill_sou_ji_b_toc
     * @static
     * @param {Iskill_sou_ji_b_toc=} [properties] Properties to set
     * @returns {skill_sou_ji_b_toc} skill_sou_ji_b_toc instance
     */
    skill_sou_ji_b_toc.create = function create(properties) {
        return new skill_sou_ji_b_toc(properties);
    };

    /**
     * Encodes the specified skill_sou_ji_b_toc message. Does not implicitly {@link skill_sou_ji_b_toc.verify|verify} messages.
     * @function encode
     * @memberof skill_sou_ji_b_toc
     * @static
     * @param {Iskill_sou_ji_b_toc} message skill_sou_ji_b_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_sou_ji_b_toc.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.playerId != null && Object.hasOwnProperty.call(message, "playerId"))
            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.playerId);
        if (message.targetPlayerId != null && Object.hasOwnProperty.call(message, "targetPlayerId"))
            writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.targetPlayerId);
        if (message.cards != null && message.cards.length)
            for (var i = 0; i < message.cards.length; ++i)
                $root.card.encode(message.cards[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
        if (message.messageCard != null && Object.hasOwnProperty.call(message, "messageCard"))
            $root.card.encode(message.messageCard, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
        return writer;
    };

    /**
     * Encodes the specified skill_sou_ji_b_toc message, length delimited. Does not implicitly {@link skill_sou_ji_b_toc.verify|verify} messages.
     * @function encodeDelimited
     * @memberof skill_sou_ji_b_toc
     * @static
     * @param {Iskill_sou_ji_b_toc} message skill_sou_ji_b_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_sou_ji_b_toc.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a skill_sou_ji_b_toc message from the specified reader or buffer.
     * @function decode
     * @memberof skill_sou_ji_b_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {skill_sou_ji_b_toc} skill_sou_ji_b_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_sou_ji_b_toc.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.skill_sou_ji_b_toc();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.playerId = reader.uint32();
                    break;
                }
            case 2: {
                    message.targetPlayerId = reader.uint32();
                    break;
                }
            case 3: {
                    if (!(message.cards && message.cards.length))
                        message.cards = [];
                    message.cards.push($root.card.decode(reader, reader.uint32()));
                    break;
                }
            case 4: {
                    message.messageCard = $root.card.decode(reader, reader.uint32());
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a skill_sou_ji_b_toc message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof skill_sou_ji_b_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {skill_sou_ji_b_toc} skill_sou_ji_b_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_sou_ji_b_toc.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a skill_sou_ji_b_toc message.
     * @function verify
     * @memberof skill_sou_ji_b_toc
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    skill_sou_ji_b_toc.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            if (!$util.isInteger(message.playerId))
                return "playerId: integer expected";
        if (message.targetPlayerId != null && message.hasOwnProperty("targetPlayerId"))
            if (!$util.isInteger(message.targetPlayerId))
                return "targetPlayerId: integer expected";
        if (message.cards != null && message.hasOwnProperty("cards")) {
            if (!Array.isArray(message.cards))
                return "cards: array expected";
            for (var i = 0; i < message.cards.length; ++i) {
                var error = $root.card.verify(message.cards[i]);
                if (error)
                    return "cards." + error;
            }
        }
        if (message.messageCard != null && message.hasOwnProperty("messageCard")) {
            var error = $root.card.verify(message.messageCard);
            if (error)
                return "messageCard." + error;
        }
        return null;
    };

    /**
     * Creates a skill_sou_ji_b_toc message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof skill_sou_ji_b_toc
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {skill_sou_ji_b_toc} skill_sou_ji_b_toc
     */
    skill_sou_ji_b_toc.fromObject = function fromObject(object) {
        if (object instanceof $root.skill_sou_ji_b_toc)
            return object;
        var message = new $root.skill_sou_ji_b_toc();
        if (object.playerId != null)
            message.playerId = object.playerId >>> 0;
        if (object.targetPlayerId != null)
            message.targetPlayerId = object.targetPlayerId >>> 0;
        if (object.cards) {
            if (!Array.isArray(object.cards))
                throw TypeError(".skill_sou_ji_b_toc.cards: array expected");
            message.cards = [];
            for (var i = 0; i < object.cards.length; ++i) {
                if (typeof object.cards[i] !== "object")
                    throw TypeError(".skill_sou_ji_b_toc.cards: object expected");
                message.cards[i] = $root.card.fromObject(object.cards[i]);
            }
        }
        if (object.messageCard != null) {
            if (typeof object.messageCard !== "object")
                throw TypeError(".skill_sou_ji_b_toc.messageCard: object expected");
            message.messageCard = $root.card.fromObject(object.messageCard);
        }
        return message;
    };

    /**
     * Creates a plain object from a skill_sou_ji_b_toc message. Also converts values to other types if specified.
     * @function toObject
     * @memberof skill_sou_ji_b_toc
     * @static
     * @param {skill_sou_ji_b_toc} message skill_sou_ji_b_toc
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    skill_sou_ji_b_toc.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.arrays || options.defaults)
            object.cards = [];
        if (options.defaults) {
            object.playerId = 0;
            object.targetPlayerId = 0;
            object.messageCard = null;
        }
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            object.playerId = message.playerId;
        if (message.targetPlayerId != null && message.hasOwnProperty("targetPlayerId"))
            object.targetPlayerId = message.targetPlayerId;
        if (message.cards && message.cards.length) {
            object.cards = [];
            for (var j = 0; j < message.cards.length; ++j)
                object.cards[j] = $root.card.toObject(message.cards[j], options);
        }
        if (message.messageCard != null && message.hasOwnProperty("messageCard"))
            object.messageCard = $root.card.toObject(message.messageCard, options);
        return object;
    };

    /**
     * Converts this skill_sou_ji_b_toc to JSON.
     * @function toJSON
     * @memberof skill_sou_ji_b_toc
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    skill_sou_ji_b_toc.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for skill_sou_ji_b_toc
     * @function getTypeUrl
     * @memberof skill_sou_ji_b_toc
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    skill_sou_ji_b_toc.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/skill_sou_ji_b_toc";
    };

    return skill_sou_ji_b_toc;
})();

$root.skill_dui_zheng_xia_yao_a_tos = (function() {

    /**
     * Properties of a skill_dui_zheng_xia_yao_a_tos.
     * @exports Iskill_dui_zheng_xia_yao_a_tos
     * @interface Iskill_dui_zheng_xia_yao_a_tos
     * @property {number|null} [seq] skill_dui_zheng_xia_yao_a_tos seq
     */

    /**
     * Constructs a new skill_dui_zheng_xia_yao_a_tos.
     * @exports skill_dui_zheng_xia_yao_a_tos
     * @classdesc Represents a skill_dui_zheng_xia_yao_a_tos.
     * @implements Iskill_dui_zheng_xia_yao_a_tos
     * @constructor
     * @param {Iskill_dui_zheng_xia_yao_a_tos=} [properties] Properties to set
     */
    function skill_dui_zheng_xia_yao_a_tos(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * skill_dui_zheng_xia_yao_a_tos seq.
     * @member {number} seq
     * @memberof skill_dui_zheng_xia_yao_a_tos
     * @instance
     */
    skill_dui_zheng_xia_yao_a_tos.prototype.seq = 0;

    /**
     * Creates a new skill_dui_zheng_xia_yao_a_tos instance using the specified properties.
     * @function create
     * @memberof skill_dui_zheng_xia_yao_a_tos
     * @static
     * @param {Iskill_dui_zheng_xia_yao_a_tos=} [properties] Properties to set
     * @returns {skill_dui_zheng_xia_yao_a_tos} skill_dui_zheng_xia_yao_a_tos instance
     */
    skill_dui_zheng_xia_yao_a_tos.create = function create(properties) {
        return new skill_dui_zheng_xia_yao_a_tos(properties);
    };

    /**
     * Encodes the specified skill_dui_zheng_xia_yao_a_tos message. Does not implicitly {@link skill_dui_zheng_xia_yao_a_tos.verify|verify} messages.
     * @function encode
     * @memberof skill_dui_zheng_xia_yao_a_tos
     * @static
     * @param {Iskill_dui_zheng_xia_yao_a_tos} message skill_dui_zheng_xia_yao_a_tos message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_dui_zheng_xia_yao_a_tos.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.seq != null && Object.hasOwnProperty.call(message, "seq"))
            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.seq);
        return writer;
    };

    /**
     * Encodes the specified skill_dui_zheng_xia_yao_a_tos message, length delimited. Does not implicitly {@link skill_dui_zheng_xia_yao_a_tos.verify|verify} messages.
     * @function encodeDelimited
     * @memberof skill_dui_zheng_xia_yao_a_tos
     * @static
     * @param {Iskill_dui_zheng_xia_yao_a_tos} message skill_dui_zheng_xia_yao_a_tos message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_dui_zheng_xia_yao_a_tos.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a skill_dui_zheng_xia_yao_a_tos message from the specified reader or buffer.
     * @function decode
     * @memberof skill_dui_zheng_xia_yao_a_tos
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {skill_dui_zheng_xia_yao_a_tos} skill_dui_zheng_xia_yao_a_tos
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_dui_zheng_xia_yao_a_tos.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.skill_dui_zheng_xia_yao_a_tos();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.seq = reader.uint32();
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a skill_dui_zheng_xia_yao_a_tos message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof skill_dui_zheng_xia_yao_a_tos
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {skill_dui_zheng_xia_yao_a_tos} skill_dui_zheng_xia_yao_a_tos
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_dui_zheng_xia_yao_a_tos.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a skill_dui_zheng_xia_yao_a_tos message.
     * @function verify
     * @memberof skill_dui_zheng_xia_yao_a_tos
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    skill_dui_zheng_xia_yao_a_tos.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.seq != null && message.hasOwnProperty("seq"))
            if (!$util.isInteger(message.seq))
                return "seq: integer expected";
        return null;
    };

    /**
     * Creates a skill_dui_zheng_xia_yao_a_tos message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof skill_dui_zheng_xia_yao_a_tos
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {skill_dui_zheng_xia_yao_a_tos} skill_dui_zheng_xia_yao_a_tos
     */
    skill_dui_zheng_xia_yao_a_tos.fromObject = function fromObject(object) {
        if (object instanceof $root.skill_dui_zheng_xia_yao_a_tos)
            return object;
        var message = new $root.skill_dui_zheng_xia_yao_a_tos();
        if (object.seq != null)
            message.seq = object.seq >>> 0;
        return message;
    };

    /**
     * Creates a plain object from a skill_dui_zheng_xia_yao_a_tos message. Also converts values to other types if specified.
     * @function toObject
     * @memberof skill_dui_zheng_xia_yao_a_tos
     * @static
     * @param {skill_dui_zheng_xia_yao_a_tos} message skill_dui_zheng_xia_yao_a_tos
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    skill_dui_zheng_xia_yao_a_tos.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults)
            object.seq = 0;
        if (message.seq != null && message.hasOwnProperty("seq"))
            object.seq = message.seq;
        return object;
    };

    /**
     * Converts this skill_dui_zheng_xia_yao_a_tos to JSON.
     * @function toJSON
     * @memberof skill_dui_zheng_xia_yao_a_tos
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    skill_dui_zheng_xia_yao_a_tos.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for skill_dui_zheng_xia_yao_a_tos
     * @function getTypeUrl
     * @memberof skill_dui_zheng_xia_yao_a_tos
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    skill_dui_zheng_xia_yao_a_tos.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/skill_dui_zheng_xia_yao_a_tos";
    };

    return skill_dui_zheng_xia_yao_a_tos;
})();

$root.skill_dui_zheng_xia_yao_a_toc = (function() {

    /**
     * Properties of a skill_dui_zheng_xia_yao_a_toc.
     * @exports Iskill_dui_zheng_xia_yao_a_toc
     * @interface Iskill_dui_zheng_xia_yao_a_toc
     * @property {number|null} [playerId] skill_dui_zheng_xia_yao_a_toc playerId
     * @property {number|null} [waitingSecond] skill_dui_zheng_xia_yao_a_toc waitingSecond
     * @property {number|null} [seq] skill_dui_zheng_xia_yao_a_toc seq
     */

    /**
     * Constructs a new skill_dui_zheng_xia_yao_a_toc.
     * @exports skill_dui_zheng_xia_yao_a_toc
     * @classdesc Represents a skill_dui_zheng_xia_yao_a_toc.
     * @implements Iskill_dui_zheng_xia_yao_a_toc
     * @constructor
     * @param {Iskill_dui_zheng_xia_yao_a_toc=} [properties] Properties to set
     */
    function skill_dui_zheng_xia_yao_a_toc(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * skill_dui_zheng_xia_yao_a_toc playerId.
     * @member {number} playerId
     * @memberof skill_dui_zheng_xia_yao_a_toc
     * @instance
     */
    skill_dui_zheng_xia_yao_a_toc.prototype.playerId = 0;

    /**
     * skill_dui_zheng_xia_yao_a_toc waitingSecond.
     * @member {number} waitingSecond
     * @memberof skill_dui_zheng_xia_yao_a_toc
     * @instance
     */
    skill_dui_zheng_xia_yao_a_toc.prototype.waitingSecond = 0;

    /**
     * skill_dui_zheng_xia_yao_a_toc seq.
     * @member {number} seq
     * @memberof skill_dui_zheng_xia_yao_a_toc
     * @instance
     */
    skill_dui_zheng_xia_yao_a_toc.prototype.seq = 0;

    /**
     * Creates a new skill_dui_zheng_xia_yao_a_toc instance using the specified properties.
     * @function create
     * @memberof skill_dui_zheng_xia_yao_a_toc
     * @static
     * @param {Iskill_dui_zheng_xia_yao_a_toc=} [properties] Properties to set
     * @returns {skill_dui_zheng_xia_yao_a_toc} skill_dui_zheng_xia_yao_a_toc instance
     */
    skill_dui_zheng_xia_yao_a_toc.create = function create(properties) {
        return new skill_dui_zheng_xia_yao_a_toc(properties);
    };

    /**
     * Encodes the specified skill_dui_zheng_xia_yao_a_toc message. Does not implicitly {@link skill_dui_zheng_xia_yao_a_toc.verify|verify} messages.
     * @function encode
     * @memberof skill_dui_zheng_xia_yao_a_toc
     * @static
     * @param {Iskill_dui_zheng_xia_yao_a_toc} message skill_dui_zheng_xia_yao_a_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_dui_zheng_xia_yao_a_toc.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.playerId != null && Object.hasOwnProperty.call(message, "playerId"))
            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.playerId);
        if (message.waitingSecond != null && Object.hasOwnProperty.call(message, "waitingSecond"))
            writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.waitingSecond);
        if (message.seq != null && Object.hasOwnProperty.call(message, "seq"))
            writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.seq);
        return writer;
    };

    /**
     * Encodes the specified skill_dui_zheng_xia_yao_a_toc message, length delimited. Does not implicitly {@link skill_dui_zheng_xia_yao_a_toc.verify|verify} messages.
     * @function encodeDelimited
     * @memberof skill_dui_zheng_xia_yao_a_toc
     * @static
     * @param {Iskill_dui_zheng_xia_yao_a_toc} message skill_dui_zheng_xia_yao_a_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_dui_zheng_xia_yao_a_toc.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a skill_dui_zheng_xia_yao_a_toc message from the specified reader or buffer.
     * @function decode
     * @memberof skill_dui_zheng_xia_yao_a_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {skill_dui_zheng_xia_yao_a_toc} skill_dui_zheng_xia_yao_a_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_dui_zheng_xia_yao_a_toc.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.skill_dui_zheng_xia_yao_a_toc();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.playerId = reader.uint32();
                    break;
                }
            case 2: {
                    message.waitingSecond = reader.uint32();
                    break;
                }
            case 3: {
                    message.seq = reader.uint32();
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a skill_dui_zheng_xia_yao_a_toc message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof skill_dui_zheng_xia_yao_a_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {skill_dui_zheng_xia_yao_a_toc} skill_dui_zheng_xia_yao_a_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_dui_zheng_xia_yao_a_toc.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a skill_dui_zheng_xia_yao_a_toc message.
     * @function verify
     * @memberof skill_dui_zheng_xia_yao_a_toc
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    skill_dui_zheng_xia_yao_a_toc.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            if (!$util.isInteger(message.playerId))
                return "playerId: integer expected";
        if (message.waitingSecond != null && message.hasOwnProperty("waitingSecond"))
            if (!$util.isInteger(message.waitingSecond))
                return "waitingSecond: integer expected";
        if (message.seq != null && message.hasOwnProperty("seq"))
            if (!$util.isInteger(message.seq))
                return "seq: integer expected";
        return null;
    };

    /**
     * Creates a skill_dui_zheng_xia_yao_a_toc message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof skill_dui_zheng_xia_yao_a_toc
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {skill_dui_zheng_xia_yao_a_toc} skill_dui_zheng_xia_yao_a_toc
     */
    skill_dui_zheng_xia_yao_a_toc.fromObject = function fromObject(object) {
        if (object instanceof $root.skill_dui_zheng_xia_yao_a_toc)
            return object;
        var message = new $root.skill_dui_zheng_xia_yao_a_toc();
        if (object.playerId != null)
            message.playerId = object.playerId >>> 0;
        if (object.waitingSecond != null)
            message.waitingSecond = object.waitingSecond >>> 0;
        if (object.seq != null)
            message.seq = object.seq >>> 0;
        return message;
    };

    /**
     * Creates a plain object from a skill_dui_zheng_xia_yao_a_toc message. Also converts values to other types if specified.
     * @function toObject
     * @memberof skill_dui_zheng_xia_yao_a_toc
     * @static
     * @param {skill_dui_zheng_xia_yao_a_toc} message skill_dui_zheng_xia_yao_a_toc
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    skill_dui_zheng_xia_yao_a_toc.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults) {
            object.playerId = 0;
            object.waitingSecond = 0;
            object.seq = 0;
        }
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            object.playerId = message.playerId;
        if (message.waitingSecond != null && message.hasOwnProperty("waitingSecond"))
            object.waitingSecond = message.waitingSecond;
        if (message.seq != null && message.hasOwnProperty("seq"))
            object.seq = message.seq;
        return object;
    };

    /**
     * Converts this skill_dui_zheng_xia_yao_a_toc to JSON.
     * @function toJSON
     * @memberof skill_dui_zheng_xia_yao_a_toc
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    skill_dui_zheng_xia_yao_a_toc.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for skill_dui_zheng_xia_yao_a_toc
     * @function getTypeUrl
     * @memberof skill_dui_zheng_xia_yao_a_toc
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    skill_dui_zheng_xia_yao_a_toc.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/skill_dui_zheng_xia_yao_a_toc";
    };

    return skill_dui_zheng_xia_yao_a_toc;
})();

$root.skill_dui_zheng_xia_yao_b_tos = (function() {

    /**
     * Properties of a skill_dui_zheng_xia_yao_b_tos.
     * @exports Iskill_dui_zheng_xia_yao_b_tos
     * @interface Iskill_dui_zheng_xia_yao_b_tos
     * @property {boolean|null} [enable] skill_dui_zheng_xia_yao_b_tos enable
     * @property {Array.<number>|null} [cardIds] skill_dui_zheng_xia_yao_b_tos cardIds
     * @property {number|null} [seq] skill_dui_zheng_xia_yao_b_tos seq
     */

    /**
     * Constructs a new skill_dui_zheng_xia_yao_b_tos.
     * @exports skill_dui_zheng_xia_yao_b_tos
     * @classdesc Represents a skill_dui_zheng_xia_yao_b_tos.
     * @implements Iskill_dui_zheng_xia_yao_b_tos
     * @constructor
     * @param {Iskill_dui_zheng_xia_yao_b_tos=} [properties] Properties to set
     */
    function skill_dui_zheng_xia_yao_b_tos(properties) {
        this.cardIds = [];
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * skill_dui_zheng_xia_yao_b_tos enable.
     * @member {boolean} enable
     * @memberof skill_dui_zheng_xia_yao_b_tos
     * @instance
     */
    skill_dui_zheng_xia_yao_b_tos.prototype.enable = false;

    /**
     * skill_dui_zheng_xia_yao_b_tos cardIds.
     * @member {Array.<number>} cardIds
     * @memberof skill_dui_zheng_xia_yao_b_tos
     * @instance
     */
    skill_dui_zheng_xia_yao_b_tos.prototype.cardIds = $util.emptyArray;

    /**
     * skill_dui_zheng_xia_yao_b_tos seq.
     * @member {number} seq
     * @memberof skill_dui_zheng_xia_yao_b_tos
     * @instance
     */
    skill_dui_zheng_xia_yao_b_tos.prototype.seq = 0;

    /**
     * Creates a new skill_dui_zheng_xia_yao_b_tos instance using the specified properties.
     * @function create
     * @memberof skill_dui_zheng_xia_yao_b_tos
     * @static
     * @param {Iskill_dui_zheng_xia_yao_b_tos=} [properties] Properties to set
     * @returns {skill_dui_zheng_xia_yao_b_tos} skill_dui_zheng_xia_yao_b_tos instance
     */
    skill_dui_zheng_xia_yao_b_tos.create = function create(properties) {
        return new skill_dui_zheng_xia_yao_b_tos(properties);
    };

    /**
     * Encodes the specified skill_dui_zheng_xia_yao_b_tos message. Does not implicitly {@link skill_dui_zheng_xia_yao_b_tos.verify|verify} messages.
     * @function encode
     * @memberof skill_dui_zheng_xia_yao_b_tos
     * @static
     * @param {Iskill_dui_zheng_xia_yao_b_tos} message skill_dui_zheng_xia_yao_b_tos message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_dui_zheng_xia_yao_b_tos.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.enable != null && Object.hasOwnProperty.call(message, "enable"))
            writer.uint32(/* id 1, wireType 0 =*/8).bool(message.enable);
        if (message.cardIds != null && message.cardIds.length) {
            writer.uint32(/* id 2, wireType 2 =*/18).fork();
            for (var i = 0; i < message.cardIds.length; ++i)
                writer.uint32(message.cardIds[i]);
            writer.ldelim();
        }
        if (message.seq != null && Object.hasOwnProperty.call(message, "seq"))
            writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.seq);
        return writer;
    };

    /**
     * Encodes the specified skill_dui_zheng_xia_yao_b_tos message, length delimited. Does not implicitly {@link skill_dui_zheng_xia_yao_b_tos.verify|verify} messages.
     * @function encodeDelimited
     * @memberof skill_dui_zheng_xia_yao_b_tos
     * @static
     * @param {Iskill_dui_zheng_xia_yao_b_tos} message skill_dui_zheng_xia_yao_b_tos message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_dui_zheng_xia_yao_b_tos.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a skill_dui_zheng_xia_yao_b_tos message from the specified reader or buffer.
     * @function decode
     * @memberof skill_dui_zheng_xia_yao_b_tos
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {skill_dui_zheng_xia_yao_b_tos} skill_dui_zheng_xia_yao_b_tos
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_dui_zheng_xia_yao_b_tos.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.skill_dui_zheng_xia_yao_b_tos();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.enable = reader.bool();
                    break;
                }
            case 2: {
                    if (!(message.cardIds && message.cardIds.length))
                        message.cardIds = [];
                    if ((tag & 7) === 2) {
                        var end2 = reader.uint32() + reader.pos;
                        while (reader.pos < end2)
                            message.cardIds.push(reader.uint32());
                    } else
                        message.cardIds.push(reader.uint32());
                    break;
                }
            case 3: {
                    message.seq = reader.uint32();
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a skill_dui_zheng_xia_yao_b_tos message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof skill_dui_zheng_xia_yao_b_tos
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {skill_dui_zheng_xia_yao_b_tos} skill_dui_zheng_xia_yao_b_tos
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_dui_zheng_xia_yao_b_tos.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a skill_dui_zheng_xia_yao_b_tos message.
     * @function verify
     * @memberof skill_dui_zheng_xia_yao_b_tos
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    skill_dui_zheng_xia_yao_b_tos.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.enable != null && message.hasOwnProperty("enable"))
            if (typeof message.enable !== "boolean")
                return "enable: boolean expected";
        if (message.cardIds != null && message.hasOwnProperty("cardIds")) {
            if (!Array.isArray(message.cardIds))
                return "cardIds: array expected";
            for (var i = 0; i < message.cardIds.length; ++i)
                if (!$util.isInteger(message.cardIds[i]))
                    return "cardIds: integer[] expected";
        }
        if (message.seq != null && message.hasOwnProperty("seq"))
            if (!$util.isInteger(message.seq))
                return "seq: integer expected";
        return null;
    };

    /**
     * Creates a skill_dui_zheng_xia_yao_b_tos message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof skill_dui_zheng_xia_yao_b_tos
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {skill_dui_zheng_xia_yao_b_tos} skill_dui_zheng_xia_yao_b_tos
     */
    skill_dui_zheng_xia_yao_b_tos.fromObject = function fromObject(object) {
        if (object instanceof $root.skill_dui_zheng_xia_yao_b_tos)
            return object;
        var message = new $root.skill_dui_zheng_xia_yao_b_tos();
        if (object.enable != null)
            message.enable = Boolean(object.enable);
        if (object.cardIds) {
            if (!Array.isArray(object.cardIds))
                throw TypeError(".skill_dui_zheng_xia_yao_b_tos.cardIds: array expected");
            message.cardIds = [];
            for (var i = 0; i < object.cardIds.length; ++i)
                message.cardIds[i] = object.cardIds[i] >>> 0;
        }
        if (object.seq != null)
            message.seq = object.seq >>> 0;
        return message;
    };

    /**
     * Creates a plain object from a skill_dui_zheng_xia_yao_b_tos message. Also converts values to other types if specified.
     * @function toObject
     * @memberof skill_dui_zheng_xia_yao_b_tos
     * @static
     * @param {skill_dui_zheng_xia_yao_b_tos} message skill_dui_zheng_xia_yao_b_tos
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    skill_dui_zheng_xia_yao_b_tos.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.arrays || options.defaults)
            object.cardIds = [];
        if (options.defaults) {
            object.enable = false;
            object.seq = 0;
        }
        if (message.enable != null && message.hasOwnProperty("enable"))
            object.enable = message.enable;
        if (message.cardIds && message.cardIds.length) {
            object.cardIds = [];
            for (var j = 0; j < message.cardIds.length; ++j)
                object.cardIds[j] = message.cardIds[j];
        }
        if (message.seq != null && message.hasOwnProperty("seq"))
            object.seq = message.seq;
        return object;
    };

    /**
     * Converts this skill_dui_zheng_xia_yao_b_tos to JSON.
     * @function toJSON
     * @memberof skill_dui_zheng_xia_yao_b_tos
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    skill_dui_zheng_xia_yao_b_tos.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for skill_dui_zheng_xia_yao_b_tos
     * @function getTypeUrl
     * @memberof skill_dui_zheng_xia_yao_b_tos
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    skill_dui_zheng_xia_yao_b_tos.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/skill_dui_zheng_xia_yao_b_tos";
    };

    return skill_dui_zheng_xia_yao_b_tos;
})();

$root.skill_dui_zheng_xia_yao_b_toc = (function() {

    /**
     * Properties of a skill_dui_zheng_xia_yao_b_toc.
     * @exports Iskill_dui_zheng_xia_yao_b_toc
     * @interface Iskill_dui_zheng_xia_yao_b_toc
     * @property {number|null} [playerId] skill_dui_zheng_xia_yao_b_toc playerId
     * @property {boolean|null} [enable] skill_dui_zheng_xia_yao_b_toc enable
     * @property {Array.<Icard>|null} [cards] skill_dui_zheng_xia_yao_b_toc cards
     * @property {number|null} [waitingSecond] skill_dui_zheng_xia_yao_b_toc waitingSecond
     * @property {number|null} [seq] skill_dui_zheng_xia_yao_b_toc seq
     */

    /**
     * Constructs a new skill_dui_zheng_xia_yao_b_toc.
     * @exports skill_dui_zheng_xia_yao_b_toc
     * @classdesc Represents a skill_dui_zheng_xia_yao_b_toc.
     * @implements Iskill_dui_zheng_xia_yao_b_toc
     * @constructor
     * @param {Iskill_dui_zheng_xia_yao_b_toc=} [properties] Properties to set
     */
    function skill_dui_zheng_xia_yao_b_toc(properties) {
        this.cards = [];
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * skill_dui_zheng_xia_yao_b_toc playerId.
     * @member {number} playerId
     * @memberof skill_dui_zheng_xia_yao_b_toc
     * @instance
     */
    skill_dui_zheng_xia_yao_b_toc.prototype.playerId = 0;

    /**
     * skill_dui_zheng_xia_yao_b_toc enable.
     * @member {boolean} enable
     * @memberof skill_dui_zheng_xia_yao_b_toc
     * @instance
     */
    skill_dui_zheng_xia_yao_b_toc.prototype.enable = false;

    /**
     * skill_dui_zheng_xia_yao_b_toc cards.
     * @member {Array.<Icard>} cards
     * @memberof skill_dui_zheng_xia_yao_b_toc
     * @instance
     */
    skill_dui_zheng_xia_yao_b_toc.prototype.cards = $util.emptyArray;

    /**
     * skill_dui_zheng_xia_yao_b_toc waitingSecond.
     * @member {number} waitingSecond
     * @memberof skill_dui_zheng_xia_yao_b_toc
     * @instance
     */
    skill_dui_zheng_xia_yao_b_toc.prototype.waitingSecond = 0;

    /**
     * skill_dui_zheng_xia_yao_b_toc seq.
     * @member {number} seq
     * @memberof skill_dui_zheng_xia_yao_b_toc
     * @instance
     */
    skill_dui_zheng_xia_yao_b_toc.prototype.seq = 0;

    /**
     * Creates a new skill_dui_zheng_xia_yao_b_toc instance using the specified properties.
     * @function create
     * @memberof skill_dui_zheng_xia_yao_b_toc
     * @static
     * @param {Iskill_dui_zheng_xia_yao_b_toc=} [properties] Properties to set
     * @returns {skill_dui_zheng_xia_yao_b_toc} skill_dui_zheng_xia_yao_b_toc instance
     */
    skill_dui_zheng_xia_yao_b_toc.create = function create(properties) {
        return new skill_dui_zheng_xia_yao_b_toc(properties);
    };

    /**
     * Encodes the specified skill_dui_zheng_xia_yao_b_toc message. Does not implicitly {@link skill_dui_zheng_xia_yao_b_toc.verify|verify} messages.
     * @function encode
     * @memberof skill_dui_zheng_xia_yao_b_toc
     * @static
     * @param {Iskill_dui_zheng_xia_yao_b_toc} message skill_dui_zheng_xia_yao_b_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_dui_zheng_xia_yao_b_toc.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.playerId != null && Object.hasOwnProperty.call(message, "playerId"))
            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.playerId);
        if (message.enable != null && Object.hasOwnProperty.call(message, "enable"))
            writer.uint32(/* id 2, wireType 0 =*/16).bool(message.enable);
        if (message.cards != null && message.cards.length)
            for (var i = 0; i < message.cards.length; ++i)
                $root.card.encode(message.cards[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
        if (message.waitingSecond != null && Object.hasOwnProperty.call(message, "waitingSecond"))
            writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.waitingSecond);
        if (message.seq != null && Object.hasOwnProperty.call(message, "seq"))
            writer.uint32(/* id 5, wireType 0 =*/40).uint32(message.seq);
        return writer;
    };

    /**
     * Encodes the specified skill_dui_zheng_xia_yao_b_toc message, length delimited. Does not implicitly {@link skill_dui_zheng_xia_yao_b_toc.verify|verify} messages.
     * @function encodeDelimited
     * @memberof skill_dui_zheng_xia_yao_b_toc
     * @static
     * @param {Iskill_dui_zheng_xia_yao_b_toc} message skill_dui_zheng_xia_yao_b_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_dui_zheng_xia_yao_b_toc.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a skill_dui_zheng_xia_yao_b_toc message from the specified reader or buffer.
     * @function decode
     * @memberof skill_dui_zheng_xia_yao_b_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {skill_dui_zheng_xia_yao_b_toc} skill_dui_zheng_xia_yao_b_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_dui_zheng_xia_yao_b_toc.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.skill_dui_zheng_xia_yao_b_toc();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.playerId = reader.uint32();
                    break;
                }
            case 2: {
                    message.enable = reader.bool();
                    break;
                }
            case 3: {
                    if (!(message.cards && message.cards.length))
                        message.cards = [];
                    message.cards.push($root.card.decode(reader, reader.uint32()));
                    break;
                }
            case 4: {
                    message.waitingSecond = reader.uint32();
                    break;
                }
            case 5: {
                    message.seq = reader.uint32();
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a skill_dui_zheng_xia_yao_b_toc message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof skill_dui_zheng_xia_yao_b_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {skill_dui_zheng_xia_yao_b_toc} skill_dui_zheng_xia_yao_b_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_dui_zheng_xia_yao_b_toc.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a skill_dui_zheng_xia_yao_b_toc message.
     * @function verify
     * @memberof skill_dui_zheng_xia_yao_b_toc
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    skill_dui_zheng_xia_yao_b_toc.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            if (!$util.isInteger(message.playerId))
                return "playerId: integer expected";
        if (message.enable != null && message.hasOwnProperty("enable"))
            if (typeof message.enable !== "boolean")
                return "enable: boolean expected";
        if (message.cards != null && message.hasOwnProperty("cards")) {
            if (!Array.isArray(message.cards))
                return "cards: array expected";
            for (var i = 0; i < message.cards.length; ++i) {
                var error = $root.card.verify(message.cards[i]);
                if (error)
                    return "cards." + error;
            }
        }
        if (message.waitingSecond != null && message.hasOwnProperty("waitingSecond"))
            if (!$util.isInteger(message.waitingSecond))
                return "waitingSecond: integer expected";
        if (message.seq != null && message.hasOwnProperty("seq"))
            if (!$util.isInteger(message.seq))
                return "seq: integer expected";
        return null;
    };

    /**
     * Creates a skill_dui_zheng_xia_yao_b_toc message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof skill_dui_zheng_xia_yao_b_toc
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {skill_dui_zheng_xia_yao_b_toc} skill_dui_zheng_xia_yao_b_toc
     */
    skill_dui_zheng_xia_yao_b_toc.fromObject = function fromObject(object) {
        if (object instanceof $root.skill_dui_zheng_xia_yao_b_toc)
            return object;
        var message = new $root.skill_dui_zheng_xia_yao_b_toc();
        if (object.playerId != null)
            message.playerId = object.playerId >>> 0;
        if (object.enable != null)
            message.enable = Boolean(object.enable);
        if (object.cards) {
            if (!Array.isArray(object.cards))
                throw TypeError(".skill_dui_zheng_xia_yao_b_toc.cards: array expected");
            message.cards = [];
            for (var i = 0; i < object.cards.length; ++i) {
                if (typeof object.cards[i] !== "object")
                    throw TypeError(".skill_dui_zheng_xia_yao_b_toc.cards: object expected");
                message.cards[i] = $root.card.fromObject(object.cards[i]);
            }
        }
        if (object.waitingSecond != null)
            message.waitingSecond = object.waitingSecond >>> 0;
        if (object.seq != null)
            message.seq = object.seq >>> 0;
        return message;
    };

    /**
     * Creates a plain object from a skill_dui_zheng_xia_yao_b_toc message. Also converts values to other types if specified.
     * @function toObject
     * @memberof skill_dui_zheng_xia_yao_b_toc
     * @static
     * @param {skill_dui_zheng_xia_yao_b_toc} message skill_dui_zheng_xia_yao_b_toc
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    skill_dui_zheng_xia_yao_b_toc.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.arrays || options.defaults)
            object.cards = [];
        if (options.defaults) {
            object.playerId = 0;
            object.enable = false;
            object.waitingSecond = 0;
            object.seq = 0;
        }
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            object.playerId = message.playerId;
        if (message.enable != null && message.hasOwnProperty("enable"))
            object.enable = message.enable;
        if (message.cards && message.cards.length) {
            object.cards = [];
            for (var j = 0; j < message.cards.length; ++j)
                object.cards[j] = $root.card.toObject(message.cards[j], options);
        }
        if (message.waitingSecond != null && message.hasOwnProperty("waitingSecond"))
            object.waitingSecond = message.waitingSecond;
        if (message.seq != null && message.hasOwnProperty("seq"))
            object.seq = message.seq;
        return object;
    };

    /**
     * Converts this skill_dui_zheng_xia_yao_b_toc to JSON.
     * @function toJSON
     * @memberof skill_dui_zheng_xia_yao_b_toc
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    skill_dui_zheng_xia_yao_b_toc.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for skill_dui_zheng_xia_yao_b_toc
     * @function getTypeUrl
     * @memberof skill_dui_zheng_xia_yao_b_toc
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    skill_dui_zheng_xia_yao_b_toc.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/skill_dui_zheng_xia_yao_b_toc";
    };

    return skill_dui_zheng_xia_yao_b_toc;
})();

$root.skill_dui_zheng_xia_yao_c_tos = (function() {

    /**
     * Properties of a skill_dui_zheng_xia_yao_c_tos.
     * @exports Iskill_dui_zheng_xia_yao_c_tos
     * @interface Iskill_dui_zheng_xia_yao_c_tos
     * @property {number|null} [targetPlayerId] skill_dui_zheng_xia_yao_c_tos targetPlayerId
     * @property {number|null} [messageCardId] skill_dui_zheng_xia_yao_c_tos messageCardId
     * @property {number|null} [seq] skill_dui_zheng_xia_yao_c_tos seq
     */

    /**
     * Constructs a new skill_dui_zheng_xia_yao_c_tos.
     * @exports skill_dui_zheng_xia_yao_c_tos
     * @classdesc Represents a skill_dui_zheng_xia_yao_c_tos.
     * @implements Iskill_dui_zheng_xia_yao_c_tos
     * @constructor
     * @param {Iskill_dui_zheng_xia_yao_c_tos=} [properties] Properties to set
     */
    function skill_dui_zheng_xia_yao_c_tos(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * skill_dui_zheng_xia_yao_c_tos targetPlayerId.
     * @member {number} targetPlayerId
     * @memberof skill_dui_zheng_xia_yao_c_tos
     * @instance
     */
    skill_dui_zheng_xia_yao_c_tos.prototype.targetPlayerId = 0;

    /**
     * skill_dui_zheng_xia_yao_c_tos messageCardId.
     * @member {number} messageCardId
     * @memberof skill_dui_zheng_xia_yao_c_tos
     * @instance
     */
    skill_dui_zheng_xia_yao_c_tos.prototype.messageCardId = 0;

    /**
     * skill_dui_zheng_xia_yao_c_tos seq.
     * @member {number} seq
     * @memberof skill_dui_zheng_xia_yao_c_tos
     * @instance
     */
    skill_dui_zheng_xia_yao_c_tos.prototype.seq = 0;

    /**
     * Creates a new skill_dui_zheng_xia_yao_c_tos instance using the specified properties.
     * @function create
     * @memberof skill_dui_zheng_xia_yao_c_tos
     * @static
     * @param {Iskill_dui_zheng_xia_yao_c_tos=} [properties] Properties to set
     * @returns {skill_dui_zheng_xia_yao_c_tos} skill_dui_zheng_xia_yao_c_tos instance
     */
    skill_dui_zheng_xia_yao_c_tos.create = function create(properties) {
        return new skill_dui_zheng_xia_yao_c_tos(properties);
    };

    /**
     * Encodes the specified skill_dui_zheng_xia_yao_c_tos message. Does not implicitly {@link skill_dui_zheng_xia_yao_c_tos.verify|verify} messages.
     * @function encode
     * @memberof skill_dui_zheng_xia_yao_c_tos
     * @static
     * @param {Iskill_dui_zheng_xia_yao_c_tos} message skill_dui_zheng_xia_yao_c_tos message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_dui_zheng_xia_yao_c_tos.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.targetPlayerId != null && Object.hasOwnProperty.call(message, "targetPlayerId"))
            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.targetPlayerId);
        if (message.messageCardId != null && Object.hasOwnProperty.call(message, "messageCardId"))
            writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.messageCardId);
        if (message.seq != null && Object.hasOwnProperty.call(message, "seq"))
            writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.seq);
        return writer;
    };

    /**
     * Encodes the specified skill_dui_zheng_xia_yao_c_tos message, length delimited. Does not implicitly {@link skill_dui_zheng_xia_yao_c_tos.verify|verify} messages.
     * @function encodeDelimited
     * @memberof skill_dui_zheng_xia_yao_c_tos
     * @static
     * @param {Iskill_dui_zheng_xia_yao_c_tos} message skill_dui_zheng_xia_yao_c_tos message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_dui_zheng_xia_yao_c_tos.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a skill_dui_zheng_xia_yao_c_tos message from the specified reader or buffer.
     * @function decode
     * @memberof skill_dui_zheng_xia_yao_c_tos
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {skill_dui_zheng_xia_yao_c_tos} skill_dui_zheng_xia_yao_c_tos
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_dui_zheng_xia_yao_c_tos.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.skill_dui_zheng_xia_yao_c_tos();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.targetPlayerId = reader.uint32();
                    break;
                }
            case 2: {
                    message.messageCardId = reader.uint32();
                    break;
                }
            case 3: {
                    message.seq = reader.uint32();
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a skill_dui_zheng_xia_yao_c_tos message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof skill_dui_zheng_xia_yao_c_tos
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {skill_dui_zheng_xia_yao_c_tos} skill_dui_zheng_xia_yao_c_tos
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_dui_zheng_xia_yao_c_tos.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a skill_dui_zheng_xia_yao_c_tos message.
     * @function verify
     * @memberof skill_dui_zheng_xia_yao_c_tos
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    skill_dui_zheng_xia_yao_c_tos.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.targetPlayerId != null && message.hasOwnProperty("targetPlayerId"))
            if (!$util.isInteger(message.targetPlayerId))
                return "targetPlayerId: integer expected";
        if (message.messageCardId != null && message.hasOwnProperty("messageCardId"))
            if (!$util.isInteger(message.messageCardId))
                return "messageCardId: integer expected";
        if (message.seq != null && message.hasOwnProperty("seq"))
            if (!$util.isInteger(message.seq))
                return "seq: integer expected";
        return null;
    };

    /**
     * Creates a skill_dui_zheng_xia_yao_c_tos message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof skill_dui_zheng_xia_yao_c_tos
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {skill_dui_zheng_xia_yao_c_tos} skill_dui_zheng_xia_yao_c_tos
     */
    skill_dui_zheng_xia_yao_c_tos.fromObject = function fromObject(object) {
        if (object instanceof $root.skill_dui_zheng_xia_yao_c_tos)
            return object;
        var message = new $root.skill_dui_zheng_xia_yao_c_tos();
        if (object.targetPlayerId != null)
            message.targetPlayerId = object.targetPlayerId >>> 0;
        if (object.messageCardId != null)
            message.messageCardId = object.messageCardId >>> 0;
        if (object.seq != null)
            message.seq = object.seq >>> 0;
        return message;
    };

    /**
     * Creates a plain object from a skill_dui_zheng_xia_yao_c_tos message. Also converts values to other types if specified.
     * @function toObject
     * @memberof skill_dui_zheng_xia_yao_c_tos
     * @static
     * @param {skill_dui_zheng_xia_yao_c_tos} message skill_dui_zheng_xia_yao_c_tos
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    skill_dui_zheng_xia_yao_c_tos.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults) {
            object.targetPlayerId = 0;
            object.messageCardId = 0;
            object.seq = 0;
        }
        if (message.targetPlayerId != null && message.hasOwnProperty("targetPlayerId"))
            object.targetPlayerId = message.targetPlayerId;
        if (message.messageCardId != null && message.hasOwnProperty("messageCardId"))
            object.messageCardId = message.messageCardId;
        if (message.seq != null && message.hasOwnProperty("seq"))
            object.seq = message.seq;
        return object;
    };

    /**
     * Converts this skill_dui_zheng_xia_yao_c_tos to JSON.
     * @function toJSON
     * @memberof skill_dui_zheng_xia_yao_c_tos
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    skill_dui_zheng_xia_yao_c_tos.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for skill_dui_zheng_xia_yao_c_tos
     * @function getTypeUrl
     * @memberof skill_dui_zheng_xia_yao_c_tos
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    skill_dui_zheng_xia_yao_c_tos.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/skill_dui_zheng_xia_yao_c_tos";
    };

    return skill_dui_zheng_xia_yao_c_tos;
})();

$root.skill_dui_zheng_xia_yao_c_toc = (function() {

    /**
     * Properties of a skill_dui_zheng_xia_yao_c_toc.
     * @exports Iskill_dui_zheng_xia_yao_c_toc
     * @interface Iskill_dui_zheng_xia_yao_c_toc
     * @property {number|null} [playerId] skill_dui_zheng_xia_yao_c_toc playerId
     * @property {number|null} [targetPlayerId] skill_dui_zheng_xia_yao_c_toc targetPlayerId
     * @property {number|null} [messageCardId] skill_dui_zheng_xia_yao_c_toc messageCardId
     */

    /**
     * Constructs a new skill_dui_zheng_xia_yao_c_toc.
     * @exports skill_dui_zheng_xia_yao_c_toc
     * @classdesc Represents a skill_dui_zheng_xia_yao_c_toc.
     * @implements Iskill_dui_zheng_xia_yao_c_toc
     * @constructor
     * @param {Iskill_dui_zheng_xia_yao_c_toc=} [properties] Properties to set
     */
    function skill_dui_zheng_xia_yao_c_toc(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * skill_dui_zheng_xia_yao_c_toc playerId.
     * @member {number} playerId
     * @memberof skill_dui_zheng_xia_yao_c_toc
     * @instance
     */
    skill_dui_zheng_xia_yao_c_toc.prototype.playerId = 0;

    /**
     * skill_dui_zheng_xia_yao_c_toc targetPlayerId.
     * @member {number} targetPlayerId
     * @memberof skill_dui_zheng_xia_yao_c_toc
     * @instance
     */
    skill_dui_zheng_xia_yao_c_toc.prototype.targetPlayerId = 0;

    /**
     * skill_dui_zheng_xia_yao_c_toc messageCardId.
     * @member {number} messageCardId
     * @memberof skill_dui_zheng_xia_yao_c_toc
     * @instance
     */
    skill_dui_zheng_xia_yao_c_toc.prototype.messageCardId = 0;

    /**
     * Creates a new skill_dui_zheng_xia_yao_c_toc instance using the specified properties.
     * @function create
     * @memberof skill_dui_zheng_xia_yao_c_toc
     * @static
     * @param {Iskill_dui_zheng_xia_yao_c_toc=} [properties] Properties to set
     * @returns {skill_dui_zheng_xia_yao_c_toc} skill_dui_zheng_xia_yao_c_toc instance
     */
    skill_dui_zheng_xia_yao_c_toc.create = function create(properties) {
        return new skill_dui_zheng_xia_yao_c_toc(properties);
    };

    /**
     * Encodes the specified skill_dui_zheng_xia_yao_c_toc message. Does not implicitly {@link skill_dui_zheng_xia_yao_c_toc.verify|verify} messages.
     * @function encode
     * @memberof skill_dui_zheng_xia_yao_c_toc
     * @static
     * @param {Iskill_dui_zheng_xia_yao_c_toc} message skill_dui_zheng_xia_yao_c_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_dui_zheng_xia_yao_c_toc.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.playerId != null && Object.hasOwnProperty.call(message, "playerId"))
            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.playerId);
        if (message.targetPlayerId != null && Object.hasOwnProperty.call(message, "targetPlayerId"))
            writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.targetPlayerId);
        if (message.messageCardId != null && Object.hasOwnProperty.call(message, "messageCardId"))
            writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.messageCardId);
        return writer;
    };

    /**
     * Encodes the specified skill_dui_zheng_xia_yao_c_toc message, length delimited. Does not implicitly {@link skill_dui_zheng_xia_yao_c_toc.verify|verify} messages.
     * @function encodeDelimited
     * @memberof skill_dui_zheng_xia_yao_c_toc
     * @static
     * @param {Iskill_dui_zheng_xia_yao_c_toc} message skill_dui_zheng_xia_yao_c_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_dui_zheng_xia_yao_c_toc.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a skill_dui_zheng_xia_yao_c_toc message from the specified reader or buffer.
     * @function decode
     * @memberof skill_dui_zheng_xia_yao_c_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {skill_dui_zheng_xia_yao_c_toc} skill_dui_zheng_xia_yao_c_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_dui_zheng_xia_yao_c_toc.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.skill_dui_zheng_xia_yao_c_toc();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.playerId = reader.uint32();
                    break;
                }
            case 2: {
                    message.targetPlayerId = reader.uint32();
                    break;
                }
            case 3: {
                    message.messageCardId = reader.uint32();
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a skill_dui_zheng_xia_yao_c_toc message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof skill_dui_zheng_xia_yao_c_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {skill_dui_zheng_xia_yao_c_toc} skill_dui_zheng_xia_yao_c_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_dui_zheng_xia_yao_c_toc.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a skill_dui_zheng_xia_yao_c_toc message.
     * @function verify
     * @memberof skill_dui_zheng_xia_yao_c_toc
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    skill_dui_zheng_xia_yao_c_toc.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            if (!$util.isInteger(message.playerId))
                return "playerId: integer expected";
        if (message.targetPlayerId != null && message.hasOwnProperty("targetPlayerId"))
            if (!$util.isInteger(message.targetPlayerId))
                return "targetPlayerId: integer expected";
        if (message.messageCardId != null && message.hasOwnProperty("messageCardId"))
            if (!$util.isInteger(message.messageCardId))
                return "messageCardId: integer expected";
        return null;
    };

    /**
     * Creates a skill_dui_zheng_xia_yao_c_toc message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof skill_dui_zheng_xia_yao_c_toc
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {skill_dui_zheng_xia_yao_c_toc} skill_dui_zheng_xia_yao_c_toc
     */
    skill_dui_zheng_xia_yao_c_toc.fromObject = function fromObject(object) {
        if (object instanceof $root.skill_dui_zheng_xia_yao_c_toc)
            return object;
        var message = new $root.skill_dui_zheng_xia_yao_c_toc();
        if (object.playerId != null)
            message.playerId = object.playerId >>> 0;
        if (object.targetPlayerId != null)
            message.targetPlayerId = object.targetPlayerId >>> 0;
        if (object.messageCardId != null)
            message.messageCardId = object.messageCardId >>> 0;
        return message;
    };

    /**
     * Creates a plain object from a skill_dui_zheng_xia_yao_c_toc message. Also converts values to other types if specified.
     * @function toObject
     * @memberof skill_dui_zheng_xia_yao_c_toc
     * @static
     * @param {skill_dui_zheng_xia_yao_c_toc} message skill_dui_zheng_xia_yao_c_toc
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    skill_dui_zheng_xia_yao_c_toc.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults) {
            object.playerId = 0;
            object.targetPlayerId = 0;
            object.messageCardId = 0;
        }
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            object.playerId = message.playerId;
        if (message.targetPlayerId != null && message.hasOwnProperty("targetPlayerId"))
            object.targetPlayerId = message.targetPlayerId;
        if (message.messageCardId != null && message.hasOwnProperty("messageCardId"))
            object.messageCardId = message.messageCardId;
        return object;
    };

    /**
     * Converts this skill_dui_zheng_xia_yao_c_toc to JSON.
     * @function toJSON
     * @memberof skill_dui_zheng_xia_yao_c_toc
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    skill_dui_zheng_xia_yao_c_toc.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for skill_dui_zheng_xia_yao_c_toc
     * @function getTypeUrl
     * @memberof skill_dui_zheng_xia_yao_c_toc
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    skill_dui_zheng_xia_yao_c_toc.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/skill_dui_zheng_xia_yao_c_toc";
    };

    return skill_dui_zheng_xia_yao_c_toc;
})();

$root.skill_du_ji_a_tos = (function() {

    /**
     * Properties of a skill_du_ji_a_tos.
     * @exports Iskill_du_ji_a_tos
     * @interface Iskill_du_ji_a_tos
     * @property {Array.<number>|null} [targetPlayerIds] skill_du_ji_a_tos targetPlayerIds
     * @property {number|null} [seq] skill_du_ji_a_tos seq
     */

    /**
     * Constructs a new skill_du_ji_a_tos.
     * @exports skill_du_ji_a_tos
     * @classdesc Represents a skill_du_ji_a_tos.
     * @implements Iskill_du_ji_a_tos
     * @constructor
     * @param {Iskill_du_ji_a_tos=} [properties] Properties to set
     */
    function skill_du_ji_a_tos(properties) {
        this.targetPlayerIds = [];
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * skill_du_ji_a_tos targetPlayerIds.
     * @member {Array.<number>} targetPlayerIds
     * @memberof skill_du_ji_a_tos
     * @instance
     */
    skill_du_ji_a_tos.prototype.targetPlayerIds = $util.emptyArray;

    /**
     * skill_du_ji_a_tos seq.
     * @member {number} seq
     * @memberof skill_du_ji_a_tos
     * @instance
     */
    skill_du_ji_a_tos.prototype.seq = 0;

    /**
     * Creates a new skill_du_ji_a_tos instance using the specified properties.
     * @function create
     * @memberof skill_du_ji_a_tos
     * @static
     * @param {Iskill_du_ji_a_tos=} [properties] Properties to set
     * @returns {skill_du_ji_a_tos} skill_du_ji_a_tos instance
     */
    skill_du_ji_a_tos.create = function create(properties) {
        return new skill_du_ji_a_tos(properties);
    };

    /**
     * Encodes the specified skill_du_ji_a_tos message. Does not implicitly {@link skill_du_ji_a_tos.verify|verify} messages.
     * @function encode
     * @memberof skill_du_ji_a_tos
     * @static
     * @param {Iskill_du_ji_a_tos} message skill_du_ji_a_tos message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_du_ji_a_tos.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.targetPlayerIds != null && message.targetPlayerIds.length) {
            writer.uint32(/* id 1, wireType 2 =*/10).fork();
            for (var i = 0; i < message.targetPlayerIds.length; ++i)
                writer.uint32(message.targetPlayerIds[i]);
            writer.ldelim();
        }
        if (message.seq != null && Object.hasOwnProperty.call(message, "seq"))
            writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.seq);
        return writer;
    };

    /**
     * Encodes the specified skill_du_ji_a_tos message, length delimited. Does not implicitly {@link skill_du_ji_a_tos.verify|verify} messages.
     * @function encodeDelimited
     * @memberof skill_du_ji_a_tos
     * @static
     * @param {Iskill_du_ji_a_tos} message skill_du_ji_a_tos message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_du_ji_a_tos.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a skill_du_ji_a_tos message from the specified reader or buffer.
     * @function decode
     * @memberof skill_du_ji_a_tos
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {skill_du_ji_a_tos} skill_du_ji_a_tos
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_du_ji_a_tos.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.skill_du_ji_a_tos();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    if (!(message.targetPlayerIds && message.targetPlayerIds.length))
                        message.targetPlayerIds = [];
                    if ((tag & 7) === 2) {
                        var end2 = reader.uint32() + reader.pos;
                        while (reader.pos < end2)
                            message.targetPlayerIds.push(reader.uint32());
                    } else
                        message.targetPlayerIds.push(reader.uint32());
                    break;
                }
            case 2: {
                    message.seq = reader.uint32();
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a skill_du_ji_a_tos message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof skill_du_ji_a_tos
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {skill_du_ji_a_tos} skill_du_ji_a_tos
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_du_ji_a_tos.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a skill_du_ji_a_tos message.
     * @function verify
     * @memberof skill_du_ji_a_tos
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    skill_du_ji_a_tos.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.targetPlayerIds != null && message.hasOwnProperty("targetPlayerIds")) {
            if (!Array.isArray(message.targetPlayerIds))
                return "targetPlayerIds: array expected";
            for (var i = 0; i < message.targetPlayerIds.length; ++i)
                if (!$util.isInteger(message.targetPlayerIds[i]))
                    return "targetPlayerIds: integer[] expected";
        }
        if (message.seq != null && message.hasOwnProperty("seq"))
            if (!$util.isInteger(message.seq))
                return "seq: integer expected";
        return null;
    };

    /**
     * Creates a skill_du_ji_a_tos message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof skill_du_ji_a_tos
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {skill_du_ji_a_tos} skill_du_ji_a_tos
     */
    skill_du_ji_a_tos.fromObject = function fromObject(object) {
        if (object instanceof $root.skill_du_ji_a_tos)
            return object;
        var message = new $root.skill_du_ji_a_tos();
        if (object.targetPlayerIds) {
            if (!Array.isArray(object.targetPlayerIds))
                throw TypeError(".skill_du_ji_a_tos.targetPlayerIds: array expected");
            message.targetPlayerIds = [];
            for (var i = 0; i < object.targetPlayerIds.length; ++i)
                message.targetPlayerIds[i] = object.targetPlayerIds[i] >>> 0;
        }
        if (object.seq != null)
            message.seq = object.seq >>> 0;
        return message;
    };

    /**
     * Creates a plain object from a skill_du_ji_a_tos message. Also converts values to other types if specified.
     * @function toObject
     * @memberof skill_du_ji_a_tos
     * @static
     * @param {skill_du_ji_a_tos} message skill_du_ji_a_tos
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    skill_du_ji_a_tos.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.arrays || options.defaults)
            object.targetPlayerIds = [];
        if (options.defaults)
            object.seq = 0;
        if (message.targetPlayerIds && message.targetPlayerIds.length) {
            object.targetPlayerIds = [];
            for (var j = 0; j < message.targetPlayerIds.length; ++j)
                object.targetPlayerIds[j] = message.targetPlayerIds[j];
        }
        if (message.seq != null && message.hasOwnProperty("seq"))
            object.seq = message.seq;
        return object;
    };

    /**
     * Converts this skill_du_ji_a_tos to JSON.
     * @function toJSON
     * @memberof skill_du_ji_a_tos
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    skill_du_ji_a_tos.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for skill_du_ji_a_tos
     * @function getTypeUrl
     * @memberof skill_du_ji_a_tos
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    skill_du_ji_a_tos.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/skill_du_ji_a_tos";
    };

    return skill_du_ji_a_tos;
})();

$root.skill_du_ji_a_toc = (function() {

    /**
     * Properties of a skill_du_ji_a_toc.
     * @exports Iskill_du_ji_a_toc
     * @interface Iskill_du_ji_a_toc
     * @property {number|null} [playerId] skill_du_ji_a_toc playerId
     * @property {Array.<number>|null} [targetPlayerIds] skill_du_ji_a_toc targetPlayerIds
     * @property {Array.<Icard>|null} [cards] skill_du_ji_a_toc cards
     */

    /**
     * Constructs a new skill_du_ji_a_toc.
     * @exports skill_du_ji_a_toc
     * @classdesc Represents a skill_du_ji_a_toc.
     * @implements Iskill_du_ji_a_toc
     * @constructor
     * @param {Iskill_du_ji_a_toc=} [properties] Properties to set
     */
    function skill_du_ji_a_toc(properties) {
        this.targetPlayerIds = [];
        this.cards = [];
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * skill_du_ji_a_toc playerId.
     * @member {number} playerId
     * @memberof skill_du_ji_a_toc
     * @instance
     */
    skill_du_ji_a_toc.prototype.playerId = 0;

    /**
     * skill_du_ji_a_toc targetPlayerIds.
     * @member {Array.<number>} targetPlayerIds
     * @memberof skill_du_ji_a_toc
     * @instance
     */
    skill_du_ji_a_toc.prototype.targetPlayerIds = $util.emptyArray;

    /**
     * skill_du_ji_a_toc cards.
     * @member {Array.<Icard>} cards
     * @memberof skill_du_ji_a_toc
     * @instance
     */
    skill_du_ji_a_toc.prototype.cards = $util.emptyArray;

    /**
     * Creates a new skill_du_ji_a_toc instance using the specified properties.
     * @function create
     * @memberof skill_du_ji_a_toc
     * @static
     * @param {Iskill_du_ji_a_toc=} [properties] Properties to set
     * @returns {skill_du_ji_a_toc} skill_du_ji_a_toc instance
     */
    skill_du_ji_a_toc.create = function create(properties) {
        return new skill_du_ji_a_toc(properties);
    };

    /**
     * Encodes the specified skill_du_ji_a_toc message. Does not implicitly {@link skill_du_ji_a_toc.verify|verify} messages.
     * @function encode
     * @memberof skill_du_ji_a_toc
     * @static
     * @param {Iskill_du_ji_a_toc} message skill_du_ji_a_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_du_ji_a_toc.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.playerId != null && Object.hasOwnProperty.call(message, "playerId"))
            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.playerId);
        if (message.targetPlayerIds != null && message.targetPlayerIds.length) {
            writer.uint32(/* id 2, wireType 2 =*/18).fork();
            for (var i = 0; i < message.targetPlayerIds.length; ++i)
                writer.uint32(message.targetPlayerIds[i]);
            writer.ldelim();
        }
        if (message.cards != null && message.cards.length)
            for (var i = 0; i < message.cards.length; ++i)
                $root.card.encode(message.cards[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
        return writer;
    };

    /**
     * Encodes the specified skill_du_ji_a_toc message, length delimited. Does not implicitly {@link skill_du_ji_a_toc.verify|verify} messages.
     * @function encodeDelimited
     * @memberof skill_du_ji_a_toc
     * @static
     * @param {Iskill_du_ji_a_toc} message skill_du_ji_a_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_du_ji_a_toc.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a skill_du_ji_a_toc message from the specified reader or buffer.
     * @function decode
     * @memberof skill_du_ji_a_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {skill_du_ji_a_toc} skill_du_ji_a_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_du_ji_a_toc.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.skill_du_ji_a_toc();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.playerId = reader.uint32();
                    break;
                }
            case 2: {
                    if (!(message.targetPlayerIds && message.targetPlayerIds.length))
                        message.targetPlayerIds = [];
                    if ((tag & 7) === 2) {
                        var end2 = reader.uint32() + reader.pos;
                        while (reader.pos < end2)
                            message.targetPlayerIds.push(reader.uint32());
                    } else
                        message.targetPlayerIds.push(reader.uint32());
                    break;
                }
            case 3: {
                    if (!(message.cards && message.cards.length))
                        message.cards = [];
                    message.cards.push($root.card.decode(reader, reader.uint32()));
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a skill_du_ji_a_toc message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof skill_du_ji_a_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {skill_du_ji_a_toc} skill_du_ji_a_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_du_ji_a_toc.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a skill_du_ji_a_toc message.
     * @function verify
     * @memberof skill_du_ji_a_toc
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    skill_du_ji_a_toc.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            if (!$util.isInteger(message.playerId))
                return "playerId: integer expected";
        if (message.targetPlayerIds != null && message.hasOwnProperty("targetPlayerIds")) {
            if (!Array.isArray(message.targetPlayerIds))
                return "targetPlayerIds: array expected";
            for (var i = 0; i < message.targetPlayerIds.length; ++i)
                if (!$util.isInteger(message.targetPlayerIds[i]))
                    return "targetPlayerIds: integer[] expected";
        }
        if (message.cards != null && message.hasOwnProperty("cards")) {
            if (!Array.isArray(message.cards))
                return "cards: array expected";
            for (var i = 0; i < message.cards.length; ++i) {
                var error = $root.card.verify(message.cards[i]);
                if (error)
                    return "cards." + error;
            }
        }
        return null;
    };

    /**
     * Creates a skill_du_ji_a_toc message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof skill_du_ji_a_toc
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {skill_du_ji_a_toc} skill_du_ji_a_toc
     */
    skill_du_ji_a_toc.fromObject = function fromObject(object) {
        if (object instanceof $root.skill_du_ji_a_toc)
            return object;
        var message = new $root.skill_du_ji_a_toc();
        if (object.playerId != null)
            message.playerId = object.playerId >>> 0;
        if (object.targetPlayerIds) {
            if (!Array.isArray(object.targetPlayerIds))
                throw TypeError(".skill_du_ji_a_toc.targetPlayerIds: array expected");
            message.targetPlayerIds = [];
            for (var i = 0; i < object.targetPlayerIds.length; ++i)
                message.targetPlayerIds[i] = object.targetPlayerIds[i] >>> 0;
        }
        if (object.cards) {
            if (!Array.isArray(object.cards))
                throw TypeError(".skill_du_ji_a_toc.cards: array expected");
            message.cards = [];
            for (var i = 0; i < object.cards.length; ++i) {
                if (typeof object.cards[i] !== "object")
                    throw TypeError(".skill_du_ji_a_toc.cards: object expected");
                message.cards[i] = $root.card.fromObject(object.cards[i]);
            }
        }
        return message;
    };

    /**
     * Creates a plain object from a skill_du_ji_a_toc message. Also converts values to other types if specified.
     * @function toObject
     * @memberof skill_du_ji_a_toc
     * @static
     * @param {skill_du_ji_a_toc} message skill_du_ji_a_toc
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    skill_du_ji_a_toc.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.arrays || options.defaults) {
            object.targetPlayerIds = [];
            object.cards = [];
        }
        if (options.defaults)
            object.playerId = 0;
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            object.playerId = message.playerId;
        if (message.targetPlayerIds && message.targetPlayerIds.length) {
            object.targetPlayerIds = [];
            for (var j = 0; j < message.targetPlayerIds.length; ++j)
                object.targetPlayerIds[j] = message.targetPlayerIds[j];
        }
        if (message.cards && message.cards.length) {
            object.cards = [];
            for (var j = 0; j < message.cards.length; ++j)
                object.cards[j] = $root.card.toObject(message.cards[j], options);
        }
        return object;
    };

    /**
     * Converts this skill_du_ji_a_toc to JSON.
     * @function toJSON
     * @memberof skill_du_ji_a_toc
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    skill_du_ji_a_toc.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for skill_du_ji_a_toc
     * @function getTypeUrl
     * @memberof skill_du_ji_a_toc
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    skill_du_ji_a_toc.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/skill_du_ji_a_toc";
    };

    return skill_du_ji_a_toc;
})();

$root.skill_wait_for_du_ji_b_toc = (function() {

    /**
     * Properties of a skill_wait_for_du_ji_b_toc.
     * @exports Iskill_wait_for_du_ji_b_toc
     * @interface Iskill_wait_for_du_ji_b_toc
     * @property {number|null} [playerId] skill_wait_for_du_ji_b_toc playerId
     * @property {Array.<number>|null} [targetPlayerIds] skill_wait_for_du_ji_b_toc targetPlayerIds
     * @property {Array.<number>|null} [cardIds] skill_wait_for_du_ji_b_toc cardIds
     * @property {number|null} [waitingSecond] skill_wait_for_du_ji_b_toc waitingSecond
     * @property {number|null} [seq] skill_wait_for_du_ji_b_toc seq
     */

    /**
     * Constructs a new skill_wait_for_du_ji_b_toc.
     * @exports skill_wait_for_du_ji_b_toc
     * @classdesc Represents a skill_wait_for_du_ji_b_toc.
     * @implements Iskill_wait_for_du_ji_b_toc
     * @constructor
     * @param {Iskill_wait_for_du_ji_b_toc=} [properties] Properties to set
     */
    function skill_wait_for_du_ji_b_toc(properties) {
        this.targetPlayerIds = [];
        this.cardIds = [];
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * skill_wait_for_du_ji_b_toc playerId.
     * @member {number} playerId
     * @memberof skill_wait_for_du_ji_b_toc
     * @instance
     */
    skill_wait_for_du_ji_b_toc.prototype.playerId = 0;

    /**
     * skill_wait_for_du_ji_b_toc targetPlayerIds.
     * @member {Array.<number>} targetPlayerIds
     * @memberof skill_wait_for_du_ji_b_toc
     * @instance
     */
    skill_wait_for_du_ji_b_toc.prototype.targetPlayerIds = $util.emptyArray;

    /**
     * skill_wait_for_du_ji_b_toc cardIds.
     * @member {Array.<number>} cardIds
     * @memberof skill_wait_for_du_ji_b_toc
     * @instance
     */
    skill_wait_for_du_ji_b_toc.prototype.cardIds = $util.emptyArray;

    /**
     * skill_wait_for_du_ji_b_toc waitingSecond.
     * @member {number} waitingSecond
     * @memberof skill_wait_for_du_ji_b_toc
     * @instance
     */
    skill_wait_for_du_ji_b_toc.prototype.waitingSecond = 0;

    /**
     * skill_wait_for_du_ji_b_toc seq.
     * @member {number} seq
     * @memberof skill_wait_for_du_ji_b_toc
     * @instance
     */
    skill_wait_for_du_ji_b_toc.prototype.seq = 0;

    /**
     * Creates a new skill_wait_for_du_ji_b_toc instance using the specified properties.
     * @function create
     * @memberof skill_wait_for_du_ji_b_toc
     * @static
     * @param {Iskill_wait_for_du_ji_b_toc=} [properties] Properties to set
     * @returns {skill_wait_for_du_ji_b_toc} skill_wait_for_du_ji_b_toc instance
     */
    skill_wait_for_du_ji_b_toc.create = function create(properties) {
        return new skill_wait_for_du_ji_b_toc(properties);
    };

    /**
     * Encodes the specified skill_wait_for_du_ji_b_toc message. Does not implicitly {@link skill_wait_for_du_ji_b_toc.verify|verify} messages.
     * @function encode
     * @memberof skill_wait_for_du_ji_b_toc
     * @static
     * @param {Iskill_wait_for_du_ji_b_toc} message skill_wait_for_du_ji_b_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_wait_for_du_ji_b_toc.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.playerId != null && Object.hasOwnProperty.call(message, "playerId"))
            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.playerId);
        if (message.targetPlayerIds != null && message.targetPlayerIds.length) {
            writer.uint32(/* id 2, wireType 2 =*/18).fork();
            for (var i = 0; i < message.targetPlayerIds.length; ++i)
                writer.uint32(message.targetPlayerIds[i]);
            writer.ldelim();
        }
        if (message.cardIds != null && message.cardIds.length) {
            writer.uint32(/* id 3, wireType 2 =*/26).fork();
            for (var i = 0; i < message.cardIds.length; ++i)
                writer.uint32(message.cardIds[i]);
            writer.ldelim();
        }
        if (message.waitingSecond != null && Object.hasOwnProperty.call(message, "waitingSecond"))
            writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.waitingSecond);
        if (message.seq != null && Object.hasOwnProperty.call(message, "seq"))
            writer.uint32(/* id 5, wireType 0 =*/40).uint32(message.seq);
        return writer;
    };

    /**
     * Encodes the specified skill_wait_for_du_ji_b_toc message, length delimited. Does not implicitly {@link skill_wait_for_du_ji_b_toc.verify|verify} messages.
     * @function encodeDelimited
     * @memberof skill_wait_for_du_ji_b_toc
     * @static
     * @param {Iskill_wait_for_du_ji_b_toc} message skill_wait_for_du_ji_b_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_wait_for_du_ji_b_toc.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a skill_wait_for_du_ji_b_toc message from the specified reader or buffer.
     * @function decode
     * @memberof skill_wait_for_du_ji_b_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {skill_wait_for_du_ji_b_toc} skill_wait_for_du_ji_b_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_wait_for_du_ji_b_toc.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.skill_wait_for_du_ji_b_toc();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.playerId = reader.uint32();
                    break;
                }
            case 2: {
                    if (!(message.targetPlayerIds && message.targetPlayerIds.length))
                        message.targetPlayerIds = [];
                    if ((tag & 7) === 2) {
                        var end2 = reader.uint32() + reader.pos;
                        while (reader.pos < end2)
                            message.targetPlayerIds.push(reader.uint32());
                    } else
                        message.targetPlayerIds.push(reader.uint32());
                    break;
                }
            case 3: {
                    if (!(message.cardIds && message.cardIds.length))
                        message.cardIds = [];
                    if ((tag & 7) === 2) {
                        var end2 = reader.uint32() + reader.pos;
                        while (reader.pos < end2)
                            message.cardIds.push(reader.uint32());
                    } else
                        message.cardIds.push(reader.uint32());
                    break;
                }
            case 4: {
                    message.waitingSecond = reader.uint32();
                    break;
                }
            case 5: {
                    message.seq = reader.uint32();
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a skill_wait_for_du_ji_b_toc message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof skill_wait_for_du_ji_b_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {skill_wait_for_du_ji_b_toc} skill_wait_for_du_ji_b_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_wait_for_du_ji_b_toc.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a skill_wait_for_du_ji_b_toc message.
     * @function verify
     * @memberof skill_wait_for_du_ji_b_toc
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    skill_wait_for_du_ji_b_toc.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            if (!$util.isInteger(message.playerId))
                return "playerId: integer expected";
        if (message.targetPlayerIds != null && message.hasOwnProperty("targetPlayerIds")) {
            if (!Array.isArray(message.targetPlayerIds))
                return "targetPlayerIds: array expected";
            for (var i = 0; i < message.targetPlayerIds.length; ++i)
                if (!$util.isInteger(message.targetPlayerIds[i]))
                    return "targetPlayerIds: integer[] expected";
        }
        if (message.cardIds != null && message.hasOwnProperty("cardIds")) {
            if (!Array.isArray(message.cardIds))
                return "cardIds: array expected";
            for (var i = 0; i < message.cardIds.length; ++i)
                if (!$util.isInteger(message.cardIds[i]))
                    return "cardIds: integer[] expected";
        }
        if (message.waitingSecond != null && message.hasOwnProperty("waitingSecond"))
            if (!$util.isInteger(message.waitingSecond))
                return "waitingSecond: integer expected";
        if (message.seq != null && message.hasOwnProperty("seq"))
            if (!$util.isInteger(message.seq))
                return "seq: integer expected";
        return null;
    };

    /**
     * Creates a skill_wait_for_du_ji_b_toc message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof skill_wait_for_du_ji_b_toc
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {skill_wait_for_du_ji_b_toc} skill_wait_for_du_ji_b_toc
     */
    skill_wait_for_du_ji_b_toc.fromObject = function fromObject(object) {
        if (object instanceof $root.skill_wait_for_du_ji_b_toc)
            return object;
        var message = new $root.skill_wait_for_du_ji_b_toc();
        if (object.playerId != null)
            message.playerId = object.playerId >>> 0;
        if (object.targetPlayerIds) {
            if (!Array.isArray(object.targetPlayerIds))
                throw TypeError(".skill_wait_for_du_ji_b_toc.targetPlayerIds: array expected");
            message.targetPlayerIds = [];
            for (var i = 0; i < object.targetPlayerIds.length; ++i)
                message.targetPlayerIds[i] = object.targetPlayerIds[i] >>> 0;
        }
        if (object.cardIds) {
            if (!Array.isArray(object.cardIds))
                throw TypeError(".skill_wait_for_du_ji_b_toc.cardIds: array expected");
            message.cardIds = [];
            for (var i = 0; i < object.cardIds.length; ++i)
                message.cardIds[i] = object.cardIds[i] >>> 0;
        }
        if (object.waitingSecond != null)
            message.waitingSecond = object.waitingSecond >>> 0;
        if (object.seq != null)
            message.seq = object.seq >>> 0;
        return message;
    };

    /**
     * Creates a plain object from a skill_wait_for_du_ji_b_toc message. Also converts values to other types if specified.
     * @function toObject
     * @memberof skill_wait_for_du_ji_b_toc
     * @static
     * @param {skill_wait_for_du_ji_b_toc} message skill_wait_for_du_ji_b_toc
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    skill_wait_for_du_ji_b_toc.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.arrays || options.defaults) {
            object.targetPlayerIds = [];
            object.cardIds = [];
        }
        if (options.defaults) {
            object.playerId = 0;
            object.waitingSecond = 0;
            object.seq = 0;
        }
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            object.playerId = message.playerId;
        if (message.targetPlayerIds && message.targetPlayerIds.length) {
            object.targetPlayerIds = [];
            for (var j = 0; j < message.targetPlayerIds.length; ++j)
                object.targetPlayerIds[j] = message.targetPlayerIds[j];
        }
        if (message.cardIds && message.cardIds.length) {
            object.cardIds = [];
            for (var j = 0; j < message.cardIds.length; ++j)
                object.cardIds[j] = message.cardIds[j];
        }
        if (message.waitingSecond != null && message.hasOwnProperty("waitingSecond"))
            object.waitingSecond = message.waitingSecond;
        if (message.seq != null && message.hasOwnProperty("seq"))
            object.seq = message.seq;
        return object;
    };

    /**
     * Converts this skill_wait_for_du_ji_b_toc to JSON.
     * @function toJSON
     * @memberof skill_wait_for_du_ji_b_toc
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    skill_wait_for_du_ji_b_toc.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for skill_wait_for_du_ji_b_toc
     * @function getTypeUrl
     * @memberof skill_wait_for_du_ji_b_toc
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    skill_wait_for_du_ji_b_toc.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/skill_wait_for_du_ji_b_toc";
    };

    return skill_wait_for_du_ji_b_toc;
})();

$root.skill_du_ji_b_tos = (function() {

    /**
     * Properties of a skill_du_ji_b_tos.
     * @exports Iskill_du_ji_b_tos
     * @interface Iskill_du_ji_b_tos
     * @property {boolean|null} [enable] skill_du_ji_b_tos enable
     * @property {number|null} [cardId] skill_du_ji_b_tos cardId
     * @property {number|null} [seq] skill_du_ji_b_tos seq
     */

    /**
     * Constructs a new skill_du_ji_b_tos.
     * @exports skill_du_ji_b_tos
     * @classdesc Represents a skill_du_ji_b_tos.
     * @implements Iskill_du_ji_b_tos
     * @constructor
     * @param {Iskill_du_ji_b_tos=} [properties] Properties to set
     */
    function skill_du_ji_b_tos(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * skill_du_ji_b_tos enable.
     * @member {boolean} enable
     * @memberof skill_du_ji_b_tos
     * @instance
     */
    skill_du_ji_b_tos.prototype.enable = false;

    /**
     * skill_du_ji_b_tos cardId.
     * @member {number} cardId
     * @memberof skill_du_ji_b_tos
     * @instance
     */
    skill_du_ji_b_tos.prototype.cardId = 0;

    /**
     * skill_du_ji_b_tos seq.
     * @member {number} seq
     * @memberof skill_du_ji_b_tos
     * @instance
     */
    skill_du_ji_b_tos.prototype.seq = 0;

    /**
     * Creates a new skill_du_ji_b_tos instance using the specified properties.
     * @function create
     * @memberof skill_du_ji_b_tos
     * @static
     * @param {Iskill_du_ji_b_tos=} [properties] Properties to set
     * @returns {skill_du_ji_b_tos} skill_du_ji_b_tos instance
     */
    skill_du_ji_b_tos.create = function create(properties) {
        return new skill_du_ji_b_tos(properties);
    };

    /**
     * Encodes the specified skill_du_ji_b_tos message. Does not implicitly {@link skill_du_ji_b_tos.verify|verify} messages.
     * @function encode
     * @memberof skill_du_ji_b_tos
     * @static
     * @param {Iskill_du_ji_b_tos} message skill_du_ji_b_tos message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_du_ji_b_tos.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.enable != null && Object.hasOwnProperty.call(message, "enable"))
            writer.uint32(/* id 1, wireType 0 =*/8).bool(message.enable);
        if (message.cardId != null && Object.hasOwnProperty.call(message, "cardId"))
            writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.cardId);
        if (message.seq != null && Object.hasOwnProperty.call(message, "seq"))
            writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.seq);
        return writer;
    };

    /**
     * Encodes the specified skill_du_ji_b_tos message, length delimited. Does not implicitly {@link skill_du_ji_b_tos.verify|verify} messages.
     * @function encodeDelimited
     * @memberof skill_du_ji_b_tos
     * @static
     * @param {Iskill_du_ji_b_tos} message skill_du_ji_b_tos message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_du_ji_b_tos.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a skill_du_ji_b_tos message from the specified reader or buffer.
     * @function decode
     * @memberof skill_du_ji_b_tos
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {skill_du_ji_b_tos} skill_du_ji_b_tos
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_du_ji_b_tos.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.skill_du_ji_b_tos();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.enable = reader.bool();
                    break;
                }
            case 2: {
                    message.cardId = reader.uint32();
                    break;
                }
            case 3: {
                    message.seq = reader.uint32();
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a skill_du_ji_b_tos message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof skill_du_ji_b_tos
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {skill_du_ji_b_tos} skill_du_ji_b_tos
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_du_ji_b_tos.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a skill_du_ji_b_tos message.
     * @function verify
     * @memberof skill_du_ji_b_tos
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    skill_du_ji_b_tos.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.enable != null && message.hasOwnProperty("enable"))
            if (typeof message.enable !== "boolean")
                return "enable: boolean expected";
        if (message.cardId != null && message.hasOwnProperty("cardId"))
            if (!$util.isInteger(message.cardId))
                return "cardId: integer expected";
        if (message.seq != null && message.hasOwnProperty("seq"))
            if (!$util.isInteger(message.seq))
                return "seq: integer expected";
        return null;
    };

    /**
     * Creates a skill_du_ji_b_tos message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof skill_du_ji_b_tos
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {skill_du_ji_b_tos} skill_du_ji_b_tos
     */
    skill_du_ji_b_tos.fromObject = function fromObject(object) {
        if (object instanceof $root.skill_du_ji_b_tos)
            return object;
        var message = new $root.skill_du_ji_b_tos();
        if (object.enable != null)
            message.enable = Boolean(object.enable);
        if (object.cardId != null)
            message.cardId = object.cardId >>> 0;
        if (object.seq != null)
            message.seq = object.seq >>> 0;
        return message;
    };

    /**
     * Creates a plain object from a skill_du_ji_b_tos message. Also converts values to other types if specified.
     * @function toObject
     * @memberof skill_du_ji_b_tos
     * @static
     * @param {skill_du_ji_b_tos} message skill_du_ji_b_tos
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    skill_du_ji_b_tos.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults) {
            object.enable = false;
            object.cardId = 0;
            object.seq = 0;
        }
        if (message.enable != null && message.hasOwnProperty("enable"))
            object.enable = message.enable;
        if (message.cardId != null && message.hasOwnProperty("cardId"))
            object.cardId = message.cardId;
        if (message.seq != null && message.hasOwnProperty("seq"))
            object.seq = message.seq;
        return object;
    };

    /**
     * Converts this skill_du_ji_b_tos to JSON.
     * @function toJSON
     * @memberof skill_du_ji_b_tos
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    skill_du_ji_b_tos.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for skill_du_ji_b_tos
     * @function getTypeUrl
     * @memberof skill_du_ji_b_tos
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    skill_du_ji_b_tos.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/skill_du_ji_b_tos";
    };

    return skill_du_ji_b_tos;
})();

$root.skill_du_ji_b_toc = (function() {

    /**
     * Properties of a skill_du_ji_b_toc.
     * @exports Iskill_du_ji_b_toc
     * @interface Iskill_du_ji_b_toc
     * @property {number|null} [playerId] skill_du_ji_b_toc playerId
     * @property {boolean|null} [enable] skill_du_ji_b_toc enable
     * @property {number|null} [waitingPlayerId] skill_du_ji_b_toc waitingPlayerId
     * @property {number|null} [targetPlayerId] skill_du_ji_b_toc targetPlayerId
     * @property {Icard|null} [card] skill_du_ji_b_toc card
     * @property {number|null} [waitingSecond] skill_du_ji_b_toc waitingSecond
     * @property {number|null} [seq] skill_du_ji_b_toc seq
     */

    /**
     * Constructs a new skill_du_ji_b_toc.
     * @exports skill_du_ji_b_toc
     * @classdesc Represents a skill_du_ji_b_toc.
     * @implements Iskill_du_ji_b_toc
     * @constructor
     * @param {Iskill_du_ji_b_toc=} [properties] Properties to set
     */
    function skill_du_ji_b_toc(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * skill_du_ji_b_toc playerId.
     * @member {number} playerId
     * @memberof skill_du_ji_b_toc
     * @instance
     */
    skill_du_ji_b_toc.prototype.playerId = 0;

    /**
     * skill_du_ji_b_toc enable.
     * @member {boolean} enable
     * @memberof skill_du_ji_b_toc
     * @instance
     */
    skill_du_ji_b_toc.prototype.enable = false;

    /**
     * skill_du_ji_b_toc waitingPlayerId.
     * @member {number} waitingPlayerId
     * @memberof skill_du_ji_b_toc
     * @instance
     */
    skill_du_ji_b_toc.prototype.waitingPlayerId = 0;

    /**
     * skill_du_ji_b_toc targetPlayerId.
     * @member {number} targetPlayerId
     * @memberof skill_du_ji_b_toc
     * @instance
     */
    skill_du_ji_b_toc.prototype.targetPlayerId = 0;

    /**
     * skill_du_ji_b_toc card.
     * @member {Icard|null|undefined} card
     * @memberof skill_du_ji_b_toc
     * @instance
     */
    skill_du_ji_b_toc.prototype.card = null;

    /**
     * skill_du_ji_b_toc waitingSecond.
     * @member {number} waitingSecond
     * @memberof skill_du_ji_b_toc
     * @instance
     */
    skill_du_ji_b_toc.prototype.waitingSecond = 0;

    /**
     * skill_du_ji_b_toc seq.
     * @member {number} seq
     * @memberof skill_du_ji_b_toc
     * @instance
     */
    skill_du_ji_b_toc.prototype.seq = 0;

    /**
     * Creates a new skill_du_ji_b_toc instance using the specified properties.
     * @function create
     * @memberof skill_du_ji_b_toc
     * @static
     * @param {Iskill_du_ji_b_toc=} [properties] Properties to set
     * @returns {skill_du_ji_b_toc} skill_du_ji_b_toc instance
     */
    skill_du_ji_b_toc.create = function create(properties) {
        return new skill_du_ji_b_toc(properties);
    };

    /**
     * Encodes the specified skill_du_ji_b_toc message. Does not implicitly {@link skill_du_ji_b_toc.verify|verify} messages.
     * @function encode
     * @memberof skill_du_ji_b_toc
     * @static
     * @param {Iskill_du_ji_b_toc} message skill_du_ji_b_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_du_ji_b_toc.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.playerId != null && Object.hasOwnProperty.call(message, "playerId"))
            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.playerId);
        if (message.enable != null && Object.hasOwnProperty.call(message, "enable"))
            writer.uint32(/* id 2, wireType 0 =*/16).bool(message.enable);
        if (message.waitingPlayerId != null && Object.hasOwnProperty.call(message, "waitingPlayerId"))
            writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.waitingPlayerId);
        if (message.targetPlayerId != null && Object.hasOwnProperty.call(message, "targetPlayerId"))
            writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.targetPlayerId);
        if (message.card != null && Object.hasOwnProperty.call(message, "card"))
            $root.card.encode(message.card, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
        if (message.waitingSecond != null && Object.hasOwnProperty.call(message, "waitingSecond"))
            writer.uint32(/* id 6, wireType 0 =*/48).uint32(message.waitingSecond);
        if (message.seq != null && Object.hasOwnProperty.call(message, "seq"))
            writer.uint32(/* id 7, wireType 0 =*/56).uint32(message.seq);
        return writer;
    };

    /**
     * Encodes the specified skill_du_ji_b_toc message, length delimited. Does not implicitly {@link skill_du_ji_b_toc.verify|verify} messages.
     * @function encodeDelimited
     * @memberof skill_du_ji_b_toc
     * @static
     * @param {Iskill_du_ji_b_toc} message skill_du_ji_b_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_du_ji_b_toc.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a skill_du_ji_b_toc message from the specified reader or buffer.
     * @function decode
     * @memberof skill_du_ji_b_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {skill_du_ji_b_toc} skill_du_ji_b_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_du_ji_b_toc.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.skill_du_ji_b_toc();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.playerId = reader.uint32();
                    break;
                }
            case 2: {
                    message.enable = reader.bool();
                    break;
                }
            case 3: {
                    message.waitingPlayerId = reader.uint32();
                    break;
                }
            case 4: {
                    message.targetPlayerId = reader.uint32();
                    break;
                }
            case 5: {
                    message.card = $root.card.decode(reader, reader.uint32());
                    break;
                }
            case 6: {
                    message.waitingSecond = reader.uint32();
                    break;
                }
            case 7: {
                    message.seq = reader.uint32();
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a skill_du_ji_b_toc message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof skill_du_ji_b_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {skill_du_ji_b_toc} skill_du_ji_b_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_du_ji_b_toc.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a skill_du_ji_b_toc message.
     * @function verify
     * @memberof skill_du_ji_b_toc
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    skill_du_ji_b_toc.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            if (!$util.isInteger(message.playerId))
                return "playerId: integer expected";
        if (message.enable != null && message.hasOwnProperty("enable"))
            if (typeof message.enable !== "boolean")
                return "enable: boolean expected";
        if (message.waitingPlayerId != null && message.hasOwnProperty("waitingPlayerId"))
            if (!$util.isInteger(message.waitingPlayerId))
                return "waitingPlayerId: integer expected";
        if (message.targetPlayerId != null && message.hasOwnProperty("targetPlayerId"))
            if (!$util.isInteger(message.targetPlayerId))
                return "targetPlayerId: integer expected";
        if (message.card != null && message.hasOwnProperty("card")) {
            var error = $root.card.verify(message.card);
            if (error)
                return "card." + error;
        }
        if (message.waitingSecond != null && message.hasOwnProperty("waitingSecond"))
            if (!$util.isInteger(message.waitingSecond))
                return "waitingSecond: integer expected";
        if (message.seq != null && message.hasOwnProperty("seq"))
            if (!$util.isInteger(message.seq))
                return "seq: integer expected";
        return null;
    };

    /**
     * Creates a skill_du_ji_b_toc message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof skill_du_ji_b_toc
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {skill_du_ji_b_toc} skill_du_ji_b_toc
     */
    skill_du_ji_b_toc.fromObject = function fromObject(object) {
        if (object instanceof $root.skill_du_ji_b_toc)
            return object;
        var message = new $root.skill_du_ji_b_toc();
        if (object.playerId != null)
            message.playerId = object.playerId >>> 0;
        if (object.enable != null)
            message.enable = Boolean(object.enable);
        if (object.waitingPlayerId != null)
            message.waitingPlayerId = object.waitingPlayerId >>> 0;
        if (object.targetPlayerId != null)
            message.targetPlayerId = object.targetPlayerId >>> 0;
        if (object.card != null) {
            if (typeof object.card !== "object")
                throw TypeError(".skill_du_ji_b_toc.card: object expected");
            message.card = $root.card.fromObject(object.card);
        }
        if (object.waitingSecond != null)
            message.waitingSecond = object.waitingSecond >>> 0;
        if (object.seq != null)
            message.seq = object.seq >>> 0;
        return message;
    };

    /**
     * Creates a plain object from a skill_du_ji_b_toc message. Also converts values to other types if specified.
     * @function toObject
     * @memberof skill_du_ji_b_toc
     * @static
     * @param {skill_du_ji_b_toc} message skill_du_ji_b_toc
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    skill_du_ji_b_toc.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults) {
            object.playerId = 0;
            object.enable = false;
            object.waitingPlayerId = 0;
            object.targetPlayerId = 0;
            object.card = null;
            object.waitingSecond = 0;
            object.seq = 0;
        }
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            object.playerId = message.playerId;
        if (message.enable != null && message.hasOwnProperty("enable"))
            object.enable = message.enable;
        if (message.waitingPlayerId != null && message.hasOwnProperty("waitingPlayerId"))
            object.waitingPlayerId = message.waitingPlayerId;
        if (message.targetPlayerId != null && message.hasOwnProperty("targetPlayerId"))
            object.targetPlayerId = message.targetPlayerId;
        if (message.card != null && message.hasOwnProperty("card"))
            object.card = $root.card.toObject(message.card, options);
        if (message.waitingSecond != null && message.hasOwnProperty("waitingSecond"))
            object.waitingSecond = message.waitingSecond;
        if (message.seq != null && message.hasOwnProperty("seq"))
            object.seq = message.seq;
        return object;
    };

    /**
     * Converts this skill_du_ji_b_toc to JSON.
     * @function toJSON
     * @memberof skill_du_ji_b_toc
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    skill_du_ji_b_toc.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for skill_du_ji_b_toc
     * @function getTypeUrl
     * @memberof skill_du_ji_b_toc
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    skill_du_ji_b_toc.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/skill_du_ji_b_toc";
    };

    return skill_du_ji_b_toc;
})();

$root.skill_du_ji_c_tos = (function() {

    /**
     * Properties of a skill_du_ji_c_tos.
     * @exports Iskill_du_ji_c_tos
     * @interface Iskill_du_ji_c_tos
     * @property {boolean|null} [inFrontOfMe] skill_du_ji_c_tos inFrontOfMe
     * @property {number|null} [seq] skill_du_ji_c_tos seq
     */

    /**
     * Constructs a new skill_du_ji_c_tos.
     * @exports skill_du_ji_c_tos
     * @classdesc Represents a skill_du_ji_c_tos.
     * @implements Iskill_du_ji_c_tos
     * @constructor
     * @param {Iskill_du_ji_c_tos=} [properties] Properties to set
     */
    function skill_du_ji_c_tos(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * skill_du_ji_c_tos inFrontOfMe.
     * @member {boolean} inFrontOfMe
     * @memberof skill_du_ji_c_tos
     * @instance
     */
    skill_du_ji_c_tos.prototype.inFrontOfMe = false;

    /**
     * skill_du_ji_c_tos seq.
     * @member {number} seq
     * @memberof skill_du_ji_c_tos
     * @instance
     */
    skill_du_ji_c_tos.prototype.seq = 0;

    /**
     * Creates a new skill_du_ji_c_tos instance using the specified properties.
     * @function create
     * @memberof skill_du_ji_c_tos
     * @static
     * @param {Iskill_du_ji_c_tos=} [properties] Properties to set
     * @returns {skill_du_ji_c_tos} skill_du_ji_c_tos instance
     */
    skill_du_ji_c_tos.create = function create(properties) {
        return new skill_du_ji_c_tos(properties);
    };

    /**
     * Encodes the specified skill_du_ji_c_tos message. Does not implicitly {@link skill_du_ji_c_tos.verify|verify} messages.
     * @function encode
     * @memberof skill_du_ji_c_tos
     * @static
     * @param {Iskill_du_ji_c_tos} message skill_du_ji_c_tos message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_du_ji_c_tos.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.inFrontOfMe != null && Object.hasOwnProperty.call(message, "inFrontOfMe"))
            writer.uint32(/* id 1, wireType 0 =*/8).bool(message.inFrontOfMe);
        if (message.seq != null && Object.hasOwnProperty.call(message, "seq"))
            writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.seq);
        return writer;
    };

    /**
     * Encodes the specified skill_du_ji_c_tos message, length delimited. Does not implicitly {@link skill_du_ji_c_tos.verify|verify} messages.
     * @function encodeDelimited
     * @memberof skill_du_ji_c_tos
     * @static
     * @param {Iskill_du_ji_c_tos} message skill_du_ji_c_tos message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_du_ji_c_tos.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a skill_du_ji_c_tos message from the specified reader or buffer.
     * @function decode
     * @memberof skill_du_ji_c_tos
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {skill_du_ji_c_tos} skill_du_ji_c_tos
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_du_ji_c_tos.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.skill_du_ji_c_tos();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.inFrontOfMe = reader.bool();
                    break;
                }
            case 2: {
                    message.seq = reader.uint32();
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a skill_du_ji_c_tos message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof skill_du_ji_c_tos
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {skill_du_ji_c_tos} skill_du_ji_c_tos
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_du_ji_c_tos.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a skill_du_ji_c_tos message.
     * @function verify
     * @memberof skill_du_ji_c_tos
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    skill_du_ji_c_tos.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.inFrontOfMe != null && message.hasOwnProperty("inFrontOfMe"))
            if (typeof message.inFrontOfMe !== "boolean")
                return "inFrontOfMe: boolean expected";
        if (message.seq != null && message.hasOwnProperty("seq"))
            if (!$util.isInteger(message.seq))
                return "seq: integer expected";
        return null;
    };

    /**
     * Creates a skill_du_ji_c_tos message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof skill_du_ji_c_tos
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {skill_du_ji_c_tos} skill_du_ji_c_tos
     */
    skill_du_ji_c_tos.fromObject = function fromObject(object) {
        if (object instanceof $root.skill_du_ji_c_tos)
            return object;
        var message = new $root.skill_du_ji_c_tos();
        if (object.inFrontOfMe != null)
            message.inFrontOfMe = Boolean(object.inFrontOfMe);
        if (object.seq != null)
            message.seq = object.seq >>> 0;
        return message;
    };

    /**
     * Creates a plain object from a skill_du_ji_c_tos message. Also converts values to other types if specified.
     * @function toObject
     * @memberof skill_du_ji_c_tos
     * @static
     * @param {skill_du_ji_c_tos} message skill_du_ji_c_tos
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    skill_du_ji_c_tos.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults) {
            object.inFrontOfMe = false;
            object.seq = 0;
        }
        if (message.inFrontOfMe != null && message.hasOwnProperty("inFrontOfMe"))
            object.inFrontOfMe = message.inFrontOfMe;
        if (message.seq != null && message.hasOwnProperty("seq"))
            object.seq = message.seq;
        return object;
    };

    /**
     * Converts this skill_du_ji_c_tos to JSON.
     * @function toJSON
     * @memberof skill_du_ji_c_tos
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    skill_du_ji_c_tos.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for skill_du_ji_c_tos
     * @function getTypeUrl
     * @memberof skill_du_ji_c_tos
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    skill_du_ji_c_tos.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/skill_du_ji_c_tos";
    };

    return skill_du_ji_c_tos;
})();

$root.skill_du_ji_c_toc = (function() {

    /**
     * Properties of a skill_du_ji_c_toc.
     * @exports Iskill_du_ji_c_toc
     * @interface Iskill_du_ji_c_toc
     * @property {number|null} [playerId] skill_du_ji_c_toc playerId
     * @property {number|null} [waitingPlayerId] skill_du_ji_c_toc waitingPlayerId
     * @property {number|null} [targetPlayerId] skill_du_ji_c_toc targetPlayerId
     * @property {Icard|null} [card] skill_du_ji_c_toc card
     */

    /**
     * Constructs a new skill_du_ji_c_toc.
     * @exports skill_du_ji_c_toc
     * @classdesc Represents a skill_du_ji_c_toc.
     * @implements Iskill_du_ji_c_toc
     * @constructor
     * @param {Iskill_du_ji_c_toc=} [properties] Properties to set
     */
    function skill_du_ji_c_toc(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * skill_du_ji_c_toc playerId.
     * @member {number} playerId
     * @memberof skill_du_ji_c_toc
     * @instance
     */
    skill_du_ji_c_toc.prototype.playerId = 0;

    /**
     * skill_du_ji_c_toc waitingPlayerId.
     * @member {number} waitingPlayerId
     * @memberof skill_du_ji_c_toc
     * @instance
     */
    skill_du_ji_c_toc.prototype.waitingPlayerId = 0;

    /**
     * skill_du_ji_c_toc targetPlayerId.
     * @member {number} targetPlayerId
     * @memberof skill_du_ji_c_toc
     * @instance
     */
    skill_du_ji_c_toc.prototype.targetPlayerId = 0;

    /**
     * skill_du_ji_c_toc card.
     * @member {Icard|null|undefined} card
     * @memberof skill_du_ji_c_toc
     * @instance
     */
    skill_du_ji_c_toc.prototype.card = null;

    /**
     * Creates a new skill_du_ji_c_toc instance using the specified properties.
     * @function create
     * @memberof skill_du_ji_c_toc
     * @static
     * @param {Iskill_du_ji_c_toc=} [properties] Properties to set
     * @returns {skill_du_ji_c_toc} skill_du_ji_c_toc instance
     */
    skill_du_ji_c_toc.create = function create(properties) {
        return new skill_du_ji_c_toc(properties);
    };

    /**
     * Encodes the specified skill_du_ji_c_toc message. Does not implicitly {@link skill_du_ji_c_toc.verify|verify} messages.
     * @function encode
     * @memberof skill_du_ji_c_toc
     * @static
     * @param {Iskill_du_ji_c_toc} message skill_du_ji_c_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_du_ji_c_toc.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.playerId != null && Object.hasOwnProperty.call(message, "playerId"))
            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.playerId);
        if (message.waitingPlayerId != null && Object.hasOwnProperty.call(message, "waitingPlayerId"))
            writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.waitingPlayerId);
        if (message.targetPlayerId != null && Object.hasOwnProperty.call(message, "targetPlayerId"))
            writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.targetPlayerId);
        if (message.card != null && Object.hasOwnProperty.call(message, "card"))
            $root.card.encode(message.card, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
        return writer;
    };

    /**
     * Encodes the specified skill_du_ji_c_toc message, length delimited. Does not implicitly {@link skill_du_ji_c_toc.verify|verify} messages.
     * @function encodeDelimited
     * @memberof skill_du_ji_c_toc
     * @static
     * @param {Iskill_du_ji_c_toc} message skill_du_ji_c_toc message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    skill_du_ji_c_toc.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a skill_du_ji_c_toc message from the specified reader or buffer.
     * @function decode
     * @memberof skill_du_ji_c_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {skill_du_ji_c_toc} skill_du_ji_c_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_du_ji_c_toc.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.skill_du_ji_c_toc();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1: {
                    message.playerId = reader.uint32();
                    break;
                }
            case 2: {
                    message.waitingPlayerId = reader.uint32();
                    break;
                }
            case 3: {
                    message.targetPlayerId = reader.uint32();
                    break;
                }
            case 4: {
                    message.card = $root.card.decode(reader, reader.uint32());
                    break;
                }
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a skill_du_ji_c_toc message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof skill_du_ji_c_toc
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {skill_du_ji_c_toc} skill_du_ji_c_toc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    skill_du_ji_c_toc.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a skill_du_ji_c_toc message.
     * @function verify
     * @memberof skill_du_ji_c_toc
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    skill_du_ji_c_toc.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            if (!$util.isInteger(message.playerId))
                return "playerId: integer expected";
        if (message.waitingPlayerId != null && message.hasOwnProperty("waitingPlayerId"))
            if (!$util.isInteger(message.waitingPlayerId))
                return "waitingPlayerId: integer expected";
        if (message.targetPlayerId != null && message.hasOwnProperty("targetPlayerId"))
            if (!$util.isInteger(message.targetPlayerId))
                return "targetPlayerId: integer expected";
        if (message.card != null && message.hasOwnProperty("card")) {
            var error = $root.card.verify(message.card);
            if (error)
                return "card." + error;
        }
        return null;
    };

    /**
     * Creates a skill_du_ji_c_toc message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof skill_du_ji_c_toc
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {skill_du_ji_c_toc} skill_du_ji_c_toc
     */
    skill_du_ji_c_toc.fromObject = function fromObject(object) {
        if (object instanceof $root.skill_du_ji_c_toc)
            return object;
        var message = new $root.skill_du_ji_c_toc();
        if (object.playerId != null)
            message.playerId = object.playerId >>> 0;
        if (object.waitingPlayerId != null)
            message.waitingPlayerId = object.waitingPlayerId >>> 0;
        if (object.targetPlayerId != null)
            message.targetPlayerId = object.targetPlayerId >>> 0;
        if (object.card != null) {
            if (typeof object.card !== "object")
                throw TypeError(".skill_du_ji_c_toc.card: object expected");
            message.card = $root.card.fromObject(object.card);
        }
        return message;
    };

    /**
     * Creates a plain object from a skill_du_ji_c_toc message. Also converts values to other types if specified.
     * @function toObject
     * @memberof skill_du_ji_c_toc
     * @static
     * @param {skill_du_ji_c_toc} message skill_du_ji_c_toc
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    skill_du_ji_c_toc.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults) {
            object.playerId = 0;
            object.waitingPlayerId = 0;
            object.targetPlayerId = 0;
            object.card = null;
        }
        if (message.playerId != null && message.hasOwnProperty("playerId"))
            object.playerId = message.playerId;
        if (message.waitingPlayerId != null && message.hasOwnProperty("waitingPlayerId"))
            object.waitingPlayerId = message.waitingPlayerId;
        if (message.targetPlayerId != null && message.hasOwnProperty("targetPlayerId"))
            object.targetPlayerId = message.targetPlayerId;
        if (message.card != null && message.hasOwnProperty("card"))
            object.card = $root.card.toObject(message.card, options);
        return object;
    };

    /**
     * Converts this skill_du_ji_c_toc to JSON.
     * @function toJSON
     * @memberof skill_du_ji_c_toc
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    skill_du_ji_c_toc.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    /**
     * Gets the default type url for skill_du_ji_c_toc
     * @function getTypeUrl
     * @memberof skill_du_ji_c_toc
     * @static
     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns {string} The default type url
     */
    skill_du_ji_c_toc.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
        if (typeUrlPrefix === undefined) {
            typeUrlPrefix = "type.googleapis.com";
        }
        return typeUrlPrefix + "/skill_du_ji_c_toc";
    };

    return skill_du_ji_c_toc;
})();

module.exports = $root;
